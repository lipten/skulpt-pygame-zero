{"version":3,"sources":["../node_modules/matter-js/build/matter.js","matter-pixi/pixi-matter.ts","matter-pixi/physics_objects/physics_sprite.ts","../src/isMobile.ts","../src/index.ts","../src/utils/isMobile.ts","../src/utils/maxRecommendedTextures.ts","../src/utils/canUploadSameBuffer.ts","../src/settings.ts","../node_modules/eventemitter3/index.js","../node_modules/earcut/src/earcut.js","../../../../.nvm/versions/node/v12.21.0/lib/node_modules/parcel-bundler/node_modules/punycode/punycode.js","../../../../.nvm/versions/node/v12.21.0/lib/node_modules/parcel-bundler/node_modules/url/util.js","../../../../.nvm/versions/node/v12.21.0/lib/node_modules/parcel-bundler/node_modules/querystring-es3/decode.js","../../../../.nvm/versions/node/v12.21.0/lib/node_modules/parcel-bundler/node_modules/querystring-es3/encode.js","../../../../.nvm/versions/node/v12.21.0/lib/node_modules/parcel-bundler/node_modules/querystring-es3/index.js","../../../../.nvm/versions/node/v12.21.0/lib/node_modules/parcel-bundler/node_modules/url/url.js","../src/browser/hello.ts","../src/browser/isWebGLSupported.ts","../src/color/hex.ts","../src/color/premultiply.ts","../src/data/createIndicesForQuads.ts","../src/data/getBufferType.ts","../src/data/interleaveTypedArrays.ts","../src/data/pow2.ts","../src/data/removeItems.ts","../src/data/sign.ts","../src/data/uid.ts","../src/logging/deprecation.ts","../src/media/caches.ts","../src/media/CanvasRenderTarget.ts","../src/media/trimCanvas.ts","../src/const.ts","../src/network/decomposeDataUri.ts","../src/network/determineCrossOrigin.ts","../src/network/getResolutionOfUrl.ts","../src/Runner.ts","../src/TickerListener.ts","../src/Ticker.ts","../src/TickerPlugin.ts","../src/shapes/Rectangle.ts","../src/shapes/Circle.ts","../src/shapes/Ellipse.ts","../src/shapes/Polygon.ts","../src/shapes/RoundedRectangle.ts","../src/IPointData.ts","../src/IPoint.ts","../src/Point.ts","../src/ObservablePoint.ts","../src/Matrix.ts","../src/groupD8.ts","../src/Transform.ts","../src/textures/resources/autoDetectResource.ts","../../../node_modules/tslib/tslib.es6.js","../src/textures/resources/Resource.ts","../src/textures/resources/BufferResource.ts","../src/textures/BaseTexture.ts","../src/textures/resources/AbstractMultiResource.ts","../src/textures/resources/ArrayResource.ts","../src/textures/resources/BaseImageResource.ts","../src/textures/resources/CanvasResource.ts","../src/textures/resources/CubeResource.ts","../src/textures/resources/ImageResource.ts","../src/textures/resources/SVGResource.ts","../src/textures/resources/VideoResource.ts","../src/textures/resources/ImageBitmapResource.ts","../src/textures/resources/index.ts","../src/System.ts","../src/textures/resources/DepthResource.ts","../src/framebuffer/Framebuffer.ts","../src/renderTexture/BaseRenderTexture.ts","../src/textures/TextureUvs.ts","../src/textures/Texture.ts","../src/renderTexture/RenderTexture.ts","../src/renderTexture/RenderTexturePool.ts","../src/geometry/Attribute.ts","../src/geometry/Buffer.ts","../src/geometry/utils/getBufferType.ts","../src/geometry/utils/interleaveTypedArrays.ts","../src/geometry/Geometry.ts","../src/utils/Quad.ts","../src/utils/QuadUv.ts","../src/shader/UniformGroup.ts","../src/filters/FilterState.ts","../src/filters/FilterSystem.ts","../src/batch/ObjectRenderer.ts","../src/batch/BatchSystem.ts","../src/context/ContextSystem.ts","../src/framebuffer/GLFramebuffer.ts","../src/framebuffer/FramebufferSystem.ts","../src/geometry/GLBuffer.ts","../src/geometry/GeometrySystem.ts","../src/mask/MaskData.ts","../src/shader/utils/compileProgram.ts","../src/shader/utils/defaultValue.ts","../src/shader/utils/getTestContext.ts","../src/shader/utils/getMaxFragmentPrecision.ts","../src/shader/utils/setPrecision.ts","../src/shader/utils/mapSize.ts","../src/shader/utils/mapType.ts","../src/shader/utils/uniformParsers.ts","../src/shader/utils/generateUniformsSync.ts","../src/shader/utils/checkMaxIfStatementsInShader.ts","../src/shader/utils/unsafeEvalSupported.ts","../src/shader/Program.ts","../src/shader/Shader.ts","../src/state/State.ts","../src/filters/Filter.ts","../src/textures/TextureMatrix.ts","../src/filters/spriteMask/SpriteMaskFilter.ts","../src/mask/MaskSystem.ts","../src/mask/AbstractMaskSystem.ts","../src/mask/ScissorSystem.ts","../src/mask/StencilSystem.ts","../src/projection/ProjectionSystem.ts","../src/renderTexture/RenderTextureSystem.ts","../src/shader/GLProgram.ts","../src/shader/ShaderSystem.ts","../src/state/utils/mapWebGLBlendModesToPixi.ts","../src/state/StateSystem.ts","../src/textures/TextureGCSystem.ts","../src/textures/GLTexture.ts","../src/textures/TextureSystem.ts","../src/systems.ts","../src/AbstractRenderer.ts","../src/Renderer.ts","../src/autoDetectRenderer.ts","../src/batch/BatchDrawCall.ts","../src/batch/BatchTextureArray.ts","../src/geometry/ViewableBuffer.ts","../src/batch/AbstractBatchRenderer.ts","../src/batch/BatchShaderGenerator.ts","../src/batch/BatchGeometry.ts","../src/batch/BatchPluginFactory.ts","../src/Bounds.ts","../src/DisplayObject.ts","../src/Container.ts","../src/styles/FillStyle.ts","../src/utils/buildPoly.ts","../src/utils/buildCircle.ts","../src/utils/buildRectangle.ts","../src/utils/buildRoundedRectangle.ts","../src/utils/buildLine.ts","../src/utils/Star.ts","../src/utils/ArcUtils.ts","../src/utils/BezierUtils.ts","../src/utils/QuadraticUtils.ts","../src/utils/BatchPart.ts","../src/utils/index.ts","../src/GraphicsData.ts","../src/GraphicsGeometry.ts","../src/styles/LineStyle.ts","../src/Graphics.ts","matter-pixi/physics_objects/physics_graphics.ts","matter-pixi/index.ts","utils.ts","pygame-zero.ts"],"names":["hasOwnProperty","obj","prop","Object","prototype","call","module","exports","qs","sep","eq","options","length","regexp","split","maxKeys","len","i","x","replace","idx","indexOf","kstr","vstr","k","v","substr","decodeURIComponent","isArray","push","Array","xs","toString","stringifyPrimitive","isFinite","name","undefined","map","objectKeys","ks","encodeURIComponent","join","f","res","keys","key","decode","parse","require","encode","stringify","_url.parse","UID","byteSizeMap","defaultVertex","defaultFragment","BLEND","OFFSET","CULLING","DEPTH_TEST","WINDING"],"mappings":"AaAA,ACAA,ACAA,ACAA,AJAA,AFAA,ADAA,AiJAA,ADAA,AvJAA,ADAA;AYCA,ACAA,AEAA,AJAA,AFAA,ADAA,ATDA;AWAA,AEEA,ACAA,ACAAO,ACAA,AJAA,AFAA,ADAA,ATDA,OeCO,CAACuC,MAAR,GAAiBvC,OAAO,CAACwC,KAAR,GAAgBC,OAAO,CAAC,UAAD,CAAxC;AJDA,AEEA,ACAA,ACAAzC,ACAA,AJAA,AFAA,ADAA,ATDA,OeCO,CAAC0C,MAAR,GAAiB1C,OAAO,CAAC2C,SAAR,GAAoBF,OAAO,CAAC,UAAD,CAA5C;AJDA,AEEA,ACAA,AEAA,AJAA,AFAA,ADAA,ATDA;AWAA,AEEA,ACAA,AEAA,AJAA,AFAA,ADAA,ATDA;AWAA,AEEA,ACAA,AEAA,AJAA,AFAA,ADAA,ATDA,AGLA,IAAM,WAAW,GAAG,SAApB;AQKA,AEEA,ACAA,AEAA,AJAA,AFAA,ADAA,ATDA,AGLA,AuJCA,AxJEA,ADFA,IEDM,AuJCN,AxJEA,ADFA,SEDe,EDGf,ADFA,CEDkB,CuJClB,CxJEA,ADFA,EyJAA,GvJDA,EDGA,ADFA,CCEA,ADFA,CyJAA,CAAA,SxJEA,ADFA,CCEA,ADFA,KyJAA,CAAA;A/IIA,AEEA,ACAA,AEAA,AJAA,AFAA,ADAA,ATDA,AGLA,ADMA,ADDA,IELM,WAAW,GAAG,OAApB;AQKA,AEEA,ACAA,AEAA,AJAA,AFAA,ADAA,ATDA,AGLA,AuJIE,IvJJI,EuJIJ,CAAA,WvJJkB,GAAG,AuJIrB,CAAA,OAAA,EAAA,YAAA,EAAA,KvJJF;AQKA,AEEA,ACAA,AEAA,AJAA,AFAA,ADAA,ATDA,AGLA,AuJGE,EAAA,EvJHI,QuJGJ,EAAA,EvJHgB,EuJGhB,CvJHmB,0BAArB;AQKA,AEEA,ACAA,AEAA,AJAA,AFAA,ADAA,ATDA,AGLA,AuJEE,EAAA,EvJFI,CuJEJ,EAAA,UvJFiB,GAAG,EuJEpB,QvJFF;AQKA,AEEA,ACAA,AEAA,AJAA,AFAA,ADAA,ATDA,AGLA,AuJCE,IvJDI,OuJJG,IvJIQ,GAAG,MuJJX,CAAA,UAKP,mBvJDF;AQKA,AEEA,ACAA,AEAA,AJAA,AFAA,ADAA,ATDA,AIZA,ADOA,AuJLmB,AxJSnB,ADDA,IEHM,ADIN,ADDA,UAAA,EEHkB,CDIlB,ECJqB,OAArB;AQKA,AEEA,ACAA,AEAA,AJAA,AFAA,ADAA,ATDA,AGLA,AuJDE,AxJIF,ADDA,CyJHE,GvJCI,YAAY,GAAG,gBAArB;AQKA,AEEA,ACAA,AEAA,AJAA,AFAA,ADAA,ATDA,AoCdA,AJAA,A5BAA,ADSA,ADEA,ADDA,IEDM,QDEN,ADDA,KEDmB,GAAG,uBAAtB;AQKA,AEEA,ACAA,AEAA,AJAA,AFAA,ADAA,ATDA,AIfA,ADUA,AuJPA,AxJ2BE,ADDA,IEnBI,AuJPN,OzJ0BE,QEnBmB,CuJPrB,CzJ0BE,CEnBsB,AFmBV,CyJ1Bd,MzJ0BE,CyJ1BF,CAAA,AzJ0BqB,IEnBrB,8BuJPA,CAAA;A/IYA,AEEA,ACAA,AEAA,ANAA,ADAA,ATDA,AIhBA,ADWA,AFAE,IEAI,iBAAiB,GAAG,OAA1B;AQKA,AEEA,ACAA,AEAA,ANAA,ADAA,ATDA,AIjBA,ADYA,AEZA,AqJQE,IvJII,EuJJJ,CAAA,OvJIc,GAAG,IuJJjB,CAAA,OAAA,CvJIF,CuJJE,eAAA,EAAA;A/ISF,AEEA,ACAA,AEAA,ANAA,ADAA,ATDA,AIlBA,ADaA,AuJLE,EAAA,EvJKI,AERA,QAAQ,AqJGZ,EAAA,CvJKe,AERA,GFQG,AuJLlB,sBrJH4B,MAAM,CAAC,EFQrC,OERiB;AMajB,AEGA,ACAA,AEDA,ANAA,ADAA,ATDA,AInBA,ADcA,AuJNE,EAAA,EvJMI,CuJNJ,EAAA,O7IeF,EVTkB,GAAG,GuJNnB,qBvJMF;AQKA,AEKA,AGHA,ANAA,ADAA,ATDA,AIpBA,AsJQE,AxJ2BA,WwJhCO,AxJgCP,aAAA,CAAY,EwJhCL,CAAA,GxJgCP,EAA4B,QwJ3B5B,MxJ2BA,EAAkE,MAAlE,EAAyG;ASf3G,AEKA,ACFA,AEDA,ANAA,ADAA,ATDA,AgCdA,A5BPA,ADuBA,AuJpBsB,AxJgCQ,IYZ1Bf,AkBhBS,A7BgBP,I6BhBW,A9B4Ba,G8B5BV,IAAI,CAAC,EAAL,GAAU,ClBgBR,AkBhBtB,A9B4B8B,ECZJ,CWAD,EXAI,ADYC,KAAA,CAAA,EYZIR,AZYJ,CYZL,CXAK,CWAO,QXAR,EAAsB;AQFnD,AGGE,AEDF,ANAA,ADAA,ATDA,AItBA,ADwBE,AuJhBA,AxJ2B4B,CwJ3B5B,KxJ2B4B,GCV1B,CWDM,MXCC,CWDMA,CAAf,EZW4B,GAAA,ECV1B,ADU0B,KCVL,WAArB,IACA,SAAS,CAAC,QAAV,KAAuB,UADvB,IAEA,OAAO,SAAS,CAAC,cAAjB,KAAoC,QAFpC,IAGA,SAAS,CAAC,cAAV,GAA2B,CAH3B,IAIA,OAAO,QAAP,KAAoB,WALtB;AQFF,AEIA,ACDI,AEDJ,ANAA,ADAA,ATDA,AIvBA,AD+BC,ADIiE,ADjBxD,CEKV,QUGSzB,ACDA,AbPC,OAAA,CaON,EbPgB,IYQpB,CAAwBC,GAAxB,EAA6BC,CZRT,CAAA,EYQpB,EAAmC,EZRf,CAAO,MAAP,EAAV;AUKV,AEIE,ACDI,AEDN,ANAA,ADAA,ATDA,AgCxBA,A5BAA,AsJIA,AzJgBE,IyJhBF,K7IuBSC,ICDIsB,CAAP,CDCS,CAACrB,M6IvBhB,G7IuBS,A6IvBT,C7IuB0BJ,M6IvB1B,CAAA,O7IuBS,CAAgCK,IAAhC,CAAqCJ,GAArC,EAA0CC,IAA1C,CAAP,a6IvBF,CAAA;A/IoBA,AEIC,AGFD,ANAA,ADAA,ATDA,AGQA,AKtBA,ANyBW,QAAA,CCHF,ADGG,GAA+B,MAAM,CMzBxC,ANyBwC,CCHjD,ADGW,CCHU,SAArB,AKtBA,ELsByC,CKtBlB,IAAvB;AGcA,AGGI,AEDJ,ANAA,ADAA,ATDA,AgC1BA,A5BYA,ADsBE,AuJzBA,AxJ2BS,IExBC,EsJHV,CtJGF,AsJHE,CxJ2BY,CYRL,AXMA,ADEM,GAA4B,MYRvC,AZQ6C,CCFvC,ADEuC,CAAtC,CwJ3BT,CAAA,EvJyBO,EAAc,GuJzBrB,EAAA,iBAAA,EAAA;A/IiBF,AEIAI,ACDM,AEDN,ANAA,ADAA,ATDA,AGOqC,AuJzBnC,AxJ2BS,EwJ3BT,I7IqBI,CAACC,CXMU,GCFoB,CuJzBnC,C5IoBWkB,AZOS,CWNtB,ACDc,A4IpBZ,EvJyBwC,ADEC,CWN1B,ACDA,AXK0B,CuJzBzC,GvJyBmC,CAAW,ADEC,CYPnC,AZOmC,GYPvB,CDCAjB,CXMf,CWNM,EAAaC,AVIO,CAAA,CWL/B,CDCW,EAAkBC,EAAlB,EAAsBC,OAAtB,EAA+B;AFHhD,AEIEF,AGFF,ANAA,ADAA,ATDA,AGM0D,AuJzBxD,AxJ2BS,EWLTA,A6ItBA,CvJyBA,EUHG,A6ItBH,EAAA,C7IsBMA,AXKgB,GWLb,GXKmB,CWLf,EXK4B,CWLzC,I6ItBA,CxJ2B+C,CAAA,MAAtC;ASRX,AEIEC,ACDE,AEDJ,ANAA,ADAA,ATDA,AIjBA,ADuBC,AuJ1BC,AxJ2BS,CExBX,CSoBEA,EAAE,GAAGA,CXIyB,CWJvB,ACDA,EVnBG,AsJRH,E7I4BI,CTpBb,CFwBuC,CWJrC,ATpBa,CUmBX,CZKuC,MAAM,CAAA,IwJhCxC,CAAA,ExJgCE,awJ3BT;A/IoBF,AEIE,ACDI,AEDN,ANAA,ADAA,ATDA,AIjBI,AsJToB,AxJiCpB,AyJrCJ,EvJaI,EuJbJ,CvJaI,CSoBET,ATpBF,GSoBK,ATpBL,AFwBK,CExBL,ESoBQ,CCDCiC,CDCX,EXIE,CyJrCJ,EzJqCmB,CyJrCnB,C7IgCqB,CAACT,CAAD,CAAR,AVnBT,CAAA,AFwBA,EYLuBA,A6IhC3B,C7IgCa,AVnBT,AuJbJ,CvJaI,CAAA,CUmB2B,EAAzB,AVnBF,UuJbJ,CAAA,GvJaI;AOiBJ,AKEA,ANAA,ADAA,ATDA,AgCfA,A5BFI,AD6DU,AuJlEZ,AxJ6BE,CwJ7BF,CtJKE,E4BES,C5BFT,CAAA,GAAA,AD6DoB,ADrCf,CExBL,I4BEmB,E9BsBnB,C8BtBsB,A5BFtB,AD6DU,CC7DV,AD6D6B,CDrCd,EExBf,CAAA,C4BE4B,A5BF5B,AD6DU,EAA4C,ADrCtD,CExBA,C4BEgC,CAAC,EAArC,G5BFI;AOiBJ,AEIE,ACDE,AEDJ,ANAA,ADAA,ATDA,AIjBI,AD6DF,ADrCE,ADZM,A2J3BV,ADCA,EvJcI,EwJfE,ADCN,CvJcI,CSoBE,ATpBF,AD6DE,AyJ5EE,GxJeJ,AD6DK,ADrCA,ADZC,A2J3BC,CxJeP,ED6DmB,CUzCVjB,EAAP,A+InCW,ADCjB,CCDkB,ExJed,AwJfJ,ADCA,CvJcI,CSoBgB,CZRV,CGZN,CAAA,AFwBA,CExBA,AHY6D,C0J1BjE,CzJsC0B,ADZhB,A0J1BV,CvJcI,CSoBE,IAA0BA,EAAE,CAACI,ATpB/B,EuJdJ,CAAA,EzJsCI,CWJ4B,KAAc,CAA5C,EAA+C;AFHjD,AEII,ACDE,AEDN,ANAA,ADAA,ATDA,AIjBC,AD6DG,ADrCA,ADVA,A2J7BJ,CxJWA,EAAY,CDiER,AF/CA,A2J7BE,ExJWS,EF4BP,A0JvCE,G/ImCCX,A+InCE,E9IkCA,AX0CA,CUzCT,CCDE,AX0CS,AF/CX,CAAA,CE8CmB,AyJ3EJ,CAAC,I1JuCE,ADVlB,A2J7BJ,C1JuCuB,ADVZ,EGlBC,CHkBR,CAAW,CGlBA,GAAA,AF4BX,CDVgB,CGlBL,AF4BkB,CE5BjC,IF4BsC,ADVlC,KCU6B,GAAa,WAAA,CAAA,MAAA,CAAO,MAAP,CAAc,CAAd,EAAiB,CAAjB,EAAoB,KAAK,GAAC,CAA1B,EAA6B,cAA7B,CAAb,CAA7B,KACK,KAAK,KAAL,GAAa,WAAA,CAAA,MAAA,CAAO,SAAP,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,KAAvB,EAA8B,MAA9B,EAAsC,cAAtC,CAAb;ASRT,AEIG,ACbD,AEWF,ANAA,ADAA,ATDA,AG4CI,AsJ5EJ,AvJwCG,ADVC,A0J7BJ,IxJ2EI,AsJ5EJ,IxJ8BU,C0J7BM,GxJ2EJ,EAAE,AsJ5Ed,EtJ0EuB,CsJ1EvB,EECA,CAA2B,G1J6BF,A0J7BzB,CFDA,CAAA,AECgC,C1J6BJ,M0J7B5B,EAAuC,G1J6BX,CAAA,GwJ9B5B,CAAA,WxJ8B4B,CAAgB,MAAhB,CAAuB,KAAK,MAA5B,EAAoC;AUEhE,AGGC,AEDD,ANAA,ADAA,ATDA,AG4CI,AGhEJ,ALkBM,A2J/BN,ADEE,C7ImBF,GXwDI,AyJ7EJ,E3J+BM,A0J7BA,GrJWU,ELkBL,A2J/BX,CDEY,C1J6BC,A0J7BA,CCFb,IzJ6EkB,EAAE,AwJ3ER,CCFZ,ADEE,CCFF,CDEuB,C1J6BV,CAAA,KAAA,CKlBb,ALkBmB,A2J/BnB,CtJauC,AsJbvC,GtJaA,EAAkD,ALkBrC,CAAa,OAAO,CAAC,KAArB;AUEb,AEIE,AGFF,ANAA,ADAA,ATDA,AGwCuB,AG3DnB,AmJdJ,AvJ8CE,ADjB8D,A0J3B5D,EzJ4CF,CC2BA,CsJzEF,CxJ6B4B,CYOtBY,APtBE,ALeJ,ECiBF,CAAA,EyJ5CS,C9IkCC,EPtBI,COsBD,A4IpCf,EnJcmB,CmJdnB,AEEkB,CAAC,C9IkCjB,CPtBE,EJgCF,CAAI,CuJ9CN,CAAA,AEEW,CAAgB,MAAM,CAAC,GFFlC,AvJ8CM,CuJ9CN,AvJ8CM,EuJ3CN,CEDiC,CAAtB,CAAP,IzJ4CF,EAAI,MAAJ,EAAQ;ASbV,AEIEL,ACDFF,AEDA,ANAA,ADAA,ATDA,AyJ9BA,AvJqCE,ADRE,A2JjCJ,ADGG,E9IkCDE,EAAE,AZJA,A2JjCJ,E9IoCM,CDCCA,ACDAD,EDCE,CAACO,ICDV,CDCO,AZJH,CYIYL,AZJZ,CaGa,A8IpCjB,E/IqCO,CAAL,A+IrCF,C3JiCI,CAAM,GAAN,CAAU,CaGYR,A8IpC1B,CAAA,E9IoCiB,CbHE,CaGYQ,GAAd,EAAmBC,AbHtB,CAAY,CaGT,EAAuByB,EbHpC,A2JjCJ,CAAA,C9IoCiB,AbHgB,C2J/BjC,C9IkC8C,abH1C;AUCJ,AEKE,ACFA1B,AEDF,ANAA,ADAA,ATDA,AgCxBA,A7BoEE,AG/DE,AmJXJ,AxJ6BG,EaGDA,EkB1BU,ClB0BP,CDECM,AVwCA,AG/DE,CH+DD,CW1CCN,GAAG,CX0CL,CUxCO,AmB5Bb,C1BKgB,CQqBD,ARrBE,COuBD,AVwCA,EW1Cd,EDEA,CPvBM,EH+De,EG/DI,OH+DX,CG/DmB,CAAC,GH+DC,EG/DjC,EACA,OH8DF,EAAgD;AQ5ClD,AGGEC,AEDF,ANAA,ADAA,ATDA,AG4CI,AK9DJ,AFAQ,AqJdN,E7IkCAA,EAAE,AX0CA,EwJ5EI,C7IkCDA,AX0CA,CG9DK,CQoBH,A6IlCE,CxJ4ED,EwJ5EI,C7IkCD,GAAX,ARpBkB,AqJdF,CrJcG,EEAZ,GFAG,CAAe,AqJdb,CAAY,KrJclB,EACA,GqJf2B,EnJcnC,GAA6B,EmJdH,EAAkB,CnJc5C,KmJd0B,EAAwB;AhJgClD,AEIE,AGFF,ANAA,ADAA,ATDA,AG4CM,AG7DM,ALqBV,A2JtCF,ADEI,E1JoCF,E2JtCI,E/IqCAC,AVyCA,EFxCJ,A0JpCQ,C1JoCR,CKrBgB,AqJfN,G9ImCC,A8InCE,ExJ4EA,AG7DQ,CsJjBL,C/IqCD,AVyCA,CG7DU,CsJjBN,EDEE,CAAC,C1JoCtB,CYDsBA,AZClB,EEwCoB,CAAC,AG7DS,CAAC,GOoBN,CAACI,EZC1B,CAAA,A0JpCS,CxJ2EL,AwJ3E4B,CrJeZ,CAAsB,COoB/B,IPpBS,COoBkB,APpBU,ALqBpD,A0JpCa,CAAX,C1JoCE,MYDJ,EAAoD,AZCpD,EAAU,KKrBc,CAAd;AKiBZ,AEIIA,ACFF,AEAF,ANAA,ADAA,ATDA,AgC3BA,AAWA,A7B4DM,AsJ5EN,AxJ8BE,A2JhCA,C5HOF,C4HPE,E/IqCEA,AmBnBS,AyHhBP,E3IiCAd,AX2CA,AyJ9EA,EAAE,C9ImCC,EDEE,AmB9BC,GnB8BEU,ACFA,AkBjBS,A7B4DT,EAAE,C6B5DU,A4HnBL,C9IoCnB,A2IjCkB,E3IiCA,AkB5BpB,CnB8BqB,AmBnBS,AyHhBP,C5ImCDI,AmB9BD,AAWU,EAAL,C7B4DD,CAAC,C6B5DU,AyHhBP,CAAC,C5ImC1B,CmBnBJ,EyHhBuB,EtJ0Eb,CsJ1E2B,MAAM,CAAC,IAAP,CAAY,QAA1B,GAAqC,UAAA,CAAA,QAA5D;A9IgCA,AEIG,ACFCd,AEAJ,ANAA,ADAA,ATDA,AgC3BI,A7BuEE,AG7DM,AmJfZ,AGFE,ADCE,E3HMA,A4HPF,E9ImCEA,A6IlCA,ExJ6EE,AwJ7EA,C7IkCC,A8InCA,ADCA,EzJwCL,A0JzCO,C9ImCCmC,ARlBM,C0BVZ,CAAA,C2HNA,ErJgBQ,CqJhBI,CrJiBJ,CsJpBS,C9IqCjB,AkB5BA,CAAA,A7BuEgB,EAAE,C6BvElB,C9BkCF,IyJxCc,E3HMZ,C7BuE2B,CAAC,cAAV,IAA4B;AQ5ClD,AGEG,AEAH,ANAA,ADAA,ATDA,AgC3BA,AAAI,AAWJ,A7BwDU,AGxDM,AJsBK,A0JxCnB,ADCI,E3HMF,A4HPF,E5HOU,AAWA,C7BwDR,CyJ1EE,ADCA,ECDE,E5HkBR,CAXI,CAAA,A1BWkB,CJsBM,AyJvCf,CAAC,GCJO,C1J2CY,C8BjCjC,AAAI,CAAA,C2HNiB,E3HMjB,A9BiCiB,CItBa,CqJjBT,ErJiBY,G0BXjC,C2HN2B,CAAC,GrJiBa,CAAC,GqJjBjC,CAAP,CrJiB6C,CAAC,CAAD,CAAN,EAAW,EAAX,CAA7B,CADJ;AKiBZ,AEIE,AGFF,ANAA,ADAA,ATDA,AgC3BI,A7BuED,ADvCsC,A0JvCvC,ADCG,E3HMD,A4HPF,CzJwEA,EDjCQ,AyJxCN,C9IsCEpB,GAAG,AVyCA,AyJ9EA,E5HOL,A4HPO,C/IqCCR,AmB9BR,C7BuES,CUzCC,CAACI,ImB9BX,CAAA,A7BuEgB,AyJlFC,C/IyCnB,CAjB8C,CAkB9C,AmB/BE,E7BuES,K6BvET,A7BuE0B,QAArB,EAA+B;AQ5CxC,AGEE,AEAF,ANAA,ADAA,ATDA,AgC3BC,A7BuEG,AKrEJ,AFUgB,AsJnBd,C5HGF,C4HHE,C5HGU,C7B2ER,EW3CE,A8InCA,CzJ8EC,CAAC,AyJ9EA,I5HGa,A1BgBD,CQgBPX,GAAP,CX2CF,AyJnFiB,EpJcZ,CLqEW,CW3CC,AZGX,GInBsB,CH2D5B,EG3D+B,EQgBjC,AN1BF,AFUgB,EQgBe,ARff,CEXM,KwBNV,SAAS,ExBMU,CwBNV,EAAA,AxBMC,CwBNtB,ExBMqC,eAAI,KAAnB,GAA2B,eAAI,MAArD;AGyBA,AEIE,ACFE,AEAJ,ANAA,ADAA,ATDA,AgC9BA,AAWA,A7B+DG,AG1DiB,AsJpBlB,ADCE,C3HGJ,AAWA,C4HfE,CzJ4EO,CwJ3EL,E9IoCEc,A8IpCA,CCDC,ADCA,ExJ6EE,AF9CP,A2JhCO,CtJoBW,CQeTsB,AkB/BC,AAWA,EnBsBC,AVyCA,CW3CC,A6IlCV,C7IkCWC,CDEC,CAAV,AmBtBN,A2HdiB,CxJ6EC,AG1DU,AsJ1BP,C5HqBH,EnBsBGtB,APjBU,CH0DT,EUzCE,AZLtB,CaGuB,CAACf,AkB/B1B,A1BgBoB,COiBOc,AVyCA,AwJ7ED,C3HGC,A7B0EC,AwJ7EX,C7IkCQ,CAAX,A6IlCa,E7IkCK,EDE9B,EAAkC,CVyC3B,EAA8B,GW3CES,CAAT,EAAY;AHD5C,AEIIR,ACFE,AEAN,ANAA,ADAA,ATDA,AgC9BI,AAWA,A5BCJ,AD8DI,AG1Da,AmJnBjB,AvJmCU,ADLO,A2J/Bf,ADCI,E3HGF,AAWA,A4HfF,C1JoCA,CWCEA,ATrBQ,AD8DR,AsJ7EJ,EGDM,ADCA,C9IoCC,AVyCA,C6B/DH,A4HfI,ADCA,C3HcJ,A2HdK,C9IoCCD,ACFAwB,AX2CA,EW3CE,CbJY,EaITC,AkBpBX,A2HdE,C3HcF,CnBsBA,AmBjCA,A5BYJ,AwJvBqB,C5HWjB,A/B2ByB,A0J9BX,CFAlB,GzHcI,A2HdE,C3HcF,E/BgBa,C+BhBb,CAAA,CAAA,GAAA,ElBoB6B,AkB/B7B,ClB+B8BP,AkB/B9B,GAWA,UAXA,CAAA,GAAA,ClB+BgD,CAACT,AkB/BjD,ClB+BgD,AkB/BhD,ClB+B6B,CAAlB,CkB/BX,ElB+BuDd,EAArD,SkB/BF;ArB8BJ,AEIG,AGFH,ANAA,ADAA,ATDA,AgC9BI,AAWA,A7B+DE,AG1DO,AmJpBb,AvJqCE,ADPqC,A2J9BrC,ADCI,E3HGF,AAWA,A4HfF,G3J8BU,CEgDN,AwJ7EA,E3HcF,A4HfI,ADCA,C3HcJ,A2HdK,CCDC,K5HeN,A7B+DW,C6B/DX,A2HdE,C3HGF,A7B0Ea,C6B1Eb,C4HZiB,ADSF,G3Hcf,A7B+DkB,C6B/DlB,A7B+DmB,AwJ7EjB,G3HcF,CAAA,CAAA,GAAA,C7B8DM,C6BzEN,CAAA,GAWA,GAXA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAA;ArB8BJ,AGCM,AECN,ANAA,ADAA,ATDA,AgC9BI,AAWA,A7B+DE,AG1DG,AmJrBT,AGCE,ADCI,E3HGF,AAWA,A4HfF,IzJ8EI,AyJ9EA,ADCA,E3HcF,A4HfI,C5HeJ,ClBmBMkB,A2InCV,ItJ+Ec,AwJ7EA,C3HcV,A2HdW,C3HcX,A7B+DY,AsJ/EhB,C3ImCiB,AkB9Bb,A4HbiB,C9I2CH3B,AkB9Bd,AyHLJ,CEEM,CAAc,C7IiCC,AX4CA,AFjDT,CaKUuB,AkBnBlB,A7B+DkB,CW5CD,AkBnBjB,ClBmBa,CAAX,CkBnBF,ClBmBuB,AkBnBvB,CAAA,E7B6DM,C6B7DN,A2HdE,CAA0B,C3HG5B,CAAA,A2HHE,G3HcF,KAXA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;ArB8BJ,AEIE,ACHM,AECR,ANAA,ADAA,ATDA,AsIrCA,AtGOI,AAWA,A5BFJ,ADiEM,AsJhF+B,AGEnC,ADCI,CvJYN,C4BTI,AAWA,AyHjBiC,AGEnC,EtBHF,EnIiFM,AwJ7EA,C9IoCC,A+IrCA,C5HeH,CAAA,A4HfK,CtBHT,CzHwCWP,ATxBC,AqJfyB,C5IuCzB,A4IvCyB,AEGzB,CAAC,CAAD,C9IoCG,ACHAoB,AkBnBX,A2HdE,C9IoCJ,AmBtBE,CAXA,CnBiCcpB,ACHA,AkB9Bd,A4HdiB,C/I+CF,ACHAhB,CX4CC,EUzCEe,ACHA,AkBnBlB,A7B+DkB,CW5CCQ,AkBnBnB,ClBmBkB,AVrBtB,CSwBE,ACHgB,CkBnBd,A5BFqB,CSwBE,ACHA,AkBnBvB,A7B+DuB,AsJhFU,CzHiBjC,A7B+DwB,CUzCCP,A4IvCQ,C5IuCnC,CmBtBE,CnBsB4B,CmBjC5B,CAAA,CyHNiC,CAAA,C3IoCDQ,AkBnBhC,ClBmBuB,CkB9BvB,ClB8BmC,AkB9BnC,E7B0EkB,C6B1ElB,CAAA,EAAA,A7B0E0C,C6B1E1C,GAAA,KAAA;ArB8BJ,AEII,ACHM,AECV,ANAA,ADAA,ATDA,AsItCA,AtGQI,AAWA,A5BFA,AD6DM,AGvDF,AmJWN,AxJHU,A2J3BV,ADCG,E3HGD,AAWA,A5BFA,AwJbF,C3J2BA,EE+CE,AwJ9EA,G9IyCIP,AmBtBJ,A1BIQ,AsJnBJ,C/IqCC,AmBtBL,C4HfM,E/IqCEV,EAAE,CAACS,AmBtBX,A5BFA,CSwBU,AmBtBV,A5BFA,AEMgB,COkBR,ACHKsB,AkB9Bb,A1BeiB,COkBHpB,AmBjCd,ClB8Be,A8I7CE,G9I6CCqB,AkBnBlB,CAAA,C1BIQ,COkBA,APlBiB,COkBH3B,AmBtBtB,CAAA,CAAA,C5BFA,CAAA,C4BEA,A1BII,COkBI,CmBjCR,A1BgBI,COiB0B,AmBjC9B,GAWA,EnBsBQ,ATxBR,CSwBA,ACHoC,AVrBpC,CUqBqCoB,EkB9BrC,A5BSA,C4BTA,A5BSA,CAAA,E4BTA,CAAA,A5BSA,E4BTA,CAAA,GAAA,G5BSA,EUqBuD,CAACR,CAAD,CAAnB,CAA9B,AkB9BN;ArB8BJ,AEGI,ACFK,AECT,ANAA,ADAA,ATDA,AsIvCA,AtGSC,AAWA,A5BFG,ADiED,AG1DS,AJgBV,ADHA,A2JjCA,C5HFF,AAWA,C5BII,AFuBF,ADHA,A2JjCA,C5HFU,AAWA,KnB4BJL,AZJN,A2JjCM,C9IgCU,AkBvBA,A/BwBhB,CaDa,ARZG,AsJpBR,C/IqCC,ACHAqB,CwHvCX,EzH0CcvB,CAAC,ACLA,AVnBX,AEOmB,AJgBrB,CWCcG,ACHAZ,AVrBZ,AFuBF,E8BtCyB,A1BsBA,CQYZ,A8I5CM,C9I4Cb,GDKM,AZJZ,CYIsBC,AZJlB,CCGJ,CWCY,AXDZ,CWAE,APhBgC,CAAC,CFPjC,CAAA,C4BJQ,C9B2BV,EDHI,CCGJ,ADHI,E+BxBY,A5BId,AEOsB,CFPtB,AEO4C,E0BX9B,C5BId,C4BJc,A5BId,C4BJJ,A5BII,AEOsB,CAA4B,ALapD,EGpBE,AHoBE,CCGJ,E8BtCU,I5BeR,MHoBF,EAAe,G+BnCU,A1BsBD,CAAd,E0BtBe,EAAA,CAA3B;ArBoCA,AEEI,ACDG,AECP,ANAA,ADAA,ATDA,AsI/BI,AjGpBJ,AjC8BI,AFuBA,ADTF,A2J3BA,ADAE,EvJaA,AwJbF,EDAE,CCAC,CDAC,C7I8BA,A8I9BC,ADAA,C9IqCCY,AXDA,EyJpCJ,CrBGA,CzHgCA,CCDS,AZEA,AyJpCA,EvJaT,CAAA,AwJ1BiB,ADajB,CrBGA,GAAA,ApIiCA,EAAkB,OEvBlB,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AOqBJ,AECI,ACAI,AECR,ANAA,ADAA,ATDA,AIrBC,ADiEC,AG1DU,AJgBN,A0JpCJ,ADAE,CvJSJ,CwJTE,CxJSU,CuJTR,ExJ8EE,AwJ9EA,CAAC,C9IoCOC,A+IpCN,EtJoBQ,AsJpBN,C1JoCC,CWFP,A8IlCA,G7IkCWgB,AX4CA,AG1DH,AqJpBG,CvJSU,CUyBR,ARbL,CHyDM,AD1CZ,CAAa,A0JlDE,ADcjB,C7IkCgBC,CX4CC,CAAC,SAApB,OW5CoC,CAACP,MVzB3B,YUyB6C,CAAChC,AVzBjC,GUyBoC,AVzBpC,CUyBqCuB,CAAD,AVzBpC,CUyBgC,AVzBzD,CUyBsC,CAA9B;AHAR,AEAI,ACCG,AECP,ANAA,ADAA,ATDA,AG+CE,AG5Dc,AJeR,A0JpCN,ADAE,ECAF,EDAE,ExJiFE,AyJjFA,E/ImCcA,AXCZ,A0JpCA,C/IiCJ,AVgDK,GAAG,AG5DU,AqJrBV,CAAC,GzJoCG,C0JnDK,ADejB,CzJoCc,AyJpCA,GxJiFG,CAAC,CD7CC,CIfW,GH4DtB,AG5DyB,CH4DT,AD7CV,CAAW,AyJpCzB,CAA0B,EAA1B,GxJiFQ,AG5DiC,CH4D3C,AG5D4C,CJc3B,IIdgC,CAAC,CAAD,CAAN,EAAW,EAAX,CAA7B,CADJ;AKcZ,AEDI,ACEC,AECL,ANAA,ADAA,ATDA,AEEQ,A0JpCN,ADAC,ECAD,CDfY,CAAZ,C7IwCY,CAAH,CASJiB,A8IlCA,C/IkCgBhB,AXEf,CWJJ,A+IhCK,E9IyBE,CASChB,GATD,CAAP,AZWY,EAAE,A0JpDG,K1JoDE,KAAL,CAAW;ASF7B,AGEG,AEAH,ANAA,ADAA,ATDA,AG8CE,AG1Dc,AJWG,A0JjCjB,ADAA,ECAA,IzJgFI,CD/CA,C0JjCE,CDAC,CCAC,EtJsBU,AqJtBlB,CxJgFW,GAAG,CAAC,CAAD,CAAV,KAAkB,AG1DQ,GAAG,CAAnB,EACA,KHyDd,EAAmC;AQ9CrC,AECI,AGCJ,ANAA,ADAA,ATDA,AsI9BQ,AnI4EJ,AGzDgB,AmJKlB,AvJQG,A0JtDgB,ADkBpB,CClBD,GzJkGI,CDjDA,GWGIW,CyH9BK,ArIuBX,CKJkB,COWT,A4INT,AvJQS,EoIhCH,AnI4EK,EU9CE,CAAX,AyH9BgB,AnI4EJ,EU9CE,APXU,CHyDT,CAAC,CAAD,AGzDY,CHyD3B,EmI5EI,ArIuBN,EKJkB,AmJKlB,CAAY,eAAZ,EAA+C,cAA/C,EAAqF,MAArF,EAA4H;A9IM9H,AECME,ACCJ,AEAF,ANAA,ADAA,ATDA,AoCdA,AjC4DG,AGzDc,AmJIgC,AvJS3C,ADVgB,ImCNtB,EvBcMA,ACCA,CAACa,C2IR0C,E5IOvC,AuBdV,CtBeE,AZCS,EWFEjB,ACCA,AbTgB,CYQf,CAACQ,GXET,ADV4B,CCUf,CYDC,CDDP,CAAS,ACCT,A2IRoC,C5IOpC,EAAYN,E4IPwB,AvJS3C,CWFO,CAAP,CXEwB,ADVR,EwJC2B,CAAA,EAAA,AvJSd,KAAL,CAAW,QAAnC;ASFN,AECMG,ACCJ,AEAF,ANAA,ADAA,ATDA,AoCfA,A9BIa,AmJGoC,AvJU3C,ADX2C,A2JzBjD,ADvBA,K1JgDiB,CYSXA,A4IR2C,AG1B3C,CAAC,ADvBP,CAAA,C7I0DSiB,CDDC,CXEC,EWFEtB,CAAC,CAACQ,GXET,AyJ3DN,CzJ2DmB,CuJV8B,C5IQpC,A+IlCb,ADvBA,C9IyDsBN,C4IR2B,CG1BzB,C/IkCC,A4IRwB,E3IStB,AZCrB,CWFsB,ACCAa,CDDf,CAAP,AXEwB,CyJ3D9B,EAwBA,EzJmCmC,C0JpCX,I1JoCM,CAAW,KYDK,AZCxC,CYDyCE,IAAD,CAAnB,CAAlB,GAA+CzB,EAA/C,GACA8B,kBAAkB,CAACP,kBAAkB,CAAChC,GAAD,CAAnB,CADzB;AHDF,AECK,ACEJ,AEDD,ANAA,ADAA,ATDA,AoChBA,AJZA,A7B6EE,AG5DO,AmJE4E,AvJWhF,A0JpCH,C9IYF,CXuEE,E6B7EU,CnByBR,AVoDC,CyJnFG,EzJmFA,CyJnFG,E/IkCA,CuBhBX,AJZA,A4HNc,KzJmFG,CAAC,GF3DD,EE2DT,CAAgB,SAAhB,CAAN;AQjDF,AECMqB,AGCN,ANAA,ADAA,ATDA,AqCrDA,A/B0CK,AJaF,A0JrCa,ADChB,GzJ0BE,CmC7CF,AuHkBgB,E/ImCVA,G8IlCU,C9IkCN,E+InCc,C/ImCXJ,CAAP,A+InCoB,IvHlB1B,AuHkB8B,EAAE,CAAC,IDCjC,CAAiC,ECDH,ADC9B,CCDyC,CDCJ,ECDX,ADC1B,CCD6C,CDCN,YCDb;AjJmC1B,AECMK,ACEN,AEDA,ANAA,ADAA,ATDA,AqCtDA,AlCsGE,AKzEF,AiJcE,AxJDe,A2JxBH,ADEZ,G1JsBA,A2JxBA,C9IsCEK,EDFEL,AVgDA,EsJ3DJ,E5IWQ,CCEC,EDFE,AVgDA,AsJ3DX,C3IaYO,CDFR,CVgDU,AsJ1DZ,CtJ0Da,CAAD,CW9CG,AX8Cb,AKzEG,CM2BWF,E2IZhB,CAAA,CtJ0DoB,GW9CV,A2IZV,CAAA,G3IY2B,C2IZ3B,GtJ0DF,EAAmC,AsJ1D1B,EjJfX,EM2ByCG,A2IbvC,CjJd8B,CM2BD,EAAc,EN3B7C;AGyBA,AECK,ACEH,AEDF,ANAA,ADAA,ATDA,AsI9BQ,AjGzBR,ALwBA,A7B+EI,AiDhFJ,A9CqBI,AmJtCF,AvJkDF,ADZE,A2JzBA,ADEA,C3HGF,G7B+EI,EyJpFE,ADEA,G7IoCG5B,AwHhCI,AhImBF,AJYX,C0JrCU,C5HKE,A2HHD,CtHrBX,AsHqBY,CrBIJ,AnI8EK,AyJpFA,E9IsCE,CAACC,AwHhCI,AnI8EJ,CG3DG,E0BpBnB,A7B+EmB,AwJlFb,CxJkFc,AG3DE,AsJzBpB,ADEkB,C3HGA,A7B+ED,CAAf,AD/CJ,AyJnCM,CrJuBa,AqJvBjB,CrBIM,CxHgCC,A6IpCgB,C7IoCC4B,ARbE,CAAxB,OQaK,CAA0B3B,IAA1B,CAA+B0B,EAA/B,MAAuC,gBAA9C;AHFF,AGGC,AEDD,ANAA,ADAA,ATDA,AoCXI,AJpBA,A7B+ED,AG3DF,AJ3CD,AyJoBI,C7IkCJ,AZtDA,C8BuBI,C9BvBJ,CyJoBI,EAAE,CAAC,CAAH,E3HGA,CIoBA,AJpBA,A2HHO,EAAE,CAAC,CAAD,CAAT,CvHuBA,AJpBA,CIoBY,AJpBZ,GAAA,CIoBA,EAAwB,GJpBxB;ArB+BJ,AECIP,AGCJ,ANAA,ADAA,ATDA,AoCVQ,AJrBJ,A4HNF,ADGE,E3HGA,EnB+BAA,A8IlCA,C9IkCC,C+IrCA,ADGC,CCHA,ADGC,C9IkCCG,A8IlCJ,CvHwBS,CJrBT,CAAA,A4HNM,ADGC,CCHA,CDGE,CvHwBL,AuHxBM,CAAD,CAAT,CvHwBiB,AwH3Bf,C5HMF,A4HNa,CxH2BT,AJrBJ,GAAA,InB+BsB,CAACL,EmB/BvB,EnB+BsB,CAAtB,E+IrCE,EAAJ,EAAkC;AjJqCpC,AECIG,ACEJ,AEDA,ANAA,ADAA,ATDA,AoCVQ,AJrBJ,A7B+EF,ADxGW,A0JmBT,ADGA,E3HGA,EnB+BAA,A+IrCA,ADGA,C9IkCC,CVgDG,AwJlFF,CzJtBO,AyJsBN,C9IkCCE,AXxDK,A0JmBL,C9IuCCU,AsBZI,CJrBT,CAAA,A7B+ES,AyJrFF,C9IuCX,A6IpCI,C7IoCUN,CsBZN,AjC0DQ,CW9ChB,A6IpCe,CAAX,C7IoCcW,AsBZG,CtBYrB,CkBjCI,A4HNA,C9IuCiB,AkBjCjB,CIqBI,AlC9CK,E8ByBT,C9BzBS,CCwGc,CUhDD,AVgDE,CUhDDnB,IAAD,AmB/BtB,CnB+BA,GVgDuB,CAAzB,CDxGW;ASwDb,AGGE,AEDF,ANAA,ADAA,ATDA,AoCVQ,AJrBP,A5BSD,ADuEE,AF7DA,A2JzBC,ADGC,C3HDJ,C/BuBE,C+BvBU,A4HPY,CxJoBZ,AwJbV,ADCE,E7IoCEQ,AX+CE,AwJnFF,CAAC,C7IoCC,CAACM,AsBZI,EJzBO,ClBqClB,AX+CY,AF7DZ,CAAA,A0JtBE,C7IoCU,CVxBd,ADuEiC,CwJnFjB,CAAZ,GvHwBI,CtBYaN,CbdnB,CacqB,AsBZI,AnCFzB,CacsBM,AsBZhB,GtBYa,CAAOK,CAAP,AbdnB,CacY,EbdZ,G+BvBU,QAAQ,C/BuBlB,E+BvBkB,EAAA,CAApB;ArBmCA,AECI,ACEF,AEDF,ANAA,ADAA,ATDA,AoCVK,AjC2DD,AF7DA,A2JvBF,ADCC,GAPoC,CxJ0FnC,AwJjFF,E7IkCIC,EDFE,CAAC3C,ACEA,AX+CA,AF7DA,EE6DE,CW/CC,EAAV,ObdE,CAAkB,CYYC,CAACC,GAAD,EAAMuB,AZZzB,CYYmB,AZZO,CYY1B,EAA6B,OZZH,EAAA,EAAE;AUYhC,AECMvB,AGCN,ANAA,ADAA,ATDA,AsI9BQ,AnI+EF,AF9D8B,MYa9BA,AViDA,GUjDG,AyH9BI,CzH8BHuB,CAAD,AViDE,CUjDL,CyH9BE,AnI+EK,AF9DuB,EYarBC,AZbuB,CYahC,AyH9Bc,ArIiBmB,CqIjBlB,CnI+EH,CAAC,GF9DiB,EAAA,CqIjB5B,KnI+EU,CAAL,IAAsB,CAAC,KAAK,CAAC,YAAD,CAD9B;AQhDX,AECK,ACCH,AEAF,ANAA,ADAA,ATDA,AIzBA,AD0EM,AsJpGJ,AxJqC6C,CGX/C,GqJ1BE,C5IiDE,AZZA,CE+DE,CWhDC,E2IpDL,CtJoGQ,AsJpGR,C5ImDS,ACCAR,AV1BC,CU0BA,AXgDA,GUjDGW,ACCA,CAAb,CXgDe,CWhDCX,AXgDA,CWhDC,GDDG,ACCAc,AV1BtB,CSyBuB9B,CCCC,AV1BD,CU0BEW,A2IpDvB,C5ImDwB,CAACY,AViDV,CUjDS,AV+Cf,AsJlG0B,C5ImDf,CAAX,CCCT,CDD8B,CCCCP,CAAC,EAAhC,EAAoC;AHDtC,AECMhB,ACCF0C,AEAJ,ANAA,ADAA,ATDA,AIzBI,AD0EE,AsJpGF,AxJqCD,A2JvBD,ADGA,EvJSE,CHSF,CaiBEA,EDDE1C,AViDA,AsJpGF,AGcI,ADGF,C7ImCC,A2IpDF,C3IoDG4B,CDDC,A4InDF,AEiBL,C9IkCQL,A4IpD2B,AEQE,C9I4C9B,A8IhCP,C9IgCI,ACCF,AXgDQ,CUjDCK,ACCAa,AV1BT,CU0BU,AV1BV,AD2EI,CWjDOX,AXiDN,EUlDH,ACCW,A8ItCE,C/IqCDN,ACCAR,CDDZ,ACCW,CAAH,AXiDA,AyJvFQ,CzJuFP,CWjDOA,CAAR,CAAV,A8ItCsB,CxJYtB,AwJZuB,CxJYvB,MD2EU,CC3EV,AD2EI,CC3EJ,EwJZF,CxJYE,CD4EK,IC5EL,CAAA,AD4EU,CAAC,EC5EX,OAAA,ED4EU,CAAL,IAAsB,oBAAoB,CAAC,GAAD,CAD3C,KAEA,CAAC,KAAK,CAAC,YAAD,CANH;AQ9CX,AECK,ACCF,AEAH,ANAA,ADAA,ATDA,AqC7CI,AjCoBA,AD6EE,AsJvGF,AxJsCF,A2JzBA,ExJaE,GSuBO,CVsDL,AsJvGF,AGcA,CHdC,EAAE,CAF8B,C5IqD1B,AwB7CP,CuHQM,CxJYN,CAAA,CD6EW,AyJzFF,EzJyFI,EyJzFA,CAAC,EzJyFI,CAAC,EkCjGnB,AjCoBA,CiCpBY,AjCoBZ,AwJbF,EvHPE,EAAmC,GjCoBnC,CAAA,GiCpBA,AjCoBA,AD6EkB,CAPX,CkC1F+C,CjCoBtD,CAAA,GAAA,GiCpBA,EAAoE,EjCoBpE,EiCpBA,EAAgF;A1B6CpF,AECMhB,AGCN,ANAA,ADAA,ATDA,AqC9CuC,AjCqBnC,AD6EE,AsJvGF,AGYF,ADMA,EvJQE,AuJRF,GAAG,C9IiCCA,AVoDA,AsJvGF,AGcA,EvHTmC,AsHa/B,C9IiCC,CAACuB,CAAD,A4InDA,C5ImDH,AVoDM,CC7ER,AqJ1BO,AEkBT,CvJQE,AD8EI,AwJnG+B,C9I8CxB,AwB9CwB,AlCmG9B,AyJ1FI,ADMX,C9I+BcvB,A4ItDqB,EGiBrB,C/IqCG,CAACuB,AwB9CmB,AlCmGzB,CUrDK,AVqDJ,CUrDA,A+IrCK,CAAC,C/IqCGC,CAAT,AwB9CwB,AjCqBnC,CSyBE,AwB9CiC,AjCqBnC,EiCrBmC,CuHSvB,CAAY,EzJ0Fd,CAAL,EC9EL,CAAA,CD+EM,EC/EN,AwJdF,GzJ6Fa,CC/EX,AD+EY,CC/EZ,GAAA,KD+EW,CADN,GC9EL,CDgFM,KAAK,CAAC,WAAD,CAFN,IAGC,KAAK,CAAC,cAAD,CAHN,IAIC,oBAAoB,CAAC,GAAD,CAJtB,KAKA,CAAC,KAAK,CAAC,YAAD;AQ1Dd,AECK,ACAH,AECF,ANAA,ADAA,ATDA,AqC/CuC,AjCsBtC,ADoEU,AsJ9FP,AGWF,CxJWF,EAAY,EDuEqB,CkCzFM,AoHJnC,AGcA,G9IqCKkB,E8IrCA,C9IqCP,A2InDQ,CpHI6B,CjCkBhB,AqJtBX,AGcA,EvHV2B,CoHRF,CGkBrB,CAAC,CvHVsB,IuHOrC,iBxJWU,WAAW,GAAA,EAAA,CAAvB;AO6BA,AECG,ACAF,AECD,ANAA,ADAA,ATDA,AsI9BQ,AjGlBgD,AlC0GpD,AI5HJ,AkJeI,AGUF,ADSA,EAAA,ExJ0FE,AwJ1FA,CAAC,CFnBD,AGcA,GtBOS,A/HpCG,CJ4HN,AsJ7GF,EtJ6GI,AsJ7GF,AGcA,ADKR,CrBEM,EsBPK,ADKE,CrBEK,CAAC,AqBFJ,CAAC,CCLD,ADKF,CFxBsB,AGmBnB,EDKI,EAAE,CrBEhB,AqBFiB,CCTvB,ErJzBF,EoJkCsB,CpJlCa,EoJkCF,CAA/B;AhJgCF,AKEA,ANAA,ADAA,ATDA,AsI7BQ,AlGkBG,AjCqEL,AI3HF,AkJcA,AGSF,ADUA,EvHqBS,AuHrBT,EAAE,CAAC,CxJ0FC,AsJ7GF,AGcA,ExH0BO,CkGlBE,AlGkBF,A7BtDA,CAAC,CJ2HD,CwJ1FT,CrBGM,AnIuFK,CyJ/FD,CHdC,AEmBE,CrBGK,CmBtBL,AGcA,ADKE,CvHqBN,AjCqEO,AI3HE,AkJQiB,AEyBnB,CvHqBP,AjCqEQ,AI3HE,AoJiCN,CrBGP,CsBRW,CAAC,ADKE,CvHqBX,C7BtDC,AoJiCY,CpJjCG,AoJiCF,CvHqBrB,IjCqEc,AyJpGhB,CzJmGU,AI1HR,AoJiCkB,GAAY,CAAhC,CvHqBc,EAAZ,EAA0B,EAA1B,EAAwC,EAAxC,EAAsD,EAAtD,EACI,EADJ,EACkB,EADlB,EACgC,EADhC,EAC8C,EAD9C,EAC0D;AzBU9D,AECE,ACAF,AECA,ANAA,ADAA,ATDA,AoCTQ,ACzCkD,AlC4GpD,AI3HL,AkJcG,AGQF,ADWA,EAAA,E7IgCEL,A6IhCA,CAAC,CxJ0FC,AsJ7GF,AGcA,ExH4BQ,ACzC8C,CxBkDjDrC,C+IrCD,E/IqCN,AV0DU,AwJ1FV,CCLS,C9IqCG,AX0DA,CAAC,AsJ7GF,AEmBE,CtHlB2C,CvBkDzCE,AsBTI,AqH1CN,AGcA,ADKE,CvHuBK,AwH5BN,ADKE,CAAH,CxJ0FK,CkC5GsC,AlC4GrC,CyJrGnB,ADWoB,C7IgCC,CAACyC,AsBTZ,AuHvBY,CAAC,CtHlBiC,CDyC3B,ACzC2B,CvBkDzC,AsBTT,CCzCkD,CD0ClD,AuHxBc,E7IgCU,AX0DZ,CAAN,AwJ1FmB,CAA/B,GxJ0FmC,KW1DK3C,AX0DA,CAAC,EW1DX,EAAe,QX0DL,CAF9B;AQxDZ,AECC,ACAC,AECF,ANAA,ADAA,ATDA,AoCRY,AC3C8C,AlC6GpD,AsJrH+B,AGenC,ADYA,C9IjBF,C8IiBE,EAAE,CF3BF,AE2BG,C7IgCC0C,AuBnDoD,AlC6GpD,AyJ/FF,G9IqCK,GAAG,AsBRM,AjCkEN,AwJ1FV,E7IgCA,AuBnDwD,AlC6G5C,CyJ/FD,ADKE,CvHwBO,CC3CoC,AsHmBzC,CtHnByC,AuHc1C,ADKE,CxJ0FC,AwJ1FJ,CxJ0FK,CiClEF,CAAU,AwH7BR,ADKE,CCLD,CDKG,CAAC,MxJ0FN,AwJ1FG,CxJ0FR,AyJtGZ,EDYgC,CAAhC,CxJ0FkC,AwJ7GG,CAqBrC,IxJwFuC,CAAC,GiClExB,CAAN,QjCkE6B;AQ1DzC,AKEA,ANAA,ADAA,ATDA,AoCRS,AC5C6D,AlC0G1D,AsJ/ER,AxJUF,A2JtBA,E3JsBA,A2JtBA,EHYE,CtJ8D6B,GyJ1EzB,CHYA,AGZC,CHYA,ExJUP,CAAA,A2JtBA,CAAY,MAAZ,CAAmB,C3JsBnB,CAAA,C2JtBA,CHYE,AGZqB,GHYE,KxJUzB,CwJV+B,CAAC,AGZR,C3JsBxB,KwJVyB,CAAc,CGZhB,EAAW,EHYS,CAAC,AxJU5C,C2JtBuB,EAAe,YHYb,EAAoC,eAApC,CAAvB;A9IyBJ,AECA,ACDE,AEEF,ANAA,ADAA,ATDA,AG0DI,AsJnFA,AxJSF,A2JrBE,ADMF,EAAA,E9I+BEf,AV0DA,AsJnFA,AGZA,ADMA,CAAC,E7I8BE,CbfL,CwJTM,CAAC,C5IyBE,ACDAiB,AX2DA,CyJ/FC,CzJ+FC,AF1EX,A2JrBW,C/IqCCf,ACDZ,A6I9BA,E1JeA,C0Jfe,C7I8BC7B,CDCC,A8I/BA,C9I+BC2B,AZhBlB,A0JfkB,C7I8BlB,EAAqB,C2IxBnB,AGZA,CDMa,E9I+BH,A4IzBY,AGZC,CDMC,CAA1B,E9I+B6B,O+IrC3B,G/IqCqCG,A4IzBrC,E5IyB2B,EAAc;AFA7C,AECE,ACDE,AEEJ,ANAA,ADAA,ATDA,AoCRc,AC9C0D,AlCgHlE,AsJlFF,AGbA,ADMF,EAAA,ECNE,ADMA,CAAC,CxJyFC,EW3DE5B,AsBPM,AC9C0D,AoH8B9D,C5IwBDA,CuBRK,CjCkEH,CkChH6D,AuHiB5D,CxH6BoB,AjCmEvB,AyJhGI,C9IoCC,AX4DJ,CU3DK,ACDAC,A6I9Bb,C9I+BcA,CuBRF,AC9C0D,AoH8BrD,CEPD,CxJ0FH,CAAC,AsJnFM,AEPF,CCNhB,ADMiB,CtHvBmD,CAAA,CvBqDhE,A8IpCgB,C/IqCf,ACDgBJ,AuBrD+C,AoH8B9C,C5IwBAgC,A4IxBC,CEPT,GCNY,ADMA,CCNC,ADM7B,CxJ0Fa,CAAN,CU3DA,CAA0B3B,A+IrCX,CAAY,CzJgGH,EU3DxB,ACDD,CDCgC0B,ACDA1B,C2IvBlB,C5IwBb,AV2D6B,AsJnFK,CtJmFJ,AyJhGf,C9IoChB,A8IpCoC,C9IoCCJ,E2IvBvB,C5IwB0B,ACDxC,EAA0C4C,A2IvBC,CAA/C,CGboB,C9IoChB,A8IpC6C,C9IoCjD,AX4DkC,CAA9B,CW5DgDF,GAAG,AX6DlD,CW7DmDd,AX6DlD,EyJjGc,CAAuC,C/IqC7D,ACDsD,CAASgB,AX6DlD,CAAC,AyJjGZ,E9IoCoD,UX6DzC,CAAN,IAAwB,KAAK,CAAC,YAAD,CAHzB;AQzDb,AECC,ACDE,AEEH,ANAA,ADAA,ATDA,AoCTc,AC9C0D,AlCmHlE,AsJpFF,AxJMS,A2JnBT,ADMF,C9I6BF,C8I7BE,ECNE,ADMA,CAAC,CtHxBmE,AlCmHlE,EiCrEU,AqHfN,AxJMG,A2JnBL,EvHlBgE,ED8CpD,AjCqER,CkCnH4D,ClCoHhE,AwJ5FN,CvHsBkB,AjCsEX,EiCtEW,AuHtBH,CvHsBG,AC9CoD,AoH+BpD,CxJMP,A0JbM,CxJ4FL,AwJ5FM,CxJ4FL,AsJrFQ,CrHeT,AnCTD,EAAA,C0JbI,CFOU,CAAC,CEPA,CAA1B,IxJ4FY,CAAN,IACA,CAAC,GsJtFc,CAAqB,CtJsF9B,CAAC,IsJtFQ,GAA8B,CAAjD,GtJsFU,CADN,IAEA,CAAC,KAAK,CAAC,YAAD,CAFN,KAGC,KAAK,CAAC,YAAD,CAAL,IAAuB,KAAK,CAAC,aAAD,CAH7B,CALK;AQxDb,AKEA,ANAA,ADAA,ATDA,AoCVc,AC9CsE,AlCwH9E,AsJvFF,AGdD,ADMD,EAAA,CCVA,CHkBE,AERA,CAAC,CxJ+FC,EiC1EgB,CqHbd,CAAC,EtJuFG,CiC1Ee,CjC2ElB,CAAC,AsJxFN,AERF,CvHqByB,AqHbZ,CAAX,CrHauB,AuHrBT,CvHqBS,CjC2EZ,AsJxFI,AERC,CxJgGJ,AwJhGK,GvHqBP,GuHrBI,EFQd,CER0B,CAA5B,CAzBqC,CxJyHxB,AwJ9Fb,CxJ8FO,KACE,KAAK,CAAC,WAAD,CAAL,IACC,KAAK,CAAC,YAAD,CADN,IAEC,KAAK,CAAC,YAAD,CAFN,IAGC,KAAK,CAAC,aAAD,CAJR,CAAD,IAKA,KAAK,CAAC,aAAD;AQtEb,AGDE,AEGF,ANAA,ADAA,ATDA,AGsDa,AsJ7ET,IAAA,CtJuD6B,IWlCxBF,A2IrBD,AxJGK,CwJHJ,E3IqBP,CblBW,EwJHT,AxJGS,CwJHE,CAAX,CxJGS,EwJHM,CxJGN,EAAA,GAAA,IwJHT,KxJGS,CAAA,QAAA,EAAA,IAAsD;AUoBnE,AGDC,AEGD,ANAA,ADAA,ATDA,AsI7BQ,AlGmBA,AJXR,A7B2FI,AsJ5FA,AxJCS,A2JjBX,ADQA,C7IsBF,GkBba,A7B2FT,AsJ5FA,ExJCS,A2JjBP,ADQE,EAAE,CrBCG,AlGmBA,AqHZL,CAAC,CtJ4FE,AwJpGE,CCRD,CzJ4GC,AyJ5GA,ADQE,CAAC,GrBCR,AmBOJ,AxJCS,CAAA,C+BAe,A4HjB1B,CtBSsB,AlGmBhB,AqHZW,AxJCN,CqIRY,ArIQZ,A2JjBQ,ADQR,CrBCL,AtGQgD,E/BA3C,A0JTa,EFQtB,AERwB,CFJkG,AEIjG,CFSzB,KxJAS,CAAA,A0JTX,E1JSW,CAAA;AUqBb,AKEA,ANAA,ADAA,ATDA,AsI7BK,AtGQD,A7B2FE,AqC3IN,AoH+BI,ADQF,E3HSE,EQhDJ,ErC2IM,AwJpGE,EAAE,E3HSE,C7B2FD,AwJpGE,C3HSC,C7B2FD,AqC3Ib,AmHuCe,CAAC,E3HQwC,E7B4FtC,CAAC,EwJpGN,GAAa,EAAE,CAAC,IxJoGX,CADL,EwJnGX,CA7BqC,CA+BrC;AhJ4BF,AKEA,ANAA,ADAA,ATDA,AoCVQ,AJXJ,A7B2FE,AqC5IN,AiHiDI,AGjBA,E5HiBA,E4HjBA,EzJ4GE,EsJ3FE,CrHWK,CwH5BH,C5HiBG,A4HjBF,CzJ4GC,CiChFK,AJXF,AyHAH,CrHWM,AjCgFJ,AsJ3FD,CzHF2C,EIanC,AwH5BjB,CxH4BS,AwH5BK,CzJ4GC,CiChFK,AjCgFJ,GiChFO,EwH5BvB,CxH4B0B,AwH5BJ,GHiBlB,CAAqB,CrHWM,CAAC,CjCgFjB,CAFN,EsJzFT,ErHWI,AqHX6B,ErHWO,CAAC,EqHXJ,CrHWO,AqHXN,GrHWlC,EAA6C,AqHXhB,CrHWiB,EAA9C,AqHX0C,ErHY1C,SqHZ0C,CAAA,MAAA,CAAO,MAAP,CAAc,KAAI,CAAC,eAAL,CAAqB,CAAnC,EAAsC,KAAI,CAAC,eAAL,CAAqB,CAA3D,EAA8D,KAAI,CAAC,eAAL,CAAqB,MAAnF,EAA2F,KAAI,CAAC,cAAhG,CAAb,CAAjC,KACK,KAAI,CAAC,KAAL,GAAa,WAAA,CAAA,MAAA,CAAO,SAAP,CAAiB,KAAI,CAAC,eAAL,CAAqB,CAArB,GAAyB,SAA1C,EAAqD,KAAI,CAAC,eAAL,CAAqB,CAArB,GAAyB,UAA9E,EAA0F,KAAI,CAAC,eAAL,CAAqB,KAA/G,EAAsH,KAAI,CAAC,eAAL,CAAqB,MAA3I,EAAmJ,KAAI,CAAC,cAAxJ,CAAb;A9IoBT,AKEA,ANAA,ADAA,ATDA,AoCTY,AJZR,A7B2FE,AqC7IN,AvCgDI,A2JfE,ADSJ,E3HQE,E/BFA,EmCcQ,AjC+EN,AyJ5GA,ADSE,KvHoBS,CAAC,AjC+EN,AqC7IZ,CJ8DiB,AJZF,CIYH,AjC+EE,CiC/EO,AJZJ,A/BFF,C+BDyC,A/BCxC,A2JfA,EAAE,CxH6BN,AjC+EO,CAAC,CiC/EO,EAAf,AnCdR,CAAoB,A0JNE,CvHoBK,EAAnB,AuHpBiB,EvHoBM,AuHpBJ,CAAC,CvHoBpB,CjC+EO,CiC/EoB,AjC+EzB,CF7FU,CmCcZ,CnCdY,CmCcmB,AjC+EN,CF7FX,CmCcd,AuHpBiB,EvHoBkB,CjC+EL,AwJnGE,CvHoBhC,AjC+E+B,CwJnGG,CvHoBK,AuHpBJ,EvHoBnC,EAA2C,EAA3C,GuHpBV,ExJmGwC;AQtE1C,AKEA,ANAA,ADAA,ATDA,AoCTS,AJZL,A7BuFS,AsJvFV,AxJH2B,A2JhBJ,ADWxB,E3HQE,G7BgD6B,AyJnE7B,CDWI,O3HQO,A/BHe,E+BGZ,IAJsC,K/BC1B,CAAA,A0JLH,GAAG,E1JKA,A0JLE,C1JKI,A0JLH,O1JKH,CAAc,E0JLd,G1JKkB,A0JLF,C1JKG,C0JLD,CAAC,I1JKL,CAAY,KAA1B,A0JL5B,CAjCqC,C1JsCwB,A0JH7D,E1JG+D,CAAC,IAApC,CAAA;AUwB9B,AKEA,ANAA,ADAA,ATDA,AgCpBI,A7B0FA,AKrJJ,A4C8CA,AnDQuE,A2JbnE,E5HkBA,E7B0FA,AiDvGS,AwGLT,C3JaA,I+BKO,A7B0FF,CyJ5GC,C5HkBG,A7B0FF,AyJ5GA,ExGKW,GAA2B,CpBOO,CoBPxD,AwGLI,CpJzCK,aAAT,GAAyB,cAAzB;AG+EA,AKEA,ANAA,ADAA,ATDA,AoCTQ,AChDA,ALsCJ,A7ByFE,AsJtFJ,AxJRE,A2JdA,ADUF,E3HSE,AyHGF,EGtBE,EzJ4GE,AwJlGA,EvHmBM,AqHPV,CpHzCW,AoHyCX,AxJRO,C2JdC,ADUA,CtH7BF,AuHmBG,ADUA,EvHmBM,CChDC,AsH6BZ,CAAS,CtH7BP,ALsCU,A7ByFF,CyJ5GZ,ADUE,CvHmBgB,AJVlB,A7ByFc,EyJ5GE,C3JchB,A0JJiB,EvHmBM,AjC+EJ,AsJtFrB,CtJsFsB,AsJtFlB,AxJRkB,C2JdC,CAArB,ExH6BI,AJVW,C/BLU,CmCgBrB,IJXJ,EAA+B,G7ByFZ,AsJtFjB,AEZJ,CxJiGS,AsJrFL,CxJRkB,A0JJiB,C1JIC,MAAlB,CwJQtB,AxJR+C,E+BK7C,AyHGE,EzHHiD,IyHGrD,EAAQ,CxJRc,CAApB;AUwBJ,AKEA,ANAA,ADAA,ATDA,AoCRY,AJZuB,A7B0F7B,AK1GN,AiJcE,AxJFC,A2JdA,ADWC,G1JDF,CORW,EL0GP,E6B1F6B,GIYlB,C5B5BI,GAAc,GL0GjB,EAAE,EiC9ER,CJZuB,E7B0FV,CAAC,E6B1FS,KAAA,CAAA,EAAA,O7B0FV,CAFd;AQpEX,AKEA,ANAA,ADAA,ATDA,AoCRS,AJb0B,A7B2F7B,AF7FJ,A0JJE,M3HM+B,A7B2F7B,EwJjGE,GxJiGG,CwJjGC,CxJiGC,AwJjGA,GAAL,CAAS,CxJiGC,CAAC,AwJjGX,E3HM2B,E2HNZ,C3HMY,EAAA,G7B2FjB,CAHP,YwJ9FP,EAAwC;AhJ2B5C,AKEA,ANAA,ADAA,ATDA,AsI9BI,AtGQmD,A7B4FjD,AyJ7GJ,ADaI,ErBJF,InIoGE,AyJ7GA,EtBSF,CAAA,EsBTO,EzJ6GE,CyJ7GC,CzJ6GC,EyJ7Gb,CtBSE,CAAA,CnIoGgB,CAAC,KmIpGjB,GAAA,InIoGgB,CAJT,OmIhGP;A3H8BJ,AKEA,ANAA,ADAA,ATDA,AsI7BQ,AlGqBA,AjC8EF,AqCtIF,AoHyBF,ADaI,MxJgGA,AyJ7GA,ADaA,GAAG,ErBHM,AlGqBA,AIxDX,CrCsIQ,AyJ7GA,ADaA,ExJgGE,CiC9EN,AwH/BO,CtBUK,AqBGd,ECbJ,CzJ6GiB,CmInGJ,AnImGK,AqCtIhB,CAAY,CAAZ,C8FmCuB,C9FnCJ,CAAnB,EAA0B,C8FmCE,GnImGb,CmInGJ,AnI8FJ,AqCjIP,EAAqC,E8FmCD,I9FnCpC,C8FmCyC,C9FnCM,G8FmCX,GAAY,KAAK,IAAjD;A3H6BR,AKEA,ANAA,ADAA,ATDA,AsI7BK,AlGqBA,AJdG,A7B4FF,AqCvIU,AmHuCX,GrBND,AlGCO,EuHCP,CxJoGE,E6B5FM,AQ3CI,CR2CH,AQ3CG,EmHuCL,CxJgGC,E6B5FM,A7B6FV,AqCxIQ,KrCwIH,AqCxIG,CrCwIF,AqCxIE,ER2CJ,AQ3CI,IR2Cc,CAAC,MAAnB,E7B6FC,CAAL,C6B7FiC,G7B8FjC,E6B9FsC,CAAC,E7B8FlC,CAAC,G6B9FgC,CAAtC,EACA,W7B6FK,CADL,IAEA,KAAK,CAAC,UAAD,CAFL,IAGA,KAAK,CAAC,YAAD,CAHL,IAIA,KAAK,CAAC,WAAD;AQ3Eb,AKEA,ANAA,ADAA,ATDA,AgCrBY,A7BoFD,AqCjIK,AoH0Bd,ADeI,KxJ4C2B,CqCrFjB,AoH0BV,CpH1BU,EiH4Cd,CjH5Cc,CAAA,CoH0BJ,C5HmBO,A4HnBN,UAAP,CHkBJ,AGlBsB,I5HmBZ,K4HnBV,EAAiC;AjJwCnC,AKEA,ANAA,ADAA,ATDA,AoCRY,ACjDJ,ALoCC,A7BgGL,AqC9IiB,AiH4CN,AGjBX,ADeE,EvHiBM,EjCmFR,AyJnHA,EDeE,CxJoGC,CiCnFK,CAAA,ACjDC,AlCoIJ,AyJnHA,ADeA,GCfG,ADeA,CFEU,CtJyCW,EkC3EzB,CsHgCF,CvHiBM,AqHfe,AGjBT,CxHgCN,ACjDW,AuHiBJ,IHiBJ,GpHlCP,GuHiBI,CAAkB,SAAlB,CxHgCA,AwHhC4B,GxHgCpC,QwHhCA,IxHgCA;AzBQJ,AKEA,ANAA,ADAA,ATDA,AoCPQ,AjCkFJ,AsJnG+B,AGhB/B,ADeC,IxJoGD,AyJnHA,CHgBM,GrHiBE,CjCkFH,CyJnHC,CzJmHC,EiClFM,AwHjCJ,GzJyDoB,GyJzDd,CAAC,IxHiCR,GAAmB,CAAnB,EwHjCC,CAAkB,CxHiCK,KAAK,GwHjC5B,CAA4B,CxHiCL,CAAW,MAAX,GAAoB,CAAhD,AwHjCJ,ExHkCI;AzBMR,AKEA,ANAA,ADAA,ATDA,AoCNY,AJfJ,A7BgGJ,AqChJmB,AvC4CrB,A2JfC,ADeA,E1JAD,C0JZA,CxJgHE,I6BhGQ,AQhDW,CAAA,AmH4Cd,CxJoGC,CiCjFO,CjCiFL,AFpGV,CAAA,C+BIgB,AQhDK,GRgDF,EQhDE,CAAA,CRgDE,AyHJf,CrHmBE,AJfc,AQhDH,AvC4CrB,CAAA,EmCmB6B,CAAnB,AJfS,CAAU,MAAM,GAAG,E/BJtC,G+BI2C,A/BJ3C,S+BImB,CAAb,E/BJN;AUyBF,AKEA,ANAA,ADAA,ATDA,AoCNY,AjCqBqB,AqCrFV,AvC4CrB,A0JEE,GxJuCF,GqCrFqB,CAAA,CvC4CrB,EuC5CqB,CJgEN,AIhEM,EvC4CrB,GmCoBU,AnCpBV,GmCoBuB,CnCpBvB,ImCoB4B,KAAL,CAAW,KAAX,CAAiB,CAAjB,CAAb;AzBMZ,AKEA,ANAA,ADAA,ATDA,AoCNS,AJfD,A7BiGN,AqCnJ0B,AiH4ClB,AGdR,ADiBE,ExJoGF,AyJrHA,CHcA,CEGE,GAAG,C3HGK,A7BiGJ,AyJrHA,CzJqHC,AyJrHA,CDiBC,ExJoGR,E6BjGgB,C7BkGd,AyJtHF,ADiBE,E3HGiB,C4HpBH,GzJsHR,C6BlGgB,A7BkGf,AyJtHW,KzJsHlB,CAAa,K6BlGT,A4HpBU,CzJsHd,AyJtH8B,C5HqB1B,G7BkGJ,MAAM,CAAC,OAAP,CAAe,MADf,IAEA,MAAM,CAAC,OAAP,CAAe,MAFf,IAGA,MAAM,CAAC,KAAP,CAAa,MAJf;AQ5EF,AKEA,ANAA,ADAA,ATDA,AsI9BI,AlGwBC,AJdO,A7BqGV,AKhKF,AA4CI,AiJSF,AxJFgB,A2Jbd,ADiBD,ErBNC,AnI+GF,AKpHE,C4BsBQ,AuH/D2B,CCmCnC,ADmBF,E3HEU,EsGVR,AnI+GI,AF7GU,CqIFd,AnI+GK,G6BrGS,E7BqGhB,C6BrGmB,E7BsGjB,AKrHe,C8HKf,CAAA,A9HjDK,AA4CY,APOH,A2JbC,C5HqBO,AxB3BS,CoJMd,C3JaH,CE8GR,CmIhHN,AnIgHO,AF9GO,GqIFd,EnIgHA,AyJ5H8B,CzJ4HjB,C6BtGL,I7BsGR,ImIhHA,AnIgHsB,MAAM,CAAC,KKjKjC,ELiK0B,CAAe,AKjKG,IAA5C,CLiKI,IAA8C,MAAM,CAAC,OAAP,CAAe,KAD/D;AQjFF,AKEA,ANAA,ADAA,ATDA,AsI7BQ,ArH5ER,AeqFS,A7BsGP,AqC3J4B,AoHgC1B,EzJ2HF,Ec3LE,A2IgEA,C5HkBI,G7ByGA,AqC3JsB,C8F4CjB,AnI+GJ,AyJ3HA,E5HsBI,A4HtBJ,EtBYD,ArH5EK,AuBgCiB,ERsDb,A7BqGf,CmI/GkB,ArH5EJ,A2I8DkB,EzJ8H9B,AqC5J0B,GvBhC9B,AesFuB,EQtDO,C8F4CtB,AtGUkB,A7BsGhB,AqC5JoB,CrC4JnB,CqC5JmB,GRsDC,C7BsG3B,CAAa,MAAb,G6BtGS,C7BsGc,C6BrGnB,K7BqGyB,CAAC,OAAP,CAAe,MAAtC,IAAgD,MAAM,CAAC,OAAP,CAAe,MADjE;AQlFF,AKEA,ANAA,ADAA,ATDA,AsI7BQ,AjG5BA,ApBhDR,AeuFY,A7BsGV,AqC9J4B,AoHiC1B,I3IhEE,A2IgEF,E5HuBQ,AQxDkB,G8F6CjB,AjG5BA,AlC6IJ,AFlHS,C2JXR,C3IhEG,AuB+BiB,CRwDZ,A4HvBR,CtBYF,ArIDU,CgB3EF,AuB+Bc,CRwDT,A7BsGnB,AqC9J4B,AvC4CZ,CqICE,CjG5BZ,CpC2BU,EoC3BM,ALuCE,CfvF1B,AhB2EkB,EAAA,CqICV,ErIDU,EoC3BV,GLuCI,I/BZM,CAAA,QAAA,EAAA,IAAsD;AU8BxE,AKEA,ANAA,ADAA,ATDA,AsI7BQ,AtGWC,A7BsGR,AqC/JsC,AvC4CrB,A2JdgB,ADqBhC,GCrBgB,CAAhB,E3JcgB,GqIEL,AqBKJ,GAAP,CrBLM,GAAY,CAAC,ArIFH,CAAA,EAAA,CAAA,GAAA,CqIEV,QrIFU,CAAA,EAAA,CAAA;AU+BlB,AKEA,ANAA,ADAA,ATDA,AsI7BQ,AsBZN,ADiBD,MCjBO,GtBYK,AsBZF,GAAG,CtBYN,GAAY,CAAC,CsBZD,CAAC,MtBYb,AsBZN;AjJyCF,AKEA,ANAA,ADAA,ATDA,AsI7BK,AtGWG,AQ3DiC,AiHkDvC,AGdA,EHcA,CnBRE,GsBNI,EpHpCiC,GR2D1B,GQ3D0B,EoHoCvB,C5HuBV,AyHTN,CAAA,CjHlDuC,AoHoCpB,IAAI,CpHpCgB,CAAA,EAAA,AiHkDvC,CAAA,MAAA,EGduB,CHcvB,AGduB,UAAJ,CAAe,CHclC;A9I2BF,AKEA,ANAA,ADAA,ATDA,AgClBK,AQ5DoC,AiHmDrC,AxJNA,A2JTiC,ADxCrC,I1JiDI,A2JTiC,EpHpCI,CmHJzC,CAAA,CFuDS,AGfiC,EAAE,CpHpCH,EoHoCM,CpHpCN,AvC6C1B,A2JTiC,CpHpCP,AiHmDrC,AxJNY,CwJMC,MxJNb,CAAoB,A0JjDxB,GAAA,O1JiDwB,EAAA,EAAE,K0JjD1B,EA0DA;AhJwBA,AKEA,ANAA,ADAA,ATDA,AgC9CwD,AQjCL,AiHoD7C,AxJPwB,A2JTM,C5HHpC,E4HGqB,CAAnB,EHgBI,OxJPwB,CwJOhB,EAAE,KAAK,GxJPS,CAAA,CwJOd,CAAW,GxJPG,CAAM,IwJMnB,ExJNa,CAAa,KAAI,CAAC,MAAL,CAAY,KAAzB,EAAgC,EAAE,CAAC,IAAnC,CAAA;AUkC9B,AKEA,ANAA,ADAA,ATDA,AyJ3BM,AxJRgE,A0JUtE,IAAM,C1JVF,CwJQE,QAAQ,EAAE,CEEG,GAAG,CFFD,CEErB,IFFgB,CAAW;A9I2B3B,AKEA,ANAA,ADAA,ATDA,AqCzDQ,AoH2BS,AxJJb,A2JVF,EAAA,GHcE,GGdI,CvHbK,ApCuBJ,A2JVA,IvHbD,GAAY,GuHalB,CvHbM,AuHaY,C3JUhB,GAAoB,KAAK,C2JV3B,CAA6B,GAA7B,O3JUsB,CAAkB,MAAlB,CAAyB,UAAA,EAAA,EAAE;AUkCnD,AKEA,ANAA,ADAA,ATDA,AiBzGA,AwI8EG,AxJRoD,A0JSvD,GFNE,MxIzEc,A0I+EA,I1JTuC,CAAC,IgBtExD,GAAyB,IhBsE0C,A0JSnE,C1JToE,A0JSlC,Q1JTsB,A0JSxD,C1JT6E,C0JSnC,C1JTc,CAAD;AUmCvD,AKEA,ANAA,ADAA,ATDA,AiBxGI,AhBoE4E,A2JT9E,ADmBA,E1I9EE,A2I2DF,G3JSsB,CAApB,E2JTI,CAAC,E3I3DI,A0I8EF,G1I9EK,IAAZ,C2I2DF,CAAkB,GDmBlB,CAAsB,KCnBtB,CAA4B,EDmB5B,EAA8B,OCnB9B,CAAwC,GAAG,CAAC,IAA5C,EA5CsB,CA8CtB;AjJ2CF,AKEA,ANAA,ADAA,ATDA,AiBxGC,ATqEG,AiJOJ,AxJRG,A0JUC,EnJTA,CPLF,K0JcM,CFFR,GEEI,OnJTiB,EAAE,CAxBY,EiJ+BnC;A9I4BA,AKEA,ANAA,ADAA,ATDA,AyJvGA,AG2DE,CH3DF,CAAqC,SG2D1B,KH3DX,CAAA,AG2DE,CAAgB,CAAhB,EAAmB,SAAnB,EAA4B;AjJ4C9B,AKEA,ANAA,ADAA,ATDA,AwChFQ,AvC2CR,A2JPI,ADiBA,QAAI,CnHrDK,AvC2Cb,CuC3CQ,GAAS,AmHqDJ,CAAC,KnHrDS,AvC2CvB,CuC3CwB,CAAD,AmHqDf,CnHrDA,AmHqDc,QAAd,CAAJ,EAA6B;AhJ2BjC,AKEA,ANAA,ADAA,ATDA,AsI9BI,AmB3ES,AxJJb,A2JiEI,ADiBE,C1JlFN,CqI+EI,CrI/EJ,G0JkFM,CF9EO,CnB2ET,AmB3ES,CnB2ET,CqBGM,GAAA,KrBHN,CAAA,ImB3ES,GAAA,AE8EH,CAAA,EAAA,ErBHN,AqBGa,GrBHb,KqBGM,CAAJ,CF9EO,GnB2EI,IAAb,EAA6B;A3H8BjC,AKEA,ANAA,ADAA,ATDA,AsI7BQ,AjG5BA,AjC+BR,AwJlBI,ADiBE,IvJCM,EuJDN,ErBFM,CjG5BC,IiG4BI,AjG5BT,CsH8BM,CvJCd,CiC/BoB,CiG4BR,AqBEK,GrBFO,AjG5BhB,CsH8Ba,CAAC,CAAD,CAAf,CrBFuB,IAAjB,IAAyB,KAAK,IAAL,GAAY,KAAK,IAA9C,EACA;A3H4BR,AKEA,ANAA,ADAA,ATDA,AsI5BY,AGpFZ,AxICa,A2JmET,ADiBC,IlBrFL,GxICa,CAAA,KqImFM,AGpFnB,KxICa,GAAA,QqImFgB,ErInFhB,GqImFD;A3H4BZ,AKEA,ANAA,ADAA,ATDA,AsI5BS,AGrFT,ArFgFA,AwGXI,SxGWY,kBAAhB,CAAmC,MAAnC,EAAoD,OAApD,EAAgF;AzCiChF,AKEA,ANAA,ADAA,ATDA,AI7BA,AqIrFA,ArFkFI,AwGZA,ADgBA,CvJDJ,KgDHQ,CAAC,IhDGG,AwJfD,ADgBA,ClBtFX,AmBsEI,CxGYA,EACA,AuGGW,OvJDf,AuJCW,CAAY,CvJDA,SuJCC,OAAD,EAAU,MAAV,EAAgB;AhJ4BvC,AKEA,ANAA,ADAA,ATDA,AsI5BQ,AlIDJ,AoCnDI,AiGOJ,ArF0CI,AwGbL,ADgBG,EvJDF,CwJrEoB,CtBsEhB,AsBfN,ItBeU,C9FpDC,CAAL,AmHoDE,CrBAK,AG7CX,ArF0CW,EhDEX,AoCnDa,CpCmDb,CkICe,AlFHX,CuGGQ,CAAC,ErBAM,A9FpDA,CAAC,AiGOpB,CjGPmB,AmHoDb,CnHpDF,AmHoDc,CrBAK,AG7CvB,ErI4CA,CAAA,CuJCM,CAAkB,MvJDxB,CAAA,GkICmB,AlIDnB,CkICiC,AlIDjC,CkICmB,AlIDnB,AuJCM,CAA+B,CrBAD,CAAjB,AlIDnB,EkICuC,CAApB,EAAuB,CAAvB,AqBAb,CrBAF,AqBAF,CvJDF,CuJCgD;AhJ4BpD,AKEA,ANAA,ADAA,ATDA,AsI3BQ,AlIFJ,AgDFC,AuGGG,EvJDJ,EkIEI,IAAI,AqBDJ,CrBCK,CAAL,GAAS,AlIFb,CAAA,CuJCW,CAAC,ErBCM,IAAd,AqBDc,CAAC,EvJDnB,CAAA,CuJCY,CAAY,GvJDxB,CAAA,CuJCY,CAAkB,CvJD9B,CAAA,CAAA,GAAA,KAAA,CuJCY,CAA+B,QAA/B,CAAD,CAAP;AhJ4BR,AKEA,ANAA,ADAA,ATDA,AsI3BQ,AlIFJ,AuJCG,EvJDH,EkIEI,GqBHF,CrBGM,CAAC,CAAL,GAAS,AlIFb,AuJCS,CvJDT,IkIEkB,IAAd,GlIFJ,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;AO6BJ,AKEA,ANAA,ADAA,ATDA,AsI3BQ,AlGoBG,AClDH,AjC4BJ,AINA,A4CIA,AwGdF,ADiBM,EvHqBG,AhCtBP,AINA,E8HQI,ElFJA,EkFII,AlGoBD,AuHrBH,CrBCK,AlGoBF,AClDE,EuHYF,CpJUG,CJMV,CkIEI,AlIFJ,AINY,AmJOF,CnJ1CqB,A4CuClB,AuGGF,ErBCM,AjG9Bb,AuHYN,CxHsCS,AgBxBS,AwGdF,CxHsCP,AwHtCT,ADiBM,CtH7BgB,Ae0BpB,AuGGgB,CCjBC,CtBkBK,AlGoBf,EClDH,CDkDJ,AhCtBA,CkIEiB,AlIFjB,AuJCI,CAAmB,ErBCM,CsBlB/B,ADiBM,CAAuB,CCjBD,EtBkBQ,AlIFlC,CgCsBW,AhCtBX,AuJC+B,GrBC3B,AlIFJ,CgCsBA,AhCtBA,AuJCmC,CvJDnC,CgCsBwB,EhCtBxB,IuJCI,EAAyC,EvJD7C,EuJCI,CAA8C,YAAA;AhJ4BtD,AKEA,ANAA,ADAA,ATDA,AsI3BQ,AlGqBA,AhCvBJ,AwJhBA,ADiBM,EvJDN,EkIEI,IAAI,AlGqBC,CkGrBA,GlGqBY,CAAC,AhCvBtB,CAAA,AuJCY,CrBCR,GAAc,AlGqBS,GuHtBR,ErBCI,AlGqBF,CAAjB,AuHtBkB,CvJDtB,CgCwBI,AhCxBJ,CkIEkB,GAAY,AqBDF,CAAC,IrBCM,AlIFnC,AuJCsB,CvJDtB,AuJCkC,GrBC9B,AlIFJ,CAAA,CAAA,CuJCsB,CAAmB,CvJDzC,QuJCsB,CvJDtB,AuJCmD,QAA7B,EAAuC,OAAvD;AhJ4BV,AKEA,ANAA,ADAA,ATDA,AsI1BQ,AlGqBI,AnBpGZ,Ab4EI,AgDFA,AwGdA,ADiBM,EvJDN,IgDFI,GnC1EQ,C0I6EN,CrBEK,AlGqBE,EhCxBb,AgDFW,ChDEX,CkIGI,ErH/ER,A0I6EiB,C1I7EQ,A0I6EP,CvGHV,GnC1ER,EAAqC,AmC0EX,ChDEtB,AuJCa,CvJDb,AuJCM,MvHuBE,AgB1BR,EhDEA,AgDDA,ChDCA,GAAA,CAAA,CAAA,GAAA,QAAA;AO6BJ,AKEA,ANAA,ADAA,ATDA,AsI1BK,AlGqBO,AhCxBR,AoCnDI,AoHmCJ,ADiBK,EvJDL,CkIZA,M9FvCS,AmHiDL,EvH0BS,EhCxBb,CAAA,AoCnDI,GJ2EI,AI3ES,CJ2EG,IAAZ,CI3Ee,CAAC,CpCmDxB,CAAA,GoCnDuB,CAAnB,KpCmDJ,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AO6BJ,AKEA,ANAA,ADAA,ATDA,AoCLY,AhCxBR,AqIrFO,ArFoFH,AwGfJ,ADiBG,EvJDH,MgDDU,CqFpFH,ErG6GM,EhCxBb,CAAA,AqIrFO,ArFoFS,EhByBR,CAAW,AqG7GJ,ArFoFK,IhByBZ,CAAgB,GhCxBxB,AqIrFO,CrG6GC,AhCxBR,aAAA,CAAA,CgDDmB,CAA2B,ChDC9C,CAAA,CAAA,CgDDmB,CAAgC,ChDCnD,KgDDmB,CAAf,OhDCJ;AO6BJ,AKEA,ANAA,ADAA,ATDA,AoCLS,AnBrGL,Ab6EA,AwJhBA,ADiBC,EvJDD,GuJRO,C1IrEH,A0IqEJ,OvJQA,CAAA,Ca7EA,EACA,Qb4EA,CAAA,YAAA,CAAA,GAAA,CAAA,CAAA,GAAA,YAAA;AO6BJ,AKEA,ANAA,ADAA,ATDA,AiBzGQ,Ab4EJ,AgDDI,AwGfJ,ADiBD,EvJDC,MgDDQ,KhDCR,CAAA,AgDDI,EACA,ShDAJ,CAAA,YAAA,CAAA,GAAA,CAAA,CAAA,GAAA,YAAA;AO6BJ,AKEA,ANAA,ADAA,ATDA,AoCLQ,ACpDA,ApBhDH,Ab4ED,AgDAQ,AwGhBR,ExJgBA,IgDAQ,Gf5BC,EDoDE,EhCxBX,CAAA,CgCwBI,AgBxBa,GAAG,Cf5BhB,GAAkB,Ee4BI,ChDA1B,AgDA2B,ChDA3B,AgDA0B,Cf5BtB,Ae4BgB,CAAU,UhDA9B,CAAA,AgDAoB,EAAZ,ChDAR,EAAA,CAAA,GAAA,YAAA;AO6BJ,AKEA,ANAA,ADAA,ATDA,AoCLK,ACpDA,AjC4BD,AgDAK,AwGhBL,ADgBF,EvJAE,CgCcO,GuHdL,OvJAF,CAAA,EuJAY,IAAV,CAAe,IvJAjB,CAAA,GuJAE,CAAJ,EAA8B,MvJA5B,CAAA,GAAA,EAAA,CAAA,GAAA,YAAA;AO6BJ,AKEA,ANAA,ADAA,ATDA,AiBzGI,Ab4EA,AoCnDI,AYmDH,AwGhBD,ADgBA,EvJAA,Ia5EI,E0I4EA,CnHnDK,IpCmDT,CAAA,Ca5Ea,AuByBT,CvBzBU,EuByBI,GmHmDD,CAAC,EnHnDM,CvBzBpB,Ab4EJ,AoCnDyB,CvBzBD,Ab4ExB,IuJAiB,CnHnDO,AmHmDxB,CnHnDI,CmHmDyB,I1I5EzB,Ab4EJ,CAAA,Ea5EsC,Cb4EtC,EAAA,CAAA,Ga5EI,Ab4EJ,Ca5E8C,QAA1C,Eb4EJ,Ea5E0D,CAAC,CAA3D,EACA;ANwGJ,AKEA,ANAA,ADAA,ATDA,AiBxGQ,Ab2EJ,AwJhBA,ADgBE,EvJAF,Ma3EU,IAAI,Cb2Ed,AuJAS,CvJAT,Ca3EiB,CACT,Sb0ER,AuJAqB,CvJArB,AuJAsB,KvJAtB,CAAA,GAAA,EAAA,CAAA,CuJAmC,C1I1EL,A0I0EM,CvJApC,KAAA,Ca1EQ,C0I0E2B,CAAd,C1I1EgB,A0I0EnC,Y1I1EM,GAAqC,IAArC,GAAyC,4EADhC,EAET,qCAFS,EAGT,qCAHS,EAIT,qDAJS,EAKT,qCALS,EAMT,qCANS,EAOT,qCAPS,EAQT,kDARS,EAST,kDATS,EAUT,kDAVS,CAAb;ANwGR,AKEA,ANAA,ADAA,ATDA,AsI3BI,AlIFA,AINA,A4CMA,AwGhBA,ADgBC,ErBED,AlIFA,AINA,GmJIA,EvGEK,CkFEL,CAAA,ElFFS,AuGAF,CvGAG,ChDAV,CAAA,CgDAa,GkFEb,CAAA,A9HRiB,EAAE,CA9CY,E4CoDT,ChDAtB,AgDAuB,ChDAvB,CkIEA,GAAA,ClFFa,GAAmB,CAAhC,EAAmC,ChDAnC,AgDAoC,ChDApC,CkIES,ElIFT,AgDAwC,CAAxC,ChDAA,CkIEA,AlIFA,AgDA2C,EkFEjB,AlFFmB,ChDA7C,AgDAA,EACA,UhDDA;AO6BJ,AKEA,ANAA,ADAA,ATDA,AsI1BQ,ArHnEA,AbgEJ,AqIrFO,ArFsFH,AwGjBJ,ADgBE,EvJAF,GahEI,EAAA,CmCiEM,CkFED,AGxFF,CxHqBH,GqHmEA,AlIHJ,AuJAS,CvJAT,AqIrFO,EHwFS,ArHnEN,CAAC,AwHrBI,CkBqFD,CAAC,CrBGK,AGxFb,CHwFc,ClFFG,EkFER,ArHnEZ,CqHmEqB,AlIHzB,AgDC2B,CnCjER,AbgEnB,CuJAc,CAAL,C1IhEL,A0IgEqB,CrBGK,ArHnER,GbgEtB,AuJAS,CrBGO,AlIHhB,AgDCoC,AuGDN,C1IhE1B,AmCiEiC,CkFED,ArHnEd,AmCiEc,ChDDpC,AgDCI,CnCjEA,CbgEJ,CahE0B,AbgE1B,CkIGyC,CAAC,CAA1B,AlIHhB,CkIGI,ArHnEA,A0IgE2B,GAAD,EAAI,CvJAlC;AO6BJ,AKEA,ANAA,ADAA,ATDA,AsI1BQ,ArHnEH,AbgED,AwJhBA,ADgBI,EvJAJ,CahFA,MqHmFS,ArHlEJ,IqHkED,ArHlEK,Ab+DT,CAAA,CuJAW,CrBGK,EqBHF,C1I/DC,A0I+DA,CrBGK,ArHlEJ,CqHkEK,EqBHV,CrBGK,CAAS,AlIHzB,AuJAI,CvJAJ,Ca/DK,EACL,CqHiE8B,IAAd,EAAoB,ElIHpC,CAAA,EkIGyC,CAAC,AlIH1C,CkIGgB,CAAZ,AlIHJ,CAAA,GAAA,YAAA;AO6BJ,AKEA,ANAA,ADAA,ATDA,AsI1BQ,ArHjEA,Ab8DJ,AgDCI,AwGjBJ,ADgBG,EvJAH,Ea9DI,G0I4DK,CvGGD,CkFEC,AqBHJ,C1I9DK,CAAC,A2I8CJ,CAAP,CtBmBI,AlIHJ,AuJFS,CvJET,AuJAU,ErBGM,ErHjEZ,CAAe,CqHiEC,CAAC,CrHjEjB,AmC+DkB,CnC/DC,AmC+DA,CkFEP,AqBHL,CrBGc,AlIHzB,CAAA,CgDCQ,AuGDE,EAAI,CrBGgB,ClFFC,GkFEf,CrHjEiB,CqHiEG,ElIHpC,CAAA,EkIGyC,CAAC,ArHjEnB,Ab8DvB,CkIGgB,CAAZ,AlIHJ,Ca9DwC,Ab8DxC,AgDC6C,CAAC,EhDD9C,Ea9DuB,AmC+DQ,CAAoB,EnC/DL,IAAvB,AmC+DQ,EAA4B,CnC/DT,Ab8DlD,QgDC+B,CAA3B,EACA,gBnChEA;AN2FR,AKEA,ANAA,ADAA,ATDA,AsI1BQ,ArHjEH,Ab8DD,AgDEQ,AwGlBT,ADgBK,EvJAJ,OkIGS,GqBHC,CrBGN,AlIHJ,AgDEe,ChDFf,EkIGgB,ClFDG,CuGFH,ErBGI,CAAC,AqBHF,GrBGH,CAAS,AlIHzB,CAAA,GuJA2B,CrBGG,AqBHF,CvGEb,CAAmB,EkFClB,ClIHhB,CkIGoC,AlIHpC,CuJAmB,CvGEJ,AuGFqB,CvJApC,CgDE0C,CkFCD,AlIHzC,CkIG0C,AlIH1C,CkIGgB,CAAZ,ClIHJ,EgDEe,CAAP,EuGFW,EAA+B,EvJAlD,AuJAmB,CAAf;AhJ6BR,AKEA,ANAA,ADAA,ATDA,AsI1BK,AlGoBM,AhCvBP,AgDEK,AuGFD,EvHuBG,AhCvBP,CkIHA,KlG0BO,CAAA,GuHvBG,CvJAV,CAAA,IgCuBO,CAAA,IuHvBc,EvHuBd,AhCvBP,CAAA,AuJAwB,EvHuBxB,CuHvB2B,CAAC,GAAJ,CAAQ,IvHuBlB,AhCvBd,CAAA,GgCuBA,AhCvBA,EgCuB2B,AhCvB3B,AuJAiC,CvJAjC,GAAA,AuJAgC,EAAK,UvJArC;AO6BJ,AKEA,ANAA,ADAA,ATDA,AoCLQ,AnBtFJ,Ab8DA,AgDEC,AwGnBH,ADiBQ,E1I9DN,Ab8DA,MgCwBU,GnBtFD,A2I6CF,ExHyCQ,AhCxBf,Ca9DY,Ab8DZ,EgCwBkB,CuHxBL,C1I9Db,C2I6CF,CAAkB,CxHyCO,EwHzCzB,ADiBqB,EvJAnB,AwJjBqB,CxHyCH,AhCxBlB,AuJAsB,CvHwBO,GuHxBvB,EvJAN,CAAA,CgCwBkB,AwHzCpB,CxHyCuC,ChCxBrC,AwJjB8B,ExJiB9B,CgCwBkB,AhCxBlB,CgCwBI,EhCxBJ,MAAA;AO6BJ,AKEA,ANAA,ADAA,ATDA,AqC1DI,ApBjCH,Ab+DG,AwJlBA,ADiBK,EtH7BL,AjC8BA,MwJlBI,CAAC,ADemB,CAApB,ECfJ,CxJkBA,CAAA,AwJlBU,EvHZV,CAAA,QjC8BA,CiC9BA,AjC8BA,CiC9BA,KAAA,GAAA,CjC8BA,CAAA,GAAA,CAAA,CAAA,GiC9BM,AjC8BN,EiC9BA,EAA6B,MjC8B7B,CiC9BA,EAAgD;A1B0DpD,AKEA,ANAA,ADAA,ATDA,AoCLQ,ACtDyB,AjC+B7B,AoCpDI,AYqDJ,AwGnBE,ADiBE,EvJCJ,MgCuBQ,ACtDqB,AegCvB,AuGFF,CnHnDK,GYqDC,ChBsBG,AhCvBb,AoCpDI,AoHkCK,CxJkBT,CiC/B6B,CGrBb,AoHkCd,CxGmBI,ChBsBY,AgBtBF,ChBsBG,CAAf,ACtDyB,CsH8BZ,CvHyBb,AI5EkB,AmHmDJ,CnHnDK,EHqBM,AjC+B7B,CiC/B6B,AjC+B7B,CoCpDI,CHqByB,EsH8BZ,CAAb,GvJCJ,AuJD8B,CvJC9B,GAAA,EAAA,CAAA,GAAA,CuJDI,OvJCJ,gBgDCM,CAAN;AzC2BJ,AKEA,ANAA,ADAA,ATDA,AoCJY,ACxDqB,AnBrFjC,AdqHI,AoCpDC,AiGlCM,ArFuFV,AwGnBI,ADiBG,EvJCJ,EcrHA,EmBqF6B,GoGtDtB,ErG8GM,ECxDgB,AnBrFjC,AdqHI,CAAA,CuJDW,CtH/BkB,AoGtDtB,GAAmB,CpGsDG,KjCgC7B,CAAA,CuJDuB,CAAC,IvHyBhB,CqG9G0B,ErIsFlC,CAAA,EqItFO,CrIsFP,AuJDuB,CAAnB,CvJCJ,CAAA,GAAA,SAAA;AO4BJ,AKEA,AqCrJA,A3CqJA,ADAA,ATDA,AoCJY,ACzDwC,AjCiChD,AuJDG,EvJCH,KuJVS,CAAP,GvHkCW,EhCxBb,CAAA,EgCwBQ,CAAW,MAAX,CAAkB,ChCxB1B,CAAA,GgCwBQ,EAAyB,CAAzB,IhCxBR,CAAA,GAAA,EAAA,CAAA,GAAA,UAAA;AO4BJ,AKEA,ANAA,ADAA,ATDA,AoCJS,AhCxBL,AIPA,AgCxCA,AoH4BA,ADkBC,EvJCD,AIPA,AgCxCA,MAAA,CAAA,EoH4BO,CAAC,CxJmBR,CAAA,IwJnBc,CAAC,EpJYI,CoJZD,CpJYG,AgCxCrB,AoH4BmB,CpH5Bf,AoH4Bc,CxJmBlB,AwJnBc,CxJmBd,CwJnBuB,MpH5BnB,CAAA,EpC+CJ,AwJnBc,CxJmBd,AwJnBO,EAA4B,CxJmBnC,EAAA,CAAA,AoC/CA,EhCwC2C,AgCxCvC,AoH4BqC,CxJmBzC,AIP4C,AoJZF,EpJYC,CAzDZ,AoJ6Cc,CAAC,CpH5B9C,AoH4B6C,CAAJ,CpH5BjC,CoH4B0C,ExJmBlD,OwJnByC,CAAlC,CAAP;AjJ+CJ,AKEA,ANAA,ADAA,ATDA,AqC7DQ,AjCiCJ,AwJnBD,ADkBA,EvJCC,CwJhGoB,ADgFtB,CCFA,KDiBO,EtHhCM,EjCiCX,CAAA,EiCjCgB,EAAL,KAAY,EAAZ,AjCiCX,CAAA,GiCjC6B,KAAK,AjCiClC,CAAA,GAAA,EAAA,CiCjC6B,AjCiC7B,GAAA,EiCjC8C,MjCiC9C,CiCjCI;A1B6DR,AKEA,ANAA,ADAA,ATDA,AsI3BI,AlGuBI,ACzDH,AjCiCD,AuJDA,ErBEA,AlIDA,CiCpCA,KiGqCA,CAAA,ElGuBW,AuHzBJ,EvJCP,CAAA,CgCwBI,GkGvBJ,CAAA,IqBFmB,CAAC,CvJCpB,CkICA,AlIDA,GkICA,GqBFmB,CAAnB,EvJCA,CAAA,GkICQ,AlIDR,EAAA,CAAA,GAAA,EkICA,EAA8B,KlID9B;AO4BJ,AKEA,ANAA,ADAA,ATDA,AsI1BQ,AlGsBH,AhCxBD,AuJDD,EvJCC,CgCaO,KkGXC,IAAI,ClIFZ,CAAA,CkIEe,KAAK,IAAhB,ClIFJ,CAAA,UAAA,CAAA,GAAA,EAAA,CAAA,GAAA,UAAA;AO4BJ,AKEA,ANAA,ADAA,ATDA,AsI1BQ,AlIFJ,AwJpBF,ADmBD,EvJCG,MkIEQ,GsBtBD,CtBsBK,ClIFZ,CAAA,CkIEe,KAAK,CsBtBtB,CAAoB,EtBsBd,ClIFJ,CAAA,CwJpBF,EAAyB,IxJoBvB,CAAA,GAAA,EAAA,CAAA,GAAA,OAAA;AO4BJ,AKEA,ANAA,ADAA,ATDA,AsI1BQ,AlIFJ,AwJpBA,ExJoBA,MkIEQ,AsBtBJ,ItBsBQ,ClIFZ,AwJpBS,CxJoBT,AwJpBU,CtBsBK,KAAK,CsBtBhB,CAAc,EtBsBd,ClIFJ,CAAA,CwJpBI,CAAJ,EAA0B,MxJoB1B,CAAA,GAAA,EAAA,CAAA,GAAA,UAAA;AO4BJ,AKEA,ANAA,ADAA,ATDA,AsI1BQ,AlIFJ,AqItFO,AmBkEL,ADnBN,EvJuCI,KuJvCJ,CrByCY,AqBzCZ,CnHdI,AiGjCO,GHwFK,ClIFZ,AwJpBS,CxJoBT,CkIEe,AGxFR,GAAiB,AmBkEV,CAAC,CtBsBK,C9FvDpB,CiGjCO,EHwFH,AqBzCR,CvJuCI,CAAA,AwJpBS,CAAc,ADnB3B,IvJuCI,CAAA,AwJpBS,CAAP,ExJoBF,EAAA,CAAA,GAAA,EuJvCJ,GvJuCI;AO4BJ,AKEA,ANAA,ADAA,ATDA,AsIzBQ,ApHxHR,AdqHC,AoCpDO,AoHgCH,ADiBL,CvJ/BA,EAAY,CuJ+BN,CCnBF,CDmBI,ErBMI,CAAC,ApHxHG,AyIkHL,ECjBA,CtBuBK,C9FvDD,CpCkBQ,CuJ+BN,CAAC,EnHjDE,AmHiDpB,CnHjDQ,C8FuDgB,AqBLxB,CrBKyB,CAAD,CAAhB,EpHxHR,GAAgC,admFpB,WAAW,GAAA,EAAA,CAAvB;AO8DA,AKEA,ANAA,ADAA,ATDA,AsIzBQ,ApHvHJ,AsBgEC,AoHgCC,KpHnCM,CtB7DJ,EoHuHI,CAAC,CsBvBH,EtBuBM,CpHvHD,E0IgGA,CAAC,ItBuBQ,CAAC,AsBvBf,CtBuBc,ApHvHhB,A0IgGc,CtBuBd,EsBvBE,CAAJ,C1IhGuB,C0IgGD,U1IhGxB,EACA;AP+IJ,AKEA,ANAA,ADAA,ATDA,AsIxBQ,ApHvHA,A0I+FA,ADiBD,IrBOC,ApHvHA,AyIgHK,IrBOD,GAAG,CAAC,CpHvHC,EoHuHE,AsBxBJ,C1I/FM,AyIgHI,GrBOV,AqBPa,CCjBR,CpHpCR,AoHoCS,CtBwBK,CAAX,EpHvHe,CoHuHA,EqBPjB,ErBOL,CsBxBO,CAAiB,E1I/FX,GAAkB,A0I+FxB,CAAP,EDiBoB,CAAS,IAAT,EAAa;AhJ+BzC,AKEA,ANAA,ADAA,ATDA,AsIxBQ,AlGmBG,AlBzIC,A0I8FL,ADiBL,EvH0BS,EkGnBH,GsB1BF,CtB0BM,AlGmBD,CAAA,AuH1BF,CzI/GS,CoHsHH,AqBPJ,CrBOK,AqBPJ,CCjBC,EtBwBM,GlGmBR,CkGnBI,AlGmBJ,CuH1BF,CAAY,CrBOK,CAAX,CpHtHiB,EoHsHF,ClGmBnB,AlBzIwB,GoHsH3B,AlGmBJ,OuH1BK,CAA6B,EvH0BlB,AuH1BoB,CAAC,GvH0BrC,EAA6B,GuH1BK,CAAY,QAAzC,EAAmD,IAAI,EAAE,CAAC,OAAH,CAAW,IAAf,CAAoB,IAApB,CAAnD,EAA8E,IAAI,EAAE,CAAC,OAAH,CAAW,IAAf,CAAoB,YAAA,CAAa,CAAjC,CAA9E,CAAP;AhJ+BF,AKEA,ANAA,ADAA,ATDA,AsIxBQ,AlGoBA,AC1DJ,AnBhFY,AsBwDJ,AoHsCJ,ADiBP,CAFM,CtH7BH,CGxBA,C8F8DI,IAAI,ApHtHI,GoHsHD,AlGoBA,CkGpBC,AsBxBJ,GtBwBO,ApHtHI,CkB0IH,AC1DhB,CAAA,AnBhFqB,EoHsHV,ElGoBA,AlB3IoB,CoHuHT,AlGoBA,CkGpBX,CsBxBS,CAAC,CtBwBK,AjGtC1B,CAAA,ED0DW,CkGpBP,AlGoB0B,AwH5CV,CvHdpB,AuHcI,EAAyB,CxH4ClB,AC1DX,MD0DwC,CAAC,CAArC,EC1DC,SAAL,EAAsB;A1B8D1B,AKEA,ANAA,ADAA,ATDA,AsIxBQ,AlGoBH,ACzDG,AnBjFQ,AsBiEZ,AoH6BM,EpH7BN,CJsEO,CkGjBH,IAAI,AjGrCA,AnBjFI,AsBiEZ,CAAA,E8FqDW,CAAC,CjGrCC,EiGqCE,AjGrCX,EACA,AuHYS,EtBwBF,GAAW,AsBxBJ,CtBwBP,A9FrDX,AoH6BmB,CpH7Bf,E8FqDsB,IAAtB,G9FrDA,AoH6BS,CpH7BT,AoH6B0B,E1I9FU,EAAE,KsBiE1C,EAAI,CoH6BsC,CAAC,KpH7B3C,AoH6B0C,CAA7B,CpH7BJ,AoH6BH,G1I9F6C;AP8IvD,AKEA,ANAA,ADAA,ATDA,AsIvBQ,AjGrCI,AnBrFuB,A0IiG1B,ADaI,IrBYL,CAAC,EpH1HG,AyI8GC,CrBYD,AqBZC,CCfL,CvHVQ,KAAK,AuHYN,CtByBK,CAAC,CAAD,CAAZ,CqBZK,EtHzBD,CsHyBa,CtHxBb,WsHwBC,EAGb;AhJgCA,AKEA,ANAA,ADAA,ATDA,AsIvBQ,AjGpCQ,AoGvDL,AmBkED,ItByBF,CAAC,GAAG,CG3FD,IpGuDU,EAAL,CiGoCI,AjGpCI,AoGvDb,CH2FU,AsBzBJ,CtByBG,CAAZ,AG3Fa,CpGuDL,CAAa,GoGvDlB,CmBkED,CvHXwB,OAAlB,EAA2B,SAA3B;A1B2DhB,AKEA,ANAA,ADAA,ATDA,AsIvBQ,AjGpCK,AnBnFD,AV4GR,AiI7EI,AmB+DC,ADeT,EnJDI,E8HWI,GjGvCI,CiGuCA,CGxFC,AkB8EG,CzI5GJ,CoHsHG,CAAC,CjGlCJ,CoGtDJ,CHwFW,IAAJ,A9HXM,AmJCrB,CAA2B,CnJDJ,C8HWG,CAAX,CqBVf,CnJ1EmC,C8HoFL,AqBVG,IrBUzB,IqBVR,EAAyC;AhJiCzC,AKEA,ANAA,ADAA,ATDA,AsIvBQ,AjGlCS,AnBpFD,AuH8BX,AmB+DE,ADeL,IrBUM,EqBVA,ErBUI,GAAG,CAAC,ApHtHI,CmBoF0B,AnBpFzB,AyI4GN,ErBUI,AjGlCF,CAAgC,AsHwB/B,GrBUH,ApHtHY,CAAC,EoHsHF,CAAX,EjGlCE,AsHwBT,CrBUsB,IAAtB,EqBVU,CAAS,GAAT,EAAY,GzI5Gd,EACA;AP4IhB,AKEA,AqCvJA,A3CuJA,ADAA,ATDA,AsIvBQ,AjGlCK,AnBnFO,A0I4Ff,ADc2B,ItGpH5B,AiF+HI,IAAI,AqBXoB,GrBWjB,CAAC,AqBXgB,GrBWb,AqBXa,EtGpHf,AnCUU,AyI0GK,ErBWjB,CjF/HK,EiF+HM,ApHrHN,CoHqHL,GAAe,IjF/HD,AiF+HrB,CjF/HY,EAAY,CAAZ,EAAe;A1CsJnC,AKEA,AqCvJI,A3CuJJ,ADAA,ATDA,AsIvBQ,AjGlCC,AnBnFQ,A0I4Fd,EvGtGC,EiF+HI,IAAI,C9F5DR,E8F4DW,CAAC,GjF/HC,AiF+HE,GjF/HC,CiF+HL,E9F5DX,C8F4DsB,CAAX,CjF/HW,CAAC,CiF+HG,IAAtB,SjF/HY,IACX;A1CqJT,AKEA,AqCvJW,A3CuJX,ADAA,ATDA,AsItBQ,AlGiBG,AI7EH,EJ6EG,EiBjJA,AiFgIH,CAAC,GAAG,AlGiBD,CAAA,AuH/BqB,ItGlHZ,AboEL,AmH8CiB,EtGlHV,AsGkHU,CrBcZ,CAAC,CAAD,AlGiBT,AI7ES,AmH8CY,CrBcxB,AlGiBG,AI7EI,EmH8CiB,CnH9CR,CmH8CQ,GAAA,CnH9CH,CJ6ElB,GAAP,CI7EI,GmH8CwB,CAAA,OvH+B5B,CuH/B4B,EAAA,IAAO;AhJoCvC,AKEA,AqCxJS,A3CwJT,ADAA,ATDA,AsItBQ,AlGkBA,ACrDA,AnBnFQ,AsB0DX,AoHkCH,ADW8B,ECX9B,EtB0BM,CAAC,A9F/DI,AoHqCR,CAAC,ADW0B,ErBepB,AjGnCE,CDqDD,CuHjCmB,CCX9B,ADW8B,CzIvGV,CyIuGU,CCXlB,CvGvGwB,CiFiIlB,AjGnCE,AuHSN,ADWgB,CrBeX,AsB1BJ,ADWe,CrBeZ,ApHtHQ,AyIuGI,CrBexB,AjGnCiB,CgB9FhB,AuGuGK,C1I5FiB,A0I4FV,ADWW,GtGlHe,AhB8FjB,IAAtB,CnBnF+B,CkBwI/B,AlBxIgC,A0I4F1B,ADWkB,CCXD,ADWC,EAAA,CtGlHyB,AuGuGvB,ADWF,CtGlHe,AuGuGZ,EvGvGyB,CAAb,CuGuGhB,CvGvGgC,AuGuGvB,G1I5FT,CAAuB,C0I4FxC,CAAZ,M1I5F6B,CAAf;AP4IhB,AKEA,AqCzJiE,A3CyJjE,ADAA,ATDA,AsItBQ,AlGkBA,AlBxIQ,A0I4Fd,EAAA,EvGxG+D,AiFkIzD,CjFlI0D,AuGwG7D,CvGxG8D,AuGwG7D,EtB0BM,ClGkBC,EkGlBE,CAAC,ApHtHI,A0I4FlB,ExH4CM,AlBxIc,CmCZ2C,AiFkI9C,AlGkBA,AwH5CJ,E1I3FK,A0I2FH,CvGxG8D,AuGwG7D,CvGxG+C,AiFkIlD,ElGkBP,AIlFK,AoHsCE,CtB0BW,AsB1BJ,CtB0BP,ApHrHW,CkBuIE,AlBvID,CkBuInB,CkGlBsB,IAAtB,CsB1BO,CAAiB,E1I3FZ,CAAkB,A0I2FH,CAAC,IAAJ,CAAS,C1I3FrB,EAA2B,G0I2FhC,CAAb,CAhGsB,CAkGtB,Q1I7FkB,KACG,MAAM,CAAC,UAAP,CAAkB,oBAAlB,EAAwC,cAAxC,CAFP;AP4IhB,AKEA,AqC1JmF,A3C0JnF,ADAA,ATDA,AsItBQ,AlGmBA,ACtDA,AnB/EQ,GmClBI,CiFoIZ,GjFlIA,CiFkII,AjGnCA,GiGmCG,AlGmBA,CkGnBC,ApHlHM,CmB+EL,EiGmCE,AlGmBX,EiBrJU,AhB+FV,CgB/FA,CiFkIO,AjGlCP,AnBhFqB,CmChBR,CAAb,CiFkIkB,ApHlHM,CmChBR,AiFkIT,ApHlHkB,EAAE,CoHkHL,CpHlHO,GoHkH7B,CpHlHiC,EAAE,CAAC,oBAAH,GAA0B,OAAlC,CAAjB;APwIhB,AKEA,AqC1J0B,A3C0J1B,ADAA,ATDA,AsItBQ,AlGmBH,ACrDO,AGhCC,AoHyCX,ADQE,ECRF,CxHsCS,AI/EP,C8FkEI,CsBzBH,CAAC,EtByBM,AqBjBJ,CtGlHuB,AsGkHtB,ErBiBM,AjGlCE,AuHSf,CtByBc,CjFnImB,CAAT,AuG0GZ,CtByBK,CsBzBH,CAAC,ADQb,CtGlHoC,AhBiG5B,CgBjGc,AiFmIX,AjGlCU,AsHiBN,EtGlHsB,CiFmIf,CAAX,AjGlCH,EuHSE,CtByBgB,AsBzBJ,ItByBlB,MsBzBM,CAAuB,GAAvB,EAA4B,UAAS,IAAT,EAAe,IAAf,EAAmB;AjJ+C7D,AKEA,AqC3J2C,A3C2J3C,ADAA,ATDA,AsItBQ,AjGlCC,AnBhFO,AsByDZ,AiGjCO,AmBiEP,ADQE,EnHxCF,AiGjCO,EH0FH,CjGrDkB,CsHoCpB,ErBiBM,A9FzDR,CAAA,Ca3E2C,AsGmHrC,CtGnHsC,AiFoIjC,AG1FJ,CpF1CsC,AiFoIjC,ApHlHI,AuHwBT,CkByEE,CzIjGG,CoHkHG,CpHjHH,CyIgGC,ErBiBF,AqBjBI,CAAC,ClBzET,CH0Fe,AG1Ff,CH0FI,A9FzDX,CAAI,Ea3EuC,AiFoIjB,CjFpIkC,AoF0CrD,CpF1CoC,AsGmH9B,CtGnH0B,AsGmHd,CrBiBrB,AG1FJ,CpF1C8D,Eb2E1D,CAAA,EmHwCS,CAAJ,CAAyB,IlBzElC,AkByES,CnHxCT,AmHwCE,EnHxCE,KAAJ,EAAO;A7B+EX,AKEA,AqC5JoE,A3C4JpE,ADAA,ATDA,AsIrBQ,ApHlHY,AuHwBZ,AmBgEJ,ADOyC,IrBmBrC,AsB1BJ,CtB0BK,GjFtI2D,AiFsIxD,AG1FE,AmBgEN,CvG5G6D,AuG4G5D,CvG5G6D,CAAD,AoF4CpD,CpF5CmD,EnCoB1C,AuHwBN,CpF5CuD,CAAC,AiFsIxD,CjFtIyD,AiFsIxD,AsB1BjB,CvG5GwE,AiFsIxD,AG1FI,CpF5C4C,AiFsI5D,CsB1BY,IAAI,C1IxFa,C0IwFX,CnBhEN,AmBgEO,C1IxFa,CuHwBhC,CvHxBkC,CAAC,G0IwFnB,CAAW,IAAf,CAAoB,G1IxFA,CAAgB,M0IwFP,IAAT,EAAe,Q1IxFf,CAApB,A0IwFoB,EAA0B,GAA1B,EAA6B;AjJ+CrE,AKEA,AqC7J+E,A3C6J/E,ADAA,ATDA,AsIrBQ,AlIRR,AqIjFQ,AmB+DF,ADOD,IrBmBG,AlIRI,AqIjFJ,CHyFC,EGzFE,CHyFC,AGzFA,KAAJ,AmB+DK,CxJkBb,EkIQoB,AGzFA,CHyFC,AsB1BJ,CtB0BG,CAAZ,AsB1BW,CAAC,CnB/DK,KAAjB,EmB+DS,CAAY,mBAAhB,CAAoC,IAAI,OAAJ,CAAY,UAAS,OAAT,EAAgB;AjJ+C7E,AKEA,AqC9JgF,A3C8JhF,ADAA,ATDA,AsIrBQ,ApHlHY,AuHyBZ,AmB+DA,ItB0BA,AGzFA,GAAG,CHyFC,AGzFA,AmB+DJ,GtB0BO,CAAC,CGzFR,CvHzBgB,CoHkHL,CGzFC,CmB+DH,EtB0BF,CsB1BK,CnB/DK,CHyFC,AsB1BJ,CtB0BP,AsB1BQ,E1IxFH,CoHkHU,AGzFtB,AmB+DY,C1IvFA,A0IuFO,GtB0BnB,MsB1BY,CAAiB,SAAjB,CAAZ;AjJ+CR,AKEA,AqC/JkF,A3C+JlF,ADAA,ATDA,AsIrBQ,AjGnCA,AnB9EgB,AuHwBhB,AmB+DA,ADMJ,GtGvHA,CiF2II,AGzFA,GAAG,CHyFC,AjGnCA,AoGtDA,AmB+DJ,ADME,GrBoBK,AsB1BJ,CtB0BK,ApHjHQ,CmB8EP,CuHSH,ADME,CrBoBG,AGzFX,CmB+DQ,CAAC,ADME,ClBrEG,CHyFP,CsB1BD,CAAO,ADME,CrBoBG,CAAX,AjGnCP,AnB9E2B,AuHwBR,AkBqEF,CzI7FW,AyI6FV,CtHdlB,CiGkCsB,IAAtB,AGzFA,AmB+DM,CAAiB,ADMR,CAAW,ECNpB,C1IvFU,CyI6FL,CAAoB,ECNA,CDMpB,CCNX,ADMJ;AhJyCJ,AKEA,ANAA,ADAA,ATDA,AsIrBQ,AlGiBG,ACnDC,AnB/ES,AdsGrB,AqI9EQ,AmB+DA,ADMJ,CvJSJ,CgC4BW,EkGjBH,AGzFA,GAAG,CHyFC,AlGiBD,AqG1GC,AmB+DJ,CxH2CG,EkGjBI,AjGlCE,AjCuBL,AuJTD,CrBoBK,EGzFR,CHyFW,AjGlCP,AuHQJ,ADMO,CCNP,ADMQ,ClBrEK,CrG0GV,ACnDa,CiGkCT,AlGiBJ,CuHrCI,CvJSf,CkIW0B,AjGlCd,AoGvDc,AkBqEJ,CrBoBP,AlIXO,GkIWQ,AlGiBnB,EqG1GH,AkBqEO,CvHqCX,AuHrCA,CrBoBI,EsB1BA,CAAiB,QxH2CrB,CwH3C8B,IAAI,cAAY,SAAS,CAAC,CAAtB,GAAuB,aAArD,EAAoE,IAApE,CAAyE,UAAS,OAAT,EAAgB;AjJ+CjG,AKEA,AqChKI,A3CgKJ,ADAA,ATDA,AsIrBQ,AlGkBA,ACpDC,AnB/EQ,AdsGb,AqI9EI,AmB+DE,ADMP,EvJSC,CuJfF,CrB0BM,AGzFA,GAAG,CHyFC,AGzFA,CpFjDD,AjB4JE,AIlFT,E8FgEW,CAAC,AlIXZ,CAAA,CwJfY,CtB0BG,AGzFX,GrG2GA,AqG3Gc,CHyFP,CsB1BO,CpHtClB,Ca1EoB,AiF0IE,CjF1ID,AiF0IV,AlIXX,AqI9EuB,AmB+DF,CvGhHD,AjD+HpB,EiD/HwB,AiF0IE,CjF1IN,AuGgHK,CvGhHzB,EiF0II,AGzFA,ErI8EJ,CAAA,AwJfqB,CAAW,ExJehC,CAAA,CAAA,GAAA,AwJfqB,CAAf,OxJeN;AOgCJ,AKEA,AqChKC,A3CgKD,ADAA,ATDA,AsIpBQ,AlGiBA,AhC7BJ,AoCpDI,AiGzBA,AmB8DE,CvGrHV,CjDoII,OkIYS,AlGiBA,CwH5CH,CnB9DK,CrI6EX,CkIYI,AlIZJ,AoCpDW,CJiFP,AqG1GA,EHyFY,AsB3BJ,CxH4CK,AwH5CJ,CpHrCG,CAAZ,C8FgEA,ClGiBA,EhC7BJ,AwJfM,CxJeN,EwJfoB,CAAd,IxJeN,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AOgCJ,AKEA,ANAA,ADAA,ATDA,AsIpBQ,AlGiBA,ACpDA,AnB/EQ,AdsGZ,AoCpDC,AiGzBA,AmB8DK,ADKR,EvJUE,AuJVF,ClB9ES,EjGiCA,GtB/CK,CoHkHH,AlGiBA,AuHvCJ,CzI5FS,A0IuFR,ADKA,CtHbK,CjCuBX,CkIYI,ApHlHa,AdsGjB,CgC6BI,AwH5CM,CAAC,CtB2BK,ClGiBC,AlBnIL,EmB+ER,CiGmCA,ClGiBA,AwH5CE,ADKD,CAAP,CvJUE,CAAA,AwJfoB,CDKC,IAAvB,CCLQ,KxJeN,CAAA,GAAA,CAAA,CAAA,GAAA,WAAA;AOgCJ,AKEA,AqChKA,A3CgKA,ADAA,ATDA,AsIpBQ,AlGiBH,ACpDA,AnB9EW,AdqGZ,AwJfM,ADKR,EvJUE,CgCwBO,AC5EP,MgB3EY,AiF2IH,AqBtBJ,CCLC,ExJeN,CkIYI,AlIZJ,CwJfU,C1ItFS,A0IsFR,CtB2BK,AqBtBlB,EtGrHF,CAA0B,CAA1B,AiF2IQ,C9FpEG,AoHyCD,CvGhHmB,AnC0Bb,A0IsFM,CvGhHtB,AjD+HI,CAAA,CiD/H4B,GuGgHtB,CAAmB,GAAnB,CAAuB,GxJe7B,AwJfM,CxJeN,GAAA,CAAA,CAAA,GAAA,YAAA;AOgCJ,AKEA,AqChKI,A3CgKJ,ADAA,ATDA,AsIpBQ,ApHjHK,AdqGT,AwJfM,ADKT,EtGrHG,AjD+HA,KcjIQ,CA6BA,CoHgHC,CsB3BH,ExJeN,CkIYI,AlIZJ,CwJfU,CvGhHG,AnC2BE,A0IqFJ,CvGhHG,AiF2IE,ApHhHR,CmC3BK,CnC4BL,CmC5BS,CAAJ,AiF2IT,CjF3IJ,AuGgHM,CAAY,CxJelB,AwJfM,CxJeN,EwJfsB,MAAM,CAAC,ExJe7B,CAAA,AwJfgC,CAAC,CAAD,CxJehC,AwJf6B,CxJe7B,CAAA,EwJfuC,CxJevC,AwJf4B,CAAtB,UxJeN;AOgCJ,AKEA,ANAA,ADAA,ATDA,AsIpBK,AlGuBD,AlBtIY,AdmGZ,AoC1DO,AoH2CD,ExHkDN,AhCnCA,CkI5BA,A9F9BA,KJ6FA,CAAA,CwHlDM,ExJeN,CAAA,CwJfU,C1IpFS,A0IoFR,K1IpFC,C0IoFN,CAAY,CxHkDlB,AhCnCA,AwJfM,CxHkDK,AhCnCX,EwJfsB,IxHkDX,CAAA,CwHlDiB,CAAC,GAAG,CAAC,CAAD,CAAH,CxHkD7B,AhCnCA,CAAA,CgCmCW,CwHlD4B,CxJevC,AwJf4B,CxJe5B,AwJfM,CxJeN,GgCmCA,AhCnCA,EgCmCgB,chCnChB;AOgCJ,AKEA,AqCjKI,A3CiKJ,ADAA,ATDA,AkBnIa,AdmGT,AoCjDA,AoHkCM,ADPV,EvJsBI,AoCjDA,KmH2BJ,CnH3BI,AmH2BJ,CnH3BI,CoHkCM,CvGjHG,CjDgIT,CiDhIA,AjDgIA,CwJfU,CAAC,CvGjHG,EsG0GlB,GAAA,EvJsBI,AoCjDA,CpCiDA,AoCjDI,AoHkCE,GAAiB,IDP3B,EnH3BQ,AmHsCR,CnHtCQ,EoHkCE,ExJeN,CAAA,GAAA,CAAA,AoCjDA,CpCiDA,CoCjDI,EpCiDJ,MoCjDA,EAAU,MpCiDV;AOgCJ,AKEA,AqClKoB,A3CkKpB,ADAA,ATDA,AkBnIS,AdmGR,AIFG,AoJbM,CxJOV,CIMI,CJNQ,EcnIQ,EAAZ,EmCUiB,CuGkHf,GxJOY,GIMJ,CoJbD,CpJaG,E6C/HA,GAAmB,CAAnB,ejDyHR,UAAU,GAAA,EAAA,CAAtB;AOwCA,AKEA,AqCnK2C,A3CmK3C,ADAA,ATDA,AkBnIK,AViGG,AiI5EG,AmB+DF,ADGF,ElBlEI,EjI4EH,AmJVK,InJUD,CoJtBJ,CpJsBM,CiI5EH,CAAA,EjI2ES,ImJTO,GlBlEhB,AkBkEmB,ClBlEnB,KAAA,GAAP,AkBkES,YlBlET,EkBkE0B,CAAS,GAAT,EAAc,QAAd,EAAsB;AhJ4CpD,AKEA,ANAA,ADAA,ATDA,AQlCQ,AiI3EA,AmB8DD,ADGL,InJUM,GoJ1ByC,CAApC,CnBjDA,AmBiDP,ADgBG,EAAE,CAAC,CnJUK,CiI3ET,CjI2EW,EiI3EE,GjIyED,AmJRX,CAAY,IlBjEb,YkBiEC,CAA6B,EAAE,CAAC,QAAH,CAAY,QAAzC,EAAmD,IAAI,EAAE,CAAC,OAAH,CAAW,IAAf,CAAoB,UAAS,IAAT,EAAa;AhJ4C7F,AKEA,AqCpKI,A3CoKJ,ADAA,ATDA,AkBnII,AViGI,AiI3EA,AmB8DH,ADGD,EtGvHA,CAAC,CAAC,A7CiIE,CoJ5BY,CAAhB,EDkBI,CzIvFG,AuHsBE,IpFtDT,CoFsDI,CjI2EW,AmJVJ,CtGvHG,CAAC,A7CiIE,AiI3EA,CvHtBjB,AuHsBI,AkBiEA,ItGvHgB,A7C8HJ,CmJPG,GtGvHL,GAAa,IsGuH3B,EtGvHiC,AsGuHF,CtGvHG,MAAP,CAAc,CAAd,CAAb,IAAiC,EAAE,CAAC,SAAH,GAAe,CAAC,CAAC,SAAjB,EAA4B,IAAI,EAAJ,EAA7D,CAAd;A1CmKJ,AKEA,AqCpKC,A3CoKD,ADAA,ATDA,AqCxDI,AnB3EH,AViGO,AiI3EA,AmB8DJ,ADGE,EtHZF,E7BsBI,AoJbJ,IAAI,CnB9DK,AmB8DJ,CAAL,GAAS,ADGA,EnJUM,C6BtBf,AoGrDI,AkBiEQ,CtHZZ,A7BsBiB,AmJVJ,ElBjEM,CmB8DV,CAAA,ADGG,CnJMI,AmJNd,ItHZF,CAAA,MoGrD2B,CpGqD3B,CuHSS,CAAe,CvHTxB,CoGrDI,QmB8D6B,CvHTzB,GuHSgB,EAAa,GvHTrC,EAAgC;A1BwDpC,AKEA,ANAA,ADAA,ATDA,AqCvDQ,AlBxIR,AX6JQ,AiI3EA,AmB8DF,ADGD,InJUG,CmJZJ,IvH0CA,ACnDS,AGhCT,AiGtBS,EkBiEF,ECHE,EnB9DL,AmB8DO,CAAC,CvHRR,CoGtDc,CjI2EC,AoJbV,CvHRW,AuHQJ,CxH2ChB,A5B9BqB,AgCrDrB,CiGtBI,MpGsDA,C7BgBY,AoJRP,CAAiB,MAAM,CAAC,IAAI,CAAC,MAAL,CAAY,CAAb,EAAgB,IAAhB,CAAvB,CAAP;AjJ+CN,AKEA,ANAA,ADAA,ATDA,AoCHQ,A5B/BA,AgCpDA,AiGvBA,AmB8DH,ADGC,InJUE,CoJfK,EAEN,EnB9DM,IrG0GE,AInFA,AmH0CF,EAAE,ClBjEP,AkBiEQ,CCHA,CxH4CI,AInFA,CAAL,AiGvBQ,AkBiEV,CAAO,CnJUK,AoJblB,CpHvCiB,CJmFT,A5B/BY,AoJbL,CxH4CI,AqG1GlB,EmB8DD,CpJOa,AgC9CS,CoHuCJ,CDGZ,CvHyCE,AuHzCe,GnH1CtB,CmH0C0B,CvHyCG,AuHzCF,CvHyC3B,EuHzC0B,CAAJ,CAAU,QAAV,CAAjB,CAAP;AhJ4CN,AKEA,ANAA,ADAA,ATDA,AoCHK,ACrDG,A7BsBA,AgCpDH,AiGvBA,AmB8DC,ADGD,GlBxEM,CjIkFH,C4B4BY,AInFN,GHiCF,EuHSF,IAAI,CAAC,CvHTK,CAAC,IAAb,EACA,E7BqBqB,EAAE,AoJbzB,EAAuB,GpJMT;AGyCpB,AKEA,ANAA,ADAA,ATDA,AqCvDY,A7BqBJ,AoJbA,ADGL,GANyD,CnJgBpD,AmJhBC,EtHLG,AsHWN,ECHE,CpJaK,CmJVH,CnJUK,CmJVH,CAAC,CtHXO,A7BaA,AoJLN,CvHRO,AuHQN,IvHRH,AuHQJ,CvHRkB,AuHQN,ADGV,CvHqCU,AInFN,AmH8CO,IAAf,CAAoB,EtHXd,GAAyB,AuHQ7B,CAAwB,GvHRpB,CuHQwB,ADGD,CCHE,GDGX,EAAe,GAAf,EAAkB,ECHZ,CAAkB,KAA1C,EAAiD;AjJ+CzD,AKEA,ANAA,ADAA,ATDA,AqCvDS,A7BqBD,AoJdkD,ADItD,InJUI,ImJVA,EnJUM,AoJd4C,CAAC,CpJc3C,CoJd6C,EpJKzC,AmJDL,ICJoD,CAAC,GAAG,ADI/D,CCJgE,CAAL,CAAV,EDI7B,UAAxB,EAAoC;AhJ4CxC,AKEA,ANAA,ADAA,ATDA,AsIrBI,AlGYgB,A5BzBZ,AgC1DM,AoH2C8D,ADKtE,ErBuBF,ClGYA,AInFA,ChC0DI,EmJVF,ErBuBF,CAAA,C9HbU,AoJf8D,CAAC,CpJe7D,CoJf+D,CDKjE,CAAC,ECLoE,CtB4B/E,AsB5BgF,CtB4BhF,AqBvBU,EAAO,GAAP,CAAR,ErBuBF,GAAA,AsB5B2E,CAAkB,StB4BpF,SAAT,EAA+B,EAA/B,EAA2C,EAA3C,EAAuD,EAAvD,EAAmE,EAAnE,EAA6E;A3HqBjF,AKEA,ANAA,ADAA,ATDA,AsIpBQ,AlGqBJ,ACzDI,A7BWY,AgCnChB,AoH8BqD,ADMpD,EvH6CD,AIjFA,ChC5D+B,EmJ8F/B,GvH+CA,AIjFA,C8F4DS,AlGqBT,ACzDS,AGxBT,AoH8BI,EDMG,EtHZH,GAAY,OiGoCZ,AlGqBJ,AIjFA,C8F4DwB,AlGqBb,ACzDa,AGxBb,CHwBc,IAArB,CDyDO,CAAA,EkGrBsB,A9F5DjC,C8F4DkC,C9F5DvB,KJiFX,EAAW,AIjFX,EAAgB,I8F4DZ,AlGqBJ,EkGrBkD,AlGqBnC,EkGrBX,EAAkD,EAAlD,EAAsD,EAAtD,EAA0D,EAA1D;A3HoBR,AKEA,ANAA,ADAA,ATDA,AsIpBK,AjGpCG,AuHMD,ADMD,GrBqBF,CjGjCI,EsHYF,CCRA,GDQI,CAAC,CtHZK,CAAC,AuHMJ,CDMH,CAAJ,CAAU,CtHZR,GAAgB,IAAhB,AsHYF,IAAsB,GAAG,CAAC,CAA1B;AhJ4CN,AKEA,ANAA,ADAA,ATDA,AqCxDK,AoGtDM,AmB4DH,ADMH,ElBlEM,CpG6CP,KuHeI,GnB5DG,CAAA,AmB4DC,CAAC,MAAL,CAAY,CnB5DT,AmB4DH,CnB5DG,EmB4Da,KnB5Db,CmB4DmB,CAAC,CnB5D3B,EmB4D8B,CAAC,CAAL,CAAtB,OnB5DJ;A9H8GJ,AKEA,ANAA,ADAA,ATDA,AyI7GQ,AmB2DD,ADMJ,GANG,CANG,CAAP,IlBrDW,OAAL,GAAe,IAAf;A9H6GR,AKEA,ANAA,ADAA,ATDA,AyI7GQ,AnF9ER,AsGyIK,ADMJ,CAdM,GrGjIP,CsGiIa,CAAT,GnBnDS,GnF9Eb,GmF8EQ,GAAc,IAAd;A9H6GR,AKEA,ANAA,ADAA,ATDA,AyI7GK,AnF/EL,AsG0II,GnB/DO,CmB+DP,IAAI,CAAC,CAAL,GAAS,OAAA,CAAA,cAAA,CAAe,UAAS,IAAT,EAAa;AjJkDzC,AKEA,ANAA,ADAA,ATDA,AsD7LA,AsG2IM,ADVO,OAAA,CAAA,IrGjIb,CsG2Ia,EAAE,CAAC,GAAH,CAAO,EDVP,GAAc,ICUd,CAAiB,MAAM,CAAC,EDVxB,ECU4B,ADMzC,CCN0C,MAAL,CAAY,CAAb,EAAgB,IAAhB,CAAvB,CAAP;AjJkDN,AKEA,ANAA,ADAA,ATDA,AmBjMA,AfgKA,AqI7EA,AmB4DK,IxJiBO,CwJnBC,EAEN,ExH4CH,AjB3LY,AsHmFhB,ErI6EA,KehKA,CAAwB,AyI+IR,CnB5DhB,EtHnFA,CiB2LI,AwH5CG,CzI/I8B,CyI+If,EzI/ItB,CyI+IO,CzI/IoE,CyI+IlD;AjJkDzB,AKEA,ANAA,ADAA,ATDA,AoCLQ,AjB7L6B,AsHmFpC,AmB6DK,ADKC,ClBvJP,EAAA,CkBuJa,ExIrJwB,GAAA,CyIgJ3B,GxH6CK,CjB7LsB,AyIgJvB,CAAC,GxH6CK,CjB7LiB,AwIqJT,CxIrJS,EAAA,AwIqJN,CvHwCvB,IwH7CF,EAAuB,EDKhB,eAAkB,CAAS,GAAT,EAAc,GAAd,EAAmB,UAAnB,EAA+B,IAA/B,EAAmC;AhJ6ClE,AKEA,AqC/MA,A3C+MA,ADAA,ATDA,AoCLK,AjB9LgC,AyIiJ7B,ADKN,IxItJmC,CiB2LlB,EjB3LkB,CyIiJ7B,CpHvCJ,AmH4CK,CxItJ4B,EAAA,CwIsJxB,CCLC,CAAC,ADKA,CAAC,GCLR,CAAY,CpHvChB,EmH4CS,CAAW,IAAf,CAAoB,ECLrB,CAAwB,IAAI,CAAC,EDKC,IAAT,EAAa,ICLV,CAAkB,KAA1C,EAAiD;AjJkDzD,AKEA,ANAA,ADAA,ATDA,AmBpM2E,AfgK3E,AoCpDQ,AoHqCkD,ADKd,CvJU5C,OuJV4C,ECLc,CxJe9C,AwJf+C,CDKf,CnH1C7B,AoHqC8C,EDKjB,EnH1CzB,AoHqC8C,ADKrB,CvJU5C,AwJfkE,ExJe/C,CgC2BA,KI/EJ,CAAc,CAAd,EAAiB,AoHqC6B,CpHrC9C,AoHqCgE,CAAtB,CpHrCtB,CAApB,EAAuB,CAAvB,CAAP;A7BwFR,AKEA,ANAA,ADAA,ATDA,AIpCI,AIEA,AgCtDC,Ac7FD,AsGiI8E,ExJgB9E,AIEA,GgCzDgB,IpCuDhB,AIEO,CJFP,AwJhB8E,CpJkBrE,A8CnJT,AsGiI+E,CpJnGhD,CoJmGkD,IxJgBjF,CAAA,CkDjJA,AsGiIuF,CtGjI3E,AsGiI4E,GAAG,CxJgB3F,AwJhB4F,CxJgB5F,AkDjJA,AsGiIuF,EtGjIhE,ClDiJvB,IAAA,CAAA,AkDjJA,EAAiC,ClDiJjC,MAAA;AOoCJ,AKEA,ANAA,ADAA,ATDA,AoCXmB,AC9Cf,AlB3IA,AfgKA,AkDlJY,AsGiIyC,EvHJrD,AlB3IA,AfgKA,CgCyBA,EjBzLG,CAAC,CAAD,CAAH,AmCcY,ClDkJZ,AwJjBI,ADKoC,CvJYxC,CehKS,CAAE,CmCcC,AqGsI4B,ExIpJ1B,AwIoJ0B,CtHTxC,CAAA,AjCqBA,CAAA,AkDlJY,AqGsI4B,CxIpJtB,EAAR,AqBwGM,AmH4CwB,EvJYxC,AkDlJY,AqGsI4B,CxIpJhB,AfgKxB,AkDlJY,EjB6HZ,AiB7HY,AqGsI4B,CtHTxC,AjCqBA,CehKS,GfgKT,CehKgC,AfgKhC,EiCrBA,ClB3IA,AfgKA,AuJZwC,CAAA,CtHTxC,GjCqBA,IuJZwC,EAAA,CtHThC,GsHSuC,CtHT/C,EAAoB;A1ByDxB,AKEA,ANAA,ADAA,ATDA,AsIrBI,AlGaJ,AClDY,AlB1IR,AfgKA,AkDnJY,AsGkIT,ADIqC,ErB4BxC,AnH/KA,AfgKA,GehKG,CAAC,AmCaQ,AqGsI4B,CxInJrC,AyI6ID,CtBkCF,AjGrCQ,AlB1IR,CmH+KA,AlGaJ,AhC5BI,CAAA,AuJbwC,CxInJ/B,AmCaG,AqGsI4B,CtHThC,AlB1IG,CyI+IF,ADI+B,CrGtI5B,ClB+KhB,AjB5LkB,AmCaF,CqGsI4B,CtHThC,AjCsBR,AuJbwC,CrB4BxC,AlIfA,AuJbwC,CrB4BxC,AnH/KkB,CAAR,CwImJ8B,CtHThC,CAAA,AlB1Ie,EkB0If,AjCsBR,CAAA,CehKS,EfgKT,CuJbwC,CxInJT,AwImJS,ErB4BxC,AlIfA,AuJbwC,CxInJxC,AfgKA,AuJbwC,ErB4BxC,ClIfA,OAAA,EkIee,MAAf,EAA+B,EAA/B,EAA2C,EAA3C,EAAuD,EAAvD,EAAmE,EAAnE,EAA6E;A3HqBjF,AKEA,ANAA,ADAA,ATDA,AsIpBQ,AlGWP,AClDW,AlBzIR,AfgKA,AoC1DgB,Ac1FK,AsGmIjB,CxHjHR,CjB9BI,AfgKA,CgClIJ,AIwEI,ErBtGG,CkByIK,AlBzIJ,CAAD,CmHgLO,AnHhLV,AyI+II,CtBiCO,AlIhBX,CiCvBQ,AjCuBR,CehKS,CmHgLK,AnHhLJ,AyI+IF,CvHNA,AuHMC,EzI/II,EfgKb,CkIgBoB,AjGvCZ,AlBzIQ,AfgKhB,CkIgBqB,AsBjCjB,CtBiCA,AsBjCY,CAAZ,CzI/IK,EyI+IW,EzI/II,GAAxB,AfgKA,CAAA,AwJjB0B,CAAC,ExJiB3B,CwJjB8B,CAAC,CAAL,CxJiB1B,AwJjBI,CxJiBJ,GAAA,WAAA;AOoCJ,AKEA,ANAA,ADAA,ATDA,AsIpBQ,AjGxCgB,AlBvIpB,Af+JA,AwJjBG,ExJiBH,MkIgBU,CAAC,AnH/KJ,Af+JP,CAAA,EkIgBc,AnH/Kd,Kf+JA,CkIgBoB,AlIhBpB,CkIgBqB,CAAjB,elIhBJ,CAAA,GAAA,IAAA,CAAA,GAAA,iBAAA;AOoCJ,AKEA,ANAA,ADAA,ATDA,AsIpBQ,AnH/KP,Af+JG,AkDtJuB,AsGqItB,ADED,EvJeA,GwJzBS,CAAT,EtByCU,AhFtKa,CgFsKZ,AlIhBX,CAAA,CuJfO,CrB+BO,CqB/BL,CrGvIc,AqGuIb,GvJeV,CkIgBoB,AlIhBpB,CkIgBqB,AhFtKE,CgFsKnB,EqB/BG,CAAY,CrGvII,CAAA,EAAA,QlDsJvB,CAAA,GAAA,AuJfO,CAA6B,EAAE,CvJetC,AuJfuC,CvJevC,GAAA,IuJfoC,CAAY,UAAZ,CAAuB,CvJe3D,EuJfoC,EAA4B,UAAS,IAAT,EAAe,IAAf,EAAmB;AhJmDvF,AKEA,ANAA,ADAA,ATDA,AsIpBQ,AlGUR,AClDQ,AjCwBJ,AkDvJuB,AsGsIvB,ADEE,EvJeF,EwJjBA,ExH2CE,AkBjLqB,AqGwIrB,CvHyCC,CkGVO,AsBjCN,CtBiCO,AjGxCF,AjCwBT,AwJjBK,CxJiBL,AuJfM,CAAC,CrB+BO,AhFvKS,EsGsIvB,CtGtIuB,CAAA,ClDuJvB,AwJjBa,CtBiCO,AlIhBpB,CkIgBqB,AjGxCjB,AsHSF,CrB+BE,EjGxCkB,AsHSJ,CvHyCtB,CAAwB,AwH3CP,CAAA,CvHPT,AsHSkB,EAAE,CAAC,CvHyCC,CAAC,EhC1B3B,CAAA,EuJfsB,CvJetB,AuJfiC,ECFpB,CxH2CjB,AwH3CgC,CDEV,CvHyCoB,AhC1BtC,AuJfsC,CvJetC,GAAA,EwJjBa,EAAyB,EDES,KCFlC,CAAb,GxJiBA,AuJfsC,EAAkB;AhJmD5D,AKEA,ANAA,ADAA,ATDA,AsIpBQ,AjGxCA,AjCwBP,AkDxJoC,AsGuIjC,ADEI,CvJOR,EAAY,CwJTR,ItBiCU,AsBjCN,ADEA,CtHTK,AuHOJ,CtBiCO,AlIxBG,CiChBX,EiGwCW,CjGxCD,CuHOd,EDEa,CtHTT,AuHOU,ADEA,CrB+BO,CAAC,EAAlB,CqB/BA,ECFU,CAAA,ADEQ,IAAI,GvJOlB,CuJPsB,CAAC,KvJOhB,AwJTD,CAAe,ExJSd,AuJPO,EvJOP,AuJPX,CvJOR,GwJTkB,EAAyB,QAAzB,CAAd;AjJqDJ,AKEA,ANAA,ADAA,ATDA,AsIpBQ,AjGxCA,AuHOJ,ADEI,ICFJ,ItBiCU,AsBjCN,CvHPK,AuHOJ,CtBiCO,EqB/BF,CrB+BK,AsBjCf,GvHPI,AuHOQ,CDEG,ErB+BM,AjGxCF,CiGwCG,AqB/BJ,ErB+Bd,CjGxCA,AuHOQ,CvHXQ,AuHWR,KDEe,CAAC,KAAxB,GCFQ,CAAe,UAAS,IAAT,EAAa;AjJqD5C,AKEA,ANAA,ADAA,ATDA,AsInBQ,AsBlCF,ADEE,QrBgCI,AqBhCJ,IrBgCQ,AqBhCJ,CCFC,ADED,ErBgCO,AsBlCJ,CAAC,EDER,CCFK,ADED,CrBgCY,AsBlCJ,ItBkCZ,AqBhCI,CAAJ,EAAI,ECFC,CAAiB,CAAC,IAAI,CAAC,IDExB,CAAA,CCFmB,ADElB,CCF8B,GDE/B,ECFkB,ADEX,ECF+B,GDEtC,CCF0C,ADE1C,CCF2C,CDE1B,IAAjB,CCFsC,ADE1C,CCFsD,MAAhC,CAAjB,CAAP;AjJqDN,AKEA,ANAA,ADAA,ATDA,AsInBQ,AjGxCA,AGhCJ,AoHsCC,ADEG,EnHxCJ,GoHoCY,EAET,CtBkCK,AjGxCA,GGhCR,C8FwEY,A9FxEZ,AmHwCU,CtHRG,EiGwCE,EsBlCF,GtBkCO,CjGxChB,AGhCJ,AoHsCG,ADEgB,CnHxCnB,CHiCI,AuHKe,CtBkCf,AqBhCkB,ECFnB,CpHtCH,CoHsCsB,EpHtCtB,GmHwC+B,CAAC,KAAV,CAAgB,EnHxCtC,GmHwCsB,GAAwB,CAA1C;AhJmDR,AKEA,ANAA,ADAA,ATDA,AsInBQ,AjGvCI,A7BwBR,AgCxDI,AoHqCF,ADEE,EnJiBJ,M8HeQ,EsBlCA,CvHLK,AGhCF,C8FuEC,AqBhCF,CnJiBC,AoJnBA,EtBkCI,A9HfF,AgCxDE,CoHqCD,EAAE,CvHLR,AuHKS,CtBkCG,AjGvCE,A7BwBJ,EAhIa,AoJ6GjB,ADEM,CCFC,CtBkCjB,AjGvCI,AGhCG,CAAc,AmHuCF,EtHPM,GGhCC,CAAnB,CHgCuB,AuHKpB,CpHrCmB,AoHqCF,CDEC,CAAC,CtHPzB,AuHKM,CAAZ,CpHrCoC,CAA3B,CmHuCY,CnHvCkB,AmHuCF,KnHvCO,CmHuCvB,GAAyB,CnHvCrC,AmHuCP,EnHvCiD,KAAK,MAA/C,CAAP;A7B0FR,AKEA,ANAA,ADAA,ATDA,AsInBQ,AjGvCC,AGhCJ,AoHqCQ,ADEL,GnH1CJ,K8F0EQ,EsBlCC,EtBkCG,AqBhCF,CAAC,ErBgCI,AsBlCD,CDEA,ECFY,EtBkCN,CsBlCS,CAAA,CAAA,CtBkCzB,AsBlCK,CDEc,CAAC,KAAV,CAAgB,YAAhB,CAA6B,CAA7B,EAAgC,KAAhC,CAAsC,CAAhD;AhJmDR,AKEA,ANAA,ADAA,ATDA,AsIlBQ,AlGQJ,AwH5CS,ADGL,EvHyCJ,MkGRQ,CAAC,ClGQD,AwH5CQ,EtBoCH,AlGQH,AuHzCA,CrBiCI,AqBjCH,GrBiCM,AsBpCK,ADGR,ErBiCF,CsBpCc,EtBoCF,CAAC,AsBpCI,CAAA,CAAA,CtBoCD,AsBpCnB,ADGc,CAAC,CrBiCZ,GAAsB,CqBjCpB,CrBiCV,AqBjC0B,YAAhB,CAA6B,CAA7B,EAAgC,KAAhC,CAAsC,CAAhD;AhJmDR,AKEA,ANAA,ADAA,ATDA,AsIlBQ,AlGOQ,AC/CR,AuHIF,IxH2CU,EwH3CV,EtBoCM,AjGxCA,CiGwCC,AlGOQ,CwH3CX,CxH2Ca,AwH3CZ,CtBoCM,CAAC,AjGxCD,GiGwCI,ClGOQ,AC/CrB,AuHIF,CtBoCU,AlGOc,AwH3CZ,CvHHV,EiGuCoB,CAAC,CsBpCvB,EtBoC0B,CsBpCN,CtBoCV,AlGOO,CAAiB,EkGPF,CsBpChC,CtBoCE;A3HkBR,AKEA,ANAA,ADAA,ATDA,AsIjBQ,AlGKM,AC7CF,AiBpIJ,AsGuIF,ADEE,GvHiCkC,CkGElC,EsBrCF,EtBqCM,ChF5KC,CsGuIH,CtBqCK,AjGxCE,AuHGN,CtBqCK,AqBnCJ,GrBmCO,AjGxCP,AiBpIJ,CjBoIc,CuHGhB,CtGvIgB,AsGuIJ,CtBqCH,EqBnCM,CrBmCK,AqBnCJ,CrBmCP,AhF5KP,CjBoII,AuHGN,EtBqCwB,CjGxCG,AuHGN,ADEf,CAAgB,ErBmCpB,EjGxC8B,CuHGhC,GDEE,EAA8B,EtHL1B;A1ByDZ,AKEA,ANAA,ADAA,ATDA,AsIjBQ,AjGxCC,AuHGH,ADEI,IrBmCF,CjGvDgB,CuHkBlB,EtBqCM,EsBrCF,ADEA,CrBmCK,AsBrCJ,CtBqCK,GAAG,IAAJ,AsBrCL,ADES,CCFb,ADEc,CCFC,CtBqCK,CAAX,EqBnCL,CrBmCoB,AsBrCxB,ADEoB,IrBmClB,AsBrCsB,CAAC,ADErB,CAAsB,GAAtB,CCFoB,ADEM,ECFE,MAAR,CAAxB,ADEuC,GAAG,CAAtC,EAAyC,UAAU,GAAG,CAAtD;AhJoDV,AKEA,ANAA,ADAA,ATDA,AsIjBQ,AsBrCH,ADEK,IrBmCF,CsB7CQ,CAAZ,EtB6CQ,EqBnCF,CrBmCK,CAAC,GAAG,IAAJ,AqBnCI,CAAC,ErBmCM,CAAX,EqBnCL,CrBmCoB,AqBnCJ,IrBmClB,IqBnCE,CAAyB,GAAzB,CAA6B,SAAS,GAAG,CAAzC,EAA4C,SAAS,GAAG,CAAxD;AhJoDV,AKEA,AqCnNA,A3CmNA,ADAA,ATDA,AsIjBQ,AnHnLR,AyI8II,ADEK,ItG9JL,AiFiMI,AsBrCJ,ItBqCQ,AsBrCJ,CzI9IQ,AyI8IP,ADDD,ErBsCO,CAAC,AsBrCZ,GtBqCe,AsBrCJ,ADEA,EtG9JE,EiFiMF,AnHnLf,CkCdoB,AlCcO,EmHmLD,AsBrCX,CtBqCA,AnHnLf,AyI8Ie,EzI9IuB,CmHmLR,IjFjMD,AiFiMrB,CjFjMY,EAAY,CAAZ,EAAe,CuG4JpB,CAAe,UAAS,IAAT,EAAa;AjJsD3C,AKEA,AqCnNI,A3CmNJ,ADAA,ATDA,AsIhBQ,AjGzCA,AlB1IJ,AyI6IE,ADEI,EtG9JN,EiFkMI,CAAC,CnHnLD,EmHmLK,AjGzCC,CiGyCA,CqBpCJ,ErBoCO,CsBtCJ,CtBsCD,CjFlMK,AlCeA,AyI6IF,CvHHO,AuHGN,CtBsCQ,CjFlMJ,AiFkMK,AnHnLL,CkB0IK,AuHGZ,ADEM,CCFC,ADEA,CrBoCQ,AnHnLL,CAAC,CmHmLZ,CjFlMc,AhByJI,CgBzJH,AsG8JjB,CrBoCwB,AqBpCR,ErBoClB,AjGzCA,CAlBgB,AuHqBX,CzI7IO,AyI6IU,CzI7IG,AwI+IvB,CAAsB,CxI/IZ,CAAhB,CwI+IM,CAA0B,CAAC,CCFC,CvG5JlB,AuG4JmB,CAAC,ADEF,GtG7J7B,CuG2JmC,CAAC,IDEnC,ECF8B,ADES,CCFG,ADEF,CCFX,EAAgB,ADEJ,ICFQ,CAAC,KDElD,CCF6C,CAAY,CAA5B,CAAD,EAAiC,IAAjC,CAAzB,CAAP;AjJsDN,AKEA,AqCnNW,A3CmNX,ADAA,ATDA,AsIhBQ,AnHlLJ,AyI4IC,ADEK,ExI9IN,EkChBO,AiFkMH,CAAC,AsBxCM,EAER,CtBsCM,CAAC,CqBpCJ,CxI9IG,CmHkLI,CjFlMG,CiFkMR,AnHlLI,CkChBM,EiFkME,AsBtCP,CtBsCQ,CqBpCN,CAAC,CrBoCQ,AsBtCrB,EtBsCK,AnHlLa,AyI4IF,EDEb,CrBoCwB,AsBtC3B,ADEmB,ErBoClB,AsBtCkB,CzI5IV,CAAgB,CAAhB,EAAmB,CwI8IzB,CAAyB,ExI9II,CwI8I7B,CAA6B,CAAC,GAAC,GxI9IO,CAAC,KwI8IvC,CxI9IM,CwI8IoC,CAAC,ExI9IM,CwI8IL,QxI9IlD,EwI8IM;AhJoDV,AKEA,AqCpNS,A3CoNT,ADAA,ATDA,AsIhBQ,AjGxCA,AlBzIJ,AqBsGA,AoHqCE,ADEG,EnHvCL,E8F2EI,IAAI,CjGxCC,AlBzIF,CyI2IC,CtBsCG,A9F3EX,C8F2EY,A9F3EZ,CHmCI,AuHEO,EvG7JuB,AiFmMnB,AnHjLJ,CkByIK,AuHEF,GtBsCH,CjFnMN,AhB2Je,CGnCpB,C8F2EsB,A9F3EtB,C8F2EW,AjGxCY,CgB3JoB,AlCkB3C,AyI2IsB,CAAC,CtBsCG,CjGxCN,AuHEK,CAAC,EtBsCtB,AjGxC0B,AGnC9B,CoHqCuB,CAAO,CpHrC9B,CaxHqD,CAAV,EAAa,CAAb,AhB2JvC,EgB3JuD,CuG6JpC,CAAiB,CpHrC/B,EoHqCc,CAAD,CAApB,KpHrCF,EAA6B;A7B2FjC,AKEA,AqCrNiE,A3CqNjE,ADAA,ATDA,AsIhBQ,AjGxCA,AlBzIP,AX+JG,AgCxDI,AcnGA,AsGuIK,ADEN,EnJkBH,E6ClL6D,AiFoMzD,CjFpM0D,CAAC,CsGiJ7C,CrBmDV,AqBnDN,CtHWO,AGlCA,AcnGA,CdmGL,AoHoCK,CtBsCE,AsBtCD,CtBsCE,C9F1EC,CoHoCI,CvG9J4C,AiFoM9C,ChF7KX,CjBqIA,AuHEgB,CvG9JuD,AuG8JvD,CvG9JyC,AiFoMlD,AhF7KQ,AsGuIC,CvHFA,A7BsBF,AoJpBT,EtBsCa,A9HlBF,AgCxDE,C8F0EX,A9F1EY,CHkCnB,AGlCA,CcnGA,CgF6KsB,C9HlBD,EA3IM,C8H6J3B;A3HgBR,AKEA,AqCtNmF,A3CsNnF,ADAA,ATDA,AsIhBQ,AlGGJ,AC1CI,AGnCA,AoHmCK,ADGP,EvHuCF,CiBzMgB,CiFsMZ,ClGGD,CuHvCD,CtGhKE,AjBuMC,CkGHG,C9F1EC,CAAL,AoHmCQ,ADGN,CrBoCK,AjGvCA,AuHAE,ADGN,CrBoCK,C9F1EC,CoHmCI,CtBuCF,EjFpMD,AuG6JM,CvG7JhB,AuG6JgB,CtBuCT,AjGvCP,AuHAgB,ADGlB,CtGhKe,AuG6JR,CvG7JL,CiFoMkB,A9F1EA,AmHsCJ,CtGhKE,AiFoMT,A9F1EY,CAAnB,E8F0EsB,GqBpCR,CrBoCd,AqBpCc,cAAA,CAAe,UAAS,SAAT,EAAkB;AhJoDvD,AKEA,AqCtN0B,A3CsN1B,ADAA,ATDA,AsIhBQ,AlGEG,ACzCN,AGnCG,AmHsCA,GtH5BJ,CiGgEI,AlGEG,IkGFC,CjFrMmB,AjBuMf,AI5EH,E8F0EE,AlGEG,CkGFF,CjFrMmB,CAAT,Ab2HlB,C8F0EW,AqBpCJ,EvHsCS,AI5EH,AmHsCJ,CtGjKuB,AjBuMf,AuHtCP,CtGjKQ,AiFqMX,EjFrM0B,AsGiK1B,CrBoCW,AqBpCJ,CrBoCP,GAAe,A9F1EA,CJ4EZ,AI5Ea,CJ4EI,EkGF3B,CqBpCO,CnHtCP,AmHsCwB,SAAS,CAAC,QAA3B,CAAP;AhJoDR,AKEA,AqCvN2C,A3CuN3C,ADAA,ATDA,AsIfQ,AlGAC,AI3ED,AoHkCF,ADIC,IrBqCC,CAAC,EqBvCa,CrBuCT,CAAC,A9F3ED,AmHsCJ,CtGlKsC,AuG8JrC,CvG9JsC,CAAC,AiFuMhC,EAAL,AsBzCE,CpHlCN,AoHkCO,EtByCS,CAAC,A9F3EH,CmHsCH,ErBqCS,EAAhB,GjFvMmC,AiFuMb,CjFvM8B,Ab4HjC,AoHkCzB,CvG9JyC,AiFuMvC,A9F3EwB,AmHsCvB,CtGlKkC,AuG8Jd,CDIC,CtGlKoC,EsGkKzD,CnHtCD,CmHsCyB;AhJoDjC,AKEA,AqCxNoE,A3CwNpE,ADAA,ATDA,AsIfQ,AlGfkC,AC1B1C,AGjCQ,AoHiCA,ADIA,CvHsBR,GkGeQ,CAAC,GjFxM2D,AiFwMvD,AsBzCL,CvG/J6D,AiFwMvD,AjGzCd,CgB/JsE,CAAD,Ab8HtD,Ca9HqD,AiFwMnD,AqBrCL,ErBqCA,AsBzCE,CvG/J6D,Ab8HnE,AoHiCO,CvG/J6D,CAAC,AiFwMrD,CjFxMoD,AiFwMnD,CjFxM2C,AuG+J5D,CAAY,CtByCQ,AqBrCP,CAAC,CrBqCV,AjGzCZ,GiGyCkC,EAA1B,GsBzCA,CAAwB,IAAI,ADI5B,CCJ6B,CDIC,WCJN,CAAkB,KAA1C,EAAiD;AjJwDzD,AKEA,AqCzN+E,A3CyN/E,ADAA,ATDA,AsIfQ,AjG1CP,AjCoBD,AoCpDK,AoHgCqD,ADKhD,CtH9KV,EAAA,AGiII,C8FkFI,AlItBI,IkIsBA,EsB1C8C,ADKhD,CrBqCK,AlItBf,AwJpB2D,CtB0C3C,CsB1C6C,CAAJ,CtB0CtC,IAAJ,EqBrCL,CrBqCgB,AqBrChB,CrBqCK,GAAe,AqBrCpB,CAAK,GrBqCP,KqBrCE,CAAc,SAAS,CAAC,cAAV,CAAyB,KAAvC,EAA8C,GAAG,CAAC,CAAlD;AhJoDV,AKEA,AqC1NgF,A3C0NhF,ADAA,ATDA,AsIfQ,AsB3CwD,ADMvD,IrBqCD,IAAI,CqBvCJ,CCJwD,CtB2CjD,AsB3CkD,CtB2CjD,CsB3CmD,EtB2ChD,AqBrCJ,IrBqCA,GAAW,CAAX,GAAe,IAAtB;A3HeR,AKEA,AqC3NkF,A3C2NlF,ADAA,ATDA,AsIfQ,AsB5CiD,ADO/C,GtGxKN,CiF6MI,IAAI,CsB5CJ,EtB4CO,CAAC,GAAG,IAAJ,GAAW,CAAX,GAAe,IAAtB;A3HeR,AKEA,ANAA,ADAA,ATDA,AsIfQ,AlIzBR,AkDrJQ,AsGkID,ADOG,CvJYV,GkIyBQ,GsB9CF,CtB8CM,ChF9KC,CqGyIH,CrBqCK,AlIzBH,CkIyBI,CsB5CH,EtB4CM,GlIzBnB,AkDrJQ,CgF8KO,AqBrCI,CvJYA,AuJZC,CrGzIK,CgF8KC,CAAX,EqBrCL,CrBqCoB,AhF9KtB,AqGyIkB,IrBqClB,IqBrCE,GAA2B,GAAG,CAAC,CAA/B;AhJoDV,AKEA,AqC5NI,A3C4NJ,ADAA,ATDA,AsIdQ,AlI1BJ,AwJnBI,ADOC,EvJYL,EkI0BI,CAAC,GAAI,AsB7CL,CvGhKG,AiF6MG,AlI1BV,CAAA,EkI0Ba,AsB7CL,CAAC,CtB6CD,GAAY,AlI1BpB,CkI0BqB,AlI1BrB,CwJnBI,CAAY,CtB6CQ,AsB7CpB,CvGhKgB,CAAC,AiF6Mb,CjF7MY,AuGgKA,CAAhB,CvGhKoB,AiF6MM,CjF7MV,CAApB,AiF6MI,ElI1BJ,CAAA,GAAA,IAAA,CAAA,GAAA,YAAA;AOwCJ,AKEA,AqC5NC,A3C4ND,ADAA,ATDA,AsIdQ,AlI1BJ,AwJnBI,ADOD,CtG5KP,CjDwLI,EkI0BI,CAAC,EqB/Ca,CrB+CT,AsB7CL,ADFF,CrB+CQ,AlI1BV,CAAA,EkI0Ba,AsB7CL,CAAC,CtB6CD,GAAY,AlI1BpB,CkI0BqB,AlI1BrB,CwJnBI,CAAY,CtB6CQ,AsB7CpB,EtB6CI,CsB7CY,CAAhB,CtB6C0B,EAA1B,QlI1BJ,CAAA,GAAA,KAAA,CAAA,GAAA,kBAAA;AOwCJ,AKEA,ANAA,ADAA,ATDA,AsIdQ,AlI1BJ,AIMA,AoJzBI,ADOF,EvJYF,AIMA,E8HoBI,EqBtCF,ErBsCM,AsB7CJ,CxJmBJ,CAAA,AuJZM,CrBsCK,A9HpBF,AmJlBF,CrBsCK,AsB7CJ,CpJyBG,AoJzBF,EtB6CM,ElI1Bf,CAAA,AIhJ+B,C8H0KpB,EsB7CH,CtB6Cc,AsB7ClB,CtB6CO,AsB7CQ,GtB6CO,AqBtCxB,ECPE,CDOqB,CrBsCrB,EsB7CwB,CAAC,ADOA,CCPD,CDOG,CvJY/B,AwJnBgC,ADOA,CvJYhC,AwJnB4B,CAAxB,ExJmBJ,GuJZ6B,CAAW,CvJYxC,CAAA,EuJZyB,CvJYzB,AuJZ6C,UAAU,CAAC,OvJYxD,GuJZiE,IAAT,EAAe,GAAf,EAAkB;AhJoD9E,AKEA,AqC5NA,A3C4NA,ADAA,ATDA,AsIdQ,AlI1BJ,AwJnBG,ADOC,EvJYJ,EkI0BI,IAAI,AqBtCJ,CtGvKQ,AjDmLZ,CAAA,CkI0BW,AqBtCJ,CrBsCK,EqBtCF,CrBsCK,CqBtCH,CvJYZ,AuJZa,CtGvKjB,AjDmLI,CiDnLsB,AiF6MX,CjF7Mf,AsGuKc,CAAO,CtGvKQ,AiF6MH,CjF7M1B,AiF6Me,EjF7MiB,CiF6MF,IAAtB,AqBtCM,CAAiB,GAAjB,CAAN,YvJYJ,CAAA,GAAA,KAAA,CAAA,GAAA,6BAAA;AOwCJ,AKEA,AqC5NI,A3C4NJ,ADAA,ATDA,AsIdQ,AnHpLR,Af0JI,AwJnBC,ADOQ,EtGvKT,AjDmLA,EkI0BI,CsBzDO,CAAX,EtByDQ,CnHpLI,Af0JZ,CAAA,CkI0BW,CAAC,AqBtCH,GtGvKI,AiF6ME,CjF7MD,CAAD,AjDmLb,CAAA,CiDnLiB,AiF6MN,AnHpLf,CkCzBiB,AlCyBU,CkCzBvB,AsGuKkB,CrBsCI,CAAX,CqBtCsC,ErBsCvB,AnHpL9B,EAAyC,AwI8IgB,CAAA,CrBsCjD,AqBtCiD,CAA5C,gBvJYT,CAAA,GAAA,KAAA,CAAA,GAAA,6BAAA;AOwCJ,AKEA,ANAA,ADAA,ATDA,AsIdQ,AnHnLJ,AfyJA,AoClDA,AoH+BA,ADMS,EvJaT,AoClDA,E8F4EI,AsB7CJ,EzItII,EmHmLI,AsB7CJ,CxJmBJ,AwJnBK,CxJmBL,CkI0BW,A9F5EX,C8F4EY,A9F5EZ,AmHqCoB,CxI5IT,CyIsIX,CtB6Ce,ElI1Bf,AwJnBa,CxJmBb,CkI0BW,AnHnLP,EqBuGJ,AmHqC6B,CrBuCP,A9F5EtB,C8F4EW,CnHnLW,AyIsIT,ADMoC,CCNpC,CtB6Ca,E9F5E1B,AmHqCqD,CAAA,CrBuCjD,AqBvCiD,CnHrCrD,AmHqCS,CxI5IL,IAA8B,GyIsIrB,CAAe,CpH/BrB,CrBvGiC,CAAC,CAAD,CAAN,EfyJlC,CAAA,AwJnBa,EzItImC,AqBuGhD,AoH+BsC,CxJmBtC,CoClD2B,CrBvG3B,EACA,CfwJA,CAAA,AwJnBa,CAAb,ExJmBA,6BAAA;AOwCJ,AKEA,AqC7NI,A3C6NJ,ADAA,ATDA,AsIbQ,AnHnLA,AfwJJ,AoCjDI,AoH8BJ,ADKS,EvJcT,EexJI,AqBuGA,AoH8BJ,IAAI,CtB8CK,AlI3BT,AwJnBK,CzIrIK,AfwJV,CiDpLS,CsGsKsB,CtGtK/B,AiF+MI,AnHnLS,AqBuGA,AoH8Bb,CpH9Bc,CAAV,CanIU,AiF+ME,AsB9CH,CxJmBb,CAAA,AoCjDkB,CrBvGC,CmHmLf,AnHnLgB,GqBuGG,AoH8BV,CpH9BT,AoH8BS,EzIrIA,AwI0IgC,CxI1IlB,CAAd,CAAT,AwI0I6C,IAAI,CAAA,CAAA,CAA5C,ECLI,CAAe,QxJmB5B,AwJnBa,CxJmBb,CwJnBsC,ExJmBtC,KAAA,CAAA,CwJnBa,CAAb,CxJmBA,6BAAA;AOwCJ,AKEA,AqC9NoB,A3C8NpB,ADAA,ATDA,AsIbQ,AnHnLH,AfwJD,AoCjDI,AoH8BJ,ADKI,EvJcJ,EoCjDI,AoH8BJ,IAAI,ADKA,CtGvKiB,AiFgNZ,AlI3BT,AwJnBK,CxJmBL,GkI2BI,A9F5ES,CAAC,AoH8Bd,CpH9BI,C8F4EY,ClI3BhB,AwJnBa,ADKA,CvJcb,AoCjDkB,EapIF,AiFgNZ,AqBzCY,EAAE,CtGvKiB,AboIZ,AmHmCJ,CtGvKH,AboIZ,AoH8BS,CAAA,CDKG,CAAO,SAAP,CAAiB,ECLpB,CAAe,MDKc,CvJc1C,CAAA,EwJnBqC,ADKS,CvJc9C,EuJdiD,CCLrB,ADKsB,EvJclD,AwJnByC,CxJmBzC,GAAA,GuJdgB,KAAgD,KAA5D,gBvJcJ;AOwCJ,AKEA,AqC/N2C,A3C+N3C,ADAA,ATDA,AsIbQ,AhG3NR,AlCgMI,AoCjDI,AoH8BF,ADKE,EvJcJ,EkChMJ,AE+IQ,K8F4EK,AlI3BT,CkChMJ,AlCgMI,EuJdQ,CrByCJ,A9F5ES,AoH8BJ,CpH9BK,CoH8BH,CtB8CK,AsB9CJ,CxJmBZ,CAAA,CoCjDI,AoH8BK,CtB8CL,AsB9CY,CDKC,CnHnCK,EmHmCF,GnHnCO,EoH8BlB,ADKL,CCLsB,EpH9BtB,EoH8B0B,CAAC,QAAD,CAAJ,CAAe,ExJmBzC,CAAA,GAAA,GwJnB0B,CAAjB,CxJmBT,AwJnBE,CxJmBF,GAAA,6BAAA;AOwCJ,AKEA,ANAA,ADAA,ATDA,AsIbQ,AhG5NR,AnByCI,AfwJH,AoCjDO,AcpGA,AsGkIH,ADKG,CvJIR,EAAY,CoCvCJ,CoH4BS,EAEV,CDKC,CrByCK,AnHnLF,AmCGE,ClD2IM,GkIqCX,A9F5ES,CAAC,E8F4EE,CnHnLD,AmCGX,AsGkIS,CzIrIG,EmHmLZ,A9F5EA,AcpGgB,CsGkIjB,CDKe,CnHnCK,AoH8BJ,CzIrIJ,CmCGX,AqGuIiB,CxI1IG,AyIqIrB,CDKoB,CxI1IR,AqBuGa,AoH8BN,ADKE,CxI1IxB,EwI0IqB,CAAO,CvJIpB,CoCvCJ,MpCuCW,CuJJM,CAAiB,CvJIvB,EAAA,CAAnB,UuJJwD,IAAI,GAAG,CAAC,cAAvC,KAA0D,EAA3E;AhJsDR,AKEA,AqChOI,A3CgOJ,ADAA,ATDA,AsIbK,AhG7NL,AnB0CC,AqBwGO,AoH6BF,ADKQ,EtGzKV,CAAC,AiFmKD,CjFnKE,ObuIS,CFlJf,AqHoLc,CtGzKV,AuGoKS,CDKC,EtGzKI,CAAC,AuGoKF,ADK6C,ECL3C,CpH7BX,AoH6BY,EvGpKI,IAAN,AsGyKqD,CAAC,CCLvD,CvGpKc,AuGoKF,GDKf,GtGzKuB,CAAC,MAAP,CAAc,CAAd,CAAb,GuGoKL,CvGpKsC,AuGoKF,EvGpKI,CAAC,CuGoKD,OAAJ,CvGpKE,AuGoKU,GvGpKK,CAAC,CAAC,KuGoKE,IvGpKnB,EAA4B,CuGoKlB,EAAgB,CvGpKM,EAAJ,EAA7D,CAAd;A1C+NJ,AKEA,AqChOC,A3CgOD,ADAA,ATDA,AsCtNI,AE8HC,AoH6BG,ADIM,GnHzCV,KoHqCI,GtH3JJ,CqH+JW,GCJP,CAAA,CtH3JJ,GAAA,IqH+JuB,GAAA,EAAA,CAAA,ECJnB,CAAiB,GAAG,CAAC,CAArB,EAAwB,EDIlB,ECJN,CAA6B,UAAS,OAAT,EAAgB;AjJ2DrD,AKEA,ANAA,ADAA,ATDA,AsCvNI,AsH4JM,ADGI,QrH/JV,EsH4JM,EDGmB,CrH/JzB,CsH4JU,CAAC,CtH5JX,CqH+J8B,GrH/J9B,AqH+J8B,EAAA,CCHpB,ADGoB,CCHxB,CAAe,GDGX,MCHJ,IAA4B,OAA5B;AjJ2DV,AKEA,ANAA,ADAA,ATDA,AQlCI,AoJzBM,ADEI,EnJuBV,QoJzBM,EpJyBI,AmJvBsB,EnJuBpB,CAjKmB,EoJwIlB,CDEyB,GAAA,EAAA,CAAA,MAA5B;AhJyDd,AKEA,ANAA,ADAA,ATDA,A4J3DS,ADCK,SCJN,GDIoC,IAAI,GAAA,EAAA,CAAA,IAAlC;AhJ0Dd,AKEA,ANAA,ADAA,ATDA,A4J3DO,ADAO,OCLmC,CAApC,CAAP,GDK4C,QAAQ,GAAA,EAAA,CAAA,QAA5C;AhJ2Dd,AKEA,ANAA,ADAA,ATDA,A4J3DK,ADAG,KCTS,CAAb,MDSU,KAAK,GAAG,EAAd;AhJ2DR,AKEA,ANAA,ADAA,ATDA,A4J3DI,IAAA,IAAI,CAAC,KAAL,GAAa,OAAA,CAAA,cAAA,CAAe,UAAS,IAAT,EAAa;AjJ2D7C,AKEA,ANAA,ADAA,ATDA,AsD7LQ,AsGkIF,ADDE,SrGjIK,GqGiID,CCCC,EAAE,CAAC,CtGlIR,EsGkIK,CtGlIW,AsGkIJ,CDDC,CAAC,ErGjIM,GqGiIhB,CAAgB,CCCf,CAAiB,IAAI,CAAC,CDD3B,ErGjIgB,AqGiIa,CrGjIF,IsGkID,CAAJ,CAAe,OtGlIrB,CAAhB,CsGkIsB,CAAjB,CAAP;AjJ2DN,AKEA,ANAA,ADAA,ATDA,A4J3DO,ADDG,KCDO,EAER,GDDC,OCCS,EDDA,ECCV,CDDa,CCCG,GAAhB,ADDC,ECCkB;AjJ2D5B,AKEA,ANAA,ADAA,ATDA,AsIdI,AhG1MI,AsH6JF,ADDI,ErB8CN,MAAA,CAAA,AhG1MS,CqH4JH,GCCG,CtH7JL,CqH4JO,CAAC,CrH5JK,AsH6JJ,CtB6Cb,CAAA,AsB7Ce,CAAC,CtH7JK,CqH4Jf,GAAe,GCCR,CAAY,GtB6CzB,GAAA,AhG1MiB,CAAmB,CqH4JH,CAAC,CAAD,CrH5JhB,AqH4JI,CAAgB,CrH5JK,GgG0M5B,ChG1MG,AqH4JI,CAAsB,CrH5JK,AsH6JvC,CAAoC,IAAI,ADD3C,ErB8CN,ChG1MiB,CgG0MuB,AhG1MpC,GsH6JyC,CAAY,OtB6CzD,EAA6D,CsB7CK,OAAT,CtB6CzD,CsB7CyE,CtB6CK;A3HclF,AKEA,ANAA,ADAA,ATDA,AsIbQ,A9F5EJ,AoH8BI,ADDC,EnH7BL,M8F4EQ,AsB9CJ,GpH9BJ,C8F4EY,A9F5EZ,G8F4Ee,AsB9CX,CAAA,ItB8CgB,C9F5EpB,CAAA,E8F4EI,M9F5EJ,EoH8BI,CpH9BJ,AoH8BqB,IAAI,CAAC,KpH9BjB,CAAT,EAAoB,CAApB,AoH8BqB,CAAe,CpH9BP,EoH8BU,CAAC,CAAJ,GAAM,CAArB,KAA2B,cAAY,IAAI,CAAC,SAAjB,GAA0B,eAA1B,GAAgC,GAAG,CAAC,CAApC,GAAqC,MAAjF,EAAyF,IAAzF,CAA8F,UAAS,OAAT,EAAgB;AjJ2DtH,AKEA,ANAA,ADAA,ATDA,AsIbQ,A9F3EA,AoH6BE,QtB8CE,A9F3EA,EoH6BF,EtB8CM,C9F3EC,CoH6BH,CtB8CK,AsB9CJ,GpH7BH,E8F2EY,E9F3EE,CAAd,AoH6BE,CtB8CN,AsB9CE,CAAe,EpH7BM,KAAK,EoH6B1B,IpH7BqB,AoH6BO,IpH7BQ,CAAtC,EACA,AoH4BE;AjJ2DV,AKEA,ANAA,ADAA,ATDA,AsIbQ,AnHpLR,AqB0GY,AoH4BF,ADFF,QrBgDI,CnHpLI,CyIsIN,EtB8CM,AqBhDJ,CnH1BO,E8F0EA,CnHpLnB,CAAwB,AyIsIP,CpH5BL,E8F0EY,AnHpLxB,CwIoIqB,CxIpI+B,AwIoI9B,ErBgDd,GqBhDI,CAAgB,QAApB,EAA8B;AhJ6DtC,AKEA,ANAA,ADAA,ATDA,AsIbQ,AnHnLJ,AX8JA,AgCrDK,AoH4BA,ADFC,EnJ2BN,M8HqBQ,CnHnLA,AyIkIJ,CzIlIM,AwImIJ,ErBgDM,CnHnLC,CAAC,CmHmLC,AnHnLF,AwImIF,CxInID,AwImIE,EnJ2BI,CW9JG,CmHmLC,A9HrBF,AmJ3BZ,ExInIG,CwImIU,CrBgDf,EnHnLuB,CXdI,CWcvB,KAA2B,EwImIJ,CxInIO,AwImIN,CxInIO,AwImIR,CxInIO,AwImInB,CxInIgB,AwImIA,GxInIS,GAAV,GwImIf,CxInIiC,AwImIP,CxInIrC,IwImIF,CxInIoD,GAAG,CAAC,CAAD,CAAH,GAAS,GAAT,GAAe,CAAjE,CAAR;ARgMJ,AKEA,ANAA,ADAA,ATDA,AmBhMC,AuHxDD,AkB6LO,ADFE,IjB3LI,GkBwLoC,CAApC,CAAP,IlBxLgB,GAAuB;A/HwP7C,AKEA,ANAA,ADAA,ATDA,AsIbQ,A9F1EA,ActGA,AoF1DJ,AkB4LC,ElB5LD,GkBmLa,CAAb,ClBnLK,ClGgKG,C8F0EC,A9F1EA,ActGA,AoF1DT,IJ0Oa,A9F1EA,C8F0EC,GAAG,AhFhLb,CdsGc,CAAV,AkGhKF,CpF0Dc,GdsGG,CAAC,ActGA,GdsGG,C8F0EvB,EAA0B,CAAC,AI1O/B,ClGgKgC,CAAL,AkGhKT,CJ0OgB,E9F1EE,EctGhB,CAAW,EdsGU,E8F0ErC,EAAyC,CAAC,A9F1E1C,CctGgB,CduGhB,AcvGA,EgFgL8C,CAA9C,EACA;A3HYR,AKEA,ANAA,ADAA,ATDA,AsIZY,AhG5MJ,AlC+KR,AoC7CY,AkGhKJ,AkB2LJ,ADHI,IvJqBI,AsI7MJ,AkB2LJ,IAAI,ADHA,CrH1JK,AlC+Kb,AwJlBS,CtB+CS,A9F1EF,C8F0EG,A9F1EF,G8F0EK,C9F1ED,CkGhKD,CAAC,AiBwLJ,CAAC,CrH1JV,CEkIkB,AoH2BtB,CpH3BY,CFlIU,CoG9BlB,AkB2Le,CtB+CS,CAAC,A9F1EF,C8F0EC,AhG5MxB,AEkIwB,AkGhKD,CJ0OnB,AsB/Ce,EpH3BQ,AoH2BN,CAAC,EDHtB,EnHxBgC,CAAL,AmHwBA,ECGR,CpH3BiB,AkGhKD,AkB2LL,ClB3LM,AiBwLL,GCGhB,CpH3B0B,AoH2BN,ClB3LZ,CAA+B,IlGgKlD,EACA,AkGjKmB,CAAsC,AiBwL9B,CCGa,ADHb,IjBxLR,AkB2LY,ElB3LnC,AkB2LkD,GAAf,EAAkB,IDH1B,CAAmB,QAAA,CAAA;AhJ8DtD,AKEA,ANAA,ADAA,ATDA,AsIZY,A9FzEI,AkGjKX,AkB2LC,ADHI,GjB7LmC,GkBgMvC,GAAG,CtB+CS,AqBlDR,CrBkDS,AqBlDR,CCGC,CDHC,CrBkDS,C9FzEC,IAAP,CoH0BI,CAAC,EAAE,CtB+CS,AsB/CR,CtB+CS,AqBlDR,CrBkDS,AqBlDR,CCGL,ADHI,CCGG,ADHf,CrBkDwB,AqBlDR,CrBkDG,CAApB,GqBlDC,CAAsB,CADmB,CCIjC,CAAiB,GAAjB,CAAD,CAAd,CADuD,CAEvD;AjJ0DN,AKEA,ANAA,ADAA,ATDA,AsIXY,A9F1EC,AkGhKT,AiBuLM,EjBvLN,IJ0OQ,IAAI,AqBnDN,CAAC,ErBmDQ,AI1OJ,AiBuLF,CrBmDO,CI1OL,EJ0OQ,IAAJ,GAAW,CAAX,AI1OH,AiBuLS,CAAC,CAAD,CrBmDS,AqBnDrB,CAAgB,GrBmDjB,EqBnDC,CAAsB,CAFmB,CjBrLvC,EAAe,gBAAf,EAA+B;A/HqP9C,AKEA,ANAA,ADAA,ATDA,AsIXY,AlIjCZ,AoCzCS,AkG/JD,AkByLF,ADHI,CvJkBV,KkIiCY,EIzOA,EJyOI,AqBnDN,CvJkBE,EkIiCO,AsBhDN,CtBgDO,AIzOF,CkByLH,ADHA,CvJkBf,AwJfgB,CtBgDO,AIzOF,AiBsLJ,CvJkBA,CwJfJ,CAAO,CtBgDD,CqBtDmC,ErBsDxB,CAAX,GAAe,CIzOD,AkByLpB,ClBzLqB,AkByLJ,EtBgDlB,EsBhDsB,CAAC,ClBzL3B,IkByLsB,CAAW,IAAI,CAAC,GAAL,CAAS,IAAI,CAAC,IAAL,CAAU,IAAI,CAAC,GAAL,CAAS,IAAI,CAAC,MAAL,CAAY,CAAZ,GAAgB,GAAG,CAAC,CAAD,CAA5B,EAAiC,CAAjC,IAAsC,IAAI,CAAC,GAAL,CAAS,IAAI,CAAC,MAAL,CAAY,CAAZ,GAAgB,GAAG,CAAC,CAAD,CAA5B,EAAiC,CAAjC,CAAhD,CAAT,CAAX,CAAjB,CAAP;AjJ2DN,AKEA,ANAA,ADAA,ATDA,AsIXY,AlIjCR,AsIxMI,AkByLH,ADHK,EvJkBN,GwJnBmB,CtBoDX,AsBpDR,CxJmBA,CAAA,AsIxMU,EJyOE,AqBnDN,GrBmDS,AlIjCf,AsIxMe,CJyOC,AlIjChB,EsIxMkB,AiBsLN,CrBmDO,CqBnDL,GrBmDC,GAAW,AqBvDwB,CrBuDnC,GAAe,AIzOA,CtIwM9B,AsIxM+B,CtIwM/B,EkIiCQ,ClIjCR,CsIxMI,GtIwMJ,CAAA,GAAA,eAAA;AO4CJ,AKEA,ANAA,ADAA,ATDA,AsIXY,AlIjCR,AoCzCI,AkG/JA,AkByLJ,ADHM,EvJkBN,EwJfA,EtBgDQ,ClIjCR,CAAA,AsIxMU,AkByLN,CAAC,CtBgDO,AqBnDN,CnHvBK,E8F0EI,AlIjCf,AsIxMe,CJyOC,AlIjChB,EoCzCI,AkG/Jc,CJyOC,AsBhDnB,EDHe,CCGC,CtBgDD,AqBnDE,GrBmDS,AsBhDN,CtBgDL,AqBnDM,CCGC,ADHA,CCGC,CtBgDO,ElIjC9B,CAAA,AuJvBkD,CrBwD1C,AIzO0B,CAAC,CtIwMnC,AwJfoB,CAAW,GxJe/B,CAAA,AsIxMI,AkByLY,CAAoB,ExJepC,QwJf6C,IAAT,EAAe,ExJenD,CwJfoC,EAAkB;AjJ2D1D,AKEA,ANAA,ADAA,ATDA,AsIXS,AlIjCL,AoCzCC,AkG/JG,AkByLF,ADHI,EvJkBN,CoCzDA,GoH0CE,CxJeF,CAAA,AsIxMU,CkByLL,CDHC,ECGE,CxJeR,CAAA,CsIxMiB,GAAG,CiBsLL,CCGC,CAAC,ADHA,ECGE,CAAC,CDHC,CAAC,CCGL,CAAO,MlBzLY,CAAC,CtIwMrC,CAAA,AwJfiB,CAAiB,ExJelC,CwJfiB,ClBzLb,AkByLY,CAAd,CADoD,CxJgBtD,AwJdE,CxJcF,GAAA,sBAAA;AO4CJ,AKEA,ANAA,ADAA,ATDA,AI5CI,AuJzBkD,EvJyBlD,KAAA,CAAA,CuJzBkD,EAOzC,EvJkBT,CAAA,EuJzBkD,CAAnB,EAOjB,QAAA,CAAA,UvJkBd,CAAA,GAAA,KAAA,CAAA,GAAA,wBAAA;AO4CJ,AKEA,ANAA,ADAA,ATDA,AsIXQ,AhG7MA,AlC4KJ,AkDjJI,AoFvDA,AkByLF,ADFI,EvJiBN,KAAA,CAAA,AsIxMQ,CJyOC,AhG7MA,AgB2BA,CsGkID,ADFF,ECEI,CtBgDN,AlIjCJ,CAAA,AsIxMc,CAAC,AkByLF,CtBgDG,AhFlLZ,EqGgIU,CrGhIK,AsGkIF,CtBgDb,AsBhDc,ADFF,CjBvLR,CpG4BJ,CgB2BmB,EhB3BE,AoG5BA,CAArB,AkByLS,CAAY,CtH7JrB,AoG3BA,AkBwLF,CDJY,QrG9HK,ClDiJnB,AkDjJ8B,ClDiJ9B,GAAA,KAAA,AkDjJmB,ClDiJnB,AkDjJI,GlDiJJ,wBAAA;AO4CJ,AKEA,ANAA,ADAA,ATDA,AsIXQ,AlH9PR,AhB6NI,AIUA,A8C3JC,AoFtDO,AkBwLN,ADFI,EvJiBN,AIUA,KJVA,CAAA,CkIiCS,AlH9PJ,CsHsBS,AkBwLN,ADFF,ECEI,CtBgDN,AlIjCJ,CAAA,CwJfa,CtBgDG,EsBhDA,ADFF,CjBtLS,AkBwLN,CtBgDb,A9HvBc,AoJzBF,ADFA,CvJiBhB,AwJfE,CxJeF,AIUoB,AkIjNM,EAAlB,CtIuMR,AsIxMI,ItIwMJ,CAAA,AIU4B,CAAC,EJV7B,EgB7NJ,CZuOwB,CAAe,CYvOJ,EhB6N/B,GIUoB,GAAwB,OAAxB,GAAkC,SAxLvB;AG0NnC,AKEA,ANAA,ADAA,ATDA,AsIXQ,AlH7PJ,AhB4NA,AwJfE,ADNY,EvJqBd,IgB5NM,ChB4NN,CgB5NQ,AhB4NR,CkIiCS,AqBtDK,CCMN,CxI7MG,AuI2MF,CCEC,CtBgDN,AlH7PJ,AhB4NA,CAAA,CwJfa,CtBgDG,GsBhDC,CtBgDb,AsBhDc,KDNJ,CvJqBd,AwJfa,ADbkB,CvJ4B/B,AwJfyB,CAAvB,ADDI,EvJgBN,KAAA,CAAA,EuJhBO,CvJgBP,CuJhBM,EAAqB,SvJgB3B;AO4CJ,AKEA,ANAA,ADAA,ATDA,AsIXQ,AlH7PJ,AhB4NH,AsItMW,AkBuLN,CxJON,EAAY,GgBpNF,EhBoNO,CkIyCJ,AlH7PA,CwI6MD,ClBvLK,CtHtBD,AwI6MF,CtBgDN,ClH7PJ,AuI2MQ,CjBrLS,AkBuLJ,CtBgDG,AIvOE,EkBuLF,ClBvLK,AkBuLJ,CtBgDb,AIvOI,AkBuLQ,CAAd,ClBvLsB,AiBqLR,CjBrLS,EiBqLT,CjBrLY,CiBqLZ,CAAA,CvJSR,EsI9LyB,CAAC,EtI8LrB,GAAA,CsI9LL,CtI8LK,CAAjB,AsI9L8C,CAAC,EAAnC,EACA;A/HiPZ,AKEA,ANAA,ADAA,ATDA,AsIXK,AItOW,AkBsLV,GtB0BF,OsB1BQ,CAAC,ClBtLS,EkBsLN,ADHM,EjBnLI,EkBsLN,ClBtLS,AkBsLR,GAAL,ADHc,CCGL,ClBtLS,CAAC,AkBsLR,ADHG,CjBnLI,CAAlB,AiBmLc,CCGF,ADHE,ECGd,CAAV;AjJ2DN,AKEA,ANAA,ADAA,ATDA,AoBxQI,AsHwBY,AkBqLV,ADHI,OvI1MD,CsHwBO,EkBqLJ,ADHF,CvI1MG,AwI6MA,CxI7MC,EwI6ME,CxI7MC,CAAb,CsHwBqB,CtHxBL,AsHwBM,AkBqLN,CxI7MC,AwI6MA,ADHF,CAAC,EvI1MI,AsHwBR,AkBqLA,ClBrLe,AkBqLN,CxI7MrB,CwI6MuB,ADHjB,CvI1MkB,AuI0MF,CvI1MG,CwI6MD,CxI7MxB,AsHwBiC,CAAC,AkBqLtB,CxI5MZ,AwI4ME,GDHI,EjBlLqB,CiBkLM,EjBlLU,CAA/B,KiBkLN;AhJ8DV,AKEA,ANAA,ADAA,ATDA,AoBvQQ,AsHuBQ,AkBqLV,ADHI,IvIzMF,EAAE,CAAC,CAAD,AsHuBM,CtHvBR,CwI4MI,ADHF,CCGG,CxI5MG,CAAR,CsHuBc,AkBqLN,GlBrLS,CkBqLL,CAAC,ADHF,CAAC,GjBlLW,AkBqLf,ClBrLgB,AkBqLN,CAAC,ADHjB,CAAgB,ECGE,CAAF,ClBrLD,CAAc,CkBqLT,CAAC,CDHrB,CjBlLiC,CAAC,AkBqLZ,CAAhB,ADHqB,CCG/B,IlBrLmB,CAAT,EiBkLN;AhJ8DV,AKEA,ANAA,ADAA,ATDA,AoBvQQ,AsHuBK,AkBqLP,ADHG,IvIzMD,GAAG,AsHaH,CtHbI,CAAD,AuI0LwB,CvI1L3B,AuI0LA,GvI1LS,AwI4MJ,CxI5ML,CwI4MO,CAAC,GAAH,CAAO,SAAP,CAAiB,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,IAAL,CAAU,CAAC,GAAC,CAAZ,IAAe,IAAI,CAAC,EAApB,GAAuB,GAAlC,CAAjB,CAAP;AjJ2DN,AKEA,ANAA,ADAA,ATDA,AsCxNQ,AlB/CH,AwI4MA,ADHG,KCRY,CAAhB,EDQI,CrH1JK,UqH0JL,CAAA,ErH1JA,EqH0JA,CrH1JqB,AqH0JhB,CrH1JL,OqH0JA,CAAc,SAAS,CAAC,cAAV,CAAyB,KAAvC,EAA8C,QAA9C;AhJ8DR,AKEA,ANAA,ADAA,ATDA,AwCtFI,AcxGA,AsGmIA,ADHI,EnHxBJ,AcxGA,EsGmIA,IAAI,ADHA,CCGC,CtGnIL,CdwGA,AcxGA,CdwGA,MmHwBc,CAAC,CrGhIf,CdwGA,AcxGA,CdwGA,AoH2BA,GpH3BA,AcxGA,AsGmIqB,GpH3BrB,AcxGA,CsGmIyB,ADHrB,CAAsB,CCGC,CAAC,MpH3BxB,AcxGC,CsGmIoB,ADHU,CCGC,ADHA,ICGf,CAAoB,CpH3BzC,EAAkB,CcxGlB,EAA6B,GqGgIzB,CCG8C,CpH3BlD,AmHR0E,CAiCtE,CnHzBiC,CoH2BI,EAAe,GAAf,EAAkB;AjJ2D/D,AKEA,ANAA,ADAA,ATDA,AoBvQI,AoBgLI,ActGA,AoFnDI,AkBqLN,ADFE,EvI1MJ,EAAE,CAAC,GoBgLC,CctGK,CoFnDK,GkBqLL,GpH5BL,CctGA,CAAc,CoFnDK,CkBqLd,CpH5BL,ActGA,AsGkIK,CtGlIa,AoFnDI,IlGyJtB,CAAA,CpBhLW,CoBgLX,IctGA,IsGkIK,CxI5MP,AwI4MwB,CxI5M1B,EsHuBiC,CtHvBJ,AwI4MC,CAAC,IlBrLL,EAAe,AkBqLhC,EAA8B,OlBrLb,CkBqLqB,ClBrLK,AkBqLJ,ClBrLtB,CAAlB,AkBqL0C,CAAC,ExI5MV,CwI4MO,CAAO,IxI5MvD,KwI4MgD,CAAiB,GAAjB,CAAD,CAAtC,CAAP;AjJ2DN,AKEA,ANAA,ADAA,ATDA,AoBvQI,AZqOA,AgCtDI,AcrGA,AsGkIH,ADFE,EvI1MH,AZqOA,EYrOE,CAAC,AwI0MkB,CpH3BjB,AoH2BJ,CDnCuD,ErG7F9C,AqGgIJ,IAnCkD,CnHQnD,AmHRqB,CAAvB,EnHQE,AcrGA,CdqGA,AcrGc,GAAd,CAAkB,E9C2JA,EAAE,EYrOT,KkC0EX,ElC1EF,CAAF,GAA0B,MZqOiB,EAlMZ,eYnCO,GAAtC;ATuQJ,AKEA,ANAA,ADAA,ATDA,AoBvQI,AoB8KgB,AcpGZ,AoFnDI,AkBqLR,ADFC,EvI1MD,EAAE,AwI4MF,CxI5MG,AuI2IiC,CAA7B,CAAP,CCiEI,CtGlIK,AsGkIJ,ClBrLO,CAAC,KpFmDT,CAAa,GAAb,AoFnDI,CpFmDa,CoFlDb,AkBoLR,GAAqB,GxI5MN,CwI4MU,EAAE,CtGlIvB,AsGkIwB,EtGtIC,IlCtE3B,CAAF,AwI4MyB,CAAW,ExI5MP,EwI4MR,CAAoB,UAAS,IAAT,EAAe,IxI5Mf,CwI4MA,EAAoB,GxI5M7D;ATuQJ,AKEA,ANAA,ADAA,ATDA,AoBtQI,AsHuBY,AkBoLV,ADFH,EvIzMC,CuIwIK,CAAP,CvIxIK,CAAC,OwI2MK,OAAA,CAAA,QxI3MO,MAAb,CAAH,CwI2MS,CAAiB,CxI3MA,GwI2MI,CAAC,MAAtB,EAA8B,KAAK,CAAC,KxI3MP,CwI2M7B,CAAP,QxI3MF;ATsQJ,AKEA,ANAA,ADAA,ATDA,AoBtQI,AoB2KkB,AkGpJT,AkBoLR,ADFJ,CAnEM,CvItIH,GAAG,AwIyMkB,CxIzMjB,AwIyMJ,EpH9BkB,QAAA,KAAA,KAAA,CAAA,EpB3KF,AoB2KE,GpB3Kf,CAAH,GAAuB,uBAAY,OAAnC;ATsQJ,AKEA,ANAA,ADAA,ATDA,AsIZI,AlH1PA,AoB0KkB,AchGd,AsGiIJ,EtB+CA,AlH1PA,EwI2MA,CxI3MG,CAAC,AoB0Kc,E8FgFlB,AhFhLQ,AsGiIJ,CtB+CJ,AsB/CK,ItGjIQ,CdgGK,GAAA,C8FgFlB,CAAA,AhFhLQ,CsGiIR,GtGjIuB,AsGiIJ,EpHjCD,EoHiCK,CtGjIK,ClC1EZ,AwI2MS,CtB+CzB,AsB/C0B,GtB+C1B,ElH1PG,AkC0EC,ClC1EJ,CkC2EI,AsGgImB,CAAW,CxI3MR,GwI2MP,CtB+CP,AsB/C2B,StB+CvC,CsB/CgD,CtB+Cd,GsB/CK,EAAe,GtB+CtD,AlH1PsC,EkH0PoB,AsB/CnB,EAAoB,MxI3M3D,GkH0PA,EAA+E,SAA/E,EAAgG;A3HYpG,AKEA,ANAA,ADAA,ATDA,AsIXQ,AlH1PJ,AoBwKqC,Ac9F7B,AoFpDA,AkBoLN,ADvEO,MvInIH,CuImIG,CAAA,CrBuHA,CIpOK,CtHtBH,AkC0EE,EsGgIJ,CxI1MiB,EAA1B,CsHsBqB,EpFoDb,CAAc,AoFpDE,AkBoLf,CAAA,EDvEA,CrGzDD,CAAmB,AoFpDE,CJoOzB,AIpO0B,AiB6GN,CrBuHG,GhFhLK,EoFpDR,GAAe,CJoOH,AhFhL5B,AoFpDA,CJoO6B,AsBhD5B,CtGhI+B,AsGgId,GDvEjB,CCuEqB,CtGhIe,AsGgId,MAAtB,CtGhID,CgFgLJ,AsBhDmC,EtBgDc,GsBhDT,CAAC,ItBgDzC,EAA2D,AsBhDtD,CAAP,UtBgDE,EAAwE,SAAxE;A3HWR,AKEA,ANAA,ADAA,ATDA,AsIXK,AlHzPD,AkCyEK,AsGgIJ,ExIzMD,CkHsPA,EsB/CmB,CAAnB,CxIvMK,CAAC,IAAN,CAAW,GAAX;AToQJ,AKEA,ANAA,ADAA,ATDA,AsCxNQ,AlB5CJ,AoBuKI,Ac9FH,AoFpDO,AkBoLR,ExIzMA,CkC6DA,CsG4IA,GxIzMK,CAAC,AwIyMF,CtH7JK,AE2HA,AoHkCJ,CpHlCD,CkGlJS,CtHrBb,CAAW,CoBuKG,CpBvKd,AsHqBiB,AkBoLjB,ClBpLkB,EpGuBd,AsH6JU,ClBpLO,CAAb,CpGuBa,CE2HjB,AkGlJoB,AkBoLN,ClBpLO,CkBoLL,CAAC,CtH7JjB,AoGvBwB,MkBoLV,CAAW,ElBpLQ,CAAC,CkBoLxB,CAAoB,IlBpL1B,EAAsC,CAAC,GkBoLJ,ClBpLQ,CAA3C,EACA,AkBmL0B,EAAa;AjJ2DnD,AKEA,ANAA,ADAA,ATDA,AoBnQI,AhBsNJ,AoChDQ,AkGjJQ,AkBmLV,IxJcM,EwJdN,ElBnLU,CtHrBL,AoBsKE,AoHkCJ,CpHlCD,AoHkCE,IxIxMN,AoBsKc,CpCgDlB,AsIjMuB,AkBmLjB,ClBnLkB,AkBmLR,IlBnLA,CAAa,ClGiJrB,KoHkCF,CAAsB,ElBnLU,CAAC,CAAD,AkBmLN,ClBnLH,AkBmLI,GlBnLW,GkBmLtC,IlBnLU;A/H8OhB,AKEA,ANAA,ADAA,ATDA,AoBnQC,AoBuKO,AkGlJQ,AkBmLX,KAFa,CAAd,ElBjLY,ClGkJH,KAAL,CkGlJe,CAAC,ElGkJF,EkGlJN,CAAa,KlGkJC,GAAG,CAAzB,AkGlJ8B,CAAC,CAAC,GAAG,CAAL,CAAT,GAAmB,OAAhC;A/H8OhB,AKEA,ANAA,ADAA,ATDA,AwC5FQ,AkGlJQ,AkBmLZ,IAAA,IlBnLY,AkBmLR,CpHjCK,AoHiCJ,IAAL,EpHjCI,AkGlJe,CAAC,AkBmLR,GpHjCO,CkGlJP,AkBmLI,ClBnLS,CkBmLP,CAAC,IpHjCQ,GAAG,AkGlJI,AkBmLlB,CpHjCZ,AkGlJ+B,AkBmLR,ClBnLS,GAAG,AkBmL3B,ClBnLsB,AkBmLF,ClBnLP,GAAmB,MkBmLH,ClBnL7B,GkBmLoB,EAAa;AjJ2DjD,AKEA,ANAA,ADAA,ATDA,AIhDA,AIcI,AgCzDI,AkGnJK,AkBmLP,CxJWN,CIcI,IoJzBE,GAAG,CAAC,CxJWE,AoC3CG,IAAP,AoHgCF,CAAU,KpJyBO,CJdvB,CIcyB,CJdF,AwJXjB,CAAmB,GpJpLU,CoJoLN,CAAC,YAAL,IAAqB,IAAI,CAAC,MAA7C;AjJ2DN,AKEA,ANAA,ADAA,ATDA,AIhDI,AoC3CC,AoHgCA,ExJWD,CoCpDA,EoHuCY,CAAZ,CA/GyD,CAkHzD,KxJUA,CAAA,WAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AOgDJ,AKEA,ANAA,ADAA,ATDA,AIhDI,AsI9LQ,EtI8LR,SsI9La,EtI8Lb,CAAA,CsI9LiB,CAAC,GAAG,CAAb,EAAgB,CAAC,EtI8LzB,CAAA,AsI9L4B,MAAM,CAAC,CtI8LnC,CAAA,GAAA,CAAA,AsI9LQ,CtI8LR,CsI9L2C,CAAC,CtI8L5C,CsI9LQ,EACA,KtI6LR;AOgDJ,AKEA,ANAA,ADAA,ATDA,AIhDC,AsI7Le,AkBkLZ,CxJQJ,EAAY,CwJRR,IlBlLY,AkBkLR,CAAC,IlBlLY,CtI0LE,AsI1LD,IAAN,CAAW,KkBkLvB,ClBlL6B,CAAC,CAAD,AkBkLN,ClBlLX,GkBkLe,EAAE,CAAC,OxJQtB,AwJRmB,CAAW,IAAf,CAAoB,KxJQxB,EwJRwB,CxJQxB,AwJRwB,ExJQxB,CAAvB,OwJR+C,CAAW,UAAS,IAAT,EAAe,GAAf,EAAkB;AjJ2D5E,AKEA,ANAA,ADAA,ATDA,AsD5LI,AoFjDS,AkBkLP,EtGjIF,QAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,WAAP,EAA+B;A3C4LnC,AKEA,ANAA,ADAA,ATDA,AsD3LQ,AoFlDC,AkBkLH,MAAA,GtGhIO,AsGgIJ,GAAG,EAAE,CAAC,EtGhIP,CAAc,AsGgIV,CAAO,KtGhIX,CAAqB,GsGgIjB,CAAiB,GAAjB,CAAN,GtGhIE;A3C2LR,AKEA,ANAA,ADAA,ATDA,AsD3LQ,AoFlDH,AkBkLM,StGhIE,CsGgIF,IAAI,GtGhIP,AsGgIiD,CtGhInC,GsGgIuC,CAAA,CAAA,CtGhIrD,AsGgIG,CtGhIkB,WAArB;A3C2LR,AKEA,ANAA,ADAA,ATDA,AsCxNQ,AlB5CR,AkCyEQ,AoFpGqC,AkBmOlC,ClBnOX,EChBA,CvH2Ca,KkB4CA,AgB6BA,CsG+HI,MtG/HT,CAAa,ChB7Bb,CsH4JkB,EtH5JD,CAAjB,AsH4JiD,CtG/HjD,ClCzEyB,AkCyEL,EsG+HiC,CxIxMzB,AwIwMyB,CAAA,CAAlD,MtG/HH,kBlCzEsD,EAA9D;AToQA,AKEA,ANAA,ADAA,ATDA,AsIZI,AhF/KC,AsG8HM,EtBiDP,ChFpLA,KgFoLA,CAAA,CsBjDwB,QtBiDxB,CAAA,AsBjDiC,GAAoB,IAAI,CAAA,CAAA,CAAlD,OtBiDP,GAAA,UAAkB,MAAlB,EAAkC,QAAlC,EAA0D,WAA1D,EACI,SADJ,EACuB,IADvB,EACiC,IADjC,EAC4C;A3HWhD,AKEA,ANAA,ADAA,ATDA,AsIZ2B,AKpS3B,AiBkPW,QtBkDgB,EsBlDY,EtBkDZ,KAAA,KAAA,CAAA,CsBlD0B,CtBkD1B,EsBlD8B,IAAI,CAAA,CAAA,CAAlD;AjJ8DX,AKEA,ANAA,ADAA,ATDA,AsIb2B,A9F/EvB,AoH8BE,EpH9BF,I8F+EuB,AsBjDrB,ItBiDqB,C9F/EvB,CAAA,C8F+EuB,CAAA,CsBjDZ,GAAG,EAAE,CpH9BhB,AoH8BiB,CpH9BjB,EoH8Bc,CpH9Bd,AoH8BqB,GpH9BrB,MoH8Bc,CAAiB,GpH9B3B,MoH8BoC,GpH9BxC,CoH8B4C,CpH9BpB,EoH8BuB,CAAC,SAAlC,KAAgD,KAA5D;AjJ8DN,AKEA,ANAA,ADAA,ATDA,AsIdmC,A9F7E3B,AoH6BF,MAAA,EpH7BQ,EAAE,GAAG,EoH6BJ,EpH7BQ,CAAC,AoH6BN,EAAE,CpH7BD,AoH6BE,CpH7BO,EoH6BV,CAAO,EpH7BQ,CAAd,EAAiB,IoH6BlB,CAAiB,IpH7BU,CAAC,CAA3B,CAAX,EoH6BoC,IAAI,GAAG,CAAC,SAAlC,KAAgD,KAA5D;AjJ8DN,AKEA,ANAA,ADAA,ATDA,AwC3FQ,AoH6BF,MAAA,EpH7BQ,EAAE,GAAG,IAAI,CAAC,EoH6BJ,CpH7BD,CAAS,CoH6BL,EAAE,CAAC,CpH7BO,CAAL,CoH6BL,CAAO,CpH7BO,KAAK,GoH6BnB,CAAiB,CpH7BrB,EAA8B,SAAS,CAAC,CAAV,AoH6BK,GpH7BS,CoH6BL,GAAG,CAAC,IpH7BU,CAAC,KAAtD,CAAX,GoH6Be,KAA0D,EAA3E;AjJ8DN,AKEA,ANAA,ADAA,ATDA,AsIhBqC,A9HlBjC,AgCzDI,AoH6BF,EpJ4BF,IoJ5BE,EtB8C+B,A9F3EvB,EAAE,AoH6BN,CAAC,CtB8C0B,C9F3ElB,ChCyDH,EAAE,C8HkBmB,A9F3Ed,CAAC,GAAL,C8F2EkB,A9F3ET,C8F2ES,AsB9C/B,EtB8C+B,CsB9CX,CpH7BO,CAAd,EAAiB,AoH6BN,SpH7Be,CAAC,CAA3B,CAAX,CoH6BsB,CAAA,aAAJ,CAAkB,IAAI,CAAC,MAAvB,EAA6B,QAAA,CAAA;AjJ8DvD,AKEA,ANAA,ADAA,ATDA,AsIjBqC,A9H5OF,AgCkK3B,AoH6BA,CpJ/LR,K8H4OqC,E9F1EvB,AoH6BN,EtB6C6B,A9F1ErB,G8F0EqB,A9F1ElB,GoH6BH,CtB6CqB,A9F1Ed,CAAC,AoH6BN,GpH7BC,CAAS,KAAK,AoH4BsB,CpH5B3B,GAAS,KAAK,MAAvB,EAA+B,SAAS,CAAC,CAAV,GAAc,SAAS,CAAC,MAAvD,CAAX;A7B2FR,AKEA,ANAA,ADAA,ATDA,AsIlBgD,A9FxExC,AoH4BA,QAAA,CpH5BK,CAAL,GAAS,EAAT,CoH4BQ,EAAE;AjJ8DlB,AKEA,ANAA,ADAA,ATDA,AwC1FQ,AclGJ,AsG2HmD,EtG3HnD,KsG2HmD,EpHzB1C,AoH4BF,CtG9HP,CAAA,GdkGI,GAAa,GclGjB,CdkGqB,AclGrB,CdkGsB,CoHyB6B,CAA7B,CpHzBL,AoHyBf,CpHzBwB,CclG1B,CdkG4B,EclG5B,CdkG+B,EAAd,EAAkB,CAAlB,CAAb,GclGG,KAAP,EAAsB,MAAtB,EAAoC;A3C4LxC,AKEA,ANAA,ADAA,ATDA,AsIlBQ,A9FxEA,AcjGA,AsG8HF,MAAA,EtB2CQ,AhFzKF,CgFyKG,A9FxEF,CAAL,E8FwEU,C9FxED,AcjGA,EdiGT,CoH6BQ,CAAC,CtB2CO,AhFzKF,CgFyKG,CAAjB,GhFzKmB,IsG8HrB,CAAsB,CtG9HhB,GsG8HoB,CtG9HK,AsG8HJ,MtG9HU,KAAK,CsG8H1C,ItG9H+C,OAA7C,EACA;A3C0LR,AKEA,ANAA,ADAA,ATDA,AsIlBQ,A9FxEA,AchGI,AsG6HP,KAb0C,EAaxC,CtB2CO,CAAC,A9FxEF,EchGI,AsGgH8B,CtBwD7B,AsBxDS,CAAvB,EpHhBI,EchGI,CgFwKY,A9FxEF,C8FwEG,CAAjB,AhFxKkB,EdgGA,CAAC,EchGf,CdgGU,CAAS,EAAE,GAAG,EAAd,EAAkB,CAAlB,CAAd;A7B0FR,AKEA,ANAA,ADAA,ATDA,AsIlBQ,A9FvEA,AcjGI,AsG6HT,GAjIW,EAiIT,GtB2CS,CAAC,E9FvEA,AcjGE,CgFwKC,AsB5KJ,CAAZ,CAnGsB,CpHwMhB,AoH6BN,GtB0CsB,AhFxKZ,CgFwKa,CAAjB,ChFxKmB,MAAf;A3C0LZ,AKEA,ANAA,ADAA,ATDA,AsIlBQ,AlHpPR,AoB6KK,AcjGO,GdoFR,K8FoFU,CAAC,AlHpPC,EkC4EC,CgFwKC,MAAM,CAAC,AhFxKb,CgFwKJ,AhFxKkB,IAAd,ClC5EZ,AkC4E+B,ClC5EE,IkC4ErB,EAA0B,GlC5EtC,EAAoD,CkC4ExC,YlC5EZ,EAA0E;ATsQ1E,AKEA,ANAA,ADAA,ATDA,AsIlBQ,AhGtMA,AlB7CJ,AkC2EK,AqFlHT,AiB+OE,EAAA,EjB/OW,CiB+OR,CAAC,EtB2CQ,ChGtMD,AlB7CF,CkHmPK,AsB3Cd,GtB2CiB,AsB3CN,EjB/OW,AiB+OT,CtH3JP,AsH2JQ,EjB/O+B,CL0RtB,AhGtMF,CgGsMG,EAAlB,ChGtMmB,CsH2Jd,CAAY,IxIxMM,CAAC,KwIwMnB,CAAuB,GAAvB,EAA4B,CtH3JL,ClB7CS,GAAG,CAAH,GAAO,CAArB,AwIwMmB,CxIxMvC,CkB6CH,AlB7C+C,EwIwMd,EAAe,IAAf,CxIxM9B,CAAP,AwIwMwD;AjJ6D5D,AKEA,ANAA,ADAA,ATDA,AsIlBQ,AlHnPP,AkC2EI,AqFjHD,AiB8OA,EjB9OA,CrFyGA,IqFzGK,CLyRK,CKzRV,CLyRY,GAAG,MAAM,AKzRf,CLyRgB,EAAlB,SKzRJ,EAAkB;AhI2StB,AKEA,ANAA,ADAA,ATDA,AsIjBQ,AsB5CJ,QtB4CQ,AsB5CJ,ItB4CQ,CsB5CZ,EtB4Ce,KAAK,IAAhB;A3HiBR,AKEA,ANAA,ADAA,ATDA,AsIjBQ,AlIhCR,AkDpII,AqFrHI,ErFqHJ,ElDoIQ,IkIgCA,AhFpKR,AqFrHU,CrFqHV,GgFoKY,ElIhChB,CkIgCmB,GKzRK,ELyRA,CKzRG,ErFqHvB,CgFoKI,AhFpKA,QAAA,CAAA,AqFrH+B,CAAC,KAAhC,GrFqHJ,EAAI,OAAJ,EAAS;A3CqLb,AKEA,ANAA,ADAA,ATDA,AsIjBQ,AKzRA,AiB4OJ,IAAA,ItB6CQ,AKzRE,AiB4ON,CAAC,GtB6CO,EKzRI,CLyRD,EKzRI,AiB4OnB,GtB6CoB,AsB7CJ,ItB6CZ,AsB7CgB,EAAE,CAAC,EjB5OQ,CAAC,IiB4OZ,CAAW,CjB5O3B,GiB4OY,CAAoB,UAAS,IAAT,EAAe,GAAf,EAAoB,IAApB,EAAwB;AjJ8DhE,AKEA,ANAA,ADAA,ATDA,AsIjBQ,AKzRA,AiB4OF,MAAA,EtB6CM,AKzRE,CAAC,AiB4ON,GtB6CO,AKzRE,AiB4ON,GtB6CO,KAAK,AsB7CJ,CAAC,CjB5OO,CAAC,AiB4ON,CtB6Cf,AKzRA,AiB4OgB,GAAH,CAAO,SAAP,CAAiB,GAAjB,CAAD,CAAd;AjJ8DN,AKEA,ANAA,ADAA,ATDA,AIpDA,AuItPQ,AiB4OF,CxJUN,KwJVM,EjB5OQ,CAAC,CiB4OL,CxJUE,CuItPM,CiB4OL,EAAE,CAAC,GAAH,CAAO,CxJUpB,CuItP4B,CvIsPN,AuItPO,CAArB,KiB4OK,CAAiB,IAAjB,CAAP;AjJ8DN,AKEA,ANAA,ADAA,ATDA,AsIjBQ,AlInCJ,AuItPI,AiB4OF,ExJUF,IwJVE,EjB5OM,CLyRC,CsB7CH,CAAC,CxJUP,CkImCa,AlInCb,AuItPI,CLyRU,AsB7CZ,GtB6Ce,AsB7CJ,MxJUb,CAAA,IkImCI,EAA0B,CAAC,AlInC/B,CAAA,EkImCkC,ClInClC,KAAA,CAAA,EkImCI,ClInCJ,CkImC6C,CAAC,IAAI,CAA9C,AlInCJ,EkIoCI;A3HgBR,AKEA,ANAA,ADAA,ATDA,AsIhBY,AlIpCR,AuItPI,AiB4OA,ExJUJ,MuItPQ,AiB4OJ,CAAC,CtB8CS,CsB9CP,CxJUP,CAAA,CkIoCkB,AK1Rd,AiB4OM,CAAC,CAAD,CtB8CW,AsB/CR,MxJWb,CAAA,CkIoC6B,CAAC,CAAD,CAArB,IlIpCR,CAAA,GAAA,KAAA,CAAA,GAAA,QAAA;AOoDJ,AKEA,ANAA,ADAA,ATDA,AsIhBY,AlIpCR,AoCtCA,AmG/MI,AiB2OA,ExJUJ,AoCtCA,EmG/MI,IiB2OA,CtG7HJ,AsG6HK,CtB8CS,AKzRJ,CnG+MV,AmG/MW,AiB2OJ,CxJUP,AoCtCA,CpCsCA,CkIoCkB,AsB9CR,CAAC,CAAD,CtB8CW,AKzRjB,GAAgB,CnG+MpB,AcjGA,AqF9GI,CnG+MJ,AmGzNkB,CvI+PlB,CAAA,CkIoC6B,CAAC,A9F1E9B,C8F0E+B,E9F1E/B,C8F0EkC,CAAL,CAArB,O9F1EH,EpCsCL,CAAA,GAAA,IoCtCA,CpCsCA,CAAA,AoCtCqB,GpCsCrB,AoCtCA,EAAgC,epCsChC;AOoDJ,AKEA,ANAA,ADAA,ATDA,AsIhBY,AlIpCX,AoCvCQ,Ac/FD,AsGyHS,CxJSjB,EAAY,IwJTN,CpH1BG,E8F2ES,CAAC,ElIxCG,AkDlIP,CgF0KQ,AhF1KP,CgF0KQ,AhF1KP,GgF0KU,A9F3ElB,Ec/Fa,EgF0KA,C9F3Eb,E8F2E2B,CAAC,AhF1KtB,Ed+FN,C8F2E+B,A9F3E/B,Cc/FuB,Cd+FvB,Ac/FwB,CAAC,CgF0KZ,GAA0B,ChF1KT,CgF0K3B,ClIxCA,KkDlIJ,KlDkIc,GAAA,EAAA,CAAtB;AOwDA,AKEA,ANAA,ADAA,ATDA,AsIhBY,A9F5EH,Ac9FJ,AqF9GG,AiB0OF,KtG/HO,CdiGJ,AoH8BH,EjB1OM,ELwRM,AsB9CR,CtB8CS,AsB9CR,GtB8CY,CAAC,AsB9ClB,CpH9BG,E8F4EkB,AsB9CT,CpH9BT,CAAA,AmG5Me,CAAC,CLwRH,GAAc,AKxRxB,CLwRyB,GAAG,CKxRN,GLwRZ,GAA0B,EAApC,KKxR6B,IAAjC,EACA;AhIuSR,AKEA,ANAA,ADAA,ATDA,AsIfY,A9F9EW,AmG1MX,AiByOJ,MtB+CI,AKxRA,EiByOJ,EtB+CQ,CKxRC,ELwRE,AsB/CN,CjBzOO,CiByOL,EtB+CQ,CAAC,CsB/CL,CAAC,CtB+CD,AhF/KN,AsGgIM,CtB+CS,AsBhDV,EjBxOY,CAAC,CLwRZ,EAAe,CAAC,EKxRvB,CLwR0B,IAAnB,CAAP;A3HeZ,AKEA,ANAA,ADAA,ATDA,AsIfY,AhGzMJ,AqG/EI,AiByOJ,MtB+CI,AKxRA,EiByOJ,CtH1JK,CgGyMG,EKxRE,CLwRC,CsB/CL,CjBzOO,CiByOL,CtB+CO,CAAC,AhGzMhB,EsH0JY,CtB+CD,AhGzMM,AsH0JJ,CtB+CO,AsB/CR,GtH1JS,AqG/EE,CLwRZ,AKxRa,ELwRE,CAAC,GAAG,AKxR1B,ILwRO,CAAP,OhGzM0B,WAA9B;A3BwNR,AKEA,ANAA,ADAA,ATDA,AsIfY,A9FhFa,AcjGZ,AqFvGJ,AiBsOS,GtG/Hd,EqF3GI,CL4RI,CsBlDN,CpH9BmB,E8FgFT,C9FhFS,AmGtMjB,ELsRW,G9FhFM,C8FgFF,CAAC,GAAL,A9FhFM,C8FgFG,A9FhFH,EAAA,E8FgFN,EAAe,CAAC,GAAG,IAAnB,CAAP;A3HeZ,AKEA,ANAA,ADAA,ATDA,AsIfY,AlHvPZ,AoBsKyB,AmGrMb,AiBuOP,KAXe,CtB0DR,A9FjFa,AoHuBrB,GxI7LY,AoBsKS,C8FiFT,AKtRE,EnGqMO,C8FiFN,IAAI,A9FjFE,C8FiFD,GAAL,AKtRU,CLsRD,ElHvP5B,AuH/BgC,CvHgC5B,CkHsPe,EAAe,AlHvPlC,CkHuPmC,ClHrP/B,EkHqPkC,GlHvPtC,CkHuPmB,AKtRyB,CLsRhC,AlHpPR,AuHlCyC,GvH+B7C,EAII,AuHnCQ,WvH+BZ,EAIwB;ATkQxB,AKEA,ANAA,ADAA,ATDA,AsIfS,AlHjPL,AoB+JgC,AmGnMxB,AiBsOR,ExIlMA,EwIkMA,CxIlMG,CuHpCK,EvHoCF,AwIkMF,CAAC,ExIlMI,AuHpCI,CiBsOb,EjBtOgB,CvHoCH,AwIkMF,IxIlMM,GwIkMN,CAAA,EjBtOgB,CAAC,KvHoCf,AuHpCL,CvHoCsB,CAAjB,CAAb,CwIkMW,CAAa,UAAC,IAAD,EAAK;AjJ8DjC,AKEA,ANAA,ADAA,ATDA,A2IpSY,AiBqO0B,MjBrO1B,MAAM,CiBqOoB,EjBrOjB,AiBqOmB,CAAC,GAAH,CAAO,MjBrOb,CAAC,EiBqOK,CAAiB,GjBrO3C,KiBqOmD,CAAC,IAAI,CAAC,GAAN,EAAW,IAAX,CAAzB,CAAA;AjJ+DtC,AKEA,ANAA,ADAA,ATDA,AsIfQ,AlHlPJ,AoBgKI,AmGnMC,AiBoOuE,KAAjE,CxIjMP,AwIiMJ,EpHjCU,C8FkFD,C9FlFG,G8FkFR,A9FlFW,G8FkFC,ClHlPD,AoBgKI,CAAC,E8FkFhB,ClHlPe,CoBgKJ,CAAU,CAAC,KAAK,CAAL,EpBhKI,CoBgKK,IpBhKA,CoBgKK,KAAd,GpBhK1B,AoBgKgD,EpB/JhD,CoB+JyB,IAA8B,UAAxC,IAAsD,UAAjE;A7BiGR,AKEA,ANAA,AVDA,AsIfQ,AlHjPA,AoB+JA,Ac5FJ,AsG6HA,EtG7HA,ElCnEI,AwIgMJ,GxIhMO,CAAC,AoB+JE,AoHiCN,CtBiDK,AlHjPF,AwIgMF,CxIhMD,AoB+JQ,Ac5FZ,CAAA,EgF8KI,AlHjPS,AoB+JE,AoHiCf,GtBiDgB,AlHjPA,AwIgMJ,CxIhMK,AoB+JE,CpB/JH,AoB+JI,CpB/JP,CkHiPT,AhF9KJ,CAAA,ClCnEsB,AoB+JP,CAAU,AoHiCb,CpHjCc,AoHiCd,GxIhMR,AkCmEJ,Ed4F+B,CAAL,Ac5F1B,Gd4FmC,GoHiCvB,CAAa,CpHjCe,Ic5FxC,Ed4F0B,GAAuB,AoHiCvB,GpHjCD,CoHiCA,EAAK,CpHjC0B,UAAzC,IAAuD,UAAlE;A7BiGR,AKEA,ANAA,AVDA,AsIfQ,AlHjPA,AoBgKA,Ac5FA,AqFxGA,AiBmO+B,IxI/L/B,GAAG,CAAC,AkCoEA,AqFxGA,CLqRC,AlHjPF,AoBgKE,Ac5FA,ClCpEL,AoBgKA,G8FiFA,AlHjPS,AoBgKA,AmGpMA,AiBmOsB,CtG3HrB,CsG2HuB,CtBkDrB,AlHjPA,AwI+LsB,CxI/LrB,AoBgKA,CpBhKD,AoBgKE,AmGpMA,CvHoCL,AuHpCL,AiBmO2B,CtBkD/B,AsBlDsC,ExI/LpB,CoBgKT,Ac5FT,AqFxGmB,CnGoMC,CAAC,Ac3FrB,ElCrEA,EuHpCyB,AiBmOM,CpH/BL,AoH+BsB,CpH/B3B,GAAS,AmGpMA,AiBmOsB,CjBnOpD,AiBmOqD,EpH/BjC,AmGnMpB,EiBkO+B,CAAA,CpH/BM,UAA5B,IAA0C,UAAnD;A7BgGR,AKEA,ANAA,AVDA,AsIfQ,AlHjPA,AoBgKA,Ac3FI,AqFxGA,AiBiOsD,IxI9L1D,CwI8LQ,CAAZ,CxI9LO,CAAC,CkHiPC,AlHjPF,AoBgKE,CpBhKL,AoBgKA,Cc3FS,EgF4KT,AlHjPS,AoBgKA,G8FiFG,AlHjPA,CAAC,AoBgKA,CpBhKD,AoBgKE,CpBhKL,AkCqEL,CgF4KJ,AhF5KkB,ElCrEA,CoBgKT,CAAW,Ac3FhB,Cd2FiB,EpBhKrB,GoBgK0B,CAAL,GAAS,GAAV,IAAiB,UAA5B,IAA0C,UAAnD;A7BgGR,AKEA,ANAA,AVDA,AsIfK,AlHjPA,AoBiKG,Ac5FC,AqFxGA,AiBiON,GtBmBC,AlHtNA,AwIkLS,EAiBR,IxI5LD,AoB+JS,EoHYA,EAiBA,CpH7BL,CoHYK,CAAX,CpHZmB,AoH1NG,CAwPtB,CpH9BqB,GAAG,KAAK,CAAvB;A7B+FR,AKEA,ANAA,AVDA,AoB9PQ,AoB+JA,Ac5FH,GAND,ClC7DI,GAAG,CAAC,CAAD,AoB+JE,CpB/JL,GAAS,EoB+JT,CpB/JY,CAAC,CAAD,AoB+JE,CpB/Jd,CoB+JgB,GAAG,KAAK,CAAxB;A7B+FR,AKEA,ANAA,AVDA,AoB9PQ,AoBgKA,AmGrMA,AiBiON,EAAA,ExI5LM,CwI4LH,CAAC,CxI5LK,CAAC,AuHrCA,CvHqCD,CAAH,AwI4LN,CpH5Ba,EpBhKE,AwI4LJ,EpH5BL,AoH4BO,CxI5LK,AwI4LJ,CxI5LK,AuHrCA,CvHqCD,CAAZ,CuHrCgB,IAAI,AiBiOf,CjBjOgB,AiBiOJ,KjBjOD,CAAW,IiBiOtB,CjBjO2B,AiBiOJ,GAAvB,CjBjO+B,CAAC,AiBiOJ,IjBjOD,CAAU,KiBiOA,IAAT,CjBjOmB,CAAC,AiBiOL,IAAf,EjBjOD,AiBiOoB,CjBjOpC,KACT,IAAI,CAAC,KAAL,CAAW,KAAK,IAAI,CAAC,IAAL,CAAU,KAAK,GAAG,MAAlB,CAAhB,CADP;AhImSR,AKEA,ANAA,AVDA,AsCxNQ,AlBtCA,AoBgKH,AmGnMG,AiB+NJ,GpHxCA,CpBpJI,AuHnCA,AiB+NJ,GxI5LO,CAAC,AwI4LJ,CtHtJK,AlBtCF,AwI4LF,CxI5LD,GAAS,AuHnCA,GvHmCG,CkBsCZ,AlBtCa,AuHnCA,AiB+NjB,CxI5LgB,CAAZ,CkBsCgB,AqGzEhB,AiB+NY,CtHtJK,CAAjB,EsHsJgB,EAAE,CAAC,OAAH,CAAW,IAAf,CAAoB,UAAS,IAAT,EAAa;AjJkErD,AKEA,ANAA,AVDA,AoB9PK,AuHlCG,AiB8NF,MAAA,EjB9NQ,EiB8NJ,CjB9NO,AiB8NN,GjB9NU,CiB8Nf,GjB9NmB,AiB8NP,CjB9NQ,AiB8NpB,EjB9Ne,GAAU,CAAX,GAAgB,SAA5B;AhIgSR,AKEA,ANAA,AVDA,A4JlEM,MAAA,IAAI,CAAC,QAAL,GAAgB,EAAhB;AjJkEN,AKEA,ANAA,AVDA,AoB/PI,AuHjCI,AiB8NH,ExI7LD,GAAG,AwI0La,CxI1LZ,AwI0LJ,CxI1LG,CAAH,CuHjCS,EvHiCA,EuHjCI,CAAC,EvHiCd,CuHjCiB,CAAb,EAAgB,CAAC,GAAG,SAAS,GAAG,GAAhC,EAAqC,CAAC,EAAtC,EACA;AhI+RR,AKEA,ANAA,AVDA,AoB9PI,AuHjCQ,AiB6NR,IAAA,EjB7NQ,EiB6NJ,CxI5LG,AwI4LF,GxI5LL,AuHjCc,CAAC,AiB6Nf,GAAY,CjB7NJ,CACI,CAAC,CiB4NG,EjB5NC,AiB4NC,CAAC,GjB5NE,CAAC,GAAL,AiB4ND,CjB5NU,AiB4NC,CjB5NA,GAAD,AiB4Nd,CAAoB,EjB5NC,CAAhB,IAAqB,GiB4NG,EjB7NjC,EAEI,AiB2NoB,CjB3NnB,CiB2NkC,EjB3N9B,EiB2Ne,EjB3NX,AiB2N8B,CjB3N7B,GAAL,CAAS,CAAC,GAAD,GAAO,CAAhB,IAAqB,MAF9B;AhI+RZ,AKEA,ANAA,AVDA,AsIhBI,AlH9OH,AuH9BQ,AiB0NH,EtBkDF,IsBlDE,EtBkDF,CAAA,CsBlDM,CAAC,IAAL,GtBkDF,AsBlDc,CtBkDd,GsBlDkB,CAAC,CAAjB,ItBkDF,GAAA,UAAU,MAAV,EAAwB;A3HgB5B,AKEA,ANAA,AVDA,AsIfQ,AlItCR,AwJbK,IxJaO,CwJfI,CAAZ,CALwD,CtB0D9C,AsBlDV,ItBkDc,GAAG,ClItCrB,IkIsC0B,IAAlB;A3HeR,AKEA,ANAA,AVDA,AsIfQ,AhF7KJ,AqFhGI,AiB2NJ,EtG3HA,EqFhGI,IL6QM,EhF7KV,AqFhGU,CrFgGV,AqFhGW,CL6QG,GAAG,AK7Qb,CAAY,IL6QM,AhF7KtB,CAAA,CqFhGsB,CAAC,CL6QnB,AK7QkB,CrFgGtB,AqFhGI,EAAuB,CrFgG3B,KqFhGiC,CAAC,CAAD,CAA7B,IrFgGJ;A3C4LJ,AKEA,ANAA,AVDA,AsIfQ,AhF5KA,AqFjGH,AiB2ND,GjB5Q2C,KL8TjC,GhF5KC,CgF4KG,GAAG,GhF5KC,CAAC,CgF4KG,IAAlB,EhF5KO,CAAgB,IAAhB,CAAP;A3C2LR,AKEA,ANAA,AVDA,AsIfQ,AlIzCR,AoCvCI,Ac5FC,AqFhGD,AiB0NA,CxJSJ,CoCvCI,AmG5LA,CrF6FA,KgF+KU,GlIzCF,AoCvCR,C8FgFc,A9FhFd,CmG5LW,EL4QM,AK5QjB,KL4QsB,C9FhFtB,CAAA,CpCuCJ,CkIyCQ,ClIzCgB,AuInOR,InG4LZ,GAAA,KmG5LA,EAA0B,GnG4LlB,SAAR,EAA4B,EmG5L5B,EAA0C;AhI2R9C,AKEA,ANAA,AVDA,AsIdQ,AlI1CJ,AoCtCI,AmG5LA,EvIkOJ,MoCtCU,AmG5LA,CL4QD,C9FhFG,G8FgFR,A9FhFW,CpCsCf,AuIlOgB,CvIkOhB,CkI0CgB,C9FhFG,AmG5LA,CnG4LC,GAAL,C8FgFO,A9FhFE,C8FgFD,IAAP,AlI1ChB,AoCtC6B,CpCsC7B,AoCtCe,CmG5LgB,CL4QD,A9FhFE,AmG5LA,GvIkOhC,CkI0CgB,AlI1ChB,EuIlOI,CL4QiC,AlI1CrC,CAAA,CAAA,AoCtCyC,CAAC,CAA3B,CpCsCf,AoCtCI,C8FgFuC,CAAC,GlI1C5C,CkI0CgB,GAAmC,IAA/C;A3HcR,AKEA,ANAA,AVDA,AsIdQ,AlI1CJ,AoCtCI,AcvFJ,AqFrGI,AiBwNJ,ExJUA,AkD7HA,EsGmHA,IpH5BU,AcvFV,AqFrGU,AiBwNN,CtBoDK,AhFvKT,AsGmHK,CpH5BO,G8FgFR,A9FhFW,AmG5LA,AiBwNf,CxJUA,CAAA,CkI0CgB,AK5QE,AiBwNL,CpH5BM,CAAC,EoH4BH,CpH5BF,C8FgFO,A9FhFE,AoH4BL,CtBoDI,AhFvKvB,AsGmHoB,CtGnHhB,GgFuKY,AlI1ChB,AoCtC6B,CpCsC7B,AoCtCwB,E8FgFM,AsBpDb,CpH5BgB,AoH4BL,CtGnHxB,AqFrG8B,CrFqG9B,AqFrG+B,CL4QnB,AlI1ChB,CAAA,AwJVa,CpH5ByB,AoH4BL,CtBoDI,ClI1CrC,CAAA,AuIlOI,CvIkOJ,CoCtCe,CcvFf,CgFuK2C,AlI1C3C,AoCtC6C,C8FgFD,AhFvKxC,EsGmHsC,EtBoD1B,ClI1ChB,CwJViC,CtBoDkB,AhFvKnD,CduFsD,AoH4BN,CpH5BO,AcvF9C,CduFoC,C8FgFzC,E9FhFuD,AoH4B1B,EAAsB,GAAtB,EAA2B,EpH5BQ,CAAC,EoH4BpC,EAAgC,CpH5BlD,CAAX;A7B8FR,AKEA,ANAA,AVDA,AsIdQ,AhG1MA,AlCgKJ,AoCtCI,AmG5LA,AiBwNF,ExJUF,MoCtCU,AmG5LA,CL4QD,AhG1MA,CE0HG,AoH4BJ,GtBoDJ,A9FhFW,CF1HX,AlCgKJ,CAAA,AuIlOiB,AiBwNJ,CtBoDG,ChG1MC,AE0HE,CF1Hf,AE0HgB,AmG5LA,AiBwNJ,GpH5BD,C8FgFO,A9FhFE,AoH4BJ,CtBoDG,GsBpDC,CtBoDR,AlI1ChB,AoCtC6B,AoH4BJ,CxJUzB,AoCtCe,E8FgFe,A9FhFE,EpCsChC,CAAA,CkI0CgB,AK5QoB,CAAC,AiBwNrB,CxJUhB,CkI0CqC,AlI1CrC,AwJVE,CxJUF,CoCtCyC,CAAC,CpCsC1C,AoCtCe,CAAX,AmG5LA,CL4QuC,CAAC,ClI1C5C,GkI0CgB,GAAmC,IAA/C;A3HcR,AKEA,ANAA,AVDA,AsIdQ,AlI1CP,AoCtCO,AmG3LA,AiBuNF,CxJMN,EAAY,GwJNN,EpH5BQ,AmG3LF,CL2QC,C9FhFG,AoH4BN,CAAC,EtBoDH,A9FhFW,EpCkCK,AuI7NL,CL2QC,C9FhFG,CAAC,AmG3LF,CiBuNhB,CAAc,CpH5BD,C8FgFO,A9FhFE,C8FgFD,AK3QA,CAAC,AiBuNtB,CAAmB,EtBoDL,A9FhFa,CAAL,E8FgFM,AK3QZ,AiBuNhB,CpH5B+B,EmG3LA,CL2QjB,AK3QZ,EnG2LkC,C8FgFD,K9FhFtB,C8FgF4B,AlI9CnC,CkI8CoC,A9FhFE,I8FgF9B,GAAmC,E9FhFI,CAAC,C8FgFpD,AlI9CgB,AoClC0B,GpCkC1B,AoClCwC,EpCkCxC,CAAxB,MoClCyE,CAAC,MAAvD,CAAX;A7B8FR,AKEA,ANAA,AVDA,AsIdK,A9F/EG,AmG5LA,AiBuNF,GtByCF,GsBzCE,EjBvNQ,CnG4LD,CAAL,CoH2BG,EpH3BM,CmG5LG,AiBuNN,CpH3BN,EmG5Le,OAAf,AiBuNgB,CAAC,EAAE,CAAC,GAAH,CAAO,SAAP,CAAiB,KAAjB,CAAD,CAAlB;AjJkEN,AKEA,ANAA,AVDA,AwC7FQ,AmG3LA,AiBsNF,MAAA,EjBtNQ,CnG2LD,EoH2BF,GpH3BH,AmG3LY,AiBsNN,EAAE,CpH3BK,AmG3LG,AiBsNP,EpH3BM,CoH2BT,CAAO,CpH3BK,EAAlB,KmG3L4B,CAAC,AiBsNvB,CAAiB,IjBtNvB,CiBsNM,CAAR;AjJkEN,AKEA,ANAA,AVDA,AwC7FQ,AmG3LA,AiBsNF,MAAA,EjBtNQ,CnG2LD,AoH2BJ,CpH3BD,EoH2BI,CpH3BK,CmG3LG,AiBsNN,CpH3BN,AoH2BO,EjBtNQ,CiBsNX,CAAO,SAAP,CjBtNuB,AiBsNN,CjBtNO,EiBsNxB,CAAN,GjBtNE;AhIwRR,AKEA,ANAA,AVDA,AoB/PA,AoBkKQ,AmG3LA,AiBsNF,MAAA,EjBtNQ,CvHyBE,AoBkKH,AmG3LE,EiBsNJ,CjBtNO,AiBsNN,GpH3BJ,GAAc,AmG3LE,CAAC,CnG2LD,AmG3LhB,CiBsNF,CAAgB,CpH3BK,CpBlK3B,CAAgC,AoBkKxB,CoH2BkB,CAAC,ExI7L3B,EAA8C,AwI6LxB,IAAa,CxI7LnC,AwI6LM,ExI7LqD,AwI6LrB,KAAhC,EAAuC,CAAvC;AjJkEN,AKEA,ANAA,AVDA,AoB9PI,AoBkKI,AmG5LA,AiBsNF,MxI5LE,AwI4LF,EjBtNQ,CrF4FV,AqF5FW,EvH0BF,AoBkKE,AoH0BJ,CjBtNO,AiBsNN,GpH1BJ,CpBlKU,EuH1BM,AiBsNlB,CxI5LF,AuH1BqB,AiBsNN,CjBtNX,CvH2BJ,AkCiEA,AqFxG0C,GiBkOtB,CAAC,CAAD,CAAlB,EAAuB,KAAK,CAAC,CAAD,CAA5B;AjJkEN,AKEA,ANAA,AVDA,AoB7PQ,AoBiKH,Ac/FG,AsGyHF,GpHvCF,GoHuCE,KxI3LS,AwI2LJ,CxI3LK,AwI2LJ,CtGzHG,IlClEM,CkCkED,AsGyHd,CAAa,CxI3LK,EwI2LF,CxI3LN,AwI2LO,CtGzHf,AsGyHc,CAAhB,ExI3LyB,AwI2LJ,ExI3LZ,CwI2Le,CAAC,CAAD,CxI3LO,AwI2L/B,IxI3LE;AT6PR,AKEA,ANAA,AVDA,AoB7PK,AkCkEA,AqF5FG,AiBqNF,IjBrNE,CrFyFK,CsG4HP,GjBrNO,AiBqNJ,CjBrNK,AiBqNJ,IjBrNF,CACI,AiBoNN,CAAU,QAAV,CAAmB,EjBpND,CAAC,EiBoNnB,IjBpNM,GAAuB,MAAM,CAAC,CAAP,GAAW,CAAZ,GAAkB,MAAM,CAAC,CAAP,GAAW,CAA7B,GAAkC,MAAM,CAAC,EAA/D,GAAoE,CADxE,EAEI,YAAY,CAAC,MAAb,GAAuB,MAAM,CAAC,CAAP,GAAW,CAAZ,GAAkB,MAAM,CAAC,CAAP,GAAW,CAA7B,GAAkC,MAAM,CAAC,EAA/D,GAAoE,CAFxE;AhIuRR,AKEA,ANAA,AVDA,AwC7FA,AoH2BK,KAVY,CAAb,GpHjBJ,SAAA,GclGa;A3C+Lb,AKEA,ANAA,AVDA,AoB9PI,AoBgKH,AmGvLO,AiBmNJ,CpHxRJ,EAAA,CoHwRI,ExI5LI,EwI4LA,CjBnNK,AiBmNJ,ExI5LI,EuHvBI,CAAC,CiBmNd,CxI5Lc,CuHvBG,CAAb,AiBmNW,CxI5Lf,CuHvBoB,CvHwBpB,AuHxBqB,GAAG,CiBmNT,CAAA,IjBnNe,CAAC,MAA3B,EAAmC,CAAC,CiBmNzB,CAAgB,EjBnNa,CAAxC,AiBmNW,EjBlNX,AiBkNgC,GAArB,EAA0B,UAA1B,EAAsC,UAAC,IAAD,EAAO,KAAP,EAAc,GAAd,EAAmB,MAAnB,EAA2B,KAA3B,EAAgC;AjJkEzF,AKEA,ANAA,AVDA,AsIfI,AlH9OI,AkC4DK,AqFnFD,AiBkNN,EtBmDF,ChFlLA,GqFnFQ,AiBkNN,EtBmDF,CAAA,CsBnDM,CxI3LK,AuHvBE,AiBkNN,CxI3LH,AuHvBU,IAAN,CAAW,CLqQnB,CAAA,AsBnDE,CAAc,GjBlNS,CAAC,AiBkNxB,CjBlNuB,AiBkNJ,CjBlNb,EAAsB,EiBkN5B,EtBmDF,EKrQoC,CLqQpC,AKrQqC,CAAC,GAAG,CAAL,CAA5B,EADJ,ELsQU,MAAd,EAA8B,IAA9B,EAA0C;A3He9C,AKEA,ANAA,AVDA,AsIdQ,AlH/OH,AkCsED,AsGqHE,EtGrHF,IsGqHE,EtBoDQ,AhFzKV,CAAA,EsGqHO,EtBoDQ,CsBpDL,EtBoDQ,MAAM,CAAC,AhFzKzB,CAAI,AsGqHgB,CAAC,EtBoDH,AsBpDK,CAAC,EtBoDQ,CsBpDX,CtGrHjB,AsGqHwB,CtGrHxB,CgFyKgC,CAAC,IAAnB,EsBpDG,CtBoDuB,AhFzK5C,AsGqHsC,EtGrHlC,GsGqHiB,CtBoD6B,AsBpD9B,CtBoD+B,AsBpDjD,GtGrHF,CgFyKkB,ChFzKR,EgFyKgD,IAAI,CAAC,IAA3D;A3HcR,AKEA,ANAA,AVDA,AsCxNQ,AqG3DI,AiBiNN,MjBjNM,AiBiNN,GtHtJO,AsHsJJ,GAAG,CjBjNO,CAAC,ErG2DZ,EqG3DI,CrG2DW,AqG3DE,CiBiNL,CAAC,EAAE,CtHtJf,AsHsJgB,EjBjNQ,CiBiNX,CjBjNT,AiBiNgB,EjBjNQ,MAAxB,CiBiNS,CjBjNuB,AiBiNN,GAAjB,CAAD,CAAd,EjBjNM;AhImRZ,AKEA,ANAA,AVDA,AsIfQ,AlH/OJ,AuHrBK,AiBiNH,MxI5LE,AwI4LF,CxI5LG,CkH+OK,ElH/OA,CwI4LH,CAAC,CtBmDO,ClH/OD,EkH+OI,ElH/OA,EAAT,CwI4LP,CtBmDsB,AsBnDN,CtBmDO,AlH/OD,GwI4LF,CtBmDJ,AlH/OlB,AwI4LuB,GtBmDS,CsBnD9B,EAA2B,CtBmDO,CAAC,GsBnDnC,CtBmDgB,CsBnDkB,CAAlC,CtBmD0C,MAAM,CAAC,IAAjC,GAAwC,IAAI,CAAC,IAA3D;A3HeR,AKEA,ANAA,AVDA,AoB9PI,AuHrBC,AiBiNC,MxI5LE,AwI4LF,CxI5LG,GAAK,CwI4LH,CAAC,ExI5LM,IAAI,CAAT,GAAc,AwI4LrB,CAAiB,GxI5LnB,AwI4LsB,CAAC,CAAD,CAApB,EAAyB,GAAG,CAAC,CAAD,CAA5B,EAAiC,MAAM,CAAC,CAAxC;AjJkEN,AKEA,ANAA,AVDA,AsIhBQ,AlH9OJ,AuHnG2C,AiB+RzC,CjB/RN,KvHmGQ,AwI4LF,CxI5LG,CkH8OK,ElH9OD,CwI4LF,CAAC,CtBkDO,ClH9OF,EkH8OK,ClH9OF,GwI4Ld,CxI5LF,CkH8OwB,CAAC,AsBlDN,ItBkDD,AsBlDhB,GtBkD8B,IAAI,CAAC,IAAnB,GAA0B,MAAM,CAAC,IAAjC,GAAwC,IAAI,CAAC,IAA3D;A3HgBR,AKEA,ANAA,AVDA,AoB7PI,AwHnHJ,AgB+SM,ExI5LF,CAAC,GAAK,AwI4LJ,CxI5LK,EwI4LF,CxI5LK,AwI4LJ,KxI5LD,AwI4LH,CAAU,ExI5LO,GAAf,GAAsB,AwI4LxB,CxI5LF,AwI4LqB,KAAnB;AjJiEN,AKEA,ANAA,AVDA,AsIjBQ,AlH5OJ,AwI4LC,ExI5LD,CAAC,EwImLc,CxInLT,AwImLN,CxInLO,CkH4OG,ElH5OA,GkH4OK,ElH5OV,CkH4Oa,ElH5OC,GAAf,CkH4OoB,CAAC,ClH5OC,CAA1B,EkH4OkB,GAAc,IAAI,CAAC,IAAnB,GAA0B,MAAM,CAAC,IAAjC,GAAwC,IAAI,CAAC,IAA3D;A3HiBR,AKEA,ANAA,AVDA,AoB7PI,AwI4LA,ExI5LA,CAAC,CwI4LD,ExI5LM,CAAC,CwI4LH,CtG7HJ,AsG6HK,CxI5LK,KAAL,GAAc,GAAf,AkC+DJ,CsG6HA,ExI5L0B,CAA1B,AwI4LsB,OAAA,CAAA,eAAA,CAAgB,GAAhB,EAAqB,GAArB,EAA0B,UAA1B,EAAsC,UAAC,IAAD,EAAO,KAAP,EAAc,GAAd,EAAmB,MAAnB,EAA2B,KAA3B,EAAgC;AjJiEhG,AKEA,ANAA,AVDA,AsIjBQ,AlH3OJ,AkC+DI,AsG4HF,MAAA,EtBgDM,ClH3OD,CAAC,AwI2LF,CAAC,EtBgDM,AhF5KF,ElC/DE,EkH2OI,ClH3OD,AkC+DA,CsG4Hd,CAAc,CxI3LR,CkH2OA,EsBhDN,CxI3LqB,AkC+DnB,AsG4HiB,CtBgDK,ClH3OnB,GwI2LL,CtBgD6B,ClH3OD,CAAC,EkH2OI,ElH3OA,EAA5B,CkH2OH,EACA,ElH5OsC,CAAC,IAAI,CAAxC,IAA6C,CAApD;AT4PJ,AKEA,ANAA,AVDA,AsIhBY,AhGxMJ,AlBpCP,AhBmMD,AqCrTA,AaiLK,AsG4HC,IxJQM,AqCrTZ,Ca8Kc,CsG+HR,GtHvJO,CgGwMK,A7F9VlB,CmH6SW,GtBiDW,AsBjDR,CxJQd,EkIyCyB,EhGxMjB,GgGwMsB,AhGxMJ,EsHuJF,CAAC,CtBiDb,ChGxMJ,AsHuJmB,CAAC,GAAH,CAAO,SAAP,CAAiB,KAAjB,CAAD,CAAlB;AjJiEN,AKEA,ANAA,AVDA,AsIhBY,A7F/VZ,AmH8SM,MAAA,GAAG,CtBiDS,EsBjDN,EtBiDU,GAAG,GsBjDL,CtGhIN,AsGgIO,CtBiDS,CsBjDP,CAAC,EtBiDZ,CsBjDS,CAAO,SAAP,CAAiB,GAAjB,CAAD,CAAd;AjJiEN,AKEA,ANAA,AVDA,AsIhBY,A7FhWZ,AmH+SM,MAAA,ItBiDY,CsBjDP,CnH/SX,AmH+SY,EtBiDU,GAAG,IsBjDnB,CtBiDwB,AsBjDR,CAAhB,GtBiDM;A3HgBZ,AKEA,ANAA,AVDA,AsIhBY,AlI5CZ,AkDvIc,AsGkIR,CxJKN,EkDvII,GsGkIE,ItBiDY,ClI5CN,AwJLD,CAAC,EtBiDU,GAAG,IsBjDnB,CtBiDwB,AlI5C9B,AwJLsB,ExJKC,EkI4CX,CsBjDN,EAAuB,CAAvB;AjJiEN,AKEA,ANAA,AVDA,AsIfY,AlI7CR,AwJLE,ExJKF,IwJLE,KtBkDW,AsBlDN,CAAC,CxJKR,CAAA,CkI6CQ,GAAY,IsBlDlB,CtBkDuB,AsBlDN,ExJKnB,CkI6C4B,AlI7C5B,AwJLsB,CAAC,CAAD,CAApB,CtBkDkB,ClI7CpB,AwJL2B,CxJK3B,CkI6CmC,CsBlDL,CxJK9B,AwJL+B,CxJK/B,AwJL8B,CxJK9B,AwJLE,CtBkDkB,CsBlDe,CxJKnC,CkI6C2C,IAAnC,AlI7CR,AwJLyC,CAAC,CAAxC;AjJiEN,AKEA,ANAA,AVDA,AsIfY,AlI7CR,AwJLE,ExJKF,IwJLE,KtBkDW,AsBlDN,CAAC,CxJKR,CAAA,CkI6CQ,GAAY,CsBlDlB,ItBkDuB,ElI7CzB,CkI6C4B,AlI7C5B,IkI6CoB,GAAe,ClI7CnC,CAAA,GkI6CoB,AlI7CpB,CAAA,CAAA,CkI6C2C,ElI7C3C,EkI6CQ,MlI7CR;AO4DJ,AKEA,ANAA,AVDA,AsIfY,AlI7CR,AwJLE,ExJKF,IwJLE,KtBkDW,AsBlDN,CAAC,CxJKR,CAAA,CkI6CQ,GAAY,EsBlDlB,GtBkDuB,AsBlDN,ExJKnB,CkI6C4B,AlI7C5B,CwJLE,GtBkDkB,ClI7CpB,CAAA,CkI6CmC,ElI7CnC,CAAA,CAAA,CkI6CoB,ElI7CpB,CkI6C2C,IAAnC,AlI7CR;AO4DJ,AKEA,ANAA,AVDA,AsIfY,AlI7CR,AwJLE,ExJKF,IwJLE,KtBkDW,AsBlDN,CAAC,CxJKR,CAAA,CkI6CQ,GAAY,EsBlDlB,GtBkDuB,AsBlDN,ExJKnB,CkI6C4B,AlI7C5B,CwJLE,GtBkDkB,GAAe,KAAf,GAAuB,IAAnC,KlI7CR,CAAA,GAAA,CAAA,CAAA,GAAA,wBAAA;AO4DJ,AKEA,ANAA,AVDA,AsIfS,AlI7CL,AqC9SA,AmGPJ,AgBgTM,ExJKF,EwIrTS,EgBgTP,GAAG,CAAC,CnHzSN,ErC8SA,CAAA,CwJLE,CAAU,CnHzSZ,CAAY,AmGPW,CnGOvB,EAAmB,AmGP2B,CnGO9C,EAA0B,AmHySxB,CxJKF,AwJLqB,CxJKrB,IqC9SA,AmHySE,EnHzSkC,iBrC8SpC,CAAA,GAAA,CAAA,CAAA,GAAA,uBAAA;AO4DJ,AKEA,ANAA,AVDA,AsIfK,AhGzMG,AlC4JJ,AqC/SY,AmGLZ,AgB+SC,ExJKD,AwIpTA,CN8UA,EsB1CsB,CAAtB,ChBpSK,CnGKO,CHmJH,AGnJG,AmGLZ,IxIoTA,CAAA,AqC/SY,KHmJR,AGnJQ,AmGLN,CnGKM,EHmJU,AGnJV,CHmJW,CAAnB,ClC4JJ,CAAA,KwIpTA,EAAkB,YxIoTlB,CAAA,GAAA,CAAA,CAAA,GAAA,mBAAA;AO4DJ,AKEA,ANAA,AVDA,AI5DC,AqChTe,AmH2SZ,CxJFJ,EAAY,CwJER,EnH3SY,CAAA,CmH2SR,CAAC,CnH3SO,CAAA,EmH2SZ,CxJFmB,EwJEN,OAAA,CAAA,eAAA,CAAgB,CxJFrB,EwJEK,EAAqB,GAArB,EAA0B,ExJFpB,GAAA,EAAA,CAAvB,EwJEiB,EAAsC,UAAC,IAAD,EAAO,KAAP,EAAY;AjJiEnE,AKEA,ANAA,AVDA,AyC7WqB,AmH2SgD,UAAA,IAAA,GAAA,EAAA;AjJkErE,AKEA,ANAA,AVDA;AWAA,AKEA,ANAA,AVDA,AyC/WuB,AayLnB,AsFzLI,EtFyLJ,MbzLmB,AmGAT,CnGAS,CayLnB,CAAA,AsGkHiE,GnH3S9C,CmH2S8C,ChB3S/C,CgB2S+C,EnH3S9C,AmGAE,CnGAF,AayLnB,AsGkHiE,CtGlHjE,CbzLmB,CmH2S8C,EAAA,CtGlHjE,EsGkHiE,CtGlHjE,EsFzLiC,CAAC,KAA9B,AgB2S6D,CAAA,CtGlH3D,OsGkH2D,EtGlHjE,AsGkHiE,EtGlHtC,EsGkH6C,UtGlHxE,EAAsD,UAAtD,EAA2E;A3CsL/E,AKEA,ANAA,AVDA,AoB7PA,AqBnHuB,Aa2Lf,AsF1LA,AgB0S6D,MnH3S9C,CAAA,CmGCT,AgB0SuD,CxIxLrD,AwHlHD,CnGDQ,CAAA,Aa2LR,CsF1LG,AgB0SmD,CAAA,EAAA,CtGhH7D,EsGgH6D,CAAA,ChB1S3C,AgB0S2C,ChB1S1C,CAAnB,CgB0S6D,OxIxLrE,CAAsC,CwIwL+B,CAAA,ExIxLrE,AwIwLqE,CAAA,CxIxLjB,KAApD,EAAmE,GAAnE,EAAsF,WAAtF,EAA0G;AT6P1G,AKEA,ANAA,AVDA,AoB5PI,AqBrHwB,Aa4LvB,AsF1LG,ExHmHJ,CkCoEA,ElCpEG,GAAG,AwHnHI,CAAC,ExHmHF,CwHnHK,GxHmHD,IAAI,CwHnHK,CAAC,CAAnB,SxHmHS,CAAiB,CAAjB,CAAb;AT4PJ,AKEA,ANAA,AVDA,AoB5PI,AwHnHI,ExHmHJ,GAAG,CAAC,CAAD,CAAH,AwHnHU,GxHmHD,CAAE,CwHnHI,GxHmHA,AwHnHG,IxHmHC,EAAT,EwHnHgB,CxHmHD,AwHnHE,IxHmHlB,CwHnHL,GxHmH6B,KAAjC;AT4PJ,AKEA,ANAA,AVDA,AoB5PI,AqBvH0B,AmGItB,AgBwSF,ExIrLF,GAAG,CAAC,AwIqLF,CxIrLC,CAAH,AqBvH0B,AmGIhB,EgBwSJ,CxIrLG,AwIqLF,CxIrLI,EqBvHe,AmGIV,ExHmHD,CwHnHI,EnGJO,AmH4SxB,CxIrLiB,AwIqLH,CxIrLN,GAAc,AqBvHE,AmH4SxB,CnH5SwB,AmGIC,AgBwSN,ChBxSO,CnGJF,CrBuHjB,EwIqLP,ExIrL8B,AwHnH5B,KxHmHJ;AT4PJ,AKEA,ANAA,AVDA,AsIhBI,AlH5OA,AqBxH0B,AmGMtB,EN8VJ,AlH5OA,GAAG,CAAC,AqBxHsB,CrBwHvB,CkH4OH,AlH5OA,AwHlHU,CN8VV,ElH5OS,CAAC,AqBxHgB,EmGMV,CnGNU,CrBwHZ,AqBxHY,CmGMP,CN8VnB,CAAA,AlH5OiB,IAAR,IAAgB,EwHlHM,CAAC,ExHkHhC,EkH4OA,EM9VI,CN8VJ,UAAgB,MAAhB,EAAgC,MAAhC,EAA8C;A3HgBlD,AKEA,ANAA,AVDA,AsIfQ,A7FtWgC,AmGQhC,AgBqSF,IhBrSE,KN8VK,CM9VC,AgBqSJ,ChBrSK,CgBqSH,CAAC,IhBrSL,CgBqSE,CAAS,ChBrSK,CAAhB,EN8VA,CAAoB,GsBzDlB,CAAkB,EtByDpB,EAA4B,AsBzDJ,CAAC,CAAD,CAAtB,GtByDgC,CAAC,EsBzDF,EtByDjC,EAAyC,EsBzD3C,EAA2C,EtByDM,CAAC,IAAhD,EAAsD,MAAM,CAAC,IAA7D,EAAmE,MAAM,CAAC,IAA1E;A3HeR,AKEA,ANAA,AVDA,AsIfK,AlH9OD,AwH/GI,AgBoSO,GtBsDX,CM1VI,ExH+GA,IwH/GM,CAAC,CgBoSA,GhBpSP,CAAY,AgBoSD,CxIrLA,AwH/GX,EAAe,AgBoSO,ChBpStB,CxH+Ge,CwH9GX,CAAC,AgBmSqB,CAAA,CAAA,ChBnSlB,AgBmSD,KhBpSP,CxH+G0B,CwH9GX,CADf,EAEI,CxH6G2B,AwH7G1B,GAAG,KAFR,CxH+GJ,CwH7GmB,CxH8GnB,AwH9GoB,GAAG,MAFnB,EAGI,CAHJ,EAGO,CAAC,GAAG,MAHX;AjI4WR,AKEA,ANAA,AVDA,AoB5PQ,AwH7GH,AgBgSU,GhBrTmC,CxHkI1C,GAAG,CAAC,CAAD,CAAH,EwImLa,ExInLH,GwImLQ,ExInLlB,CwImLsB,IAAI,CAAA,CAAA,CAAnB;AjJyEf,AKEA,ANAA,AVDA,AsCxNQ,AlBpCA,AwH5GJ,AgB+RI,EhB/RJ,ExH4GI,GAAG,CAAC,AwImLJ,CtH/IK,AlBpCF,CAAH,GwH5GO,AgB+RF,CtH/IL,AlBpCU,AwImLJ,ChB/RC,EtGgJM,ElBpCb,IwImLA,CAAgB,ChB/RR,EtGgJM,CsH+IM,CAAC,EtH/IR,EAAa,AsH+I1B,EAA2B,EhB/RpB,EAAe,MgB+Re,CAAC,EAAE,CAAC,GAAH,CAAO,EhB/RtC,EAA+B,KgB+RA,CAAiB,KAAjB,CAAD,CAArC,EAAgE,CAAhE;AjJyER,AKEA,ANAA,AVDA,AsCvNY,AlBrCJ,AkCsEJ,AsFjLI,AgB8RA,EtG7GJ,ElCtEI,EkBqCI,ClBrCD,CAAC,AwH3GE,AgB8RN,CxInLG,CAAH,AkCsEJ,ChBjCY,AgBiCZ,ChBjCa,CsH8IJ,CxInLK,AwH3GE,AgB8RN,GhB9RS,ExH2Gf,CkCsEJ,CAAA,ChBjCQ,AsH8IJ,CAAe,EtH9IO,EsH8IH,CtG7GvB,AsG6GwB,CtH9IhB,AsGhJuB,CAAC,CtFiLhC,AsG6GmB,CAAS,CAAxB,EAA2B,ChB9R3B,GgB8R+B,CAAC,GtG7GpC,AsG6G+B,CAAS,CAApC,EAAuC,IAAI,CAAC,IAAL,CAAU,KAAjD,EAAwD,IAAI,CAAC,IAAL,CAAU,MAAlE;AjJyER,AKEA,ANAA,AVDA,AoB5PK,AkCwEA,AsFnLG,AgB8RD,GtG9GH,IsG0GE,ChB1RQ,KAAK,AgB8RN,GhB9RS,gBAAgB,CAAC,MAA/B;AjIuWR,AKEA,ANAA,AVDA,AsCvNY,AsG/IJ,AgB6RA,QhB7RM,EtG+IE,EsH8IJ,GtH9IQ,AsG/IC,CtG+IA,AsH8IL,EhB7RQ,CgB6RR,ItH9IJ,AsG/IiB,CAAC,AgB6Rd,CtH7IJ,AsH6IJ,KhB7RgB,GAAe,CAA/B;AjIsWR,AKEA,ANAA,AVDA,AoB7PI,AqBzHI,AmGiBA,AgB2RA,ExInLJ,EwHxGI,CxHwGD,CAAC,CAAD,CAAH,CqBzHS,AmGiBA,CnGjBL,AmGiBM,CxHwGD,CwImLK,CnH5SD,CAAT,AmGiBA,CAAW,AgB2RE,CxInLjB,EwImLiB,GhB3RI,CAAC,CAAD,AgB2RJ,ChB3Rb,AgB2RA,EhB3RsB,MAAM,CAAC,CAAD,CAA5B,EACI,MAAM,CAAC,CAAD,CADV,EACe,MAAM,CAAC,CAAD,CADrB,EAEI,MAAM,CAAC,CAAD,CAFV,EAEe,MAAM,CAAC,CAAD,CAFrB,EAGI,MAAM,CAAC,CAAD,CAHV,EAGe,MAAM,CAAC,CAAD,CAHrB;AjIqWR,AKEA,ANAA,AVDA,AsCtNgB,AlBtCZ,AhB+LJ,AwIpSQ,AgBuRA,IxJaI,AwIpSJ,ItG2IQ,ClBtCL,GAAP,AwIkLU,CtH5IM,CAAC,ClCyJrB,IwJbqB,CtH5IL,AsG3IQ,CtG2II,AsG3IH,CgBuRD,EAAE,CtH5IV,AsH4IW,EtH9If,CsGzIJ,AgBuRgB,ChBvRS,AgBuRF,IhBvRvB,CAA8B,IgBuRd,CAAiB,EhBvRjC,EAAuC,AgBuRF,CAAC,CAAD,CAArB,CAAhB,GhBvR8C,GAAG,CAAjD,EAAoD,OAAO,GAAG,CAA9D,EACI,OAAO,GAAG,CADd,EACiB,OAAO,GAAG,CAD3B,EAC8B,OAAO,GAAG,CADxC;AjIiWR,AKEA,ANAA,AVDA,AoB5PC,AwHpGI;AjIgWL,AKEA,ANAA,AVDA,AsIhBI,AjHpYJ,AuHckD,AgB2T1C,ChB3TR,CNsXI,MAAA,CAAA,GsB3DQ,KAAK,CtB2Db,AsB3Dc,CtB2Dd,MsB3DQ,CAAc,MtB2DtB,CsB3DQ,CAAJ,CtB2DJ,CsB3DgC,StB2DlB,MAAd,EAA8B,IAA9B,EAA6C;A3HgBjD,AKEA,ANAA,AVDA,AsIfQ,AhGxMQ,AlCuJhB,AwJXU,CxJWV,OkIiDc,EsB5DJ,CxJWE,CkCvJQ,CgGwMD,CsB5DL,EtB4DQ,ChGxME,AsH4IP,CtH5IQ,IgGwMG,AlIjD5B,CkIiD6B,ClIjDN,AwJXC,CtH5IJ,AsH4IK,CAAD,CtB4DF,AsB5DZ,EtH5I0B,CgGwMA,IAAI,AhGxMA,CgGwMC,AhGxMA,CgGwMnB,GAAuB,MAAM,AhGxMf,CgGwMgB,IAA9B,AhGxMkC,GgGwMG,ChGxMvC,GgGwM2C,CAAC,AhGxMA,CgGwMxD,IhGxM4D,CAAC,KAAL,CAAW,IAA3D,EACA;A3BsNhB,AKEA,ANAA,AVDA,AsCtNoB,AlCsJhB,AwJXM,ExJWN,QkCtJgB,AsH2IV,GxJWN,AwJXS,CxJWT,CkCtJoB,CAAC,AsH2IT,OAAO,CAAC,CxJWpB,AwJXmB,CtH3IH,AlCsJhB,AwJXM,GtH3I4B,ClCsJlC,CAAA,GAAA,CAAA,CAAA,GAAA,IAAA,OkCtJuD,CAAC,KAAI,CAAC,KAAN,CAAvC;A3BsNpB,AKEA,ANAA,AVDA,AsIhBQ,AhGtMS,AlCsJb,AqCtTI,AaiMJ,AsG0GM,ExJWN,AkDrHA,MgFqKU,C7FtWD,CAAL,AaiMJ,AsG0GM,CtG1GN,EgFqKe,AlIhDf,AqCtTa,CrCsTb,AqCtTI,AmH2SM,CAAC,CtB2DO,IhFrKlB,AsG0GM,CtG1GN,CgFqKwB,CAAC,ElIhDzB,CAAA,CkIgDkB,ChFrKlB,EgFqKgC,ClIhDhC,AkDrHA,ClDqHA,EkIgDoC,CAAC,AlIhDrC,CkIgDkB,AlIhDlB,CAAA,EkIgDyC,ClIhDzC,GkDrHA,EgFqK+C,AlIhD/C,CkIgDgD,IAA9B,GAAqC,IAAI,CAAC,CAAxD;A3HgBR,AKEA,ANAA,AVDA,AsCtNa,AlCsJT,AkDpHI,AsGyGC,ExJWL,MkDpHQ,CAAC,AsGqGL,IxJeJ,CAAA,AkDpHc,CsGyGH,QtGzGP,ElDoHJ,AkDnHI,ClDmHJ,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AOgEJ,AKEA,ANAA,AVDA,AsIjBQ,AhGrMC,AlCsJL,AkDnHQ,AsGwGF,ExJWN,GkCpKI,GgGmNM,EsB1DJ,CtGxGO,EgFkKE,AlI/Cf,CAAA,AwJXU,EtB0DQ,CsB1DL,GtGxGL,CsGwGS,CtB0DO,AsB1DN,CtB0DO,AhFlKA,AsGwGR,CAAJ,CxJWb,AwJXqB,CxJWrB,AwJXM,CtB0DY,AhFlKV,GgFkKwB,GlI/ChC,CkI+CoC,AlI/CpC,CkI+CqC,CAAL,ClI/ChC,CAAA,CkI+CyC,AlI/CzC,GAAA,CkI+C6C,CAAC,KAA5B,AlI/ClB,GkI+CsD,MAAM,CAAC,IAA3C,GAAmD,IAAI,CAAC,CAAL,GAAS,IAAI,CAAC,KAA/E;A3HiBR,AKEA,ANAA,AVDA,AsCtNK,AlCsJD,AkDnHQ,AsGwGF,ExJWN,QwJXM,CtGxGO,ElDmHb,AwJXS,CxJWT,EwJXY,EtGxGJ,EsGwGQ,CAAC,CAAD,CAAJ,CAAQ,CxJWpB,AwJXM,CxJWN,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AOgEJ,AKEA,ANAA,AVDA,AsIlBQ,AlI9CJ,AkDnHQ,AsGwGF,ExJWN,MkI8CU,EsBzDJ,CtGxGO,EgFiKE,AlI9Cf,CAAA,AwJXU,CAAC,CtByDO,EhFjKV,CAAa,CsGwGf,EtByDkB,CAAC,ElI9CzB,CAAA,CkI8CkB,ChFjKV,EgFiKwB,ElI9ChC,CAAA,CkI8CoC,CAAC,CAAL,AlI9ChC,CAAA,CAAA,CkI8CyC,ElI9CzC,EkI8C6C,CAAC,GlI9C9C,GkI8CkB,GAAqC,MAAM,CAAC,IAA5C,GAAoD,IAAI,CAAC,CAAL,GAAS,IAAI,CAAC,MAAhF;A3HkBR,AKEA,ANAA,AVDA,AIhEC,AkDnHW,AsGwGF,CxJIV,EAAY,OwJJF,CtGxGO,GlD4GM,AwJJT,CAAC,GtGxGH,EsGwGF,CtGxGiB,IAAf,gBlD4GA,WAAW,GAAA,EAAA,CAAvB;AOuEA,AKEA,ANAA,AVDA,AsIlBQ,A7FpWA,AamMI,AsGwGH,QtByDG,C7FpWC,EamMI,EgFiKA,E7FpWT,E6FoWa,C7FpWC,CamMV,CAAc,EgFiKd,E7FpWJ,E6FoWsB,GhFjKlB,EgFiKuB,IAAI,KAA/B,EACA;A3HiBR,AKEA,ANAA,AVDA,AsIjBY,AhFlKA,UgFkKM,ChFlKD,GgFkKK,GAAG,EhFlKb,GgFkKkB,AhFlKF,IgFkKhB,AhFlKA;A3CmLZ,AKEA,ANAA,AVDA,AsIjBY,AjHrYZ,AiCmOY,AsGuGC,SvI1UG,CiHqYE,ChFlKD,CsGuGJ,EtB2DS,GAAG,EhFlKb,AsGuGM,CtGvGQ,EgFkKI,AsB3DO,ItB2DzB,AsB3D6B,CAAA,CAAA,CtGvG7B,AsGuGC,CvI1Ub,CAAsC,IAAtC,EAAoD,SAApD,EAA6F;AVsZ7F,AKEA,ANAA,AVDA,AsIjBY,AjHtYwC,AiCoOxC,AsGsGC,MvI1UuC,IiHsYlC,ChFlKD,CsGsGG,EtB4DE,CjHtY8B,EiHsY3B,EhFlKb,CjCpOwC,AuI0U1B,EtB4DI,AhFlKF,CsGsGS,EvI1Ue,CiHsYxC,AjHtYwC,AiCoOxC,CsGsG6B,CvI1UW,AuI0UX,CAAA,CAA5B;AjJ6Eb,AKEA,ANAA,AVDA,AsIjBY,AjHvYwC,AiCqO3C,AsGqGI,IvI1UuC,MiHuYlC,EsB7DU,CvI1UwB,CiHuY9B,EjHvY8B,CiHuY3B,AsB7DQ,GvI1UmB,AuI0Uf,EtB6DP,EsB7DW,CAAA,CtB6D7B,AsB7D6B,CAA5B;AjJ8Eb,AKEA,ANAA,AVDA,AsIhBY,AjHzYiF,AiCsOxF,AsGqGG,GvI3UqF,AiCyNzF,KsGkHI,GtB8DS,IAAL,AsB9DC,GtB8DW,AsB9DR,EAAE,CAAC,EtB8DU,CsB9Db,CAAO,CtB8DS,IAAR,GAAe,CsB9DvB,CAAiB,GtB8DT,GAAuB,CsB9D/B,CAAR,EtB8DI;A3HgBZ,AKEA,ANAA,AVDA,AsIhBY,AOhYZ,AekUQ,QAAA,CflUC,EPgYQ,GOhYjB,CPgYY,AOhYG,CekUD,CflUd,CPgYwB,COhYG,AekUV,EflUjB,AekUmB,CAAC,CtB8DS,AOhYU,EekUtB,CtB8De,AsB9DR,CflUxB,EAAmD,CPgY3B,GAAe,EsB9DtB,CAAiB,EtB8DV,GAAuB,GsB9D9B,CtB8DL,AsB9DJ;AjJ8ER,AKEA,ANAA,AVDA,AsIhBY,AhGvMA,AuGxLR,AeiUI,EtHzII,IuGxLF,EvGwLE,AsHyIJ,CtHzII,CuGxLE,CP+XG,EO/XA,AeiUJ,CAAC,CtB8DF,AO/XO,GP+XK,AhGvMZ,AuGxLU,CvGwLV,CuGxLR,GP+XyB,AsB9DrB,CAAgB,EtB8DQ,EsB9DJ,CAAC,CtB8DL,GAAe,AsB9D/B,EtHzII,AsHyIuB,GtB8DX,AhGvMpB,GgGuM2C,IAAnC,AsB9DiC,CAAC,EAAE,CAAC,CtHzI7C,EsHyI0C,CAAO,SAAP,CAAiB,KAAjB,CAAD,CAArC,EAAgE,CAAhE;AjJ8ER,AKEA,ANAA,AVDA,AsIhBY,AhGtMJ,AjBnMJ,AwHWA,AegUI,MvI3UE,EiBmME,AsHwIJ,CfhUG,EP8XM,AO9XJ,EvGwLI,AsHwIJ,CfhUI,AegUH,CtB8DF,GAAY,AjHzYF,AwHWD,GxHXI,AwHWD,CegUhB,CtB8DqB,AhGtMjB,AsHwIW,EvI3UM,AwHWzB,CP8X4B,EhGtMA,AjBnMA,CAA5B,AuI2UyB,CtB8DL,AsB9DM,EtHxIlB,CgGsM2B,CsB9DV,CAArB,CtHxIgC,CsHwIH,CtB8Db,GAAuB,AhGtMF,EsHwIF,CAAC,CtB8DhC,ChGtM4B,CAAW,AsHwIR,CAAnC,EAA0C,CtHxI1C,EACA,IsHuIA,EAAiD,QAAjD,EAjBK,CAkBL;AjJ6ER,AKEA,ANAA,AVDA,AsIhBS,AjHxYL,AwHUH,AeiUO,EvI3UJ,SAAS,GAAG,SAAS,IAAI,IAAI,WAAJ,CAAgB,YAAhB,CAAzB;AVwZJ,AKEA,ANAA,AVDA,AsIhBK,AhGrMO,AGjKJ,AmHySA,GtB0CJ,M7FnVS,EHiKI,EGjKT,GAAY,GHiKR,GAAgB,AGjKF,CAAC,IAAnB,MHiK+B,CAAC,GAAZ,EAAhB;A3BqNZ,AKEA,ANAA,AVDA,AsCrNY,AjBnMR,AoBkCC,MpBlCG,KiBmMS,IjBnMA,CAAC,KiBmMN,CjBnMJ,EiBmMsB,GjBnMD,EiBmMM,QAAvB,EjBnMR,EACA;AVuZJ,AKEA,ANAA,AVDA,AsCrNY,AjBlMJ,AuIyUA,QAAA,EvIzUM,CiBkMG,AsHuIN,CAAC,EvIzUM,GuIyUV,CAAU,CvIzUJ,CAAU,CiBkMZ,GAAkB,EsHuItB,CAAmB,KAAnB,atHvI2C,CAAC,KAAK,KAAN,CAAvC,IjBlMmD,SAAS,CAAC,MAAjD,GAAuD,gBAAvD,GAAwE,YAAlF,CAAN;AVuZR,AKEA,ANAA,AVDA,AsCrNS,AjBlMJ,AuIyUE,GvInVsF;AVia7F,AKEA,ANAA,AVDA,AsCrNK,AsHuIA,GtHhJO,EsHmHK,CAAb;AjJ2GJ,AKEA,ANAA,AVDA,AsDpLW,AsGsGP,EtGtGO,EsGsGP,IAAI,CAAC,CtGtGE,CAAA,IAAA,GAAP,EsGsGA,GAAoB,KtGtGR,EsGsGQ,CAAA,ItGtGpB,EAA8B,SsGsGV,CtGtGpB,AsGsGoC,EtGtGa,CsGsG7B,EAAqB,GAArB,EAA0B,UAA1B,EAAsC,UAAC,IAAD,EAAO,KAAP,EAAY;AjJ8E1E,AKEA,ANAA,AVDA,AqBvZI,AiCoOI,AsGoGoE,OvIxUnE,GuIwUmE,CvIxU/D,AiCoOE,CjCpOD,EuIwU8D,CvIxU3D,CAAR,AiCoOD,CsGoGoE,CvIxUxD,CAAC,AuIwUuD,GvIxUpD,CAApB,EAAuB,CAAC,GAAG,YAA3B,EAAyC,CAAC,IAAI,CAAL,EAAQ,CAAC,IAAI,CAAtD,EACA;AVsZJ,AKEA,ANAA,AVDA,AqBtZQ,AiCmOH,GAHM,CjChOH,SAAS,CAAC,CAAC,GAAG,CAAL,CAAT,GAAmB,CAAC,GAAG,CAAvB;AVsZR,AKEA,ANAA,AVDA,AqBtZQ,IAAA,OuIqUoE,EvIrU3D,CAAC,CAAC,AuIqUyD,EAAA,CvIrUtD,CAAL,CAAT,AuIqUoE,GvIrUjD,AuIqUiD,CvIrUhD,CuIqUgD,EvIrU7C,CAAvB,AuIqUoE,SAAA,CAAA,QAAA,EAAA,IAAO;AjJiFnF,AKEA,ANAA,AVDA,AqBtZQ,AoB+BJ,AamMJ,AsGkG4E,EnHrSxE,EpB/BI,IoB+BJ,AmHqSwE,CnHrSxE,AamMJ,GsGkG4E,CvIpU3D,AuIoU2D,CvIpU1D,CAAC,AuIoUyD,EtGlG5E,CjClOsB,AoB+BlB,AmHqSwE,CvIpU3D,AoB+Bb,AmHqSwE,CvIpUpE,AuIoUoE,GvIpUjD,AuIoUiD,CvIpUhD,AoB+BxB,GpB/B2B,AoB+B3B,CpB/BI,IuIoUoE,CAAA,EAAA,CAAA,GnHrSxE;A9BuXJ,AKEA,ANAA,AVDA,AsIjBI,AjHrYI,AoBgCA,AaiMP,CA9OD,CgFkZI,ChFlZJ,CjCaQ,IiHqYJ,CAAA,E7FrWW,EpBhCE,CAAC,CAAC,AoBgCA,G6FqWf,AjHrYkB,CiHqYlB,AjHrYa,CAAT,CoBgCO,C6FqWX,A7FrWsB,CpBhCC,CAAC,CiHqYxB,EjHrY2B,AoBgCA,CpBhCvB,AoBgCO,EAAmB,K6FqW1B,A7FrW+B,CAAxB,EAA2B,K6FqWtC,A7FrW2C,E6FqWzB,I7FrWP,CAAP,G6FqWJ,EAAqC;A3HiBzC,AKEA,ANAA,AVDA,AsIlBQ,AjHpYA,AjBqVR,AqCrTK,GAHD,CpB7BI,AjBqVI,IkI+CJ,IlI/CR,CiBrViB,CAAC,CAAC,CiHoYX,EjHpYc,CAAL,CAAT,CiHoYA,EjHpYmB,CAAC,EiHoYpB,CAAA,AjHpYuB,CAAvB,CiHoYA;A3HkBR,AKEA,ANAA,AVDA,AsInBQ,AhGnMI,AjBhMJ,AuIkUF,EtHlIM,EjBhMJ,EiHmYA,AsBjEF,EtHlIM,CAAA,CsHkIF,CAAC,EvIlUM,CiHmYT,AjHnYU,CAAC,EiHmYX,CAAA,AhGnMI,AjBhMU,CiBgMV,AjBhMK,AuIkUX,CvIlUE,AuIkUY,GvIlUO,CAAC,AuIkUtB,CAAmB,EvIlUM,CAAvB,EuIkUF,ItHlIM,GAAR,YAAA;A3BsNJ,AKEA,ANAA,AVDA,AsIpBoB,AhGjMZ,AjBjMH,QiBiMO,KAAK,UAAL,KAAoB,IAAxB,EACA;A3BoNR,AKEA,ANAA,AVDA,AsCpNY,AlCgJZ,AwJjBM,CxJiBN,KkChJY,IsH+HF,CxJiBE,CwJjBA,CAAC,KAAH,CxJiBV,AwJjBmB,ExJiBC,KkChJY,CAAC,AsH+HvB,CAAkB,ItH/HU,AsH+HN,CAAC,CAAD,CAAtB,MAA+B,CtH/HT,CAApB,IsH+HN,EAA2C;AjJqFjD,AKEA,ANAA,AVDA,AsItBsB,AhG9LV,AjBlMR,AjBkVA,AwJjBW,ExJiBX,MkI8CkB,CjHhYX,CjBkVP,CkChJa,AlCgJb,CwJjBW,ItB+DO,AsB/DH,EvIjUf,CjBkVA,AwJjB0B,CxJiB1B,CkI8CkB,AhG9LV,EsH+HsB,CtH/HJ,AsH+HI,CAAA,CtB+DZ,AlI9ClB,AwJjBW,CtB+DO,AlI9ClB,CkChJQ,CgG8LU,ClI9ClB,CAAA,CAAA,GAAA,MAAA;AOoEJ,AKEA,ANAA,AVDA,AsIvBsB,AhG7Lb,AjBlMR,AjBkVG,AwJlBW,ExJkBX,IkI6CkB,IlI7ClB,CAAA,CwJlBiB,EtB+DC,GAAA,AsB/DI,ExJkBtB,CAAA,AwJlB0B,IAAI,CtB+DZ,AsB/DY,CAAA,CAAnB,CxJkBX,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AOoEJ,AKEA,ANAA,AVDA,AsIxByC,AhG5LpC,AlCgJJ,AwJlBO,CxJeR,EkCpJY,AlCoJA,KwJfJ,GxJeY,EwJfP,CAAC,SAAN,CAAgB,CAAhB,UxJeI,QAAQ,GAAA,EAAA,CAApB;AOuEA,AKEA,ANAA,AVDA,A4JtFQ,QAAA,CtIjWQ,IsIiWH,CAAC,StIjWgB,AsIiWtB,CAAgB,MtIjWwB,IsIiWd,CAAC,EAAE,CAAC,GAAH,CAAO,SAAP,CAAiB,KAAjB,CAAD,CAA1B,EAAqD,CAArD;AjJsFR,AKEA,ANAA,AVDA,AsIxBQ,AhH9ZJ,AuHuCJ,AeyTQ,MtIhWA,EgH8ZI,AsB9DJ,CtB8DK,AOvXJ,EvHvCI,CAAC,CsIgWD,CtB8DK,AsB9DJ,OtB8DD,CsB9DL,CtB8DA,AsB9De,EtB+Df,EsB/DmB,CAAC,CtIhWpB,AuHuCR,CACI,CewTmB,CAAS,CAAxB,CtIhW4B,CAAhC,AuHuCJ,AeyTmC,EtI/V/B,AuHuCe,EewToB,CAAC,EfzTxC,CeyTmC,CfvT/B,AeuTwC,CAApC,EfzTR,AeyT+C,EfvT9B,EeuTkC,CfzTnD,AeyToD,EftThD,EesT2C,CfzT/C,AeyTyD,EftTxC,GAHjB,AeyTQ,EfrTJ,AeqT4D,GfzThE,CeyToE,CfrTzC,AeqT0C,IAAL,CAAU,MAAlE;AjJsFR,AKEA,ANAA,AVDA,AsIvBY,AhH9ZJ,AuHyCJ,AesTI,MftTJ,EvHzCQ,AsI+VJ,CftTJ,EPqXa,EhH9ZA,AsI+VJ,CftTT,AesTU,CtB+DF,IAAa,AOrXrB,CAAA,CesTI,CftTJ,GvHzCyB,EgH8ZjB,UhH9ZJ,EACA;AXobR,AKEA,ANAA,AVDA,AsIvBY,AhH7ZA,AmB6DR,AoGtBA,AeuTG,EnHjSH,EoGtBA,GAAA,AeiTE,CnH3RF,CAAA,CoGtBA,CPsXa,COtXb,CvHvCe,AsI8VN,EtB+DD,G7FhWR,C6FgWqB,A7FhWrB,Q6FgWQ,AhH7ZA,AmB6DR,GAAA,UAAS,CAAT,EAAoB,CAApB,EAA6B;A9BuXjC,AKEA,ANAA,AVDA,AsIvBY,AhH7ZH,AmB8DD,AoGxBmB,AewTnB,KtIjWA,GmBiEI,G6F+VK,AhH5ZJ,CsI6VD,CnHhSK,E6F+VL,AhH5ZK,CsI6VD,GtB+DS,A7F/Vb,AmHgSI,CtI7VM,GmB6DK,CAAnB,AmHgSQ,CAAR,CnH/RA,C6F8VI,KhH5ZsB,WAArB,EACL;AXkbR,AKEA,ANAA,AVDA,AsIvBY,AhH3ZA,AmB6DA,AcxDZ,AqGsVQ,IrGtVR,O+EsZiB,CsBhEC,CtI3VC,AmB6DA,E6F8VP,AsBhES,GnH9RT,AcxDZ,AqGsVqB,CtBgEI,IsBhEJ,CAAb,EtI3VI,CgH2ZA;A3HuBZ,AKEA,ANAA,AVDA,AsIvBS,AhH3ZA,AmB6DA,AczDT,AsFgCI,AeuTI,MfvTE,CAAC,GAAG,EAAV,AeuTU,OAAO,GAAG,EAAE,CAAC,GAAH,CAAO,SAAP,CAAiB,IAAI,CAAC,CAAD,CAArB,CAAhB;AjJuFR,AKEA,ANAA,AVDA,AsIvBK,A/ExZL,AsFiCI,GP8WA,GO9WM,ItFjCV,EsFiCgB,GAAG,CtFjCnB,EAAA,AsFiCI;AlI8YJ,AKEA,ANAA,AVDA,AsBlbQ,AmB6DA,Ac3D4B,AsFmChC,AeqTI,ErGxV4B,IsFmC5B,EpGwBM,AoGxBJ,EpGwBM,CnB7DD,AiCEqB,AsFmCvB,CtFnCuB,AsFmChC,AeqTQ,CnH7RO,ImH6RF,CnH7RO,AmH6RN,KtI1VV,CmB6DW,CmH6RP,CrGxVwB,AqGwVV,CnH7RO,Cc3DG,Id2DE,CmH6R1B,CrGxVwB,AqGwV5B,CrGxV4B,CqGwVA,EnH7R5B;A9BqXR,AKEA,ANAA,AVDA,AsBlbK,AmB6DG,AoGxBJ,AeqTM,GtItWN,GuHiDI,EpGwBI,AoGxBF,CvHpCD,CmB4DK,AmH6RJ,CfrTG,CAAT,CvHpCS,AmB4DK,CmH6RJ,GAAG,CtIzVC,AmB4DK,CnB5DJ,AmB4DD,GAAS,CAAnB,CmH6RgB,CAAC,CAAD,CAAd,StIzVG,KAA4B,CAAhC,EACL;AXgbJ,AKEA,ANAA,AVDA,AsBhbQ,AmB2DA,AoGxBJ,AeqTM,MfrTF,EvHnCI,AmB2DA,AoGxBF,EpGwBI,AmH6RJ,CfrTG,CAAT,CvHnCa,AmB2DC,AmH6RL,GAAG,EnH7RO,CAAL,GAAS,CAAnB,AmH6Re,CAAC,CtIxVK,AsIwVN,CAAb,UtIxVF,EACA;AX+aR,AKEA,ANAA,AVDA,AsB/aY,AmB2DJ,AoGzBJ,AeqTM,InH5RF,EAAE,AoGzBF,EAAE,EpGyBI,AmH4RJ,CfrTG,CpGyBL,AoGzBJ,CvHlCe,CsIuVL,CAAC,KAAL,MtIvVE;AX+aZ,AKEA,ANAA,AVDA,AsCrNY,AhB1NH,AmB2DD,AoGzBJ,AeqTK,EtH7HG,EG/JJ,EAAE,AoGzBF,CAAC,CvGwLG,CAAA,AsHyHJ,CnHxRM,AoGzBF,CAAR,CpGyBI,GmH4RO,GtH7HH,CAAA,gBAAA,GAAR,YAAA;A3BqNJ,AKEA,ANAA,AVDA,AsCpNQ,AhB3NH,AmB4DG,AoG1BJ,AeqTM,GtI7VD,GuHwCD,CAAC,CvGyLG,ChB1NH,CuHiCG,AeqTF,CnH3RM,AoG1BZ,EvGyLa,AhB1NJ,AmB2DK,CmH2RJ,EnH3RO,CmH2RJ,CtItVC,AmB2DF,CnB3DG,CgB0NX,CsH4Ha,CtH3Hb,AGhKmB,AmH2RL,CAAD,CnH3Rb,AmH2RS,CAAQ,CAAf,UtItVG,KAA4B,CAAhC,EACL;AX6aJ,AKEA,ANAA,AVDA,AsCnNY,AhB1NJ,AlBwWR,AqC9SK,AmH2RK,GnH1SN,CrC6TQ,IkBxWA,EsIqVF,CtH3HO,EhB1NA,AlBwWjB,AwJnBa,GAAG,IAAI,CAAC,CAAD,CAAJ,CAAQ,CtIrVK,AsIqVnB,EtH3HE,QhB1NJ,EACA;AX4aR,AKEA,ANAA,AVDA,AsCnNS,AhBzNG,AuH+BR,AeqTM,KtH9HF,EuGvLC,GeqTC,CtH1HG,AuG3LA,CAAC,CvH/BK,CsIoVL,CtH1HG,AuG3LA,AeqTF,CfrTN,EAAW,CAAC,CvG2LC,AsH0HZ,EfrTc,CAApB,EvH/BQ,AuH+Be,CAAC,GvG2Lf,CuG3LmB,CvG4LxB,AuG5LJ,EAA+B,EAAE,CAAjC,EACA;AlI4YJ,AKEA,ANAA,AVDA,AsCjNY,AhB3NH,AuHgCD,AeoTE,IfpTF,CAAC,GAAG,CAAC,CeoTH,CtHzHO,CuG3LD,CAAR,CADJ,AeqTU,CAAC,CtHzHH,IsHyHF;AjJwFV,AKEA,ANAA,AVDA,AsCjNS,AhB3NJ,AlBoWL,AmDvWI,AqGuVK,CxJgBT,EkBhYgD,QlBgYpC,AmDvWR,SnDuWJ,EAAqB,GmDvWjB,CAAY,MAAZ,EAAyD,OAAzD,EAAuE;A5C+a3E,AKEA,ANAA,AVDA,AsCjNK,AlCyID,AmDxWA,AsFqCI,EzImUJ,CkCnJQ,CuGhLJ,EAAE,EtFrCN,CsFqCS,EzImUT,CAAA,CmDxWA,CsFqCc,CAAC,CtFrCf,CnDwWA,CAAA,EmDxWA,AsFqCc,CzImUd,CyInUsB,GAAR,EzImUd,AyInU2B,CAAb,CAAV;AlI2YR,AKEA,ANAA,AVDA,AIxEI,AyInUI,AekTK,ExJiBT,EyInUI,EAAE,GAAG,EzImUT,CAAA,AwJjBS,EflTK,CAAC,IekTD,CxJiBd,AyInUc,CzImUd,CyInUsB,AekTW,ExJiBjC,CyInUc,CekTuB,CflTV,AekTU,CflTvB,AekTuB,CflTjC,AekTK,IxJiBT;AOwEJ,AKEA,ANAA,AVDA,AsIxBI,AhHpZA,AlBoWA,AmDxWU,AsFqCN,AeiTK,EtBkET,AlIhDA,EyInUI,EAAE,EPmXN,A/ExZU,C+EwZV,AhHpZO,AuHiCE,CtFrCC,CnDwWV,CAAA,AwJlBgB,CtIlVhB,AiCJ8B,CsFqChB,CAAC,GPmXf,AlIhDA,AyInUc,CPmXd,AlIhDA,CmDxWqC,AsFqCjB,AeiTE,ExJkBtB,CyInUc,AeiTmB,CrGtVQ,CsFqChB,CtFrCf,AsFqCI,CAAV,AeiTiC,CAAA,CxJkBrC,AwJlBqC,CtBkErC,AsBlES,GtBkET,UAAY,EAAZ,EAAwB,EAAxB,EAAoC,EAApC,EAAgD,EAAhD,EAA4D,IAA5D,EAA0E,IAA1E,EAAsF;A3HwB1F,AKEA,ANAA,AVDA,AsIvBQ,AhHrZP,AlBoWA,AmDzWa,AsFsCN,AegTK,CxJeb,EAAY,CkIqDJ,AOpXA,EPoXE,AOpXA,EtFtCM,CsFsCH,CPoXC,ElIrDO,AwJfO,CrGtVP,C+E0Zb,AOpXU,CAAC,CtFtCE,CqGsVY,CrGtVZ,AsFsCH,CtFtCG,CsFsCG,AegTa,GfhTnB,CtFtCJ,AqGsV2B,CfhTZ,AegTY,CfhTvB,AegTuB,CfhTjC,AegTK,CfvTT,SzIsUQ,SAAS,GAAA,EAAA,CAArB;AO4EA,AKEA,ANAA,AVDA,AsIvBQ,A7F7VJ,Ac9DU,AqGuVN,EnHzRJ,E6F6VI,EAAE,E7F7VN,Ac9DmB,AqGuVf,CnHzRJ,C6F6VU,IAAN,A/E3ZqB,CqGuVhB,ErGvVgB,Cd8DzB,AmHyRY,CnHzRZ,Ac9DyB,CAAA,AqGuVX,CAAC,GAAH,CAAO,CrGvVT,Ed8DV,GAAA,GmHyRY,CAAiB,OAAjB,CnHzRZ,AmHyRI;AjJ2FR,AKEA,ANAA,AVDA,AsIvBQ,A7F5VA,AoGvBA,Ae+SA,ItBoEA,AOnXA,CAAC,CPmXC,EOnXE,Ae+SJ,EtBoEM,C7F5VC,EoGvBE,CPmXT,AOnXU,CpGuBC,CoGvBF,Ae+SH,Ef/SQ,Ce+SL,Cf/SA,Ce+SE,Cf/SO,Ae+SN,Cf/SH,CpGuBF,AoGvBP,CpGuBqB,AmHwRZ,CAAO,InHxRU,CAAL,GAAS,CmHwRrB,CAAiB,GnHxRS,KmHwR1B,CnHxRF,AmHwRP,EnHxR2C,KAAK,CAAL,GAAS,KAAK,MAAlD,EAA0D,KAAK,MAAL,GAAc,CAAxE,EAA2E,KAAK,MAAL,GAAc,CAAzF,CAAP;A9BmXR,AKEA,ANAA,AVDA,AsIvBQ,A7F5VH,Ac/DG,AsFwCA,Ae+SA,GnH3RJ,C6F+VI,AOnXA,CAAC,CPmXC,E/E3ZE,AsFwCA,Ae+SJ,CrGvVK,C+E2ZC,GOnXG,Ae+SJ,CtBoEL,A/E3ZI,AsFwCM,EAAD,Ae+SD,ErGvVM,AsFwCA,CtFxCC,CsFwCN,EAAS,CAAT,CAAT,CtFxCA,CqGuVkB,CrGtVlB,AqGsVmB,EAAE,CAAC,GAAH,CAAO,SAAP,CAAiB,KAAjB,CAAD,CAAlB;AjJ2FR,AKEA,ANAA,AVDA,AsItBQ,A/GzbR,AgC8BY,AsFwCJ,Ae8SA,IrIpXF,AsHsEE,GtHtEC,CqIoXD,CtBqEK,C/GzbD,AsHsEE,CAAC,CtFxCG,C+E2ZV,AsBrEK,CAAC,Cf9SN,CPmXY,A/E3ZE,AsFwCF,CAAZ,EAAe,CAAf,CPmXiB,A/E3ZP,CAAU,CqGsVpB,CAAgB,CtBqEJ,AsBrEZ,GtBqEwB,EAAZ,GAAiB,KAAK,IAAtB,GAA6B,EAAzC,e/E3ZU,CAAN;A5CibZ,AKEA,ANAA,AVDA,AsItBQ,A/G1bM,AkB4Fd,Ac7DS,AsFwCJ,Ae8SG,ErIrXM,MqIqXN,CtBqEK,A7F9Vb,I6F8VQ,AsBrEK,CrIrXa,AqIqXZ,CnHzRd,C6F8VoB,A/G1bQ,K+G0bH,EsBrEjB,CAAgB,CtBqEJ,GAAY,A/G1bpB,CqIqXJ,CtBqEY,CsBrEW,CAAvB,CtBqE6B,KAAK,IAAtB,GAA6B,EAAzC;A3HsBR,AKEA,ANAA,AVDA,AsItBQ,A/G3bkC,AkB4FzC,AmH0RO,CnHhXR,ClBN0C,CkBM1C,KmHgXQ,CtBqEK,IAAL,A/G3b6C,AqIsXxC,CAAC,CrItXyC,C+G2bnC,KAAK,CsBrEjB,CAAe,EtBqEH,C/G3bR,E+G2boB,CsBrEH,CtBqET,AsBrEU,GtBqEO,CsBrER,CAArB,EAA6B,CtBqEK,IAAtB,CsBrEuB,CAAC,CtBqEK,EAAzC,AsBrEmC,CAAnC,EAA0C,OAA1C,EAAiD,QAAjD;AjJ2FR,AKEA,ANAA,AVDA,AsItBQ,A/G5b4D,AgCiC5D,AsFwCJ,Ae8SI,ErIvX4D,EgCiC5D,IqGsVA,CtBqEK,A/E3ZL,AsFwCG,GtHzEmE,AgCiCtE,C+E2ZA,AsBrEK,CrIvXmE,AqIuXlE,Cf9SV,CPmXgB,E/E3ZZ,CAAA,E+E2ZiB,AsBrEjB,ErGtVA,ChCjCI,AgCiCJ,C+E2ZY,GAAY,A/E3ZxB,E+E2ZY,A/E3ZN,G+E2ZuB,E/E3Z7B,EAAa,C+E2ZqB,IAAtB,C/E3ZZ,E+E2ZyC,EAAzC,C/E3ZoB,IAApB;A5CibR,AKEA,ANAA,AVDA,AsItBK,A/G7buF,AsH0E3F,Ae8SM,ErIxXqF,C+GkbxF,S/GlbkG,EAAE;AZmdxG,AKEA,ANAA,AVDA,AsClNI,AflQQ,CAAZ,CekQI,MAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAa,EAAb,EAAoC,OAApC,EAAgD,QAAhD,EAAiF;A3BkNrF,AKEA,ANAA,AVDA,AsIvBA,AhG5LoD,AsHuH9C,MAAA,EtHvH8C,CgG4LpD,EsBrEW,CAAC,GtBqEZ,ChG5LoD,IsHuH9C,CtHvH8C,EsHuH7B,GtHvH6B,CAAA,AsHuH9C,EtHvH8C;A3BmNpD,AKEA,ANAA,AVDA,AsIxBC,AhG5LmD,Af9PpD,AqIsXM,CtBhXN,EAAA,GhGwPoD,AsHwH9C,GrItXU,AqIsXP,CAAC,ItHxH0C,CsHwH9C,CAAU,CtHxH+C,OsHwHzD,CAAmB,KrItXzB,AqIsXM,CrItXgC,Ce8PwC,CAAC,If9P/E,Ee8PoD,Af9PS,KAA7D,EAA4E;AZkd5E,AKEA,AqC3dA,A3C2dA,AVDA,AsCrNqF,Af5PjF,AqIqXC,KAhCmB,CrIrVhB,AqIqVJ,OrIrVW,GAAG,CAAd;AZidJ,AKEA,ANAA,AVDA,AuBjdI,AqIqXA,IAAA,ErIrXI,EqIqXA,CAAC,GrIrXK,EqIqXV,CrIrXa,CAAb,CqIqXa,IAAI,EAAE,CAAC,OAAH,CAAW,IAAf,CAAoB,UAAS,IAAT,EAAa;AjJ4FlD,AKEA,ANAA,AVDA,AsCrNQ,Af5PJ,AqIqXE,MrIrXI,AqIqXJ,IAAI,CtHzHK,Af5PA,AqIqXJ,GrIrXqC,Ee4P5B,Af5PhB,GqIqXE,CAAc,GAAd,CAAkB,ItHzHT,CAAkB,IAAI,CsHyHZ,KAAD,EAAM,MtHzHG,CAAmB,EAAnB,EAAuB,OAAvB,EAAgC,QAAhC,CAAlB,CAAP;A3BqNR,AKEA,ANAA,AVDA,AsCrNK,AiB5NG,AqGoV2B,GtH3H/B,CiBzNI,KAAI,CAAC,IAAL,CqGoV2B,ErGpVf,GqGoVoB,CAAC,ErGpVjC,GqGoV2B,EAAA;AjJ6FnC,AKEA,ANAA,AVDA,AuBjdI,AnBwYJ,AwJrBgD,IxJqBpC,GmBxYH,AqImXH,IrInXO,CAAC,EnBwYd,CmBxYiB,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,EAApC,EACA;AZgdJ,AKEA,ANAA,AVDA,AuBhdQ,AmBNR,AaoCK,AqGoVC,IrIlXE,AmBNR,EkHwXM,IrIlXQ,AqIkXJ,ClHxXV,AkHwXW,GrIlXO,KAAK,AqIkXjB,CrIlXkB,AqIkXJ,CrIlXG,CAAf,IqIkXF,GAAuB,CAAvB;AjJ8FN,AKEA,ANAA,AVDA,AuBhdQ,AmBPR,AkHyXM,IrIlXE,EqIkXF,IAAI,CrIlXK,AqIkXJ,IrIlXQ,KqIkXb,CrIlXmB,CAAC,CAAD,CAAN,AqIkXK,CrIlXK,GqIkXD,CAAC,ErIlXrB,OqIkXgB,CAAe,OAAf,EAAlB;AjJ8FN,AKEA,ANAA,AVDA,AuBhdK,AnBoYL,AsC5YA,AkH0XK,CxJkBL,IwJtBiB,CAAb,KxJsBQ,CsC5YZ,StC4YA,EAAsB;AO4EtB,AKEA,ANAA,AVDA,AI5EI,AwJlBA,ExJkBA,EwJlBA,IAAI,CAAC,GxJkBL,CAAA,AwJlBA,GAAY,IAAI,EAAE,CxJkBlB,AwJlBmB,CxJkBnB,MAAA,AwJlBgB,CxJkBhB,AwJlB2B,GxJkB3B,CAAA,AwJlBY,CxJkBZ,AwJlBgC,GxJkBhC,IwJlBgC,CAAA,CxJkBhC,SwJlBgC,CAAW,UAAS,IAAT,EAAe,GAAf,EAAkB;AjJ8FjE,AKEA,ANAA,AVDA,AuBhdI,AnBoYA,AwJlBE,ExJkBF,ImBpYM,MAAM,AnBoYZ,CAAA,EmBpYe,IAAI,InBoYnB,CAAA,MmBpYe,CAAgB,EnBoY/B,CAAA,GAAA,CmBpYsC,AnBoYtC,CAAA,EmBpYyC,CAA1B,AnBoYf,CmBpYA,QnBoYA;AO4EJ,AKEA,ANAA,AVDA,AuB/cI,AnBmYA,AyI9TJ,Ae4SM,ExJkBF,EyI9TS,EtHrEL,AqIiXF,GrIjXK,AqIiXF,GrIjXK,AnBmYV,AwJlBQ,CxJkBR,CwJlBU,CAAC,CrIjXX,EqIiXQ,CAAO,IxJkBf,CAAA,CyI9T8B,GAAuB,Ae4S7C,CAAiB,GAAjB,CxJkBR,AwJlBE,CxJkBF,GAAA,CAAA,CAAA,GAAA,SAAA;AO4EJ,AKEA,ANAA,AVDA,AuB/cI,AnBmYA,AyI7TA,Ae2SO,ExJkBP,AyI7TA,ItHtEI,CsHsEC,EAAL,Ce2SO,ExJkBP,CAAA,CwJlBW,GAAyC,CrIjXpC,CsHsEV,EtHtEa,AqIiXqC,CrIjXxD,AqIiXwD,CxJkBxD,AwJlBwD,CxJkBxD,AwJlBO,Of3SP,CzI6TA,CAAA,AyI7TkB,GzI6TlB,CAAA,CAAA,GAAA,QAAA;AO4EJ,AKEA,ANAA,AVDA,AI5EC,AyI5TO,AeySG,CxJcX,EAAY,KyIvTE,EeySG,GxJcK,AwJdF,GAAoC,CfzSjC,GAAG,AeySkC,CAAA,CAAA,CAAjD,SfzS2B,CAAC,KAA/B,CzIuTI,UAAU,GAAA,EAAA,CAAtB;AOiFA,AKEA,ANAA,AVDA,AuB/cI,AsHuEI,AewSG,OrI/WF,CsHuEK,EewSQ,CrI/WT,CAAC,CqI+WW,CfxSL,CtHvEH,CAAb,AqI+WoD,CfxSjC,CtHvEH,CAAC,CqI+WuC,CAAA,CrI/WpC,AqI+WoC,CAAjD,KrI/WmB,CAAC,AsHuEI,CAAC,KtHvEhC,CsHuEI,CtHvE+B,CAAC,EAApC,EACA;AZ8cJ,AKEA,ANAA,AVDA,AsCtNI,AfxPI,AmBHJ,AmGyEI,AeuSG,EtHrHP,MAAA,AfxPU,AsHsEA,CvGkLV,AuGlLW,CeuSY,ClHhXvB,CnBGc,AsHsEA,GtHtEG,AqI6WW,GtHrH5B,AI3PA,AkHgXoD,CtHrHpD,AI3PY,CnBGU,AmBHtB,CnBGuB,AsHsEA,CtHtED,AmBHH,AmGyEK,AeuSgC,CrI7WpD,AmBHJ,AmGyEI,AeuSoD,CAAA,ClHhX9B,AkHgXnB,CtHrHP,GAAA,KI3PA,EAAyC,GJ2PxB,EAAjB,EAAwC,GI3PxC,EAAuD,EJ2PvD,EAAoD,QAApD,EAAqF;A3BsNzF,AKEA,ANAA,AVDA,AsCvNwD,AfvPhD,AmBJQ,Aa+BZ,AsF2CI,AesSG,ErGjVP,MjB4NoD,AfvP1C,AmBJE,AmG0EF,CnG1EE,AmG0ED,CesSmB,EftShB,CtHtEC,CmBJH,EJ2PwC,AfvPlC,AgC2BlB,CAAA,CqGiVsC,ClHhX1B,CAAA,CJ2PwC,AuGjL7B,AesS6B,CrI5W5B,AmBJZ,AmG0EY,CtHtEC,AsHsErB,CtHtEoB,CAApB,AqI4WoD,CtHrHJ,AiB5NpD,AqGiVwD,CtHrHJ,AiB5NpD,AqGiVwD,CAAjD,CtHrH6C,IiB5NpD,GAAA,UAAO,QAAP,EAA2B,WAA3B,EAAqD,SAArD,EAAyE;A5Cmb7E,AKEA,ANAA,AVDA,AsCxNwD,AI3PxC,AaiCR,AsF0CA,AeqSG,MtHrH6C,AI3PxC,CAAA,CaiCF,AsF0CA,EnG3EE,AaiCA,AqG+U4B,ClHhX5B,EaiCG,AsF0CA,CvGgLqC,EuGhLlC,CvGgL6C,CsHqHf,GrG/UzB,AqG+U6B,CrG/U5B,EAApB,CsF0CuB,AeqS6B,CfrS5B,AeqS4B,CAAA,CAAjD,GfrSH,CvGgL0E,CAAC,MAA3B;A3BwNxD,AKEA,ANAA,AVDA,AsCzNyF,AI3PpE,AamCb,AsFyCA,AeqSF,IrG9UE,EAAE,AqG8UJ,CrG9UK,CsFyCG,GeqSH,GfrSS,AeqSN,GfrSS,CtFzCf,CAAe,EAAE,CAAC,EqG8UF,CAAC,CfrSO,CAAC,AeqSN,CAAC,GAAH,CAAO,CfrSxB,CAPc,Oe4SG,CAAiB,KAAK,IAAI,CrG9U3C,EAAkD,AqG8UJ,CAAC,KAA9B,CAAD,CAAlB,GrG9U+D,CAAC,SAAZ,KAA0B,uBAAY,MAAxF;A5CibR,AKEA,ANAA,AVDA,A4JnGM,MAAA,QAAQ,GAAG,EAAE,CAAC,GAAH,CAAO,SAAP,CAAiB,QAAQ,IAAI,GAAG,CAAC,QAAjC,CAAX;AjJmGN,AKEA,ANAA,AVDA,AsCzNQ,AI7Pe,AaqCf,AsF0CA,AeoSF,MAAA,ElHnXiB,AaqCX,AsF0CE,CnG/ES,EJ6PR,GI7PQ,AmG+EH,AeoSN,EtHtHM,CiBxNC,AsF0CE,AeoSN,CrG9UK,CbrCC,AkHmXJ,ClHnXI,AkHmXH,CfpSO,CnG/EJ,AmG+EK,CtF1ChB,AqG8UK,CAAO,CfpSD,CAAS,CAAT,CvG8KR,AiBxNiB,CjBwNC,AuG9KE,IvG8KE,AuG9KE,AeoStB,CfpSuB,AeoSN,GfpSC,CAAS,CtF1CD,CAAC,EqG8UF,GrG9U9B,CqG8UkC,CtHtHb,AuG9KoB,CvG8KD,AuG9KE,CtF1CD,AqG8UJ,CtHtHhB,AsHsHiB,EtHtHM,EuG9KrB,EAA2B,EtF1CA,AqG8U7C,CtHtHgB,AiBxN8B,AqG8UzD,CfpS4D,CvG8KD,AuG9KE,GAAL,CtF1CT,AsF0CkB,IvG8KtC,CiBxNyC,AsF0CZ,CvG8Ka,CuG9KG,GvG8K7C,CAAlB,CAAP,CuG9KsD,GtF1CuB,CAAC,AsF0CE,CAArD,CAAZ,CAAf,GtF1CA,EACA;A5CgbR,AKEA,AqC/dA,A3C+dA,AVDA,AsCzNK,AI9PkB,AauCX,AsF0CJ,AemSF,GtHzHF,CelQA,AwFwFI,EnGjFe,AauCX,AqG6UN,ClHpXiB,CauCT,CAAC,AqG6UN,ClHpXc,AmGiFT,CnGjFS,AmGiFR,CemSH,KvG3XK,AwFwFT,GxFxFY,AwFwFI,AemSJ,CfnSZ,AemSa,CrG7UT,AsF8BU,CtF7BN,AqG4UO,CAAC,GAAH,CAAO,EvG3XC,CAAT,EAAY,CAAZ,AE+CO,CAAC,CF/CO,CuG2Xd,CAAiB,GrG7U1B,AqG6US,CAAD,CrG3UJ,AqG2UV,CrG7UM,EAGI,CAHJ,EAII,CAJJ,EAKI,WAAW,CAAC,KALhB,EAMI,WAAW,CAAC,MANhB,EAOI,WAAW,CAAC,MAPhB,EAQI,WAAW,CAAC,IARhB,EASI,KAAK,IATT;A5CgbZ,AKEA,AqC/dI,A3C+dJ,AVDA,AuB9cQ,AmBVoB,AakDnB,AqGmUH,EvG3XF,GE2CI,GhC3BM,EqI2WF,CrGjUJ,ChC1CU,G8BhBD,A9BgBI,AqI2WJ,GvG3XG,AuG2XA,IAAI,EvG3XE,CAAC,CuG2XC,CAAC,CrI3WK,CAAC,KAAD,CAA1B,CqI2WY,CAAmB,EvG3XnB,IACX;A1C6dT,AKEA,AqC/dW,A3C+dX,AVDA,AuDpaY,AsF+BJ,AekSA,IvG3XG,EE0DC,EsF+BA,AekSJ,CflSK,IxFzFO,EAAE,AE0DD,AsF+Bb,CtF/Bc,CsFgCd,CeiSU,EAAE,CrGjUR,GAAkB,IqGiUF,IAAI,GrGjUS,CAAC,KAA9B,IqGgU2B;AjJoGvC,AKEA,AqCheS,A3CgeT,AVDA,AuB9cQ,AmBZsB,AasDlB,AsFgCA,AeiSJ,MrGjUI,AsFgCA,EtH1EA,AmBZkB,AkHuXtB,CrI3WK,GsH0EK,CAAC,CtH1ED,C8BjBoB,A9BiBnB,AgC0CE,CAAC,AqGiUN,ClHvXc,AmGsFlB,CAAY,AeiSN,CrI3WA,AsH0EN,CxF3FH,A9BiBD,CsH0EmB,CtHzEnB,AmBbsB,AasDlB,AsFgCA,ExF3FmC,AwF4F/B,CtFjCe,AsFiCd,Ce8RsB,ClHrXT,CAAA,AmGuFV,EnGvFU,GmGsFlB,CxF3F6C,CAAV,AwF4FpB,CtFjCe,AsFgC9B,CxF3FgD,AE2DjB,CF3DI,AwF6F/B,CAAC,CxF7F8C,EwF6F3C,CtFlCR,IsFgCA,EAEe,CAAC,GAAG,MAFnB,EAGI,CAHJ,EAGO,CAAC,GAAG,MAHX;AlIoYZ,AKEA,AqCjeiE,A3CiejE,AVDA,AuB7cY,AmBdkB,AawDlB,AsFkCH,Ae8RD,IvG7XyD,CAAC,AwFyF1D,CxFzF2D,A9BmBvD,AmBdkB,AawDlB,EAAE,AqGgUN,CrGhUO,EhC1CE,AsH8ET,CtH9EU,AqI0WN,EAAE,CvG7XmD,AXKnC,CnBcb,CAAL,C8BnBmE,AXKjD,CWLmC,AXKnC,AawDlB,ChC1Cc,AgC2CV,IhC3Cc,GAAG,CAAC,GgC2CP,ChC3CM,AgC2CL,ChC3CF,CAAc,IgC0C5B,EhC1Cc,AgC4CV,ChC5CJ,AgC0CA,EAGI,SAAS,CAAC,cAHd,EAII,WAAW,CAAC,KAJhB,EAKI,WAAW,CAAC,MALhB,EAMI,CANJ,EAOI,WAAW,CAAC,MAPhB,EAQI,SAAS,CAAC,IARd,EASI,KAAK,IATT;A5CmaZ,AKEA,AqClemF,A3CkenF,AVDA,AuB7cS,AmBfkC,AamElC,AsF0BG,AewR2B,GvG3XnB,GwFmGR,CxFjGJ,AuGyXY,CAAd,SvGzXY,CAAV,EAAa,CAAb,EAAgB,GwFiGQ,CAAC,CAAD,EAAI,CAAC,GAAG,MAAR,EAChB,CADgB,EACb,CADa,EAEhB,CAAC,GAAG,MAFY,EAEJ,CAFI,EAGhB,MAHgB,CAApB;AlI+XZ,AKEA,AqCle0B,A3Cke1B,AVDA,A6I5XY,AeyRN,MfzRM,GxFrGmB,CuG8XnB,GvG9XuB,CAAT,IAAc,CAAd,AuG8XL,EvG9XoB,CuG8XjB,IfzRQ,AeyRJ,CfzRK,CAAC,EeyRF,CfzRK,AeyRJ,IAAT,CfzRS,AeyRK,GfzRO,AeyRJ,CAAC,CAAlB,EAAqB,EfzRb,EAChB,CADgB,AeyRR,CAAlB,CfxRa,CAAC,GAAG,KADS,EACF,CADE,EAEhB,CAAC,GAAG,KAFY,EAEL,CAAC,GAAG,MAFC,EAGhB,MAHgB,CAApB;AlI4XZ,AKEA,AqCne2C,A3Cme3C,AVDA,AuB7cQ,AmBjBqC,AaqErC,AsFgCI,AesRN,IrI1WE,EsHoFI,AesRN,CrI1WK,CmBjBkC,EWJE,A9BqBjC,AqI0WJ,CvG/XsC,AEyEjC,AqGsTJ,CvG/XsC,G9BqB9B,AgCoDX,ChCpDY,EmBjByB,EnBiB1B,AqI0Wb,CrI1WE,EmBjBqC,AkH2XtB,GvG/XwB,AwFyGf,CxFzGgC,AwFyG/B,CxFzGc,AXIF,AmGqGX,CxFzGS,AXIE,EWJqB,AXIrB,AmGqGR,CesR/B,IftR0B,EAAY,CAAC,GAAG,MAAJ,GAAa,MAAzB,EAChB,CAAC,GAAG,KADY,EACL,CAAC,GAAG,MADC,EAEhB,CAAC,GAAG,KAAJ,GAAY,MAFI,EAEI,CAAC,GAAG,MAFR,EAGhB,MAHgB,CAApB;AlIyXZ,AKEA,AqCpeoE,A3CoepE,AVDA,A0C/d6C,AasExC,AsFmCO,AemRN,GrG7VF,Gb/ByC,AmGyGjC,AemRN,EvGhY8D,CAAC,CAAC,CAAD,CAAD,GAAO,AuGgY5D,CvGhY6D,AXI/B,AkH4X7B,CvGhY6D,CAAD,CAAR,AXIvB,CAAA,EkH4XvC,CAAiB,GfnRS,AemR1B,CfnR2B,AemRN,CfnRO,EemR5B,CfnR+B,MAAL,EAAa,CAAC,GAAG,MAAjB,EAChB,CADgB,EACb,CAAC,GAAG,MADS,EAEhB,CAFgB,EAEb,CAAC,GAAG,MAAJ,GAAa,MAFA,EAGhB,MAHgB,CAApB;AlIsXZ,AKEA,AqCre+E,A3Cqe/E,AVDA,AuB7cQ,AnBgYR,AsCnZ2D,AmG6GlD,IzIsSG,CyI9UU,ItHlDT,IAAI,CAAC,EnBgYlB,CmBhYqB,CAAb,EAAgB,CAAC,GAAG,KAAK,CAAC,MAA1B,EAAkC,CAAC,EAAnC,EACA;AZ4cR,AKEA,AqCtegF,A3CsehF,AVDA,AuB5cY,AqIwWN,UrIxWY,AqIwWR,GAAJ,EAAS,KrIxWa,GAAI,CAAC,CAAC,GAAG,IAAJ,GAAW,CAAZ,IAAiB,MAAlB,GAA4B,YAA/C;AZ4cZ,AKEA,AqCvekF,A3CuelF,AVDA,AuB5cY,AqIwWJ,GvGpYJ,KuGoYI,ErIxWU,KAAK,EqIwWN,CrIxWS,AqIwWR,CrIxWS,AqIwWnB,GrIxWsB,AqIwWR,GAAG,CrIxWb,AqIwWc,CAAD,CAAjB;AjJoGR,AKEA,ANAA,AVDA,AsC1NY,AfjPA,AnB2XZ,AyIlSK,Ae8QG,CxJoBR,CkC1IY,CuGtM6C,GtH3C7C,EeiPA,AsHsHJ,CtHtHI,AfjPG,CAAC,CnB2XJ,MwJpBK,CtHtHL,AsHsHM,CtHtHN,AsHsHJ,CrIvWkB,EqIuWJ,CrIvWO,AnB2X7B,EAAwB,AwJpBC,CAAC,CAAD,CrIvWV,AqIuWP,CrIvWI,EeiPA,CfjP0B,EeiPlC,GfjPuC,CAAC,CAAD,CAA/B,IeiPa,QAArB,EAA6C;A3B0NjD,AKEA,AqCxeI,A3CweJ,AVDA,AuB3cS,AnB2XL,AyIjSA,Ae6QG,ExJoBH,AyIjSA,OxFtHO,IwFsHI,CzIiSX,CAAA,AyIjSW,OxFtHS,CAAC,CAAD,CwFsHR,CxFtHY,CAAJ,AjDuZpB,CiDvZA,AjDuZA,MAAA,CAAA,EyIjSW,CzIiSX,CAAA,AyIjS0B,CzIiS1B,GAAA,MAAA,MyIjSW,EAA+B;AlIiX9C,AKEA,AqCxeC,A3CweD,AVDA,AsCzNQ,AlCyIJ,AyIhSI,CxF5HR,CjD4ZI,MkCzIQ,AuGvJE,MzIgSV,AyIhSgB,CvGuJD,AlCyIf,EyIhSmB,CvGuJD,KAAK,IlCyIvB,CkCzIkB,AlCyIlB,CkCzI6B,AuGvJE,CAAC,GvGuJ5B,AlCyIJ,CAAA,EyIhSI,CzIgSJ,CAAA,CAAA,GAAA,KAAA;AOgFJ,AKEA,ANAA,AVDA,AsCzNQ,AflPA,AnB2XJ,AmD1UA,AsF2CI,Ae0QF,ExJqBF,AmD1UA,EhCjDI,EqIsWF,EtHpHM,AuGtJE,Ce0QL,CAAC,Gf1QS,CzI+Rf,CAAA,AwJrBE,CtHpHc,AflPA,AgCiDhB,AsF2CkB,Ae0QN,CrGrTZ,EjBiMmB,CflPC,IekPI,AflPpB,AqIsWF,CAAmB,CrGrTrB,CnD0UA,AmD1UA,CnD0UA,CkCzII,CAJyC,EuGlJX,CAAC,CtF3CnC,AqGqTE,ExJqBF,CAAA,AmD1UA,EsF2CI,CzI+RJ,CAAA,CAAA,GAAA,ImD1UA,InD0UA;AOgFJ,AKEA,AqCxeA,A3CweA,AVDA,AuB3cK,AnB2XD,AsCjZI,AawEA,AsF0CA,Ae0QH,ExJqBD,GwJ1CgC,EAqB7B,Cf1QO,CxFxHE,AXMH,AawEA,CbxEL,CkHuW4B,CAApB,ClHvWC,AawET,AqG+RJ,CxJ0CA,AsCjZI,CtCiZJ,AyI/RiB,CtF1CD,EF9EpB,AwFwHwB,CxFxHE,CAA1B,AE8EQ,EF9EqB,CAA7B,EAAgC,EjDuZ5B,CAAA,MAAA,AyI/RoC,CzI+RpC,AyI/RqC,GzI+RrC,CAAA,CAAA,EyI/RI,CzI+RJ,MAAA;AOgFJ,AKEA,AqCxeI,A3CweJ,AVDA,AsCxNQ,AlCwIP,AmDzUI,AsF2CG,AeyQL,CxJgBH,CiDlZI,CjDkZQ,AmDvUR,AqGgLS,EAuIR,GtHnHO,AuGtJE,CvGsJD,EsHpBA,EAuIA,CfzQO,CxFzHH,AjDkZO,AwJvJX,CvG3PK,Af+QV,AsHpBN,CvG3Pe,AwFyHM,AevHC,CtH8QhB,AsHmHN,CvGnYmB,CAAJ,CAAb,CwFyHwB,CAAC,MAAN,GAAe,CAA9B,UzIyRI,YAAY,GAAA,EAAA,CAAxB;AOqFA,AKEA,ANAA,AVDA,AsCvNY,AfpPR,AsH8FI,MvGsJI,EuGtJE,CtH9FH,IAAI,CeoPK,CAAC,EuGtJE,GAAG,EvGsJd,CAAiB,EfpPlB,CAAiB,KeoPhB,CfpPD,CAAP,MsH8F6B,MAAP,EAAe,IAAf,EAAqB,CAArB,CAAlB;AlI6WR,AKEA,AqCzeI,A3CyeJ,AVDA,AsCvNS,AfpPR,AqIuWC,EpI7ZF,AoI6ZE,GtHtHM,AsHsHH,CAAC,KvGpYO,AfmRL,CsHiHN,CvGpYE,EuGoYW,CvGpYG,CuGoYD,CAAC,QAAH,CAAY,gBAAZ,CAA6B,EAAE,CAAC,QAAH,CAAY,UAAZ,CAAuB,GAAvB,EAA4B,UAAS,IAAT,EAAe,IAAf,EAAmB;AjJoG3F,AKEA,AqC1eoB,A3C0epB,AVDA,A6I7WQ,AeyQJ,IAAA,IAAI,CvGrYiB,AwF4HZ,AeyQJ,IfzQQ,CAAC,GAAG,AeyQjB,CfzQS,ExF5HO,AwF4HI,AeyQJ,CfzQK,ExF5Hc,CAAnB,AwF4HQ,AeyQJ,EAAE,CAAC,MfzQU,CAAC,AeyQd,CAAW,IAAf,CfzQZ,AeyQgC,EfzQM,CAAC,GAAG,CAA1C,EAA6C,CAAC,AeyQL,IfzQS,AeyQlB,CfzQhC,CeyQ6C,CfxQ7C;AlI4WR,AKEA,AqC3e2C,A3C2e3C,AVDA,AsCrNY,AuGvJA,AewQN,MfxQM,AewQN,IAAI,CAAC,EtHjHQ,AuGvJA,CAAC,EewQd,EfxQM,CAAa,AewQN,CtHjHP,EACA,CsHgHW,KfxQW,CAAC,CAAD,CAAT,AewQN,EAAb,CfxQkC,MAA5B,EADJ;AlI6WR,AKEA,ANAA,AVDA,AsCpNgB,AI7QR,AkH6XH,KAFe,CAAhB,GlH3XS,CAAL,EJ6QY,CI7QH,CAAT,MJ6QoB,CAAC,QAAT,GAAoB,OAAO,CAAC,QAAhC,EACA;A3BmNhB,AKEA,AqC5eI,A3C4eJ,AVDA,AsCnNoB,AuGzJR,AewQR,EvGvYA,CAAC,CAAC,AuGuYF,EfxQQ,EewQJ,CAAC,CtH/GW,GexRhB,AwF+He,AewQf,CfxQgB,ExF/HF,AuGuYF,CvGvYG,CfwRS,AuGzJhB,AewQM,CtH/GW,AuGzJJ,AewQN,GvGvYK,IAAN,AfwRE,CAAiB,AsH+GrB,CfxQkB,AewQN,CvGvYG,AwF+HI,CAAC,GAAG,CAAL,CxF/HG,AfwRjB,AuGzJK,CxF/Ha,EwF+HM,IxF/Hb,CAAc,CAAd,AwF+HnB,AewQI,CvGvYE,AuGuY2B,Cf3QrC,Ee2QwC,CvGvYG,AuGuYF,EvGvYI,CAAC,CuGuYtC,CAAZ,OvGvY+C,GAAe,CAAC,CAAC,SAAjB,EAA4B,IAAI,EAAJ,EAA7D,CAAd;A1C2eJ,AKEA,AqC5eC,A3C4eD,AVDA,AsCnNoB,AsH+GhB,IAAA,IAAI,CAAC,KAAL,GAAa,IAAI,EAAE,CAAC,OAAH,CAAW,IAAf,CAAoB,UAAS,IAAT,EAAa;AjJoGlD,AKEA,ANAA,AVDA,AsCnNiB,AuGzJL,AewQN,MfxQM,OAAO,CAAC,IAAR,CAAa,SAAS,CAAC,CAAC,GAAG,CAAL,CAAT,GAAmB,MAAhC;AlI4WZ,AKEA,ANAA,AVDA,A6I5WS,AewQH,aAAM,GAAG,CAAC,KAAJ,CAAU,QAAV,CAAmB,MAAnB,GAA4B,CAAlC,EAAoC;AjJoG1C,AKEA,ANAA,AVDA,AsCpNgB,AiBtML,AqGqTmC,ErGrTnC,MjBsMK,IsH+GkC,ItH/G1B,AiBtMb,CAAA,AqGqT4C,EtH/G5B,CsH+G+B,CrGrT/C,EqGqTkD,CrGrTzD,AqGqT0D,EtH/G9C,GsH+G0C,CAAU,IrGrTpD,MAAZ,AqGqTsD,CAAqB,CrGrThD,AqGqT2B,CAAZ;AjJqG9C,AKEA,ANAA,AVDA,AsCpNgB,AI7QR,AawEA,AsF6CA,AesQ4E,QtH9GpE,AsH8GoE,ClH3XvE,AmGqHA,EtF7CE,AqGmTwE,CAAC,CftQvE,CnGrHT,AmGqHU,CvGwJK,EI7QF,AawEA,AsF6CA,AesQ+D,CtH9G1D,AuGxJb,AesQiF,EftQtE,CAAC,GAAG,CvGwJK,CAAC,AI7Q1B,GawEyB,AqGmTmD,CtH9GpE,AuGxJkB,AesQwE,CftQvE,IesQiD,EftQ5E,EAAmC,CAAC,CtF7C7B,EsF6CgC,CAAvC,CtF5CO,CsF4CmC,CAAC,EAA3C,EtF5Ca,AsF6Cb,YtF7CyB,UADlB,IAEA,MAAM,YAAY,WAFzB;A5CyZR,AKEA,ANAA,AVDA,AsCpNa,AiBnMR,AsF4CO,AeoQsG,GrGrTvG,GsFiDC,CvG4IJ,IuG5IS,CAAC,IAAN,CAAW,MAAM,CAAC,CAAD,CAAjB,EAAsB,MAAM,CAAC,EAAE,CAAH,CAA5B;AlI2WZ,AKEA,ANAA,AVDA,A6I3WS,AeoQJ,KAHY,CAAb;AjJ0GJ,AKEA,ANAA,AVDA,AwBngBA,A+B2GA,AsF6CK,AeoQD,IAAA,IAAI,CpI5ZQ,A+B2GhB,AqGiTS,IAAL,GAAY,CpI5ZhB,CAAyB,CAAzB,CoI4ZoB,CpI5Zc,CoI4ZZ,CrGjTtB,AqGiTuB,OAAH,CAAW,IAAf,CAAoB,UAAS,IAAT,EAAe,KAAf,EAAoB;AjJuGxD,AKEA,ANAA,AVDA,AsCpNY,Ad9SR,A+BKJ,AsFyEyD,Ae6UnD,CrGtZN,AsFyEA,CrH9EI,A+BKgC,C/BL/B,IAAI,CAAC,Ec8SM,AiBzShB,AqGsZY,CtH7GK,AiBzSjB,E/BLe,CAAN,CoI2ZQ,EpI3ZE,CAAV,AoI2ZW,CtH7GK,CAAC,Cd9SH,CAAnB,AoI2ZoB,CAAC,KtH7Gb,AsH6GN,EtH5GM;A3BmNZ,AKEA,ANAA,AVDA,AsCnNgB,Ad/SZ,AoI2ZE,IpI3ZA,CAAF,CoI2ZE,EtH5GU,GsH4GL,CAAC,ItH5GY,CAAC,AsH4GnB,OtH5GU,CAAiB,QAAjB;A3BmNhB,AKEA,ANAA,AVDA,AsCnNa,Ad/ST,AkBiCI,ActCR,AoGgaM,EpI3ZF,CAAC,CgCLC,EoGgaA,CpI3ZG,CAAC,CkBiCG,EkH0XF,CAAC,CpI3ZG,CAAX,CkBiCI,GAAc,GkH0XhB,CAAgB,EpGhaI,GAAG,CdsCrB,IkH0XwB,CAAC,EAAE,CAAC,GAAH,CAAO,SAAP,CAAiB,KAAjB,CAAD,CAA1B,EAAqD,CAArD;AjJuGN,AKEA,ANAA,AVDA,AsCnNS,Ad/SL,AgCLA,AoGgaE,EpI3ZF,AgCLA,ChCKC,GoI2ZC,CpI3ZG,CAAC,GgCLG,AoGgaF,CAAC,CpI3ZG,AgCLA,ChCKX,MoI2ZE,CAAe,CAAf,EAAkB,CAAlB,EAAqB,GAAG,CAAC,IAAJ,CpGhaA,AoGgaS,KAA9B,EpGjauB,AoGiac,GAAG,CAAC,IAAJ,CAAS,MAA9C;AjJuGN,AKEA,ANAA,AVDA,AuIxfA,A/GVI,AgCLA,AoGgaE,EpI3ZF,AgCLA,ChCKC,C+GUL,EqBiZM,CpI3ZG,CAAC,AgCLA,EAAE,CoGgaD,CAAC,CpI3ZG,CAAX,G+GUJ,EqBiZM,UpGhac,IAFS;A7CygB7B,AKEA,ANAA,AVDA,AuIzfA,AjGsSQ,Ad/SJ,AgCLA,AoGgaE,EpI3ZF,AgCLA,ChCKC,GoI2ZC,CpI3ZG,CAAC,Cc+SG,AsH4GJ,CAAC,CpGhaG,EhCKE,AgCLA,ChCKX,CoI2ZE,CAAU,QAAV,CtH5GE,AsH4GiB,KAAnB,MpGhaqB;A7CugB3B,AKEA,ANAA,AVDA,AuI1fA,A/GRI,AgCTyB,AoGoaxB,CpGpaL,ChCSI,CAAC,EoIoZW,CAAZ,CpIpZK,CAAC,E+GQV,G/GRe,EAAX,C+GQJ,EAAA;A5H0fA,AKEA,ANAA,AVDA,AuI3f4C,AjGwSpC,Ad9SJ,AoI0ZD,ErBpZyC,CqBmYA,EAiBvC,IpI1ZM,CAAC,C+GMgC,AjGwS7B,CiGxS6B,C/GN7B,AoIyY6B,CpIzYxC,Cc8SI,AsH4GO,EAjB6B,CAA7B,CAAb,CAnYsB,CAqZtB,IrBrZ0C,EAAA,MAAA,CAAA;A5H2f5C,AKEA,ANAA,AVDA,AsCnNK,Ad9SJ,Gc2QW;AtBwPZ,ANAA,AVDA,AuIrcI,AqB8VF,EAAA,GAAG,CAAC,KrB9VF,AqB8VF,GAAY,EAAE,CAAC,OrB9Vb,CqB8VU,CAAY,CrB9VtB,eqB8VU,CAA6B,EAAE,CAAC,QAAH,CAAY,UAAZ,CAAuB,GAAvB,EAA4B,UAAS,IAAT,EAAe,IAAf,EAAmB;A5IyG1F,ANAA,AVDA,AuItcI,AqB+VA,IAAA,IrB/VA,AqB+VI,CAAC,IrB/VL,GAEI,CqB6VJ,GAAgB,ErB7VZ,CAAA,CqB6VgB,EAAE,CrB7VlB,AqB6VmB,CrB7VnB,IAAA,EqB6VgB,CAAW,ErB7VpB,EqB6VK,CAAoB,CrB/VpC,SqB+V6C,IAAT,EAAa;A5IyGrD,ANAA,AVDA,A4JvGM,MAAA,IAAI,CAAC,QAAL,GAAgB,IAAI,OAAJ,EAAhB;A5IyGN,ANAA,AVDA,AuIpcQ,A7F7BA,AkH0XH,IrB7VG,CqB2VY,CAAhB,GrB3VQ,A7F7BC,C6F6BA,G7F7BL,GAAY,MAAM,CAAC,IAAnB,M6F6BA,GAA+B,IAA/B,CAJJ;AvH0cJ,ANAA,AVDA,A0CjeK,AkH0XD,IAAA,IAAI,CAAC,QAAL,GAAgB,IAAI,EAAE,CAAC,OAAH,CAAW,IAAf,CAAoB,UAAS,IAAT,EAAe,QAAf,EAAyB,KAAzB,EAA8B;A5IyGtE,ANAA,AVDA,A4JvGM,MAAA,IAAI,CAAC,QAAL,CAAc,GAAd,CAAkB,QAAlB,EAA4B,UAAU,CAAC,YAAA;A5IyG7C,ANAA,AVDA,A4JvGQ,QAAA,EAAE,CAAC,QAAH,CAAY,YAAZ,CAAyB,IAAzB,EAA+B,QAA/B;A5IyGR,ANAA,AVDA,A8IxgBA,AciaO,OAFqC,Ed/ZnC,AciaA,KAAK,Cdjad,Aciae,CdhaX,AcgaK,CdjaT,EAEI,Ac+Ze,CdjanB,EAGI,Cc4ZwC,Cd/Z5C,Ac+ZM,Ed3ZF,EAJJ,EAKI,WALJ,EAMI,WANJ,EAOI,SAPJ;A9H0gBA,ANAA,AVDA,A8IlgBsB,Ac2ZjB,KAJe,CAAhB;A5I6GJ,ANAA,AVDA,A8IlgBI,Ac2ZA,IAAA,CdnaJ,EAQwB,Cc2ZhB,CAAC,iBAAL,GAAyB,IAAI,EAAE,CAAC,OAAH,CAAW,IAAf,CAAoB,UAAS,IAAT,EAAe,QAAf,EAAyB,KAAzB,EAA8B;A5IyG/E,ANAA,AVDA,AsCpNI,Ad9SJ,AsHEI,AcyZE,EtH7GF,IwG5SM,AcyZJ,EtH7GF,AwG5SQ,CxG4SR,Ad9SY,CoI2ZN,CdzZK,AcyZJ,CdzZK,GtHFhB,AsHEoB,CtHFG,CAAvB,AsHEsB,CxG4SlB,CAAA,Ad9S4B,AoI2Z1B,CdzZmB,AcyZL,GAAd,CAAkB,CtH7GpB,GAAA,GwG5SA,CcyZE,EAA4B,ItH7Gd,EAAhB,EAAuC,GsH6GE,CAAC,GtH7G1C,EAAiD,OsH6GP;A5IyG9C,ANAA,AVDA,AsCnNQ,Ad9SJ,AsHCA,AcyZI,MdzZE,ExG6SE,AwG7SA,AcyZJ,CpI1ZG,CoI0ZD,CpI1ZG,AsHCE,AcyZJ,CpI1ZG,AsHCE,GtHDE,AsHCE,CxG6SA,Ad9SD,CsHCG,ExG6SC,Ad9SD,AoI0Zd,CpI1ZG,AsHCc,AcyZL,ItH5GQ,Cd9SE,CAAC,CAAC,CAA5B,Cc8SmB,CAAW,CwG7S9B,CcyZI,CAAyB,CtH5GzB,GsH4GA,EAA+B,QAA/B;A5IyGR,ANAA,AVDA,AuIpcQ,A/G7DP,AkB+BG,AoG9BA,AcyZG,ElH3XH,E6F8BI,EO5DE,CcuZmC,CdvZjC,CP4DA,A7F9BR,AkH2XK,CrB7VI,A7F9BT,CoG9BW,CAAC,EcyZF,CdzZM,AcyZL,CAAN,CdzZa,EP4Dd,A7F9BJ,AkH2Xe,ClH3Xf,AoG9BqB,EP4DA,CqB2VoB,CAAvC,ClHzXF,C6F8ByB,E7F9BzB,GoG9BA,SpG8BA,C6F8BqB,EAAjB;AvHscR,ANAA,AVDA,AsCnNQ,AI9QA,AoG/BJ,AcyZC,KAJwB,CdrZnB,AcqZN,EdrZQ,GxG6SG,AI9QA,AoG/BA,CAAC,GpG+BG,AoG/BC,EAAE,ExG6Sd,CwG7SiB,CxG8SjB,CI/QO,CAAY,KAAK,CAAjB,EAAoB,AoG/B/B,KpG+BoC,CAAzB,EAA4B,KAAK,KAAjC,EAAwC,KAAK,MAA7C,CAAP;A1BmeR,ANAA,AVDA,A0CjeK,AkH0XD,GlH7XA,CkH6XA,IAAI,CAAC,eAAL,GAAuB,IAAI,EAAE,CAAC,OAAH,CAAW,IAAf,CAAoB,UAAS,IAAT,EAAe,QAAf,EAAyB,KAAzB,EAA8B;A5IyG7E,ANAA,AVDA,A4JvGM,UAAI,IAAI,CAAC,QAAL,CAAc,GAAd,CAAkB,QAAlB,CAAJ,EAAiC;A5IyGvC,ANAA,AVDA,A8IhgBI,AcyZI,MdzZA,EcyZA,CdzZJ,WcyZgB,CAAC,IAAI,CAAC,QAAL,CAAc,GAAd,CAAkB,QAAlB,CAAD,CAAZ;A5IyGR,ANAA,AVDA,AsClNY,AwG/SC,Ac0ZL,MdzZA,EcyZA,Cd1ZK,CxG+SG,QAAQ,CAAC,EsH2GJ,CAAC,EtH3GN,CAAe,CsH2GL,CtH3GV,AsH2GW,EtH3GQ,MsH2Gb,CtH3GN,AsH2GoB,CtH3GxB,EACA,AsH0GU,CAAkB,QAAlB,CAAD,CAAb;A5IyGR,ANAA,AVDA,AsCjNgB,AsH0GT,QtH1GS,QAAQ,GAAG,QAAQ,CAAC,OAAT,EAAX;AtBmNhB,ANAA,AVDA,AuIpcQ,AjGmPK,AwG/ST,IP4DI,EO5DA,CxG4SI,EiGhPA,CAAC,GjGqPD,EiGrPJ,AO5DJ,EACA,CP2DiB,CAAb;AvHscR,ANAA,AVDA,AsC/MgB,AwGhTR,AcuZF,IdvZE,EcuZF,CdvZK,CxGgTK,EwGhTF,AcuZJ,CAAC,CdvZH,IxGgTgB,GAAG,AsHuGrB,CAAc,GAAd,CAAkB,GtHvGW,CAAC,IAApB,AsHuGV,EAA4B,UAAU,CAAC,YAAA;A5I0G7C,ANAA,AVDA,AsC/Ma,AwGhTL,AcuZA,IdvZA,GAAG,CcuZH,EdvZM,AcuZJ,CdvZK,AcuZJ,EdvZH,McuZA,CAAY,YAAZ,CAAyB,IAAzB,EAA+B,QAA/B;A5I0GR,ANAA,AVDA,AsC/MS,AwGhTJ,AcuZE,Gd3ZH,IcyZwC,EdnZxC,AcqZK,KAAK,CAAC,CAAN,GAAU,IAFyB,CAAtC;A5I4GN,ANAA,AVDA,AwBlgBA,AsHKQ,AcqZH,IdrZG,Cc6YmB,CAAvB,Cd7YO,EtHLK,CsHKF,CAAC,EtHLf,AsHKQ,CtHLa,CAArB,EAA8B;ARogB9B,ANAA,AVDA,AsC/MQ,AdlTJ,AkB+BA,AoG3BI,AcqZJ,ElH1XA,EoG3BI,AcqZJ,EpIzZI,CAAC,AsHIE,CxG8SC,AsHuGJ,CtHvGK,AInRT,AkH0XK,CpIzZG,AkB+BR,AoG3BU,CtHJD,CAAC,AsHIN,ExG8SU,CdlTD,IckTJ,AInRT,AkH0XA,CtHvGoB,AInRpB,ClB/BS,CoIyZS,EtHvGd,AdlTkB,CAAb,CcmTL,AsHsGkB,EpIzZI,AkB+B1B,AkH0XwB,CpIzZhB,AoIyZiB,ElH1XzB,GlB/BgC,CAAhC,CoIyZsB,CAAW,IlH1XxB,AkH0XS,ClH1XlB,AkH0XsC,ElH1XlB,CAApB,EAA6B,KkH0XkB,IAAT,EAAe,QAAf,EAAyB,KAAzB,EAA8B;A5I0GxE,ANAA,AVDA,AsC9MY,AdlTR,AkB+BI,AcnBR,AsFTK,AcqZC,EpIxZF,CAAC,CgCYL,IdmBY,ClB/BD,CAAP,AoIwZM,CtHtGO,EInRA,CkHyXH,CpG5Yd,AoG4Ye,GlHzXH,IAAc,CAAd,AkHyXF,CAAc,EtHtGZ,CInRmB,AkHyXrB,CAAkB,IlHzXQ,IkHyX1B,CAAJ,ClHzXyB,CkHyXQ,GlHzXO,CAAtC,EACA;A1BkeR,ANAA,AVDA,AsC9MS,AdjTL,AkB+BQ,AcrBZ,AoG6YQ,MpIvZA,EoIuZA,GpIvZK,EkB+BM,ClB/BH,CAAC,CAAC,EkB+BN,ClB/BS,CoIuZD,CAAC,EpIvZJ,EoIuZQ,CpIvZG,AoIuZF,CpIvZT,GAAe,CAAhB,GoIuZK,CAAc,CpIvZG,CAAlC,CoIuZiB,CAAkB,QAAlB,CAAD,CAAZ;A5I0GR,ANAA,AVDA,AwB9fI,AkB8BK,ActBT,AoG8YQ,EpItZJ,CAAC,EkByB4B,GkH6XzB,CpItZG,CgCQX,IhCRI,EgCQJ,EAAA,GoG8YqB,CAAC,IAAI,CAAC,QAAL,CAAc,GAAd,CAAkB,QAAlB,CAAD,CAAb;A5I0GR,ANAA,AVDA,AsC9MQ,AdjTU,AgCQe,AoG+Y1B,EpIvZW,AgCQe,ChCRd,IAAI,IciTR,AkBzSkB,ChCRf,AgCQe,GlBySzB,QkBzSyB,EAAA,MAAA,CAAA;AxCyfjC,ANAA,AVDA,AuIpcQ,AjGsPH,AdjTD,AsHCA,AcsZC,EpIvZD,CcwRA,CiG7NI,CqBuVc,CdjZZ,AciZN,CpIlZK,E+G2DG,AO1DC,CP0DA,A/G3DD,CAAC,CAAC,AsHCE,EAAE,CtHDD,E+G2DT,AO1Da,CtHDR,E+G2DU,AO1DnB,CtHDmB,CAAV,E+G2DL,C/G3DmB,CAAf,KAAqB,CAA7B;ARigBJ,ANAA,AVDA,AwB/fI,AkB+BI,AcKJ,AsFnCA,AcuZD,EpIxZC,CAAC,AoI0XsC,EA8BtC,CdvZK,EpG8BE,ClB/BD,AsHCE,EtFmCT,CsFnCY,AcyX2B,ClH3V1B,ClB/Bb,AsHCc,AcuZJ,ElHzXO,AkH2VsB,ClH3VrB,AoG9BD,AcyXP,ClH3VS,AkH2VrB,CAtZsB,Cd6BpB,AcyZF,ClH3XwB,CcKtB,CAAY,GdLe,CAAV,IAAe,AcKhC,EAAoE,GdL/B,IcKrC,CdLI,CcKmG;AxC6d3G,ANAA,AVDA,AsCxMI,AdxTc,AkBgCV,AcIQ,AsFlCZ,ExGsTA,AdxTc,CAAC,GsHET,CtHFa,CcwTnB,AIxRQ,AcII,ClBoRZ,AwGtTS,GtHFK,AsHEF,CpG8BC,CoG9BC,EpG8BG,AcIL,CdJM,AoG9BD,CpG8BE,EoG9BnB,CpG8BsB,AcIV,ElBoRZ,CAAI,EIxRuB,AcIf,CdJK,AcIL,EAAA,ClBoRR,CAAA,AIxR4B,KAAK,IJwRrC,EAAI,AIxRA,OJwRJ,EAAS;AtB0Mb,ANAA,AVDA,AwBhgBI,AkBiCI,AcEQ,AsFjCZ,AcwZF,EpI1ZE,AoI0ZF,ElHzXM,CkHyXH,CpGvXW,AsFjCN,AcwZJ,CpI1ZG,EkBiCI,AoG/BA,CtHFD,CAAC,AoI0ZX,CpI1ZY,AsHEE,CpG+BC,CcED,AsFjCE,AcwZJ,CpI1ZG,CoI0ZD,CpGvXA,AsFjCK,AcwZJ,CpI1ZJ,AkBiCL,EoG/BJ,CtHFmB,AgCmCP,ChCnCH,GAAc,AoI0Zb,CpI1ZF,AoI0Zc,KpI1ZO,CAA7B,UoI0ZU,CAA6B,EAAE,CAAC,QAAH,CAAY,UAAZ,CAAuB,GAAvB,EAA4B,UAAS,IAAT,EAAe,IAAf,EAAmB;A5IwG1F,ANAA,AVDA,AwBhgBI,AkBiCI,AcC8D,AoGwXlE,EpI1ZA,CAAC,CkBiCG,AkHyXJ,IAAI,CpI1ZG,AkBiCE,AkHyXJ,IlHzXQ,ClBjCb,GoI0ZA,ClHzXI,EkHyXY,IAAI,EAAE,CAAC,OAAH,CAAW,IAAf,CAAoB,UAAS,IAAT,EAAa;A5IwGrD,ANAA,AVDA,AwBjgBkB,AkBmCV,AkHwXF,EpI3ZY,CAAC,GoI2Zb,CpI3ZiB,GoI2Zb,ClHxXM,AkHwXL,CpI3ZO,IkBmCG,AkHwXf,GlHxXkB,AkHwXL,IAAI,ClHxXP,IAAiB,AkHwXd,ClHxXX,CkHwXF;A5IwGN,ANAA,AVDA,AwBhgBI,AkBkCC,AcFmE,AsF9BpE,AcwZC,EdxZD,CpGiBA,EkHqYgB,CAAhB,CdtZK,CtF8B+D,AsF9B9D,CtHFC,CAAC,EsHER,CtHFY,AsHED,CtHFE,CgCgCuD,CsF9BpE,EtHFiB,AsHED,CtHFhB,CgCgCoE,CsF9BpE,ItF8BoE,CAAA,EAAA;AxCkexE,ANAA,AVDA,AwBhgBC,AgC+BuE,AsF7BpE,AcwZA,EdxZA,EcwZA,EpG3XoE,CsF7B/D,CAAC,AcwZF,CAAC,GdxZL,CtF6BoE,AsF7BzD,AcwZX,GpG3XoE,AsF7BpE,AcwZY,EdxZI,EtF6BoD,AoG2XpD,CdxZhB,CcwZkB,CAAC,OAAH,CAAW,IAAf,CAAoB,UAAS,IAAT,EAAe,IAAf,EAAmB;A5IwGvD,ANAA,AVDA,AyB5jBA,A+B0F2G,AsF3BvG,AcuZE,MAAA,GdvZK,CAAP,AcuZM,CAAC,KAAL,CAAW,GAAX,GAAiB,IAAI,CAAC,CAAL,IAAU,cAAY,IAAI,CAAC,CAAjB,GAAkB,MAA7C;A5IwGN,ANAA,AVDA,A8I7fC,AcuZK,MAAA,GtHzGF,CsHyGM,CAAC,KAAL,CAAW,ItHzGb,AsHyGE,GAAkB,IAAlB;A5IwGN,ANAA,AVDA,AuIpcQ,AjGsPA,AkBtRJ,AoG8XE,IrB9VE,EqB8VF,EpG9XF,C+EgCQ,CAAC,AjGsPD,AsHwGF,CtHxGG,AsHwGF,EpG9XP,GlBsRc,AkBpRV,AoG4XF,CAAW,GrB9VT,CjGsPA,AsHwGF,CpG5XE,C+E8BkB,AjGuPlB,AkBrRA,I+E8BA,A/E9BA,CAAA,IAAA,KAAO,IAFX;AxCseJ,ANAA,AVDA,AsC7MY,AsHuGP,KAJW,CAAZ,StHnGe,CAAP;AtB+MZ,ANAA,AVDA,AsC7MS,AkBrRD,AoG4XJ,IpG5XI,AoG4XJ,IAAI,CAAC,EpG5XM,GAAG,IoG4Xd,GpG5XqB,AoG4XJ,IpG5XQ,AoG4XJ,EpG5XjB,AoG4XmB,CAAC,OAAH,CAAW,IAAf,CAAoB,UAAS,IAAT,EAAe,IAAf,EAAmB;A5IwG5D,ANAA,AVDA,AwDjegB,AoG2XV,MAAA,EpG3XU,EoG2XN,CAAC,KAAL,CpG3XmB,AoG2XR,GpG1X2D,AoG0XtE,GAAiB,IpG1X4D,AoG0XxD,CpG1XwD,AoG0XvD,CAAL,IAAU,CAAC,CAAA,EpG3XlB,coG2XkB,KAAA,gBAAA,GAAA,oBAAA,CAAA,CAAA,WAAA,EAAA,MAAA,CAAA,EAAA,CAAA,WAAA,EAAkB,MAAlB,CAAA,CAAA,CAAA,EAAY,IAAI,CAAC,CAAjB,CAA5B;A5IwGN,ANAA,AVDA,AsC7MQ,AIlRJ,AcHY,AoG4XV,ElHzXF,IkHyXE,EpG5XqB,CdGvB,CJkRQ,AIlRR,AkHyXM,CAAC,GpG5XsB,ClBqRhB,CsHuGX,CpG3XsE,AoG2X3D,CtHvGG,CAAZ,AIlRJ,CAAA,CkHyXE,GpG3X6E,AoG2X3D,CpG3X2D,IdE/E,AkHyXE,EpG5XU,CdGZ,YAAA;A1BieJ,ANAA,AVDA,AsC7MQ,AIjRA,AcLQ,AoG6XV,MAAA,EpG7X6B,ElBsRvB,AsHuGF,ClHxXK,AkHwXJ,IlHxXQ,CkHwXb,CtHvGa,AsHuGF,GtHvGK,CsHuGhB,GlHxXS,AcLoC,ClBsRxB,AIjRE,EcJ+C,GlBqRpE,AIjR0B,CAAL,GAAS,AcJ6C,CAAA,IdIxC,KAA5B,EAAmC,KAAK,AcLvC,CdKkC,GAAS,KAAK,MAAjD,EAAyD,KAAK,KAA9D,EAAqE,KAAK,MAA1E,CAAP;A1BgeR,ANAA,AVDA,A0C9dK,AcNW,AoG8XX,GlH3XD,EkHuXiB,CAAjB,EpG1XiD,SAAS,GACc,OAAO,CAAA,SADnE;AxCsehB,ANAA,AVDA,AuIpcQ,AjGuPA,AkBxRQ,AoG+XZ,IrB9VI,AqB8VJ,IpG/X4D,AoG+XxD,CrB9VI,AqB8VH,CrB9VI,GjGuPG,AkBxRqD,G+EiC7D,A/EhCoE,G+EgCtD,AqB8VlB,CtHvGmB,EsHuGD,CrB9Vd,AjGuPkB,AkBvRyD,CAAA,EoG8XzD,EAAE,CpG/XZ,AoG+Xa,CtHvGI,CAAC,IAA1B,CsHuGkB,CtHtGlB,AsHsG6B,IAAf,CAAoB,UAAS,IAAT,EAAe,IAAf,EAAmB;A5IwG7D,ANAA,AVDA,AsC5MY,AInRZ,AcPgB,AoGgYV,QtHtGM,AkB1R2D,CdOvE,IJmRiB,AsHsGJ,CpGhYgE,AoGgY/D,ElHzXd,CcN4E,CoG+X1D,CAAC,KpG/XgE,AoG+XrE,CpG/XqE,AoG+X1D,MpGhYT,AoGgYV;A5IwGN,ANAA,AVDA,AsC5MS,AblXT,AiB8FC,AcPe,AoGiYX,ClHxdL,EAAA,EkHsdsB,CAAlB,EpG9XQ,C/BxFI,O+BwFI,GAAwD,C/BxF5E,CAA4B,GAA5B,EAAwC,A+BwF2C,CAAA,O/BxFnF,C+BuFgB,C/BvF0C,WAA1D,EAA6E;ATgkB7E,ANAA,AVDA,AyB7jBI,A+BqFY,AoGkYZ,IAAA,EnIvdM,E+BsFY,AoGiYd,CAAC,GnIvdO,E+BsFY,C/BtFT,AmIudf,EpGjYwE,C/BtFtD,AmIudJ,CnIvdK,K+BsF4D,C/BtF/E,A+BsF+E,AoGiYjE,CAAA,KpGlYF,SoGkYE,CAAe,UAAS,IAAT,EAAa;A5IwG9C,ANAA,AVDA,AsC5MQ,AbjXJ,A+BoFY,AoGmYV,MnIvdE,CAAJ,C+BqF0B,IAAI,ClB4RnB,AsHsGF,EpGlY+D,EoGkY3D,CtHtGT,AsHsGU,IpGlYiE,CAAA,AoGkYtE,CAAW,GpGnYR,GoGmYV;A5IwGN,ANAA,AVDA,AsC5MK,AkB9RW,AoGoYX,KtHtHQ,AsHoHK,EAEX,CpGnY6B,MAAM,GAAkC,AoGmY5D,IAAT,EAAe,CpGnY6D,CAAA,CoGmY5E,EAAkB,GpGpYT;AxC4ehB,ANAA,AVDA,AyB7jBI,A+BkFY,AoGqYV,MnIvdE,AmIudF,EpGpYsC,EoGoYlC,CAAC,GnIvdK,EmIudV,CAAW,CnIvdG,A+BmFkC,GlB6QzC,AkB7Q+D,EoGoYtE,CnIvdE,EmIudkB,EnIvdI,A+BmFqD,CAAA,AoGoYtD,CAAC,CAAxB,QnIvdmC,A+BkFzB,K/BlF8B,CAA1C,EACA;AT8jBJ,ANAA,AVDA,AyB5jBQ,A+BgFQ,AoGsYX,KAJa,CAAd,EpGjYoD,eAAe,GAAK,OAAO,CAAA,eADnE,CAN2F;AxCof3G,ANAA,AVDA,AuIpcQ,AjGqOK,Ab7VR,AmIsdD,GtHzHA,CiGrOI,AqB8VJ,IAAI,CrB9VI,AqB8VH,CrB9VI,SqB8VT,CrB9VI,EqB8Vc,CrB9VI,CAAlB,EqB8VkB,EAAE,CAAC,OAAH,CAAW,IAAf,CAAoB,UAAS,IAAT,EAAe,GAAf,EAAkB;A5IwG5D,ANAA,AVDA,AwD1eQ,AoGoYF,MAAA,EpGpYM,EoGoYF,CAAC,KpGpYS,AoGoYd,CAAW,GpGpYO,EAAE,CoGoYpB,GAAoB,GAAG,CpGpYK,AoGoYJ,CAAxB,WpGpYwC,QAAtB,CAAhB,EACA;AxC2eR,ANAA,AVDA,AyB5jBI,A+BmFQ,AoGmYP,EnItdD,GmIodkB,CpGjYV,AoGiYR,OnIpdW,C+BmFK,E/BnFD,C+BmFI,O/BnFI,GAAG,Q+BmFW,CAAC,E/BnFvB,GAAyB,G+BmFH,EAAW,C/BnFjC,GAAkC,MAAM,GAAG,E+BmFrB,CAA7B,K/BnFO,GAAsD,WAArE;AT8jBJ,ANAA,AVDA,AyB3jBI,A+BkFQ,AoGmYR,IAAA,EnIrdM,A+BkFE,EoGmYJ,CnIrdK,AmIqdJ,GnIrdO,E+BkFI,CAAC,G/BlFC,CmIqdlB,EnIrdqB,CmIqdH,CpGnYV,GAAoB,AoGmYN,EAAE,CAAC,CpGnYjB,E/BlFR,ImIqdsB,CAAW,IAAf,CAAoB,UAAS,IAAT,EAAa;A5IwGvD,ANAA,AVDA,AwDzeS,AsFrBT,AcwZM,SdxZG,IcwZI,CdxZb,CACI,EADJ,AcwZiB,CAAC,CdtZd,EAFJ,EAGI,AcqZS,CAAW,CdxZxB,EAII,EAJJ,CcwZM,CdnZF,EALJ,EAMI,EANJ,EAOI,KAPJ,EAQI,SARJ,EAQsB;A9HwftB,ANAA,AVDA,AyB3jBI,AkBdJ,AmGqFI,Ac8YC,IjHneL,CiHiesB,Cd5YZ,Ac4YN,CnIndK,CAAC,GAAG,AkBdb,CmGqFgB,GAAG,EAAE,ErHvEjB,CqHuEoB,CrHvED,CAAC,AqHuEpB,GrHvEuB,GAAvB,EAA4B,EAAE,CAA9B,EACA;AT4jBJ,ANAA,AVDA,AsC/MI,Ab3WI,AkBhBR,AmGsFI,Ac8YA,EtHzGA,Eb3WI,AmIodJ,Ed9YM,CrHtEC,Ca2WP,Ab3WQ,AmIodJ,CtHzGJ,Ab3WO,AmIodF,CnIpdD,EqHsEQ,CrHtEC,AmIodb,Ed9Ye,CrHtEC,AmIodJ,CnIpdK,AqHsEA,CxGqSjB,Ab3WkB,Ca2WlB,CwGrSoB,Ac8YJ,CnIpdK,CqHsErB,Ac8YkB,CAAC,CtHzGnB,GAAA,GsHyGgB,CAAW,CnIpdX,CAAZ,EmIodQ,CAAoB,GtHzGhC,OsHyGyC,IAAT,EAAe,IAAf,EAAmB;A5IwGvD,ANAA,AVDA,AsC9MQ,Ab5WH,AkBjBL,AmGwFI,Ac6YE,Md7YE,Ac6YF,EtHxGM,CAAC,CsHwGH,CAAC,CjHreX,AmGwFc,ExGqSI,CwGrSD,Cc6YX,CAAW,Ed7YI,CAAC,CxGqSd,EACA,EwGtSS,CAAW,Ec6YtB,GAAyB,Cd7Yd,Ac6YX,Ed7Y8B,MAAnB,CAAb;A9HqfJ,ANAA,AVDA,AsC7MY,AwGtSR,Ac6YE,Md7YE,Ac6YF,IAAI,CtHvGO,AsHuGN,Cd7YG,GAAG,Cc6YX,CAAW,CtHvGL,CwGtSS,CAAC,CxGsSK,CsHuGrB,GtHvGM,AwGtSK,CAAW,EAAE,GAAG,EAAhB,EAAoB,EAAE,GAAG,EAAzB,CAAb;A9HqfJ,ANAA,AVDA,AuIpcQ,A9GtHJ,AmIodC,EnIpdD,E8GsHI,C9GtHD,AmIidS,CnIjdR,AmIidJ,GrB3VQ,CAAC,E9GtHT,GAAa,GAAb,Q8GsHI,GAAwB,CAAxB;AvHscR,ANAA,AVDA,AsC9MY,Ab5WX,AqHuEG,Ac6YD,GAhCwC,EAgCtC,Cd7YG,KxGqSS,CsHwE0B,EAgC7B,Cd7YG,Cc6W0B,CAA7B,CAAZ,Cd7WmB,Ac1EG,CAydtB,Kd/YyB,ExGqSf,CwGrSkB,MAA1B,EACA;A9HofJ,ANAA,AVDA,AsC9MS,AZ1YT,AoHsGQ,IAAA,MAAM,IAAI,IAAI,CAAC,EAAL,GAAU,CAApB;A9HofR,ANAA,AVDA,AsC9MK,AwGpSA,Ac6YH,EAAA,CtHhHE,AwGhSA,EcgZC,CAAC,Gd5YG,Ec4YP,Ed5YW,CAAC,Ac4YA,EAAE,CAAC,Md5YJ,Ec4YC,CAAY,Cd5YC,MAAM,GAAG,MAA3B,Ac4YK,CAA6B,Cd3YvC,Cc2YyC,CAAC,QAAH,CAAY,UAAZ,CAAuB,GAAvB,EAA4B,UAAS,IAAT,EAAe,IAAf,EAAmB;A5IuG1F,ANAA,AVDA,AwD1eQ,AsFNA,Ac2YJ,IpGrYI,AsFNA,Ac2YJ,IAAI,CpGrYI,AoGqYH,CpGrYI,AsFNC,IAAI,CtFMV,EoGqYJ,CpGrYiB,AsFNC,CAAC,Cc2YH,Cd3YF,EtFMQ,CsFNE,Ac2YJ,Cd3YhB,Cc2YkB,CpGrYI,AoGqYH,CpGrYnB,MoGqYgB,CAAW,IAAf,CAAoB,UAAS,IAAT,EAAa;A5IuGrD,ANAA,AVDA,A8IhfK,Ac2YC,MAAA,IAAI,CAAC,QAAL,GAAgB,EAAhB;A5IuGN,ANAA,AVDA,A2CpkBI,AiH+dC,KAFe,CAAhB,KjH7dA,OAAA,GAAA;A3BskBJ,ANAA,AVDA,A8IhfI,Ac2YA,IAAA,Ed3YI,Ec2YA,CAAC,IAAL,Gd3Yc,Ac2YF,Gd3YK,Cc2YD,EAAE,CAAC,Ed3YnB,Kc2YgB,CAAW,IAAf,CAAoB,UAAS,IAAT,EAAe,IAAf,EAAmB;A5IuGvD,ANAA,AVDA,A2CtkBgB,AmGsFZ,Ac2YE,Md3YI,EnGtFM,EiHieP,IjHjeO,AiHieH,Cd3YM,Ac2YL,EjHjeE,CmGsFM,CnGtFN,IiHieP,Cd3YmB,Ac2YL,Gd3YQ,Cc2YJ,CAAC,CAAnB,CAAH,Ed3YF,Ac2Y4B;A5IuGhC,ANAA,AVDA,AuIpcQ,AO5CJ,Ac2YI,IrB/VA,EO5CE,Ec2YF,CrB/VI,CAAC,EqB+VD,CAAC,IrB/VL,CO5Cc,EP4CC,CAAf,AO5CiB,Ac2YjB,CAAc,Gd3YO,CAAC,Ac2YJ,CAAC,CAAnB,Cd3YiB,CAAS,Ac2YJ,IAAtB,Kd3YiB,CAArB;A9HkfJ,ANAA,AVDA,AsC/MI,AsH0GI,EtH1GJ,MAAA,AsH0GI,CtH1GJ,AKzXY,GiHmeJ,CjHneI,AiHmeH,EjHneG,GLyXZ,AKzXY,CLyXZ,EKzXY,AiHmeR,CAAc,CtH1GlB,AKzXY,GLyXZ,AKzXY,AiHmeU,CAAC,CAAnB,EAAsB,KjHned,CAAA,ELyXZ,GsH0GI,GjHneQ,AiHme4B,CAApC,CjHneQ,IAAgB;A3B0kBhC,ANAA,AVDA,AsC9MQ,AK3XQ,AiHoeT,MjHpeS,CiHieV,CtHtGM,IK3XI,CL2XC,AK3XD,AiHoeH,EjHpeG,CAAA,GAAA,CL2XR,EACA,QK5XQ,CAAA,EAAA,CAAA;A3B2kBhB,ANAA,AVDA,AsC7MY,AZ7YZ,A8BgHQ,AoGqYA,IpGrYA,K9BhHQ,A8BgHJ,CAAC,ClB6RI,CsHwGH,ClIrfd,CAAqB,CAArB,C8BgHQ,C9BhHsB,AkIqfX,CtHxGP,CkB7RU,CoGqYA,CtHxGK,GsHwGD,CpGrYE,ClB6RhB,GkB7RoB,AoGqYV,CpGrYd,CoGqYA;A5IuGR,ANAA,AVDA,A0BzlBI,AkIofI,MlIpfA,CAAC,CkIofD,IlIpfM,CAAV,AkIofS,CAAC,GAAN,GAAY,IAAI,CAAC,CAAjB;A5IuGR,ANAA,AVDA,AsC9MY,AZ5YK,AiBgBT,AiHqeA,QjHreI,AiHqeJ,GtHzGS,AZ5YO,CAAP,AiBgBD,CiHqeH,CAAC,CjHrewB,GiHqe9B,EjHremC,CAAC,AiHqevB,KtHzGT,AsHyGJ,EjHre8B,CAAc,MAAM,CAAC,CAAD,CAApB,IAA2B,MAAM,CAAC,CAAD,CAAjC,GAAuC,MAArE,CAFJ;A3B8kBJ,ANAA,AVDA,AsC9MS,AZ7YiB,AkIsflB,QAAA,KAAK,CAAC,IAAN;A5IuGR,ANAA,AVDA,AsC9MK,AK3XG,AiHoeA,GtHhHJ,KKpXQ,AiHoeJ,IAAI,CAAC,EjHpeM,IAAI,CAAC,CAAD,AiHoef,CjHpeI,AiHoeU,IAAI,CjHpeK,AiHoeJ,CAAnB,IAAwB,GjHpexB,EACA,AiHmeA;A5IuGR,ANAA,AVDA,A0B3lBI,AiBmBQ,AiHmeL,SlItfI,CAAC,AiBmBM,CAAC,EjBnBJ,CAAJ,AiBmBqB,EAApB,CjBnBO,CAAC,CAAT,GAAa,CAApB;AV6lBJ,ANAA,AVDA,A0B3lBC,AkIsfI,KAXW,CAAZ;A5IkHJ,ANAA,AVDA,AuIpcQ,A5FpII,AiHmeR,IrB/VI,AqB+VJ,IAAI,CrB/VI,AqB+VH,CrB/VI,C5FpII,EiHmeb,EjHneiB,CAAC,AiHmeN,GjHneS,C4FoIjB,A5FpIS,AiHmeG,EjHneQ,AiHmeN,CrB/VI,AqB+VH,CjHneO,G4FoItB,A5FpIyB,GiHmeb,CjHneiB,AiHmeN,CjHneO,GiHmetB,CAAoB,EjHnexB,EAAkC,CAAC,GAAG,EAAtC,AiHmeiC,EjHneS,CAAC,CiHmenB,CjHnexB,CiHmeuC,CjHlevC,GiHkewB,EAAmB;A5IuGvD,ANAA,AVDA,A2B1mBA,AgBmCgB,Aa6FR,AoGqYF,IjIrgBF,A6BgII,EoGqYF,EjHleU,CAAC,Aa6FL,Cb7FM,Aa6FL,AoGqYH,CjIrgBC,AiIqgBA,GjIrgBG,AgBmCE,ChBnChB,AgBmCwB,IAAI,AiHketB,CjHleuB,Aa6FrB,AoGqYY,CjHleQ,CAAJ,CAAmB,Aa6FjB,Cb7FV,AiHkeQ,CAAC,CjHlesB,AiHkezC,EAAsB,EjHleuB,CAAC,CAAD,CAAJ,Aa6FX,AoGqY9B,CjHle4D,CAAlD,Ea6FwB,mBAAS,UAAzC;AxC4eR,ANAA,AVDA,A2CvkBa,AiHkeR,KAFW,CAAZ;A5IyGJ,ANAA,AVDA,A4JrGG,GAnBwC,EAmBtC,OAnBsC,EAmB7B,EAnB6B,CAA7B,CAAZ,CA1dsB,CA+etB;A5IqGF,ANAA,AVDA,AsC/MI,AKxXQ,ELwXR,IKxXQ,ELwXR,CAAA,CKxXY,GAAG,CAAP,ILwXR,CAAA,OAAA,GAAA,YAAA;AtBiNJ,ANAA,AVDA,AsC9MQ,AKzXC,AiHmeP,EAAA,GAAG,CAAC,EtH1GM,CAAC,IsH0GX,CtH1GgB,EsH0GF,EAAE,CAAC,KtH1GX,EACA,CsHyGQ,CAAY,UAAZ,CAAuB,GAAvB,EAA4B,UAAS,IAAT,EAAe,IAAf,EAAmB;A5IsG/D,ANAA,AVDA,AsC7MY,AsHyGR,QAAI,GtHzGS,EsHyGb,EtHzGQ;AtB+MZ,ANAA,AVDA,AsC5MY,AsHwGR,IAAA,IAAI,CAAC,CtHxGO,OsHwGZ,CtHxGoB,EsHwGH,CtHxGM,GsHwGF,EtHxGO,AsHwGL,CAAC,ItHxGD,CAAW,EsHwGb,CAAW,CtHxGxB,GsHwGS,CAAoB,OAAA,CAAA,UAAA,CAAW,UAAS,IAAT,EAAe,GAAf,EAAkB;A5IsGtE,ANAA,AVDA,A8I9eI,Ac0YE,Md1YI,Ac0YJ,GAAG,Gd1YO,Ac0YJ,EAAE,Cd1YK,Ac0YJ,GAAH,Cd1YW,Ac0YJ,Cd1YK,IAAL,CAAW,Gc0YlB,CAAiB,Ed1YO,Cc0YxB,CAAN,Cd1YiC,MAAV,GAAqB,MAAM,GAAG,MAAxC,CAAf;A9HgfJ,ANAA,AVDA,AuIpcQ,AjGwPI,AkB9RJ,AsFJJ,Ac0YO,IrBhWH,A/EtCA,EsFJE,GP0CE,A/EtCA,C+EsCC,A/EtCA,AoGsYF,GtHxGQ,CwGlSD,Ac0YH,EpGtYP,C+EsCA,AO1Ca,Ac0Y4C,Cd1Y1C,CtFID,C+EsCC,CjGwPX,AsHwGyD,CAAA,CtHvGzD,AwGnSgB,Ac0YyC,CrBhW7D,AqBgWG,CpGtYiB,KAAK,KsFJV,GAAoB,CtFIrB,GAAuB,AsFJE,CAAC,IAAL,CtFIrB,AsFJ+B,GtFIC,GsFJX,CAApB,GAAwC,IAAI,CAAC,EAA9C,IAAqD,CtFIZ,AsFJ1C,IAA2D,CAA5E,UtFII;AxC4eR,ANAA,AVDA,AsC3MgB,AX/ZhB,AmH4HI,AcyYO,MdzYD,ExGmSM,CX/ZA,CiIqgBC,EjIrgBjB,EmH4HkB,CnH5HC,AiIqgBG,CtHtGE,CwGnSH,CcyY4C,CtHtGtC,GsHsG0C,CAAA,CAAA,CAA1D,CdzYmB,CxGmSK,CAAC,CwGnSH,MxGmSN,CAAiB,CwGnSxC,GxGmSuB,CAAX;AtB6MhB,ANAA,AVDA,AsC3Ma,AX9ZT,AmH4HA,AcuYO,EdvYP,OnH5HO,CiImgBa,CjIngBX,CmH4HC,GcuYe,CdvYX,EnH5Hd,AiImgB6D,IAAI,CAAA,CdvYjE,AcuYiE,CAA1D;A5IwGX,ANAA,AVDA,A2BzmBC,AiIkgBU,EhI5gBX,QgI4gB+B,QAAQ,GAA0B,IAAI,CAAA,CAAA,CAA1D;A5IyGX,ANAA,AVDA,AsC3MY,AK7XJ,AmG2FJ,AcqYO,MdrYH,GnG3FK,CiHge4B,CtHnGxB,IK7XT,AmG2FJ,CxGkSQ,CAAW,AwGjSnB,CnG5FkB,GiHge8B,CjHhe5C,EL6XI,AsHmGqD,IAAI,CAAA,CAAA,CAA1D;A5I0GX,ANAA,AVDA,A8I5eQ,AcmYG,IdnYH,KAAK,CAAC,AcmYwC,IdnY9C,CAAW,EAAX,AcmYqD,EdnYtC,CcmY0C,CdnYzD,GcmY6D,CAAA,CAAA,CAA1D;A5I2GX,ANAA,AVDA,AsC5MY,AVzaZ,AkHyIQ,AcmYF,IhI5gBA,AkHyIE,EcmYF,GdnYO,CAAC,CxGgSG,AsHmGN,ChI5gBG,EkHyIN,AcmYM,ChI5gBkB,AkHyIb,CxGgSP,CVzaZ,AkHyIQ,ExGgSiB,AwGhSF,AcmYJ,EdnYX,ExGgSI,AsHmGW,GAAG,CAAC,KAAb,IAAsB,QAA9B;A5I2GN,ANAA,AVDA,AuIpcQ,AjGwPC,AsHmGH,IrB3VE,EqB2VF,GrB3VM,CAAC,IqB2VC,GAAG,QrB3VT,AqB2ViB,GrB3VM,CqB2VF,GrB3VrB,AqB2VwB,CAAC,QAAhB,IAA4B,CAAvC;A5I2GN,ANAA,AVDA,AsC5MK,AkB9RG,AsFFA,AcmYF,GtHnHF,CkB9QI,EoGiYF,GpGjYM,AsFFC,CtFEA,GsFFI,CAAC,GAAG,AcmYJ,CdnYJ,EAAW,AcmYJ,KdnYS,CtFErB,EsFFwB,CtFEA,EoGiYD,IAAI,GdnY3B,AcmY8B,CAAC,CdnYK,CAAC,GAAG,CtFEA,KAAK,AoGiY/C,EdnYE,EAAkD,CAAC,ItFE3B,AsFF+B,GtFEE,EsFFG,IAAI,QAAhE,EtFEwB,AsFDxB,GtFC4E,mBAAS,iBAArF;AxC4eR,ANAA,AVDA,A8I3eY,AckYN,MdlYM,IckYA,CdlYK,AckYJ,CdlYK,EckYF,EdlYJ,CAAW,EAAX,CckYU,CdlYK,AckYJ,EdlYX,CckYc,CAAC,CAAL,CAAN,IAAiB,KAAK,CAAC,MAAN,CAAa,CAAxC;A5I2GN,ANAA,AVDA,A8I3eY,AckYN,MdlYM,IckYA,CdlYK,AckYJ,CdlYK,EckYF,EdlYJ,CAAW,EAAE,CckYH,CAAC,CdlYO,EckYJ,CAAC,CdlYO,AckYZ,CdlYa,AckYnB,GdlYc,CAAS,AckYN,KdlYH,AckYQ,CAAC,GdlYS,GckYf,CAAa,CAAxC,CdlYM,EACI,EAAE,GAAK,IAAI,CAAC,GAAL,CAAS,KAAT,IAAkB,MAD7B;A9H6eZ,ANAA,AVDA,A8I1eS,AciYH,UAAM,GAAG,GAAG,QAAQ,CAAC,OAAD,CAAR,IAAqB,QAAQ,CAAC,GAAG,CAAC,GAAL,CAA7B,IAA0C,CAAC,CAAD,EAAI,CAAJ,CAAtD;A5I2GN,ANAA,AVDA,A4JzGM,aAAO,IAAI,EAAE,CAAC,QAAH,CAAY,mBAAhB,CAAoC,IAAI,OAAJ,CAAY,UAAS,OAAT,EAAgB;A5I2G7E,ANAA,AVDA,A8I1eQ,AciYA,IdjYA,IciYA,CdjYK,CAAC,IAAN,CAAW,AciYX,CAAA,CdjYA,EAAe,EAAf,KciYA,CAAW,qEAAX,EAAkF,OAAlF,EAA2F,IAA3F,CAAgG,YAAA;A5I2GxG,ANAA,AVDA,AuIpcQ,A5FpIA,Aa8FA,AsFAA,AciYE,IrB3VF,A/EtCA,AsFAA,KPsCI,A5FpIC,Aa8FD,AsFAC,CPsCA,A/EtCA,AsFAC,GnG9FN,CmG8FA,AciYM,CdjYK,AciYJ,CjH/dK,C4FoIZ,AOtCA,CtFAA,CsFAe,CPsCA,AqB2Vb,CpGjYc,AsFAhB,CnG9FkB,AiH+dJ,CjH/dK,C4FoIA,G5FpInB,Ea8FwB,C+EsCT,EAAf,C/EtC4B,mBAAS,SAArC;AxC4eR,ANAA,AVDA,A8I1eK,AciYO,Gd/YR,MAgBA;A9H0eJ,ANAA,AVDA,A8IxeQ,Ac+XI,Id/XJ,KAAK,CAAC,Ec+XF,Ed/XJ,CAAW,Ac+XJ,CAAC,Cd/XR,EAAe,EAAf,Cc+XI,CAAW,GAAX,CAAe,YAAA;A5I2G3B,ANAA,AVDA,A8IxeQ,Ac+XM,Id/XN,KAAK,CAAC,IAAN,CAAW,EAAX,EAAe,EAAf;A9H0eR,ANAA,AVDA,A4JzGc,cAAA,KAAK,CAAC,MAAN;A5I2Gd,ANAA,AVDA,A8IxeQ,Ac+XK,Sd/XA,IAAI,Ac4XL,Cd5XM,GAAG,CAAR,EAAW,KAAK,GAAG,UAAxB,EAAoC,CAAC,GAAG,QAAxC,EAAkD,CAAC,IAAI,KAAK,IAAI,QAAhE,EACA;A9HyeR,ANAA,AVDA,A4BrnBA,AkH8IY,Ac8XD,Md9XC,GlH9II,EkH8IC,CAAC,IAAN,CAAW,EAAE,ClH9IzB,CAA4B,CkH8IE,IAAI,CAAC,ClH9InC,EAA6C,AkH8If,CAAS,KAAT,ClH9I9B,EAA8D,CkH8Id,MAApC,EACI,ElH/IhB,AkH+IkB,ElH/I2D,CkH+ItD,IAAI,CAAC,GAAL,CAAS,KAAT,IAAkB,MAD7B;A9HyeZ,ANAA,AVDA,AuIpcQ,A3GlLsD,Ae8CtD,AmGkGI,IPkCJ,E3GlLsD,AkHgJlD,GPkCA,A5FpIC,C4FoIA,COlCI,CAAC,IAAN,ClHhJkD,AkHgJvC,EAAX,CnGlGJ,CmGkGmB,CPkCnB,A3GlLsD,Ce8CnC,AmGkGf,EPkCgB,E3GlLkC,Ae8CtD,Cf9CsD,C2GkLtD,C3GlLsD;AZwnB9D,ANAA,AVDA,A4BvnB8D,Ae+CzD,Aa8FG,AsFIC,Ac4XC,IhI7gBoD,A4B6ItD,KAAI,CAAC,IoGgYG,ChI7gB8C,GAAA,CAAA,A4B6ItD,GAAiB,AoGgYD,GAAG,MpGhYO,KAAK,SAAd,GAA0B,SAA1B,GAAsC,mBAAS,UAAhE;AxC4eR,ANAA,AVDA,A4BxnB6E,AgI8gBjE,GhI9gBiE,SgI8gBjE,MAAM,EAAE,KAAK,CAAC,MAAN,CAAa,MADN;A5I6G3B,ANAA,AVDA,AsC7MI,AwGzRI,Ac4XI,EtHnGR,EwGzRI,IxGyRJ,CAAA,AwGzRS,CAAC,Ec4XF,Ed5XJ,CAAW,EAAX,CxGyRJ,CAAA,AwGzRmB,EAAf,Cc4Xc,EAAE,CtHnGpB,GAAA,CsHmGyB,CAAC,MAAN,CAAa,CtHnG1B,MsHmGa,CAAqB,GAFlB,CtHjGvB,EAAsC;AtB+M1C,ANAA,AVDA,AsC9MW,AwGxRH,Ac4XI,Id5XJ,IxGwRG,CwGxRE,CAAC,Ec4XF,Ed5XJ,CAAW,EAAX,ExGwRG,AwGxRY,EAAf,Cc4Xc,EtHpGX,AsHoGa,KtHpGb,AsHoGkB,CtHpGlB,AsHoGmB,EtHpGnB,IsHoGa,CAAa,OAAb,CAAqB,EAHlB;A5I+G3B,ANAA,AVDA,AsC/MW,AVzaP,AkHkJC,Ac4XO,MtHrGD,AVzaH,MgI8gBI,EhI9gBI,CAAC,EUyaN,GAAc,EVzaT,CAAZ,AgI8gBmB,EhI7gBnB,AgI6gBqB,KAAK,CtHrGM,AsHqGL,CtHrGM,GAAZ,EAAd,AsHqGc,CAAa,OAAb,CAAqB,KAJnB;A5IgH3B,ANAA,AVDA,AsChN0C,AVvalC,AgI6gBI,YAAA,aAAa,EAAE,KAAK,CAAC,MAAN,CAAa,OAAb,CAAqB,EALrB;A5IiH3B,ANAA,AVDA,A4BvnBK,AkHiJD,Ac4XQ,Sd5XD,Gc4XC,Kd5XO,GAAG,CAAlB,Ec4XmB,EAAE,KAAK,CAAC,MAAN,CAAa,OAAb,CAAqB,GANnB;A5IkH3B,ANAA,AVDA,AuIpcQ,AjGoPA,AwGtRP,Ac4XW,IrB1VJ,IjGoPI,CiGpPA,CAAC,EqB0VD,KtHtGJ,CAFkC,CiGlPlC,GAAiB,CAAjB,MqB0VqB,EAAE,KAAK,CAAC,MAAN,CAAa,OAAb,CAAqB,KAPzB;A5ImH3B,ANAA,AVDA,A2CzkBI,Aa+FI,AoGgYI,EjH/dR,Ea+FI,Kb/FJ,Aa+FQ,Cb/FR,Aa+FS,EoGgYD,IpGhYJ,Gb/FJ,Aa+FkB,Cb/FlB,IiH+doB,CjH/dpB,Aa+FwB,CoGgYF,EjH/dtB,Ca+F4B,EoGgYD,CAAC,MAAN,CAAa,CjH/dnC,KiH+dsB,CAAoB,EpGhYN,AoGwXb,IpGxXnB;AxC4eR,ANAA,AVDA,A2CxkBQ,AiH8dI,QjH9dE,IiH8dF,EjH9dQ,GAAG,KAAK,AiH8dN,EAAE,IjH9dD,CAAY,AiH8dN,CAAC,IjH9dP,EAAf,AiH8dgB,CAAa,MAAb,CAAoB,GATjB;A5IqH3B,ANAA,AVDA,A4BxnBI,AegDI,AiH8dI,MhI9gBJ,EegDM,GfhDD,CgI8gBD,EhI9gBI,CegDK,GfhDD,AegDI,IAAI,CfhDZ,GAAY,EgI8gBA,CjH9dJ,CAAY,AiH8dN,ChI9gB1B,CATyE,GgIuhB1C,CjH9dX,AiH8dY,CjH9d5B,KiH8dsB,CAAa,MAAb,CAAoB,KAVvB,CAU8B;A5I4GzD,ANAA,AVDA,A2CvkBQ,IAAA,OAAO,CAAC,WAAR,GAAsB,KAAK,WAA3B;A3BykBR,ANAA,AVDA,A4BvnBI,AeiDI,AiHgdmB,MhIjgBnB,KeiDO,AiHgdL,EhIjgBK,KAAP,AeiDA,KfjDiB,WAArB,EACA;AZwnBJ,ANAA,AVDA,A4BtnBQ,AegDH,AiH2dK,GjHneN,CfxCI,MgI2gBE,ChI3gBK,CAAC,EgI2gBF,CAAC,ChI3gBP,CAAa,CgI2gBX,GAAW,IAAI,KAAK,CAAC,KAAV,CAAgB,UhI3gB7B,EAAgD,OAAO,GAAA,sBAAP,GAA8B,OAA9E;AZwnBR,ANAA,AVDA,A4BtnBK,AgI2gBO,GhI9gBR,MAKA,GgIygBQ,CAAC,EAAE,KAAK,CAAC,MAAN,CAAa,CADS;A5I8GrC,ANAA,AVDA,AuIpcQ,AqByVI,IrBzVJ,KAAI,CAAC,EqByVD,CAAC,EAAE,KAAK,CrBzVZ,AqByVa,GrBzVM,GqByVZ,CrBzVP,AqByVoB;A5I6G5B,ANAA,AVDA,A4BpnBQ,A4B0IA,AoG4X6B,IhItgB7B,A4B0IA,K5B1IK,A4B0ID,CAAC,CoG4XQ,ChItgBL,CgIygBH,CpG/XL,CoG4Xa,CAGL,ChIzgBK,A4B0ID,C5B1IE,G4B0IE,E5B1IR,CAAY,C4B0IA,G5B1IZ,EAAkB,MAAlB,CAAyB,K4B0IP,M5B1IlB,EAAsC,IAAtC,CAA2C,A4B0InD,I5B1IQ,CAAR;AZsnBR,ANAA,AVDA,A4J3GY,YAAA,CAAC,EAAE,GAAG,CAAC,CAAD,CAAH,IAAU,CADT;A5I8GhB,ANAA,AVDA,A4BpnBQ,AgIygBI,QhIzgBA,IgIygBA,CAAC,EhIzgBM,AgIygBJ,ChIzgBK,EgIygBF,CAAC,CAAD,CAAH,IAAU,KhIzgBjB,EACA;AZqnBR,ANAA,AVDA,A4BnnBY,AgIqgBI,MhIrgBJ,KgIkgBS,EhIlgBF,AgIwgBN,ChIxgBO,OgIwgBC,GAAG,IhIxgBZ,AgIkgBS,ChIjgBL,CgIugBc,MANT,CAMgB,QAAQ,CAAC,KAAD,CANxB,EAOV,QAPU,CAOD,EhIzgBR,EAEI,MgIugBc,MAAV,EAAgB,oBhIzgBxB,EAGI,qDAHJ,EAIO,OAAO,GAAA,sBAAP,GAA8B,OAJrC;AZqnBZ,ANAA,AVDA,A4B9mBY,AkHuIZ,Ac6XY,MhIpgBA,GkHuIH,Gc6XG,ChIpgBO,CAAC,GgIogBH,ChIpgBL,AgIogBM,ChIpgBO,KAAb,AgIogBA,CAAa,CAAb,Cd7XZ,CAA4B,Cc6XC,MAAM,CAAC,CAAxB,Gd7XZ,EAAwD,gBAAxD,EAA0F;A9Hye1F,ANAA,AVDA,A4B9mBY,AkHwIR,Ac4XQ,MhIpgBA,AkHwIF,KAAK,Cc4XH,ChIpgBO,CAAC,AkHwIF,Gc4XD,CAAC,IhIpgBN,EgIogBA,CAAa,Cd5XK,Ac4XlB,Cd5XmB,Ec4XF,Gd5XzB,Gc4X+B,CAAC,CAAxB;A5I4GZ,ANAA,AVDA,AsC9MQ,AVhaC,AkHwIL,Ac4XO,KhI9gBH,CkHkJA,ExGwRI,GV9ZJ,AgIwfa,CdlXP,Cc4XD,Ed5XI,GckXI,CtH1FE,CsH0Fb,EtH1FgB,KAAK,AwGxRF,CAAC,MAAb,CxGwRT,EACA,CwGzRgC,KAAK,CAAC,MAAN,CAAa,KAAb,EAApC;A9HweJ,ANAA,AVDA,AuIpcQ,A3GxKI,AeqCR,AmGiGA,EnGjGA,E4FmII,E3GxKI,AkHsIF,GPkCE,A5FnIR,AmGiGS,CPkCA,A5FnIT,EmGiGY,ClHtIG,CAAC,IAAR,CAAa,AeqCrB,CAAA,M4FmII,E5FnIJ,AmGiG4B,CPkCA,AOlCC,EnGjG7B,E4FmII,Q5FnIK,CAAT,AmGiGA,EnGjGoB,CAApB,EAA6B,EfrCrB,EAAgD,OAAO,GAAA,sBAAP,GAA8B,OAA9E;AZ8mBZ,ANAA,AVDA,AsC7MY,AV/ZA,AesCJ,Aa4FA,AoG+XE,IpG/XF,ElB6RI,AV/ZA,EesCA,Ca4FA,CAAC,AoG+XH,GhIjgBS,CAAC,AesCF,AiH2dJ,CtHlGO,AsHkGN,CpG/XP,Cb5Fa,CLyXG,AV/ZZ,AgIigBF,ChIjgBe,A4BkIH,AoG+XH,GjH3dX,CLyXqB,AK3XI,CfpCrB,C4BkIgB,IAAI,AoG+XtB,GtHlGc,AsHkGQ,GtHlGS,SsHkGT,EtHlGoB,EkB7RZ,ClB6Re,KAAK,IkB7RpD,IlB6RI,CAFJ;AtBiNR,ANAA,AVDA,A4B5mBS,AkHsIL,Ac2XQ,Md3XJ,MAAM,Ac2XF,Cd3XG,MAAP,Ic2Xe,Cd3XG,CAAtB,EACA,Ac0XuB,EAAE,CAAC,QAAH,CAAY,OAAZ,CAAoB,WAApB,CAAf;A5I6GZ,ANAA,AVDA,AsC5MY,AVhaP,AkHuIG,Ac0XG,UtHjGK,CsH+FN,CA/B8F,CAkC9F,MtHlGe,GAAG,KAAK,aAArB,EACA;AtB6MZ,ANAA,AVDA,AsC3MgB,AK1XR,AmGgGH,Ac2XK,GdpYgF,KxGmS1E,AK1XF,MAAM,GL0XK,AK1XF,GL0XK,EK1XA,GL0XK,GK1XV,CAAY,MAAZ,GL0XP,AK1X4B,CAApC;A3BukBR,ANAA,AVDA,AsC3Ma,AsHiGH;A5I4GV,ANAA,AVDA,A2CrkBQ,AiH2dE,SjH3dG,IAAI,CAAC,GAAG,CAAR,EAAW,CAAC,GAAG,MAAM,GAAG,CAA7B,EAAgC,CAAC,GAAG,MAApC,EAA4C,CAAC,GAAG,CAAC,EAAjD,EACA;A3BskBR,ANAA,AVDA,AsC3MY,AVlaR,AeyCQ,EfzCR,IUkaQ,IVlaA,AeyCM,CfzCL,CeyCO,GLyXC,AKzXE,GfzCX,CUkaa,AVlarB,CeyCwB,EfzCJ,EUkaM,EVla1B,AeyCmB,CAAY,CAAC,CLyXxB,CAVJ,CK/W+B,CAAhB,CAAX;A3BskBZ,AhBDA,AuIpcQ,A3GzKP,AeyCW,I4FgIJ,KAAI,CAAC,A5FhIK,EAAE,G4FgIZ,A5FhIe,G4FgIF,E5FhIO,E4FgIpB,I5FhIe,CAAa,CAAC,GAAG,CAAL,GAAU,CAAtB,CAAX;A3BskBZ,AhBDA,A6BtqBA,AckGY,Aa0FJ,AoG8XE,IpG9XF,KAAI,Cb1FM,Aa0FL,AoG8XH,EjHxdU,GAAG,EiHwdN,EpG9XT,Cb1FoB,Ea0FH,Ib1FF,CAAY,CAAC,GAAG,Aa0FL,Cb1FX,CAAX,Ga0F2B,SAAd,GAA0B,SAA1B,GAAsC,uBAAY,MAAnE;AxC4eR,AhBDA,A2CpkBY,AiHwdH,SAvCD,CjHjbU,EAAE,GAAG,KAAK,MAAL,CAAa,CAAC,GAAG,CAAL,GAAU,CAAtB,CAAX;A3BskBZ,AhBDA,AsC1MY,AK1XA,Aa0FJ,AoG8XH,OAzC4C,CpGrVpC,AoGqVA,CAAP,CtHrDU,AK1XE,KL0XG,AkBhSO,CAAC,Gb1FF,GAAK,EAAE,GAAG,CL0XzB,AK1XmB,EL2XnB,EkBjSC,Cb1FgC,EAAE,Ea0FG,Cb1FA,CAApB,IAA4B,CAAC,Ea0FnD,Cb1FuD,CAAC,Aa2FxD,Eb3F0D,GAAG,EAAN,KAAa,CAAC,CAAC,GAAG,EAAL,KAAY,EAAE,GAAG,EAAjB,CAAb,CAAD,GAAuC,EAAzF;A3BskBZ,AhBDA,AsCzMgB,AsH6FX,KAnDoC,EAmDlC,IAnDkC,CtH1CnB,AsH0CD,CAAjB,ItH1CuB,GAAG,WAAW,GAAG,KAAK,UAAnB,GAAgC,CAA9C;AtB2MhB,AhBDA,A2CpkBY,Aa2FC,AoG6XT,IAAA,EpG7XS,EoG6XL,CAAC,CjHxdO,Ca2FS,CAAC,CoG6XtB,GAAY,GjHxdJ,CiHwdQ,CjHvdR,CiHudU,CAAC,KpG7XV,EoG6XO,CpG7X0B,AoG6Xf,IAAf,CAAoB,EpG7XyB,CAAC,OoG6XjB,IAAT,EAAa,GpG7XpC;AxC2eb,AhBDA,AsCzMgB,AK1XA,Aa0FP,AoG6XH,MAAA,EjHvdU,EiHudN,CAAC,CtH7FS,EK1XE,AiHudhB,CAAS,EtH7FU,AK1XA,CAAC,EL0XE,AsH6FtB,IjHvdU,CL0XiB,aAAjB,EACA;AtB0MhB,AhBDA,AsCxMoB,AK3XP,AmG8FT,AcyXC,KAFW,CdvXN,AcuXN,KdvXW,GAAG,YAAY,CAAC,SAA3B,CApBsF;A9H2f1F,AhBDA,AsCxMiB,AK3XR,AiHudL,IAAA,IAAI,CAAC,OAAL,GAAe,OAAA,CAAA,YAAA,CAAa,UAAS,IAAT,EAAa;A5I8G7C,AhBDA,A8IpeI,AcwXE,MdxXI,OcwXG,EAAE,CdxXK,AcwXJ,GdxXO,AcwXV,CAAO,GdxXO,McwXd,CAAiB,IdxXP,AcwXW,CdxXD,AcwXE,GAAL,CAAS,EdxXA,CAAC,CAAD,CAAhB,CcwXO,CdxXc,AcwXE,CAAhB,EAAmB,GdxXC,CAAC,CAAD,CAA3B,CAAnB,AcwXS,CAAP;A5I8GN,AhBDA,AsCxMgB,AK3XR,AmG+FJ,AcwXC,KAFc,CdtXT,AcsXN,KjHrdW,EL2XM,EwG5RF,EnG/FX,CmG+Fc,IAAI,CxG4RV,GAAkB,OwG5RZ,CAAU,GxG4Ra,GAAI,AwG5RX,CAAC,IxG4Re,EwG5RT,CxG4RY,AwG5RX,KxG4RgB,CwG5RvB,GAAgB,CAAjB,CAAhB,EAAqC,KxG4R3C,CwG5RiD,CAAC,MAAM,CAAC,MAAP,GAAgB,CAAjB,CAA3C,CAAlB;A9HseJ,AhBDA,AsCxMa,ATheb,AcqGK,AmG+FD,AcwXD,GjH9eC,AiHkbY,C/HhgBH,C+H4jBR,CdxXK,Qc4TM,E/HhgBS,A+H4jBT,CdxXK,Cc4TL,C/HhgBsC,A+HggBpD,Cd5TsB,AcpLA,C/HhBxB,A+H8jBE,Id1X2B,CAAC,IAAN,KAAe,aAAO,IAAtB,IAA8B,KAAK,CAAC,WAAxD;A9HseJ,AhBDA,A8IpeI,MAAM,UAAU,GAAG,IAAI,CAAC,GAAL,CAAS,UAAU,CAAC,CAAX,GAAe,SAAS,CAAC,CAAlC,IAAuC,GAAvC,IACZ,IAAI,CAAC,GAAL,CAAS,UAAU,CAAC,CAAX,GAAe,SAAS,CAAC,CAAlC,IAAuC,GAD9C,CA1BsF;A9HggB1F,AhBDA,AsCxMY,AK5XZ,AiHydE,EAAA,GAAG,CAAC,GjHzdN,EL4XiB,CsH6Ff,CAAW,GjHzdb,AiHydE,CAAe,CtH7FL,GAAe,MsH6FT,GtH7FN,EsH6FK,EAAM;A5I6GvB,AhBDA,AsCxMY,AK7XX,AmGmGG,AcuXA,CjHjkBJ,EAAA,CiHikBI,EdvXI,AcuXF,CAAC,ItH7FU,GsH6Fb,CAAW,EdvXX,EACA,AcsXA,CtH7FQ,GAAiB,AsH6FN,EAAE,CAAC,EtH7FQ,MsH6FX,CtH7FM,AsH6FM,GtH7FS,SsH6FrB,CAAyB,IAAzB,EAA+B,EAAE,CtH7FH,AsH6FI,OAAH,CAAW,GtH7FrD,CA5BJ,AsHyHe,CAAnB;A5I6GJ,AhBDA,AwD1eQ,AoG+XJ,IpG/XI,AoG+XJ,EAAE,CAAC,EpG/XK,CAAC,GAAL,CoG+XJ,CAAW,CpG/XI,KoG+Xf,IAAqB,EAAE,CAAC,KpG/XpB,GoG+XiB,CAAY,YAAZ,CAAyB,IAAzB,EAA+B,EAAE,CAAC,OAAH,CAAW,MAA1C,CAArB;A5I6GJ,AhBDA,A8IjeQ,AcsXJ,IdtXI,AcsXJ,MdtXU,GAAG,CcsXH,CAAC,IdtXQ,CAAC,CcsXpB,IdtXa,EAAT;A9HmeR,AhBDA,AsCvMY,AsH4FT,GAJD,OtHxFgB,IAAI,GAAG,KAAK,KAAlB,CAhCJ;AtByOR,AhBDA,A8IjeQ,AcuXN,MAAM,EdvXI,EcuXA,GAAG,CAAC,IdvXR,CcuXO,CdtXP,CcsXe,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,KAAhE,EAAuE,GAAvE,EAA4E,GAA5E,EAAiF,GAAjF,EAAsF,GAAtF,EAA2F,GAA3F,EAAgG,GAAhG,EAAqG,GAArG,EAA0G,GAA1G,EAA+G,GAA/G,EAAoH,GAApH,EAAyH,GAAzH,EAA8H,GAA9H,EAAmI,GAAnI,EAAwI,GAAxI,EAA6I,GAA7I,EAAkJ,GAAlJ,EAAuJ,GAAvJ,EAA4J,GAA5J,EAAiK,GAAjK,EAAsK,GAAtK,EAA2K,GAA3K,EAAgL,GAAhL,EAAqL,GAArL,EAA0L,GAA1L,EAA+L,GAA/L,EAAoM,GAApM,EAAyM,OAAzM,EAAkN,MAAlN,EAA0N,KAA1N,EAAiO,MAAjO,EAAyO,IAAzO,EAA+O,OAA/O,EAAwP,MAAxP,EAAgQ,QAAhQ,EAA0Q,UAA1Q,EAAsR,KAAtR,EAA6R,MAA7R,EAAqS,QAArS,EAA+S,OAA/S,EAAwT,OAAxT,EAAiU,QAAjU,EAA2U,WAA3U,EAAwV,QAAxV,EAAkW,QAAlW,EAA4W,IAA5W,EAAkX,IAAlX,EAAwX,IAAxX,EAA8X,IAA9X,EAAoY,IAApY,EAA0Y,IAA1Y,EAAgZ,IAAhZ,EAAsZ,IAAtZ,EAA4Z,IAA5Z,EAAka,KAAla,EAAya,KAAza,EAAgb,KAAhb,EAAub,KAAvb,EAA8b,KAA9b,EAAqc,KAArc,CAAb;A5I4GF,AhBDA,AsCtMY,AwG1RA,AcsXV,MdtXU,AcsXJ,ItH5FQ,EwG1RE,CAAC,GAAP,AcsXM,EtH5FM,CsH4FH,CAAC,CtH5FK,EsH4FN,EtH5FU,AsH4FJ,CtH5FK,EsH4FX,EtH5FT,AsH4FoB,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,GAA7D,EAAkE,GAAlE,EAAuE,GAAvE,EAA4E,GAA5E,EAAiF,GAAjF,EAAsF,GAAtF,EAA2F,GAA3F,EAAgG,GAAhG,EAAqG,GAArG,EAA0G,GAA1G,EAA+G,GAA/G,EAAoH,GAApH,EAAyH,GAAzH,EAA8H,GAA9H,EAAmI,GAAnI,EAAwI,GAAxI,EAA6I,GAA7I,EAAkJ,GAAlJ,EAAuJ,GAAvJ,EAA4J,GAA5J,EAAiK,GAAjK,EAAsK,GAAtK,EAA2K,GAA3K,EAAgL,GAAhL,EAAqL,OAArL,EAA8L,MAA9L,EAAsM,KAAtM,EAA6M,WAA7M,EAA0N,SAA1N,EAAqO,YAArO,EAAmP,WAAnP,EAAgQ,QAAhQ,EAA0Q,UAA1Q,EAAsR,KAAtR,EAA6R,MAA7R,EAAqS,QAArS,EAA+S,OAA/S,EAAwT,EAAxT,EAA4T,QAA5T,EAAsU,WAAtU,EAAmV,QAAnV,EAA6V,QAA7V,EAAuW,IAAvW,EAA6W,IAA7W,EAAmX,IAAnX,EAAyX,IAAzX,EAA+X,IAA/X,EAAqY,IAArY,EAA2Y,IAA3Y,EAAiZ,IAAjZ,EAAuZ,IAAvZ,EAA6Z,KAA7Z,EAAoa,KAApa,EAA2a,KAA3a,EAAkb,KAAlb,EAAyb,KAAzb,EAAgc,KAAhc,CAAnB;A5I4GF,AhBDA,A8IheY,AcsXV,MdtXU,AcsXJ,MdtXU,CAAC,AcsXJ,GdtXH,AcsXM,EAAhB;A5I4GF,AhBDA,AsCtMY,AwG1RA,AcsXV,EAAA,IdtXU,McsXA,CtH5FO,AsH4FN,EdtXQ,CAAC,AcsXpB,CAAe,EdtXL,CAAc,CxG0Rd,EACA,GwG3RoB,CAAC,AcsXf,MdtXqB,CAAC,GcsXvB,EAAa,CdtXG,GAAgB,CAAjB,AcsXf,CdtXL,CcsXuB,CdtXkB,MAAM,CAAC,MAAM,CAAC,MAAP,GAAgB,CAAjB,CAA/C;A9HkeZ,AhBDA,AuIpcQ,AjG+PQ,ATpehB,AiHyMS,AcsXL,IrB1VI,A1GrOK,A+H+jBT,ItH3FY,CiG/PJ,CAAC,CqB0VF,CAAC,ItH3FY,ATpeC,GSoeE,ATpe2B,C0GqO9C,EqB0VG,CrB1Ve,AqB0VtB,E/H/jBwD,CAAC,A+H+jBnC,CtH3FS,CiG/P3B,AjG+P4B,EsH2FN,CAAC,CtH3FJ,ATpe2B,CSoeb,ATpe2B,G+H+jBtC,C/H/jBwB,A+H+jBlD,CtH3F0C,ATpe9C,SSoe2B,CAAX;AtBuMhB,AhBDA,AsCrMa,AkBrSL,AoGgYL,GAFD,CpG9XM,KAAI,CAAC,OAAL,GAAe,CAAf;AxC4eR,AhBDA,A8IheQ,AcsXN,MAAM,EdtXM,McsXE,GdtXO,AcsXJ,EAAjB,CdtXwB,AcrMF,CdqMG,AcwXzB,UdxXmC,CAAC,CAAX,GAAe,SAAS,CAAC,CAA1B,IAA+B,GAAjD;A9HkeR,AhBDA,AsCrMY,AwG3RJ,QAAM,ExG2RE,CAAC,IAAI,CAAC,CwG3RC,GxG2RX,AwG3Rc,CAAC,CxG4Rf,QwG5RwB,CAAC,CAAV,GAAc,UAAU,CAAC,CAA1B,IAA+B,GAAjD;A9HkeR,AhBDA,AsCpMgB,AMpfhB,AkGyNQ,AcsXN,EAAA,EhH/kBF,AkGyNQ,IcsXA,CAAC,CdtXK,CAAC,ExG2RM,KwG3Rb,CAAe,ClGzNvB,KgH+kBE,CAAwB,EtH3FV,AwG3RR,EAA0B,KcsXhC,EAAmC,EdtX7B,QcsXsC,CAAT,EAAU;A5I2G/C,AhBDA,AsCpMa,AMrfb,AkG0NQ,AcsXJ,IdtXI,AcsXJ,MdtXU,CAAC,CcsXH,CAAC,EdtXL,CAAY,IcsXA,CAAC,CAAC,CAAC,EdtXf,CcsXY,CdtXW,AcsXnB,CAAR,GAA2B,IAA3B,CdtXI;A9HieR,AhBDA,AuIpcQ,AjGgQC,AMtfT,AkG2NK,AcsXD,IrB3VI,AqB2VJ,CtH1II,CsH0IF,CAAC,ErB3VK,CAAC,CjGkQL,CMxfR,EgHilBI,CAAW,GrB3VP,GAAgB,KAAhB,AqB2VJ,IAA0B,EAAE,CAAC,QAAH,CAAY,YAAZ,CAAyB,IAAzB,EAA+B,EAAE,CAAC,OAAH,CAAW,WAA1C,EAAuD,EAAE,CAAC,GAAH,CAAO,SAAP,CAAiB,OAAO,CAAC,CAAC,CAAC,GAAH,CAAxB,CAAvD,CAA1B;A5I2GJ,AhBDA,AsClMY,AsHyFT,GAHD,QtHtFe,SAAL,GAAiB,KAAK,OAAL,GAAe,KAAK,SAAL,GAAiB,CAAjD;AtBoMZ,AhBDA,AsClMS,AwG7RL,AcsXF,EAAA,IdtXQ,EcsXF,CAAC,EdtXM,GAAG,WcsXhB,CAAwB,IdtXQ,CAAC,EcsXjC,EAAiC,EdtX/B,QcsXwC,CAAT,EAAU;A5I2G7C,AhBDA,A8I/dI,AcsXA,IAAA,EdtXM,MAAM,AcsXJ,CAAC,EdtXM,KcsXC,CdtXK,AcsXJ,CdtXK,AcsXJ,CAAC,GAAH,CAAR,CdtXO,AcsXf,GdtX+B,AcsXJ,CdtX3B,IcsXA;A5I2GJ,AhBDA,AsClMQ,AwG7RJ,AcsXA,IAAA,EdtXI,AcsXF,CAAC,EtHzFM,KsHyFT,CAAW,CdtXG,CxG6RV,EwG7Ra,CxG6RG,KwG7RG,CAAC,AcsXxB,IAA0B,CtHzFtB,CwG7RJ,AcsX4B,CAAC,QAAH,CAAY,YAAZ,CAAyB,IAAzB,EAA+B,EAAE,CAAC,OAAH,CAAW,WAA1C,EAAuD,EAAE,CAAC,GAAH,CAAO,SAAP,CAAiB,OAAO,CAAC,CAAC,CAAC,GAAH,CAAxB,CAAvD,CAA1B;A5I2GJ,AhBDA,AsClMK,ATxeL,A2BgMQ,AsFWJ,AcsXD,GtHlKC,AsH+JF,C/H9jBW,A2BgML,CoGpMgB,Cd+Md,AcuXR,GpGlYU,CAAC,MsFWO,GAAG,CjH3MM,E2BgMrB,C3BhMsD,CiH2MlC,CtFXA,AsFWC,IjH3MuC,CAAC,A2BgM7D,CsFWe,GAAe,CAAlC,CjH3M0D,AiHuJ4B,CjHvJd,IAAd,CAA9D;Ab4qBA,AhBDA,AuIpcQ,IAAA,KAAI,CAAC,MAAL,GAAc,KAAd;AvHscR,AhBDA,AsCxLI,AkBnTI,AsFaJ,AcqXF,EtH/EE,AsH+EF,EpGlYM,CoGkYH,CdrXK,AcqXJ,EtH/EF,CAAA,AkBnTQ,CAAC,AoGkYX,CdrXa,EcqXF,CdrXK,CcqXH,CAAC,GdrXO,CAAC,CtFbhB,ElBmTJ,CAAI,AsH+EK,CdrXK,AcqXO,GdrXO,CAA5B,CxGsSI,CAAA,SAAJ,CsH+ES,CtH/EL,AsH+EkC,EAAE,CAAC,EtH/EzC,EAAO,IsH+E+B,CAAY,UAAZ,CAAuB,GAAvB,EAA4B,UAAS,IAAT,EAAe,IAAf,EAAmB;A5I2GzF,AhBDA,AuIrcK,A3F7OD,AkGoNA,AcqXA,IAAA,EdrXM,EcqXF,CAAC,EhHzkBL,CgHykBA,CAAS,KdrXS,GAAG,EcqXX,GdrXgB,AcqXjB,ChHzkBT,CAAY,AgHykBC,ChHzkBb,AkGoN6B,ElGpNV,CAAnB,EAA0B,AkGoN1B,KlGpNA,EAAqC,MAArC,EAAiD,MAAjD,EAA4D;A5BorBhE,AhBDA,A4CnrBgB,AkGqNZ,AcqXE,MdrXI,AcqXJ,EhH1kBU,CAAA,CgH0kBN,CAAC,GhH1kBK,AgH0kBN,CAAJ,GAAY,ChH1kBF,CAAA,EAAA,CkGqNW,EcqXT,CdrXY,AcqXZ,KdrXiB,CAAC,McqXlB,CAAa,GdrXD,GAAmB,KAAK,CAAC,AcqXxB,UdrX3B;A9HgeJ,AhBDA,A4CprBgB,AgH0kBqB,MhH1kBrB,CAAA,GAAA,CAAA,IgH0kBqB,EAAE,CAAC,GAAH,CAAO,SAAP,CAAiB,GAAjB,CAAA;A5I4GrC,AhBDA,A4CrrBqB,AgH0kBqC,OAAxC,CAAZ;A5I6GN,AhBDA,A8I9dI,AcmXC,KAFD,CdjXI,EAAE,GAAG,MAAM,CAAC,CAAD,CAAf;A9HgeJ,AhBDA,A4CvrBuB,AkGyNnB,AcmXD,GAJuC,EAIrC,CdnXG,ElGzNe,AkGyNb,ClGzNa,EkGyNV,Ac+W6B,EAI7B,ChH5kBU,CgHwkBmB,CAA7B,Cd/WM,Ac+WjB,Cd/WkB,AcxNI,ChHDD,AkGyNJ,AcoXjB,ChH7kBqB,AkGyNnB,ElGzNmB;A5ByrBvB,AhBDA,A4CxrBuB,AkG0NnB,MlG1NmB,AkG0Nf,ClG1Ne,CkG0Nb,ElG1Na,CAAA,AkG0NV,MAAM,CAAC,CAAD,CAAf;A9HgeJ,AhBDA,A6B5qBA,Aeb4B,AkG2NxB,AcmXF,EAAA,GAAG,CdnXG,AcmXF,EdnXI,CjH9MM,EiH8MH,GcmXX,GdnXiB,AcmXF,CdnXG,CAAD,AcmXA,CdnXf,AcmXgB,Q/HjkBpB,A+HikBiB,CAAY,E/HjkBM,c+HikBlB,CAA6B,EAAE,CAAC,QAAH,CAAY,UAAZ,CAAuB,GAAvB,EAA4B,UAAS,IAAT,EAAe,IAAf,EAAmB;A5I6G7F,AhBDA,AuIvpBW,A1GpBP,A2B+LI,AsFcJ,AcmXA,ErB5iBO,E/E2KH,AoGiYJ,E/HhkBI,AiH6MA,EAAE,AcmXF,C/HhkBJ,A2B+LQ,AoGiYH,CpGjYI,CsFcA,CAAT,AcmXA,CAAS,ErB5iBF,CAAA,KAAA,A/E2KH,EoGiYM,CrB5iBV,A/E2KuB,EAAnB,AoGiYK,EAAM,CAAN,EAAO,GrB5iBH,MAAb,EAA8B;AvHypBlC,AhBDA,A4C3rB8B,AkG6N1B,AcmXE,MdnXE,AcmXF,EhHhlBwB,AkG6NpB,EcmXA,CdnXG,AcmXF,CdnXP,ClG7N0B,CgHglBhB,CAAC,GhHhlBe,KAAA,CAAA,EAAA,AgHglBnB,EAAD,CAAJ,GAA0B,OAAA,CAAA,YAAA,CAAa,YAAA;A5I6G7C,AhBDA,A6B3qBI,AejB0B,AgHglBqB,MhHhlBrB,CfiBrB,ESweL,CTxeA,CejB0B,GfiBd,AejBc,CAAA,AgHglBqB,MtHvF/C,EsHuFuD,CAAC,E/H/jBxD,C+H+jBuD,C/H9jBvD,A+H8jB+C,IAAiB,KAAjB;A5I8GnD,AhBDA,AsClMQ,ATxeA,AenB+B,AgHglBkC,I/H7jBjE,G+H6jBwB,CAA1B,KtHrFS,GTxeK,CAAC,GSweC,ATxeF,CAAZ,CAAkB,GSweC,ITxenB,KSweA;AtBoMR,AhBDA,AuIrpBQ,AjGmdH,ATxeA,AiH4MD,AciXC,KtHxFM,AsHsFP,Cd/WI,EPvLM,GOuLD,CPvLK,EOuLF,CPvLK,COuLH,EAAE,GPvLO,AOuLJ,CPvLK,COuLZ,CAAZ,EPvLiB,CAAY,MAAZ,CAAb,CAN0B;AvH6pBlC,AhBDA,A4C/rByC,AkGiOrC,AciXD,GAJ2C,EAIzC,CdjXG,ElGjOiC,GkGiO5B,GlGjO4B,AkGiOzB,Cc6W8B,Cd7W5B,CciXD,EhHllBwB,AkGiOpB,Ac6WyB,CAA7B,CtHrFN,AwGxRP,Ac6WF,GhH9kBuC,CAAA,EAAA;A5BisBzC,AhBDA,AuIppBQ,A1GvBJ,AerBqC,AkGkOrC,AckXF,MhHplBuC,AkGkOjC,AckXA,C/H/jBC,E0GuBI,C1GvBT,EerBqC,AkGkO3B,CPtLG,CAAC,A1GvBF,CerByB,AkGkOxB,ClGlOwB,AkGkOrC,CPtLiB,CAAb,AqBwiBY,ErBxiBI,CAAC,AqBwiBF,GrBxiBK,IAAI,CAAC,C1GvB7B,EACA,G0GsBI,EAAiC,EAAE,CAAnC,EACA;AvHqpBR,AhBDA,AuInpBY,AjG2cD,ATleH,AevB2C,AkGmO/C,AckXA,GtH5FA,CTleI,EiH4MA,GckXC,CrBviBS,EOqLJ,GAAG,AciXM,CdjXnB,IjH5MoB,CAAC,C0GuBK,E1GvBN,C0GuBS,A1GvBzB,CAAsB,G0GuBO,CAAC,CAAD,CAAzB,CADJ,A1GtBA;Ab4qBR,AhBDA,AsCzLI,ATjfC,AiH6MD,AciXA,EtH7EA,IwGpSI,ExGoSJ,CAAA,AsH6EK,CdjXG,GAAG,IAAI,Ac+WI,Cd/WH,IAAL,CxGoSX,AwGpSsB,CxGoSlB,IwGpSuB,ExGoSvB,CAAA,AwGpS0B,KAAT,GAAmB,CxGoSxC,EAAI,EwGpSyC,GAAG,GxGoShD,EAAU,AwGpSC,CAAX;A9I8dJ,AuIlpBY,A1GxBX,AezBoD,AYuN7C,AsFgBJ,AcgXA,EdhXA,EtFhBI,E+EtKI,COsLH,ClGvO4C,CYuNzC,AoGgYH,CpGhYI,CsFgBA,CPtLK,CAAC,C3FjDkC,CkGuOjD,EtFhBI,EZvN6C,CYuN9B,CAAf,GZvN6C,CAAA,E2FiDzC,A3FjDyC,C2FkDrC,aAAa,CAAC,SADlB,EAEI,YAFJ,EAGI,MAAM,CAAC,wBAAP,CAAgC,MAAhC,EAAwC,YAAxC,CAHJ;AvImpBZ,AuI9oBS,A3FtD4C,AkGwOjD,Ac4WmB,Ed5WnB,Cc4WF,GhHplBmD,CkGwO5C,IAAI,ClGxOwC,GAAA,AkGwOjD,ElGxOiD;A5CqsBrD,AuI9oBK,A3FvD2D,AkGyO5D,AcgXF,EdhXE,CPtMO,GqBsjBL,CdhXG,IAAI,GcgXC,EdhXV,CcgXa,EAAf;A5J6GF,A8I5dI,AcgXF,EdhXE,IcgXI,CdhXC,IAAI,AcgXA,GAAG,EdhXZ,AcgXF;A5J6GF,A8I3dI,Ac+WF,Md/WQ,Ac+WJ,Kd/WS,Ec+WF,Cd/WK,Ec+WF,EAAd,Cd/WqB,CAAC,SAApB,CAhFsF,CAgFxD;A9I4dlC;AACA,A8I5dI,Ac+WF,Md/WQ,Ac+WF,UAAU,Cd/WG,Ec+WA,Cd/WG,CAAC,IAAI,Gc+WrB,Ed/WgB,IAAc,CAAlC,Gc+WiB,CAAS,GAAT,EAAc,IAAd,EAAkB;A5J8GvC,A8I5dI,Ac+WA,Md/WM,Ec+WF,IAAI,IAAI,Cd/WK,Ac+WJ,CAAC,Ed/WM,Cc+WH,CAAC,Gd/WO,GAAG,CAA5B,Ac+Wc,CAAY,IAAZ,CAAd,EAAiC;A5J8GrC,AwD5eQ,AoG+XF,IpG/XE,EoG+XF,GpG/XM,AoG+XH,CpG/XI,AoG+XH,IAAJ,CAAS,IAAT,GpG/XE,GAAoB,CAApB;AxD6eR,AuI3cc,A1GhOd,Ae3BQ,AkG0OJ,Ac+WC,ErB9VS,IOjBN,CAAC,EjH/MO,Ae3BH,CAAL,GAAS,CAAT,C2F2PM,CAAA,EOjBV,EACA,KPgBU,CAAA,A1GhOd,GAAiC,0B0GgOnB,GAAV,YAAA;AvI4cJ,AuI1cQ,A1GhOJ,AiH+MI,Ac8WL,GAJD,G/HzjBM,E0GgOI,AOjBA,CjH/MR,I0GgOa,AOjBA,CAAC,GAAN,EPiBJ,EACA,COlBkB,QAAQ,CAAC,KAA3B,EACA;A9I2dR,AuIzcY,AOjBA,MAAA,GxGqRR,EiGpQa,KOjBK,CPiBV,CAAY,EOjBE,CxGqRtB,IwGrR2B,CACf,EAAE,GAAI,KAAK,IAAI,OPgBnB,IOhB8B,GAAG,WAAlB,CAAL,GAAsC,GAD7B,EAEf,EAAE,GAAI,KAAK,IAAI,WAAW,GAAG,WAAlB,CAAL,GAAsC,GAF7B,EAGf,EAAE,GAAI,KAAK,GAAG,WAHC,EAIf,EAAE,GAAI,KAAK,GAAG,WAJC,EAKf,EAAE,GAAI,KAAK,GAAG,WALC,EAMf,EAAE,GAAI,KAAK,GAAG,WANC,EAOf,KAPe,EAQf,IARe,CAAL,GASV,CATJ;A9I2dZ,AsCpMQ,ATteJ,AiHyNK,AcmWP,Kd/WM,Cc+WA,C/H5jBC,GAAL,CiH0NS,ExG4QE,AsHsFA,C/H5jBC,CiH0NC,CckWC,ItHtFI,AwG5QA,CAAC,GAAN,CxG4QU,AsHsFnB,C/H5jBJ,EACA,CiHyN2B,GckWb,CAAS,GAAT,CdlWqB,CxG4Q/B,AwG5QgC,AckWR,IAAd,EdlWL,AckWuB,EdjW5B;A9IgdR,AuI1cY,AjGsQP,ATreG,AiH0NI,AciWR,KtHzFU,CwGxQF,EciWF,GrB5VO,A1G/NF,E+H2jBA,GdjWO,AciWJ,GAAG,CrB5VT,AOLc,AciWJ,CrB5VK,E1G/NA,CAAC,EiH0NI,CjH1NL,AiH0NM,AciWf,C/H3jBV,A+H2jBsB,CdjWE,EAAK,CciWnB,CdjWc,AciW5B,EdjWqC,CPK7B,CAA+B,GOLX,EPKgB,AOLA,KAAhB,CPKW,CAAY,AOLA,SPK3C,EOLoB,EAAoC,WAApC,EAAiD,IAAjD,EAAuD,KAAvD,CAApB;A9IgdZ,AuI1cS,A1G/NJ,AiH0NI,KPCD,IjG2QJ,EiGrQI,QjGqQO,GAAX,EAAsB;AtCoM1B,AuIxcY,A3F9PJ,AY0NA,AsF6BH,AcgWD,GdvcsF,CtF0ElF,IoG6XA,ChHvlBK,AY0ND,AoG6XH,ChHvlBD,AY0NK,C+EoCI,E3F9PA,CAAT,AgHulBJ,EAAY,CpG7XR,G+EoCI,A/EpCW,C+EoCI,G/EpCnB,Y+EoCI,CAA+B,KAAK,wBAAL,CAA8B,SAA7D;AvIycZ,AuIxcS,AjGsQD,ATxeJ,A+H2jBE,MAAA,C/H3jBG,E+H2jBA,CtHnFK,ATxeV,A+H2jBM,I/H3jBM,ESweI,AsHmFd,CAAW,EtHnFM,GsHmFjB,CtHnFqB,CAAC,AsHmFJ,CAAlB,EtHnFiB,CAAS,ETxe5B,EACA,CSueiC,MAAd,EAAsB,GAAtB,CAAf,CAHkB;AtCsM1B,AuIxcK,A1GjOG,A+H0jBH,GrBpWS,Q1GtNC,gBAAgB,CAAC,GAAD,CAAvB;A7B0qBR,AsCjMQ,ATxeH,AiH0ND,AcgWD,EdhWC,Cc2VF,CAhmBsB,CAsmBtB,EdjWO,CAAC,ExG8QI,EwG9QV,CACI,EAAE,ExG6QW,CwG7QP,ExG6QU,GwG7QL,CxG6QS,CAAC,CwG7QP,ExG6QE,CAAS,IAAI,CAAC,GAAL,AwG9Q7B,CxG8QsC,CAAT,AwG5QzB,ExG4QqC,AwG5QnC,GAAI,GxG4QmB,EwG5Qd,ExG4QoC,CwG5QjC,GxG4QE,EAAqC,MwG9QzD,axG8QkE,WAA9C,CAAhB;AtCkMR,AsChMQ,ATzeP,AiH4NG,EAAA,KAAK,CAAC,GxG6QG,CwG7QT,CACI,EAAE,GAAI,KAAK,CxG4QX,EwG5Qc,CxG4QO,IAAI,MwG7Q7B,CxG6QI,CwG3QA,EAAE,GAAI,KAAK,GAAG,WAFlB;A9I8cJ,AsChMK,KAdS;AtC+Md,A4CtsBQ,AkG2PJ,Ac2VF,EAAA,GAAG,CAAC,Cd3VG,ElG3PI,CgHslBX,Cd3VW,Ac2VF,Cd3VG,ElG3PN,CkG2PS,CAAb,ClG3PiB,CkG2PD,CAAC,ExG4PP,CMvfN,AkG2PgB,Kc2VtB,Cd3V4B,Ac2VF,Gd3VK,CAA7B,EAAgC,EAAE,CAAlC,EACA,Ac0VF,EAAuC,UAAS,CAAT,EAAU;A5JiHnD,AwD5eQ,AsFkCA,Ac0VJ,IpG5XI,AsFkCA,EAAE,Ec0VA,CpG5XE,AsFkCC,CtFlCA,IoG4XG,CpG5XR,AsFkCW,CAAC,CAAC,Ac0VF,CpG5XE,AsFkCC,Ac0VF,Gd1VK,CAAL,CtFlCM,GAAG,AsFkCC,CtFlCT,AsFkCF,CAAX,Ec0VwB,CpG5XE,AoG4XD,CAAC,CAAC,IpG5XK,EoG4XR,CpG5XW,AoG4XvB,CpG5XZ,GoG4XsC,EAA3B,EAA+B,WAA/B,EAAf;A5JiHJ,AsCjNc,AwGzPN,Ac0VJ,GtHjGA,CwGzPI,Ac0VJ,Ed1VM,GAAG,Kc0VC,Cd1VK,Ac0VJ,Cd1VM,CAAC,CAAC,GAAG,CAAL,Ac0VP,EAAU,Ed1VO,CAAX,GAAgB,Ac0VtB,Cd1VK,Ac0Vf,Cd1VI;A9I2cR,AsCxLI,AwGjRI,AcyVJ,EtHxEA,EwGjRI,AcyVJ,EdzVM,AcyVJ,CAAC,CtHxEH,CAAA,AwGjRS,KcyVT,CdzVe,AcyVJ,CdzVK,CAAC,GAAG,CAAL,CAAX,CxGiRJ,CAAI,IsHwEJ,EtHxEI,CAAA,CsHwEwB,EAAE,CAAC,KtHxE/B,EAAI,CsHwEwB,CAAY,MtHxExC,EAAU,IsHwEkB,CAAyB,IAAzB,EAA+B,EAAE,CAAC,OAAH,CAAW,aAA1C,EAAyD,EAAE,CAAC,GAAH,CAAO,SAAP,CAAiB,CACpG,MAAM,CAAC,CAAC,CAAC,OAAH,EAAY,IAAZ,CAD8F,EAEpG,MAAM,CAAC,CAAC,CAAC,OAAH,EAAY,IAAZ,CAF8F,CAAjB,CAAzD,EAGxB,EAAE,CAAC,GAAH,CAAO,SAAP,CAAiB,MAAjB,CAHwB,CAA5B;A5JiHJ,AuIzcI,AOAI,Ac4VL,ErB5VC,CqBqVF,CdrVM,CclRgB,CdkRd,Ac6VR,Gd7VW,MPAT,AOAe,CPAf,AOAiB,CAAC,GAAG,CAAL,GAAU,CPA1B,AOAe,CPAf,AOAI,ePAJ,GAAA,YAAA;AvI0cJ,AuIxcQ,AOAA,IAAA,EAAE,GPAG,AOAA,MAAM,CAAC,CAAC,CPAb,AOAc,GAAG,CAAL,IAAU,CAAX,CAAX;A9IycR,AuIvcQ,A3F/PA,AkG8PA,Ac2VN,EAAA,Ed3VM,Cc2VH,Cd3VK,Ac2VJ,GrB1VO,A3F/PA,AkG8PA,Cc2VX,CAAS,IhHzlBH,AkG8PW,CAAE,CAAC,CPCd,A3F/Pc,AkG8PC,CPCA,EODG,CAAL,ElG9Pb,EkG8PuB,CAAX,Ac2VlB,CAA0B,Ed3VQ,CAAjB,CAAX,EPCA,CAA+B,EqB0VrC,EAAqC,CrB1VK,MAAL,CAAY,EqB0VH,CAAT,EAAU,IrB1VzC,EAJJ;AvI4cJ,A8BhvBA,AgHySQ,Ac0VJ,I9HnoBJ,AgHySQ,Ic0VE,Cd1VG,GAAG,EAAE,Ac0VF,Ed1VI,Cc0VD,CAAC,Cd1VG,EAAP,ChHzShB,AgHySQ,Qc0VwB,CAAC,CAAC,CAAC,MAAH,CAAZ,IAA0B,EAA3B,EAA+B,WAA/B,EAAf;A5J8GJ,AuIvcQ,AzG1SR,AgH0SQ,Ac0VJ,Id1VI,Ac0VJ,KrB1VS,AOAA,Ec0VF,Cd1VK,Ac0VJ,Ed1VM,GAAG,EPAb,AOAA,Ac0VG,EAAU,CrB1VK,KAAK,AqB0VpB,CAAP,IrB1VsB,GAAa,KAAK,MAAL,CAAY,UAA3C;AvIwcR,AuIvcK,AzG3SL,AgH4SQ,AcyVJ,GrBjWA,COQI,AcyVJ,EAAE,CAAC,CdzVK,GAAG,ChH5Sf,E8HqoBI,CdzVe,AcyVJ,CdzVK,IAAL,CAAW,KAAK,AcyV3B,GdzV8B,CcyVJ,EAAE,CAAC,CdzVR,GAAmB,IcyVd,CdzVmB,AcyVP,GdzVU,KAArC,CAAP,GcyVsB,CAAyB,IAAzB,EAA+B,EAAE,CAAC,OAAH,CAAW,WAA1C,EAAuD,EAAE,CAAC,GAAH,CAAO,SAAP,CAAiB,CAChG,MAAM,CAAC,CAAC,CAAC,OAAH,EAAY,IAAZ,CAD0F,EAEhG,MAAM,CAAC,CAAC,CAAC,OAAH,EAAY,IAAZ,CAF0F,CAAjB,CAAvD,EAGtB,EAAE,CAAC,GAAH,CAAO,SAAP,CAAiB,YAAY,CAAC,CAAC,CAAC,MAAH,CAA7B,CAHsB,CAA1B;A5J8GJ,AwD5eQ,AsFsCA,Ac4VL,GAPD,CpG3XM,AsFsCA,Cc3RgB,CAwnBtB,GpGnYU,AsFsCC,CtFtCA,GsFsCI,IAAT,QtFtCA,GAAuB,EAAvB;AxD6eR,A8ItcQ,IAAA,KAAK,IAAI,IAAT;A9IucR,A4CtsBQ,AkGgQA,Ac4VN,EAAA,Ed5VM,KlGhQK,AkGgQA,Cc4VH,CAAC,Ed5VM,ElGhQT,GAAc,AkGgQd,MlGhQA,AgH4lBN,GAAyB,YAAA;A5J2G3B,A8ItcQ,Ac4VJ,Id5VI,KAAK,Ec4VF,Ed5VM,Gc4Vb,Ed5VI;A9IucR,A8IrcQ,Ac2VL,GAFD,CdzVM,AchSgB,CA4nBtB,ItH1FE,CwGlQU,GAAG,EAAE,EAAE,GAAG,CxGkQpB,CwGlQa,CAAT;A9IscR,AsClMQ,ARziBJ,AgHsSI,IAAA,MxGmQI,AwGnQE,ChHtSV,EgHsSa,ExGmQA,AwGnQE,GAAG,EAAd,QxGmQA,CRziBJ,CQ0iBI,AR1iBQ,KAAZ,EAA2B,MAA3B,EAA2C,UAA3C,EAA6D;A9B4uBjE,AsCjMY,AwGnQJ,IAAA,IAAI,GAAG,IxGmQI,AwGnQA,CAAC,GxGmQG,CAAC,AwGnQT,CAAW,IxGmQP,CAAW,CwGnQE,GAAG,GxGmQE,GwGnQZ,ExGmQiB,CwGnQI,MAAM,GAAG,GxGmQpC,CAAP,EwGnQG,CAAP;A9IqcR,AsCjMS,AwGnQD,AcyVN,EAAA,EdzVM,CcyVH,CAAC,IdzVQ,AcyVZ,CAAS,GdzVO,IAAV,ScyVN,CAA0B,WAA1B,EAAuC,UAAS,CAAT,EAAU;A5J4GnD,AwD5eQ,AsFwCA,AcyVJ,IpGjYI,AsFwCA,AcyVJ,KpGjYQ,CAAC,AsFwCC,EcyVF,EdzVM,CcyVH,GdzVP,CtFxCA,GAAiB,KAAjB;AxD6eR,AsCjMQ,AwGnQA,AcyVF,IdzVE,EcyVF,CAAC,EAAE,CdzVK,GxGmQC,CAAP,AwGnQU,CcyVH,CAAC,CAAC,CAAC,CdzVV,McyVO,EAAY,IAAZ,CADA;A5J6Gf,AsCjMK,AwGnQG,AcyVF,IdzVE,CxG2PM,CsH8FR,CAAC,EAAE,CdzVK,IAAI,CcyVH,CAAC,CAAC,CAAC,CdzVV,McyVO,EAAY,IAAZ;A5J4Gf,AuIxcI,AzGlSI,A8H4nBO,ErB1VX,GqB0VA,ItHlFA,AR1iBS,MyGkST,AzGlSI,CyGkSJ,EzGlSkB,CQ0iBP,GAAX,EAAsB,CiGxQtB,CAAA,AzGlS0B,CAAC,QyGkS3B,GAAA,EzGlSkB,CAAuB,OyGkS/B,CzGlSQ,CAAd,QyGkSJ,EAAgC,IAAhC,EAAgD;AvIycpD,AuIvcQ,AjGwQA,AMvgBA,AgH2lBJ,IAAA,EAAE,CAAC,CrB5VK,CAAC,A3F/PA,CNugBD,GAAG,AMvgBP,CgH2lBJ,CAAW,ChH3lBK,ENugBA,CiGxQZ,AjGwQA,EiGvQA,AjGwQA,CMxgBkB,CAAC,IAAnB,CgH2lBJ,IAA4B,EAAE,CAAC,QAAH,CAAY,YAAZ,CAC1B,IAD0B,EAE1B,EAAE,CAAC,OAAH,CAAW,aAFe,EAG1B,EAAE,CAAC,GAAH,CAAO,SAAP,CAAiB,CAAC,QAAQ,CAAC,CAAV,EAAa,QAAQ,CAAC,CAAtB,CAAjB,CAH0B,EAI1B,EAAE,CAAC,GAAH,CAAO,SAAP,CAAiB,CAAC,QAAQ,CAAC,CAAV,EAAa,QAAQ,CAAC,CAAtB,CAAjB,CAJ0B,EAK1B,EAAE,CAAC,GAAH,CAAO,SAAP,CAAiB,OAAjB,CAL0B,CAA5B;A5J4GJ,AuItcY,AjGwQA,AMxgBP,AkGkQG,Ac+VL,GAZD,EA7nBsB,CA0oBtB,EdhWY,EPFE,CAAC,AOEA,ExGsQA,CwGtQG,EPFE,AOEA,GAAG,EAAjB,CPFI,EACA,EjGuQA,GAAqB,CAArB;AtC+LZ,AuIrcgB,AjGuQP,AwGtQD,OxGmQA,CwGnQM,GAAG,EPDI,AjGyQb,CwGxQY,EAAE,GPDN,AOCS,EAAjB,CPDsB,KAAK,wBAAnB;AvIschB,AuIrcgB,AOCR,Ac+VN,EAAA,GAAG,CAAC,Ed/VQ,Ec+VZ,Cd/Ve,Ac+VN,ErBhWU,COCD,EAAE,GAAG,EAAjB,Mc+VN,CrBhWc,AqBgWY,OAA1B,EAAmC,UAAS,CAAT,EAAU;A5JsG/C,AuIrcgB,AjGyQJ,AwGxQJ,Ac+VJ,Qd/VU,Ac+VN,CAAC,CAAC,Cd/VO,CxGwQC,CiGzQG,COCD,EAAE,Ac+Vd,EtHvFgB,CiGzQR,AOCS,Ac+VN,CAAf,CtHvFuB,AwGxQnB,CPDsB,AqBgWR,GtHvFS,CiGzQf,AjGyQgB,GAAL,CAAS,KAAK,MAAd,EAAsB,GAAtB,CAAf;AtC6LZ,AuIrca,AjG0QD,AsHsFN,MAAA,CrBrWM,MAOA,AjGwQK,GsHsFD,CAAC,OAAD,EtHtFJ,AsHsFc,GtHtFO,KAAK,IsHsFtB,CAAV,CtHtFsC,GAAG,IAAd,CAArB;AtC4LZ,AuIncgB,AjGwQP,AR/iBD,A0B8PA,AoGuYF,IpGvYE,EoGuYF,G9HroBO,A0B8PD,CAAC,G+EyCQ,AqB8VR,CAAC,E9HroBN,E0B8PA,C1B9Pe,E0B8PC,AoGuYX,EAAU,C9HroBK,C0B8PpB,K1B9Pe,CAAY,E8HqoBtB,CAAP,O9HroBiB,CyGuSP,AzGvS8B,IAAvB,CAAf;A9B2uBR,AsC3LK,AR9iBG,AgHqSA,Ac+VH,KtH7GS,AsH0GV,Gd5VU,ChHrSD,E8HooBF,Ed/VQ,Ec+VJ,Cd/VQ,Ac+VP,CAAC,E9HpoBT,AgHqSkB,GhHrSA,AgHqSG,Cc+Vd,Ed/VO,Cc+VI,CAAf,Cd/V0B,Cc+VR,Ed/VW,ChHrSJ,EgHqSO,EhHrSH,CgHqShC,kBhHrSyC,UAAzC;A9B0uBR,AuIpcgB,AzGpSR,AgHoSA,Ac+VF,MAAA,Ed/VQ,ChHpSD,IyGoSQ,EzGpSb,CAAY,A8HmoBJ,Cd/VO,Ac+VN,Gd/VU,CxGiPb,ARrhBN,EAAmB,C8HmoBX,Cd/VgB,Cc+VN,ErB/VV,AOAmB,ChHpS3B,AgHoSA,Oc+VQ,CAAV;A5JsGN,AuIpca,AzGpSR,AciCD,AgHkmBE,EhHlmBF,IgHkmBE,OAAO,CAAC,IhHlmBV,CAAA,EgHkmBS,EAAU,KhHlmBnB,CAAA,KAAA,CgHkmBS,CAAP,ChHlmBF,YAAA;A5CwsBJ,AuIpcS,AjG+OK,AMjfN,AgHimBH,GtHhHD,EsH6GO,MhH9lBI,AgHimBJ,IhHjmBQ,gBAAJ,CAAqB,KAAK,CAA1B,EAA6B,KAAK,CAAlC,EAAqC,KAAK,KAA1C,EAAiD,KAAK,MAAtD,EAA8D,KAAK,MAAnE,CAAP;A5CusBR,AsClJI,AMpjBC,AkGkQG,Ac+VF,EtH7CF,CMvjBA,GgHomBE,EtH7CF,AwGlTQ,CxGkTR,GwGlTY,CAAC,Ac+VJ,CAAC,Ed/VF,CAAS,Ic+VR,Cd/VD,CxGkTR,AsH6CmB,CtH7CR,EwGlTe,GAAtB,CxGkTJ,CwGjTI,CxGiTO,CsH6CF,CAAP,MtH7CF,EAAiB;AtCmJrB,AuIpcQ,AOCI,Ac8VN,Md9VM,Ac8VN,ErB/VM,GOCK,CAAC,CPDD,AqB+VJ,CAAC,Ed9VF,CACI,EAAE,CPFN,CAAa,AqB+VZ,Cd7VS,Cc6VC,Id7VI,EPFf,COEkB,IPFQ,CqB+VzB,CAAP,GrB/VqC,EOC/B,EAEI,EAAE,GPHV,AOGc,EPFd,GOEmB,GAAG,WAFlB;A9IocZ,AuIncY,A/EzCJ,AsF2CI,Ac4VP,IpGvYG,EsF2CI,GtF3CA,CAAC,C+EyCI,AOEA,CAAC,IAAN,CACI,EAAE,GAAI,CtF5Cd,G+EyCI,A/EzCiB,CAArB,AsF4CmB,GAAG,WADlB,EAEI,EAAE,GAAI,KAAK,GAAG,WAFlB;A9IkcZ,AuIncY,AOKA,AcyVT,GAXD,EA3oBsB,CAwpBtB,KrBhWe,OAAL,CAAa,QAAb,GAAwB,KAAK,SAA7B;AvIocZ,AuIncS,AOKA;A9I+bT,A4JpGE,EAAA,GAAG,CAAC,KAAJ,GAAY,EAAE,CAAC,QAAH,CAAY,gBAAZ,CAA6B,EAAE,CAAC,QAAH,CAAY,UAAZ,CAAuB,GAAvB,EAA4B,UAAS,IAAT,EAAe,IAAf,EAAmB;A5JqG1F,AuIncQ,AzGtSJ,A8HqoBA,E9HroBA,E8HqoBA,IrB/VQ,AqB+VJ,CrB/VK,AqB+VJ,CAAL,GrB/VI,AqB+VK,ErB9VL,KzGvSJ,A8HqoBS,C9HroBT,A8HqoBS,S9HroBT,CAAA,E8HqoBS,CAAa,E9HroBtB,GAAA,O8HqoBsB,K9HroBtB;A9B0uBJ,AuIlcY,AzGtSJ,A8HmoBwB,S9HnoBnB,CyGsSG,CAAC,EqB6Ve,GrB7VV,AzGtSd,CAAa,I8HmoBmB,CAAC,CAAT,IrB7VpB,EACA,AzGvSJ,CAA0B,CAA1B,EAA6B,CAA7B,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,CAAtC,EAAyC,CAAzC;A9ByuBR,AuIjcgB,AzGvSR,AgHySA,AcyVkC,KAA7B,CAAT,EdzVU,ChHzSD,CgHySG,GPFK,AOED,CAAC,CAAC,ChHzSd,CAAa,GgHySA,GAAS,CPFd,COEI,ChHzSZ,CyGuS2B,AzGvSJ,CAAvB,EAA0B,AgHySG,CPFE,AzGvS/B,AgHyS8B,EhHzSD,GgHySA,EhHzSK,CgHySI,EAA1B,CAAD,EhHzSkB,CAAY,AgHySK,CPFnB,AOEoB,CAAC,CPFxC,EzGvSR,EAAgD,AgHySD,GAAS,EhHzSH,AgHySP,KAAiB,ChHzSf,AgHySgB,ChHzSJ,IgHySG,EhHzS/D,CgHySwE,EAA1B,CAA9C;A9IgcR,AuIjca,AzGvSR,A0B4PG,AsF6CA,AcyVJ,G9HtoBA,C0BgQI,AoGsYJ,IdzVU,AcyVN,CpGtYI,AoGsYH,CpGtYI,AsF6CG,AcyVZ,GdzVgB,AcyVP,CdzVQ,CAAC,KcyVT,CdzVQ,AcyVR,GpGtYL,AsF6CuB,EAAX,CtF7CU,CAAtB,GsF6C8B,CAAC,CcyV1B,CAAa,IdzVY,GAAU,EAA5B,CAAD,EcyVO,CdzV8B,CAAC,CAAC,MAAD,GAAU,EAAX,KAAkB,CAAC,MAAD,GAAU,EAA5B,CAAhD;A9IgcR,A4CvsBI,AkGwQI,AcwVwB,EhHhmB5B,MkGwQU,EAAE,GAAG,AcwVa,CdxVX,GAAG,ClGxQpB,CAAA,CkGwQuB,CcwVa,CdxVpB,AcwVqB,CAAT,EdxVE,GlGxQ9B,AkGwQiC,ClGxQjC,EkGwQoC,EAArB,IlGxQf,AkGwQ2C,GlGxQ3C,EkGwQI,QlGxQK,CAAT,EAAoB,CAApB,EAA6B;A5CwsBjC,AuIjcY,A3FrQJ,AkGuQA,AcuVkC,KAA7B,CrBzVD,AqByVR,EhH9lBQ,AkGuQE,EPFE,AOEA,GPFG,A3FrQF,AkGuQE,CAAE,GAAG,CPFA,A3FrQZ,EkGuQe,ElGvQD,AkGuQN,ClGvQR,EkGuQsB,ElGvQH,CkGuQM,CPFzB,EOE4B,ClGvQJ,CkGuQjB,IAA4B,ClGvQhB,IAAe,AkGuQtC,ClGvQA,EACA;A5CssBR,AuIjcS,A3FpQG,AkGsQJ,AcuVJ,IAAA,IdvVU,AcuVN,CAAC,GAAL,ChH7lBe,AkGsQA,EcuVJ,CdvVQ,CAAC,ClGtQZ,CkGsQc,GAAG,AcuVd,CAAA,CdvVQ,KAAa,EAAE,GAAG,CcuV1B,CdvVQ,AcuVK,CdvVN,GAA2B,CAAC,EAAE,GAAG,EAAN,AcuVrB,KdvVkC,EAAE,GAAG,EAAlB,CAAzC;A9IgcR,A4CrsBS,AgH4lByB,aAAA,EAAE,CAAC,GAAH,CAAO,SAAP,CAAiB,CAAC,QAAQ,CAAC,CAAV,EAAa,QAAQ,CAAC,CAAtB,CAAjB,CAAA;A5J0GlC,AuIjcQ,AqBuVoE,KAA7D,CAAX,KrBvVW,KAAK,OAAL,CAAa,YAAb,CAA0B,IAA1B,CAAP;AvIkcR,AuIjcK,A3FrQG,AkGuQA,AcqVJ,GrBzXA,CqByXA,IhH5lBQ,AkGuQE,AcqVN,ChH5lBK,AgH4lBJ,EdrVQ,ElGvQA,AgH4lBb,CdrVgB,EAAE,AcqVN,EhH5lBM,AgH4lBJ,ChH5lBN,AkGuQc,AcqVP,CdrVQ,EAAE,AcqVb,ChH5lBW,AgH4lBJ,ChH5lBK,CkGuQI,EAAN,ClGvQM,GkGuQM,CcqVtB,ChH5lBqB,AgH4lBJ,ChH5lBD,GAAS,EgH4lBzB,CAAZ,EhH5lB0C,AkGuQtC,KlGvQA,EACA;A5CssBR,A4CrsBY,AYyNJ,AsF6CA,AcqVJ,IpGlYI,AoGkYJ,IdrVU,AcqVN,CpGlYI,AoGkYH,ChH3lBO,AYyNH,CZzNI,AkGsQA,GAAG,ClGtQC,AgH2lBjB,CdrVkB,EcqVH,CdrVO,ClGtQA,AkGsQC,AcqVN,ChH3lBL,AgH2lBM,CdrVO,EcqVV,ChH3lBY,AkGsQC,AcqVN,ChH3lBM,CkGsQN,CtF7ClB,EZzN4B,CYyNF,AsF6CI,GcqVnB,ChH3lBsB,AYyNjC,AoGkY4B,ChH3lBA,GAAS,GkGsQrC,CcqVW,ChH3lB+B,AgH2lB9C,MhH3lBQ,EACA;A5CqsBZ,A4CpsBgB,AgH0lBZ,IAAA,IAAI,CAAC,GhH1lBY,CAAC,CgH0lBlB,GhH1lBsB,AgH0lBR,EAAE,CAAC,EhH1lBU,CAAL,AgH0lBR,CAAO,EhH1lBU,KAAK,EgH0lBtB,CAAiB,GhH1lBd,IAA6B,AgH0lBhC,ChH1lBiC,AgH0lB/C,IhH1lBmD,KAAK,CAAL,GAAS,KAAK,MAAd,GAAuB,KAAK,MAA/D,IACA,CAAC,IAAI,KAAK,CAAL,GAAS,KAAK,MAAnB,IAA6B,CAAC,IAAI,KAAK,CAAL,GAAS,KAAK,KAAd,GAAsB,KAAK,MADjE,EAEA;A5CmsBhB,A8BzuBI,AcuCgB,AgHwlBhB,E9H/nBA,E8H+nBA,IAAI,CAAC,QhHxlBkB,AgHwlBvB,G9H/nBA,A8H+nBiB,C9H/nBjB,AcuCgB,CgHwlBG,CAAC,GAAH,CAAO,G9H/nBxB,CAAA,K8H+nBiB,C9H/nBjB,A8H+nBkC,G9H/nBlC,O8H+nBiB,CAAjB,E9H/nBO,KAAP,EAAsB,MAAtB,EAAoC;A9B0uBxC,A8BxuBQ,AcsCS,AkGkQT,AcsVJ,IAAA,IdtVU,AcsVN,C9H9nBK,A8H8nBJ,EdtVQ,GAAG,ChHxSZ,CAAY,AgHwSE,GAAI,AcsVtB,CdtVuB,ChHxSnB,CgHwSqB,AcsVN,E9H9nBK,A8H8nBH,CdtVO,AcsVN,EdtVA,CcsVH,C9H9nBU,A8H8nBH,EdtVQ,ChHxSF,KAAK,C8H8nBlB,CAAiB,GdtVhC,KhHxSA,I8H8nBe,CAAnB;A5J2GJ,A8BxuBQ,AgHwSA,AcsVL,GATwC,EAStC,GdtVS,ChHxSD,EgHwSI,Cc6U0B,Ed7UvB,AcsVN,C9H9nBN,CAAY,AgHwSE,Ac6UqB,CAA7B,CAAZ,Cd7UwB,CAAC,EhHxSnB,AgHwSqB,GhHxSA,AgHwSG,EAAN,IhHxSS,AgHwSG,GhHxSA,KAAK,GgHwSnC,OhHxSA;A9ByuBR,A8BxuBK,AcqCW,AgH0lBd,EAAA,C9HnoBE,E8HmoBC,CAAC,EAAJ,GAAU,ChH1lBQ,EAAE,CgH0lBN,EhH1lBS,AgH0lBP,ChH1lBQ,AgH0lBP,IhH1lBW,GgH0lBd,CAAW,ChH1lBQ,CAAL,EgH0lBlB,ChH1lB2B,AgH0lBP,KhH1lBY,KgH0lBH,ChH1lBf,CAAV,EgH0lBgB,EAAa,CAC1C,CADS,CAAV;A5J0GF,A4CnsBgB,AgH4lBd,SAAO,GhH5lBW,AgH4lBlB,EhH5lBoB,GAAG,CAAC,IAAI,KAAK,CAAL,GAAS,KAAK,MAAlB,CAAV;A5CosBhB,A4CnsBgB,AkGmQR,AcyVP,CAxqBD,Od+Uc,IlGnQQ,OAAO,GAAG,KAAK,GkGmQD,GlGnQJ,AkGmQO,GlGnQO,CkGmQH,CAAC,GlGnQO,AkGmQZ,CAAU,GAAG,ElGnQpC,CkGmQuC,GAAP,GAAe,GAAG,GAAG,GAA9B,EAAqC,GAAG,GAAG,GAAP,GAAe,GAAG,GAAG,GAAzD,CAA/B;A9IicR,AuIlcI,AOEI,EPFJ,MOEU,OPFV,CAAA,IOEsB,GAAG,EPFzB,CAAA,MOEkC,GAAG,KPFrC,GAAA,GOEkC,GAAiB,IPFpC,IAAf,EAA+B,COE3B;A9IicR,AuIjcQ,A3FlQQ,AkGmQR,QPDI,AOCE,CPDD,G3FlQQ,C2FkQb,C3FlQe,C2FmQf,E3FnQkB,EAAN,GAAa,EAAE,GAAG,EAAlB,EkGmQiB,ElGnQQ,CkGmQL,MlGnQxB,EACA,ckGkQ8C,GAAI,YAAY,GAAG,YAAf,GAA8B,YAAxF;A9IicR,AuIhcY,A3FlQQ,AkGkQZ,QAAM,EPAE,CAAC,KAAK,C3FlQK,IAAP,AkGkQO,GAAG,KAAK,GPAvB,COA2B,CPC3B,sBODJ;A9IicR,AuI/bgB,A3FnQC,a2FmQI,gBAAL,GAAwB,IAAI,eAAJ,EAAxB;AvIgchB,AuI/ba,AzG1ST,AgHySI,EhHzSJ,MgHySQ,YhHzSR,CAAA,AgHySI,EACA,OhH1SJ,CAAA,OAAA,GAAA,YAAA;A9B0uBJ,A8BxuBQ,AcqCQ,AkGoQJ,QlGpQI,CdrCH,CcqCK,AkGoQF,GlGpQK,CAAC,CkGoQD,ChHzSb,AgHySc,ElGpQI,CdrCH,CgHySP,GhHzSR,AcqCuB,CAAL,CkGoQK,ElGpQI,KAAK,EkGoQA,CAAC,ElGpQf,GAAsB,AkGoQhC,IAAkC,ClGpQG,IkGoQE,ElGpQjC,CAAN,AkGoQ0C,YAAR,GAAuB,iBAA7D,EACA;A9I+bZ,AuI/bY,AzGzSJ,AgH0SQ,MPDJ,GzGzSC,CyGySG,EOCI,CPDD,EzGzSX,GyGySgB,AzGzSF,GgH0SN,ChH1SR,YyGySI;AvIgcZ,AuI/bS,AzGzSJ,AcoCW,AkGqQa,GhH7SzB,ScwCiB,EAAE,GAAG,EAAN,GAAa,EAAE,GAAG,EAAlB,IAAyB,OAA7B,EACA;A5CosBhB,A4CnsBoB,AkGoQJ,iBlGpQW,IAAP;A5CosBpB,AuI/bQ,AzGpSJ,AcgCa,AkGoQG,EhHpShB,MyGoSQ,AzGpSR,CyGoSS,AzGpST,GgHoSgB,EPAF,GOAO,CAAC,IAAN,ChHpShB,AgHoS2B,ChHpSvB,EyGoSA,AOAY,EPCZ,AOD4B,GAAhB,EADJ,CACyB,QhHpSjC,CAAA,SAAJ,EAAI,OAAJ,EAAS;A9BouBb,AuI9bY,WAAK,YAAL,GAAoB,IAAI,MAAJ,EAApB;AvI+bZ,AuI9bS,A3FtQO,AkGoQI,QlGpQJ,EAAE,EkGoQE,ClGpQC,CAAC,GkGoQG,ClGpQC,AkGoQA,IAAN,ClGpQW,AkGoQA,ClGpQL,CkGoQO,ElGpQE,CkGoQE,IlGpQG,CkGoQE,GAAG,ElGpQnB,GAAuB,KAAK,CkGoQlC,EAAuC,EAAE,ClGpQvC,CAAN,CkGoQiD,KAAK,GAAG,WAArD,EAFJ,CAEuE;A9IicvF;AACA,AuI9bQ,A3FvQQ,AkGoQI,QPGN,I3FvQO,AkGoQD,ElGpQG,GAAG,AkGoQD,CAAC,ClGpQN,C2FuQM,E3FvQO,AkGoQb,CPGS,AOHE,ClGpQI,EkGoQf,ClGpQkB,C2FuQJ,AOHE,ClGpQhB,EkGoQA,ElGpQyB,AkGiQ7B,CAGyB,GPGjC,G3FvQQ,EACA;A5CqsBhB,AuI9bQ,A3FtQY,Q2FsQN,SAAS,A3FtQI,G2FsQD,C3FtQN,I2FsQW,MAAvB;AvI+bR,AuI7bQ,A3FvQS,AkGkQG,SPKP,AzG5ST,GgHuSgB,GPKZ,EOLiB,CPKH,AOLI,GhHvStB,CyG4SI,AOLY,CAAW,EAAE,GAAI,MAAM,GAAG,WAA1B,EAAwC,EAAE,GAAI,MAAM,GAAG,WAAvD,EAJJ,CAIyE;A9ImczF,AuI7bQ,AzG3SA,AgHsSS,SPKJ,EOXG,EhHhSD,KyG2SP,AzG3SY,GyG2SK,GzG3SV,CAAY,CyG2SG,IzG3StB,oByG2SiB,CAA8B,SAA/C;AvI8bR,AuI5bQ,AzG5SH,AcmCW,KdtCH,GyG+SC,A3FzQE,EAAE,GAAG,CAAC,IAAI,C2FyQD,GAAG,C3FzQG,CAAL,G2FyQO,A3FzQE,KAAK,E2FyQhC,I3FzQc,CAAN;A5CssBhB,AuI5bQ,AONQ,QPMF,CzG3SV,UAAU,EyG2Sa,CzG3SvB,EyG2S0B,AzG3SL,KyG2SU,SAA3B;AvI6bR,AuI3bQ,AzG3SA,AcgCQ,AkGoQI,SPOP,EzG3SA,CcgCQ,AkGoQD,ElGpQG,E2F2Qf,CzG3SA,AcgCkB,AkGoQD,ChHpSL,AgHoSM,CPOH,A3F3QH,GAAa,AkGoQb,ChHpSZ,AgHoSuB,CPOH,A3F3QO,CkGoQF,ChHpSL,CcgCU,CkGoQD,ChHpS7B,AcgCY,IAAyB,AkGoQH,GPOlC,AOPqC,IlGpQ7B,EACA,KkGmQI,EAAuC,EAAE,GAAI,KAAK,GAAG,WAArD,EADJ,CACuE;A9ImcvF,AuI1bQ,AzG5SH,AciCe,KdzCP,GyGoTC,CjG4PV,KiG5PgB,GAAG,A3F3QI,INugBvB,AMvgBgB,C2F2QQ,SAAL,CAAe,KAAf,EAAsB,IAAtB,CAAf;AvI2bR,AuIzbQ,AjG4PA,AMxgBS,AkGkQG,SPUP,CjG4PD,CAAC,CwGtQO,GPUZ,EjG4PW,AwGtQM,CPUH,AjG4PF,AwGtQM,GhH5Sb,CgH4SO,CAAW,ExGsQvB,CwGtQY,CPUZ,AjG6PA,CwGvQ4B,GAAhB,EAFJ,CAEyB;A9IoczC,AuIzbQ,AjG6PI,AMzgBC,S2F4QA,GjG6PK,MiG7PV,AjG6PgB,GiG7PC,AjG6PE,MAAM,CAAC,KiG7P1B,EjG6PmB,GAAiB,IAAI,MAAJ,EAAhC;AtC6LZ,AuIxbQ,AjG6PI,ARtjBC,Ac4CJ,AkGiQW,GhH7ShB,KQsjBQ,CiG7PC,GOZO,ExGyQF,CAAC,CiG7PX,COZiB,CAAC,CPYH,GOZH,CAAW,CxGyQnB,CwGzQqB,ExGyQF,CwGzQM,EPY7B,CjG6PI,GwGzQ+B,GAAG,WAA1B,EAAwC,EAAE,GAAI,MAAM,GAAG,WAAvD,EAHJ,CAGyE;A9IqczF,AuIxbQ,AjG6PI,ARxiBR,EAAA,MQwiBQ,ARxiBR,CyG2SS,AzG3ST,KQwiBc,CAAC,CiG7PX,CAAa,MzG3SjB,CAAI,CyG2SA,AjG6PI,GAAoB,CiG7PC,GjG6PrB,EiG7P0B,QzG3S9B,CyG2SyB,AzG3SzB,GyG2S0C,MzG3S9C,EAAI,KyG2SA,CAlC2B,CAkC6B,CzG3S5D,EAAU;A9BouBd,AsC3LS,AM1gBD,AkGgQY,WlGhQL,CkGgQK,IlGhQZ,CkGgQiB,CAAC,IAAN,CAAW,GAAX,EAAgB,GAAhB,EAJJ,CAIyB;A9IsczC,AuIxbQ,A3F7QH,AkGgQY,GlG1Sb,Q2Fu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,IAApB;AtC4LZ,A8Cj1BA,ARspBS,AkBlTD,AsFyDQ,QAAA,KtFzDD,AsFyDM,CAAC,GtFzDH,CAAC,AsFyDJ,CAAW,GtFzDZ,AsFyDC,CtFzDU,CsFyDM,GAAhB,CtFzDe,KAAL,GAAa,KAAK,UAAnB,GAAiC,IAA3C,CAAP;AxD8eR,AwD7eK,AsFyDW,KtF5DC,GsF4DD,KAAK,CAAC,IAAN,CAAW,GAAX,EAAgB,GAAhB;A9IqbhB,AuI3bY,AjGgQJ,AwGzPK,UPPG,CAAC,EjGgQF,GiGhQO,GjGgQD,CAAC,CkBtTL,C+EsDL,EACA,GjG+PJ;AtC4LR,AuI1bgB,AjG+PX,AwGzPI,KxG8OY,AwGzSb,QPqDa,MAAL,GAAc,KAAK,wBAAnB;AvI2bhB,AuI1bgB,A/EzDC,AsFgET,GtFhEJ,U+EyDiB,QjGmPA,oBiGnPL;AvI2bhB,AuI1bgB,AxGtZhB,AyBuWI,AsFsDQ,EtFtDR,MAAA,AsFsDQ,C/G7ZI,AyBuWZ,I+E+CiB,AOOJ,CAAC,IAAN,CPPI,AxGtZhB,A+G6ZuB,C/G7ZI,C+G6ZF,CPPK,C/E/C1B,CAAI,AsFsDqB,EPPb,AxGtZhB,EAAoD,C+G6ZlB,GAAG,GtFtD7B,CAAA,OsFsDI,EtFtDR,AsFsD+C,EtFtD3C,AsFsD6C,GAAI,KAAK,GAAG,CtFtD7D,EAAc,QsFsDN,EADJ,CACuE;A9Iob/E,AuI1ba,AjGiPQ,GAAjB,IiGtPQ,MAOA;AvIybZ,AuIxbgB,AjG0PhB,APhpBI,A+G0ZQ,M/G1ZJ,E+G0ZI,CxGsPZ,EPhpBa,EwGsZQ,AOIJ,C/G1ZD,A+G0ZE,CxGsPlB,GwGtPY,CAAW,C/G1ZD,CAAC,A+G0ZE,GAAI,E/G1ZzB,G+G0Z8B,GAAG,SPJrB,EOIJ,EAAuC,EAAE,GAAI,KAAK,GAAG,WAArD,EAFJ,CAEuE;A9Iqb/E,AuIxba,AjGyPZ,AP/oBG,COLJ,EAAA,GPKQ,MAAM,GAAG,MAAM,CAAC,MAApB;A/B+0BJ,AuIxbS,AxGrZL,A+GwZQ,KPtBkF,CxGlYpF,M+GwZM,C/GxZC,GAAG,C+GwZC,CAAC,I/GxZI,A+GwZV,C/GxZW,I+GwZI,M/GxZX,CAAkB,E+GwZE,CAAC,C/GxZrB,CAAhB,G+GwZY,IAAkC,KAAK,GAAG,YAAR,GAAuB,iBAA7D,EACA,CADA,KAIK,IAAI,KAAK,CAAC,IAAN,KAAe,SAAS,CAAC,KAA7B,EACL;A9IibZ,A+B70BI,A+G6ZY,M/G7ZN,Q+G6ZU,C/G7ZD,GAAG,K+G6ZN,E/G7Za,CAAC,YAAR,CAAqB,CAArB,EAAwB,CAAxB,EAA2B,KAA3B,EAAkC,MAAlC,CAAlB;A/B80BJ,A+B70BI,A+G4ZyB,M/G5ZnB,MAAM,GAAG,SAAS,CAAC,IAAzB;A/B80BJ,AuIxbQ,AxGrZJ,A+G4ZY,M/G5ZN,GAAG,AyB6VT,E+EwDW,CxGrZC,IwGqZI,ExGrZE,CAAC,EyB6VnB,IzB7VA,KwGqZW,CAAoB,KAApB,CAA6B,QAA7B,EAAuC,KAAvC,CAAP;AvIybR,AuIxbK,AxGpZD,AyB6VI,AsF8DY,GP9BhB,GxG7XM,KAAK,EyB6VA,CzB7VU,A+G2ZL,GtF9DD,CAAC,IAAL,CAAW,CsF8DI,ItF9DC,AsF8DG,KAAK,CtF9Db,AsF+DF,EADe,CtF9DC,CsF+DZ,EADW,EtF9DM,AsFgErB,EAAE,GAAI,KtFhEL,AsFgEU,GtFhEwB,AsFgErB,ItFhEvB,CAAP,MsF8D+B,EAEa,EAAE,GAAI,KAAK,GAAG,WAF3B,EAGf,EAAE,GAAI,MAAM,GAAG,WAHA,EAGc,EAAE,GAAI,MAAM,GAAG,WAH7B,EAIf,KAJe,EAIR,IAJQ,CAAL,GAKV,CALJ;A9IkbpB,A+B50BQ,AyB6VH,AsFmEY,I/GhaT,CyB0VU,EzB1VP,EAAE,IADY,A+GyZT;A9IqbhB,A+B50BQ,IAAA,IAAI,EAAE,IAFW,OyB2VP;AxDoflB,A+B50BQ,A+GgaQ,I/GhaR,KAAK,EAAE,IAHU;A/Bg1BzB,A+B50BQ,AyBuVU,AsFyEE,GtFzEhB,CzBvVI,MAAM,EAAE,E+GgaI,UAAU,IAAI,KAAK,CACf,EADe,EACX,EADW,EAEf,EAAE,GAAI,KAAK,GAAG,WAFC,EAEa,EAAE,GAAI,KAAK,GAAG,WAF3B,EAGf,EAAE,GAAI,MAAM,GAAG,WAHA,EAGc,EAAE,GAAI,MAAM,GAAG,WAH7B,EAIf,KAJe,EAIR,KAJQ,CAAL,GAKV,CALJ;A9I6apB,A+Bj1ByB,A+G0aR,G/G1ab;A/Bk1BJ,A+B50BI,A+GqaS,M/GraL,G+GiZS,C/GjZL,GAAG,E+GuaH,E/GvaR;A/B60BJ,A+B50BI,A+GuaY,M/GvaR,CAAJ,O+GuagB,SAAJ,EACA;A9IqahB,A+B50BI,A+GwagB,M/GxaZ,CAAJ,K+GwagB,KAAK,CAAC,IAAN,CAAW,GAAX,EAAgB,GAAhB,EADJ,CACyB;A9IqazC,A+B50BI,MAAI,CAAJ;A/B60BJ,A8IraoB,YAAA,KAAK,CAAC,IAAN,CAAW,GAAX,EAAgB,GAAhB,EAFJ,CAEyB;A9IsazC,AuCl2BA,ARsBI,A+Guaa,IvG7bjB,GRsBS,CAAC,GAAG,A+GmaG,C/GnaZ,EAAY,CAAC,CQtBjB,CuG+bgB,C/GzaI,GAAhB,EAAqB,CAAC,IAAI,CAA1B,EACA;A/B40BJ,AuCn2BA,ARwBQ,A+GwaY,Q/GxaR,I+GwaQ,E/GxaF,CAAC,CAAC,C+GwaK,CAAC,C/GxaH,CAAL,CAAN,C+GwaQ,CAAW,G/GxaD,A+GwaV,C/GxaZ,C+Gwa4B,C/Gva5B,E+GuaY,EADJ,CACyB;A9IoazC,AuIzbI,AhG3aJ,AR0BY,AyBwVR,E+EyDA,A/EzDA,IzBxVQ,CAAC,GAAI,CAAC,CQ1BlB,CiBkXI,CzBxViB,AyBwVjB,C+EyDA,AxGjZY,CwGiZZ,ExGjZsB,KAAd,AyBwVR,CAAA,C+EyDA,CAAA,M/EzDA,C+EyDA,E/EzDA,C+EyDA,S/EzDS,C+EyD6B,QAAtC,A/EzDA,E+EyD4D,A/EzD1B,I+EyDlC,EAAiF,A/EzDjF,EAAuD,G+EyDvD,EAA4F,UAA5F,EAAgH;AvI0bpH,AuIxbQ,AhG7aR,AR2BY,AyByVJ,AsF6EY,M/GtaR,CAAC,CwGkZD,A/EzDA,EzBzVI,CQ3BhB,AR2BiB,CwGkZT,AOoBY,C/GtaA,AyByVZ,C+E0DA,AxGnZa,GAAG,A+GsaC,C/GtaN,A+GsaO,G/GtaG,C+GsaT,CvGjcpB,AuGic+B,GvGjc/B,AR2BiB,A+GsaG,CvGvVnB,AR/EW,C+GsawB,GAAhB,EAFJ,CAEyB;A9IqazC,AuIvbY,AOmBK,MPnBL,QAAQ,GAAG,IAAI,CAAC,QAAL,CAAc,QAAd,EAAwB,KAAxB,EAA+B,UAA/B,CAAX;AvIwbZ,AuIvbS,AxGnZG,AyByVJ,QAAI,EzBzVI,KAAK,CAAC,CyByVD,EzBzVL,GyByVU,EzBzVI,IAAlB,EACA,CyBwVA,IAA2B,SAAS,KAAK,KAAK,SAAlD,EACA;AxDifR,A+Bz0BgB,AyByVJ,AsF2EI,Q/GpaA,E+GoaA,CtF3EC,EzBzVI,CAAC,GAAN,GAAY,AyByVhB,AsF2Ec,C/GpaV,EyByVa,CsF2EC,CAAd,OtF3EJ;AxDifZ,AuIvbQ,AxGlZK,AyByVD,AsF2EC,MtF3ED,E+EyDA,CAAC,E/EzDI,GAAG,IAAR,C+EyDJ,EACA;AvIubR,AuItbY,A/E1DH,AsF2EG,QAAA,GPjBK,EOiBA,CAAC,IAAN,CAAW,EAAE,GAAI,MAAM,GAAG,OPjB1B,GADJ,COkBI,EAAwC,EAAE,GAAI,MAAM,GAAG,WAAvD,EA1CJ,CA0CyE;A9IsajF,A+Bz0BY,UAAI,KAAK,CAAC,IAAN,KAAe,IAAnB,EACA;A/By0BZ,A+Bx0BgB,AyBwVR,AsF0EI,Q/GlaI,AyBwVJ,AsF0EA,K/GlaS,A+GkaJ,C/GlaK,AyBwVJ,AsF0EA,I/GlaF,A+GkaJ,CtF1EW,AsF0EA,E/GlaM,A+GkaJ,C/GlaT,E+Gkaa,ItF1EjB,EsF0EuB,EtF1EC,CsF0EE,KtF1EI,KAAK,CsF0EnC,EAAwC,EtF1EA,AsF0EE,GAAI,GtF1ElD,EACA,CsFyEwD,GAAG,WAAvD,EA3CJ,CA2CyE;A9IuajF,A+Bx0Ba,AyByVD,OzB5VA,IyB4VK,EzBxVA,IAAI,AyBwVT,CzBxVU,EyBwVI,CzBxVD,KAAK,AyBwVlB,CzBxVmB,IAAd,EACL;A/Bu0BZ,A+Bt0BgB,AyBuVJ,AsFwEA,MtFxEA,EzBvVI,A+G+ZJ,GtFxEK,EzBvVI,CAAC,AyBuVF,IzBvVJ,AyBuVJ,AsFwEU,G/G/ZO,CAAb,A+G+ZU,CAAd;A9IwaZ,AuItbY,AhG3aD,AR2BE,AyBuVJ,AsFwEA,EvG1bE,QgG2aK,CAAC,GhG3aN,CAAA,CgG2aW,GhG3aX,GgG2aC,AhG3aR,EgG4aQ,QhG5aI,OAAZ,EAAyC;AvCk2B7C,AuIrbgB,AhG7aZ,AuG2bC,QvG3bD,KgG6aiB,AhG7ajB,GAAA,GgG6aY,ChG7aZ,CAAyC,CgG6af,KAAK,wBAAnB;AvIsbhB,AuIrbgB,AxGjZJ,AyBuVJ,QAAI,EzBvVI,GwGiZK,A/E1Db,EzBvVa,AyBwVb,CzBxVc,KAAN,KAAgB,IAApB,EACA,SwGgZI;AvIsbhB,AuIrbgB,AxGhZA,AyBuVJ,AsFuER,EAAA,EAAE,GAAG,C/G9ZO,GyBuVC,E+EyDI,AxGhZA,A+G8ZN,C/G9ZO,A+G8ZN,CAAC,IPdD,AxGhZA,E+G8ZO,CPdO,AxGhZA,CAAC,AyBuVnB,CsFuEc,CAAV,CPdA,AxGhZkB,CAAlB,E+G8Ze,CAAhB,CAAX;A9IwaJ,AuIrba,AhG7aL,AR6BK,AyBuVJ,AsFuEL,EAAA,EvG3bI,AuG2bF,GPnBM,AxG9YA,A+GiaH,IvG3bM,EgG+aH,AxGjZK,A+G6ZF,CvG3bG,AuG2bD,CAAC,E/G7ZG,GQ9BG,CAAC,AuG2bD,C/G7ZE,CAAC,C+G6ZA,CAAV,EvG3bC,CAAc,AR8BX,C+G6ZW,CAAhB,C/G7ZmB,CAAlB,C+G6ZoB,C/G5ZzB,A+G4ZG,CAAX;A9IwaJ,AuInbgB,AxF9chB,AR+BY,AR+BI,A+G6ZZ,EAAA,EAAE,EvG5bM,CuG4bH,C/G7ZO,KwGgZK,AxGhZA,A+G6ZN,C/G7ZO,A+G6ZN,CvG5bK,AuG4bJ,EvG5bM,ER+BP,EQhCgB,AuG6bT,C/G7ZO,CAAC,C+G6ZL,CAAV,C/G7ZkB,CAAlB,E+G6Ze,CAAhB,CAAX,UPbY;AvIobhB,AuInba,AhG/aD,AR+BC,AyBqVL,AsFwEJ,EAAA,EAAE,EvG5bM,CuG4bH,ItFxEM,EsFwEA,CAAE,CtFxET,AsFwEU,GvG5bM,EAAE,CuG4bF,GAAG,CAAV,IAAe,CAAhB,GAAqB,CAAtB,CAAX;A9IuaJ,AuInbS,AhGlbuB,AiBuX3B,AsFyED,EAAA,CtF/FA,E+EyDgH,AhG1ZlG,EAGP,AuG6bF,GAAG,EAAE,EvGhcI,AuGgcF,CvGhcR,CAHqC,CuGmc1B,EAAP,CAAR;A9IsaJ,A+Bn0BY,A+G8ZR,EAAA,KAAK,G/G9ZO,A+G8ZJ,EAAE,G/G9ZO,A+G8ZJ,C/G9ZK,C+G8ZlB,K/G9ZY,KAAiB,IAArB,EACA;A/Bm0BZ,AuCj2BQ,AR+BQ,A+G8ZZ,EAAA,EvG7bI,EuG6bA,E/G9ZQ,C+G8ZL,CvG7bG,CAAC,ER+BM,A+G8ZN,C/G9ZO,A+G8ZN,IAAL,CAAW,C/G9ZN,GAAe,CAAf,A+G8ZW,CvG7bnB,CAAsB,CuG6bA,GvG7btB,EAA4B,AuG6bf,GAAmB,KvG7bhC,AuG6bqC,EvG5bjC,CuG4boC,KAArC,CAAP;A9IqaJ,AuInbQ,AhG7aQ,AR8BH,A+G8ZT,EAAA,IvG5bY,CR2BJ,A+GiaH,EvG5bU,EgG6aJ,AhG7aI,AuG4bN,E/G7ZI,E+G6Zb,CPfgB,CxG9YC,IQ/BD,CR+BM,CAAC,IQ/BR,EAAO,AR+BL,CwG8YN,CAAoB,CxG9YC,CAAnB,EACL,QwG6YG,CAAoC,QAApC,EAA8C,KAA9C,CAAP;AvIobR,AuInbK,AhG5ae,AR+BJ,A+G4ZZ,EAAA,CP3CA,IO2CK,C/G5ZO,G+G4ZH,CvG3bW,CR+BH,CAAC,C+G4ZlB,EvG3byB,GR+Bb,GAAe,CQ/BX,AR+BJ,EQ9BI;AvC+1BpB,AuC91BwB,AR8BX,A+G4ZT,EAAA,KAAK,IAAI,IvG1bgB,CuG0bzB,MvG1boB,CAAa,MAAb,CAAoB,KAAK,MAAzB,EAAiC,IAAjC;AvC+1BxB,AuC91BqB,AR8BZ,A+G4ZL,EAAA,KAAK,IAAI,KAAT;A9IqaJ,A+Bh0BK,A+G6ZD,EAAA,KAAK,CAAC,IAAN,CAAW,EAAE,GAAI,KAAK,GAAG,WAAzB,EAAuC,EAAE,GAAI,KAAK,GAAG,WAArD;A9IoaJ,AuC/1BoB,AuG4bhB,EAAA,KAAK,CAAC,IAAN,CvG5bqB,AuG4bV,EAAE,GAAI,EvG5bD,GAAe,AuG4bT,GAAG,GvG5bT,QuG4bhB,EAAuC,EAAE,GAAI,KAAK,GAAG,WAArD;A9IoaJ,A+Bh0BI,MAAI,KAAK,CAAC,GAAN,KAAc,IAAlB,EACA;A/Bg0BJ,A+Cr4BA,ARqCoB,ARiCZ,A+G4ZJ,I/FleJ,AhBsEQ,E+G4ZA,CAAC,E/FleT,AhBsEa,GQjCW,ARiCR,KAAK,CQjCD,ARiCE,A+G4ZlB,EvG5bgB,AuG6bhB,G/G7ZY,GAAc,KAAK,CAAC,IAA5B;A/Bg0BR,A+Ct4BA,ARuCwB,ARgChB,AyBgVJ,AsF6EI,EtF7EJ,EzBhVI,I+G6ZI,EvG7bY,ARgCV,GAAG,AyBgVb,AsF6Ea,CtF7Eb,AsF6Ec,EvG7bY,CAAC,AuG6bnB,C/G7ZU,CAAC,CQhCC,CAAW,CuG6bT,CtF7EtB,CAAA,CzBhVa,CQhCuB,ERgCR,E+G6ZE,CtF7E9B,AsF6E+B,CvG7bX,CRgCa,CQhCW,ARgCV,AyBgVlC,EsF6EI,C/G7ZS,CQhCO,AuG8bhB,EvG9b8C,ARgCV,CAApC,GyBgVI,KAAR,EAAuB,IjBhX0C,CAAC,CiBgXlE,EjBhXoB,AiBgXmB,UAAvC,EAA0D;AxDgf9D,A+Cv4BA,ARwCqB,ARgCb,AyBiVA,AsF6EI,I/G9ZJ,E+G8ZI,E/G9ZA,CyBiVC,EzBjVE,CgBxEf,I+FsesB,E/G9ZA,CAAC,AyBiVf,CsF6EkB,EtF7EA,GsF6EK,CACf,EAAE,G/G/ZH,A+G+ZO,C/G/Zc,AyBiVA,IAAI,AsF8Eb,C/G/Zc,CAAC,E+G+ZX,CtF9Ec,CzBjV9B,EAAiC,KAAK,CAAC,CyBiV9C,AsF8EkC,E/G/Z3B,C+G+Z8B,C/G/Zc,KAA5C,EAAmD,G+G+ZvC,CAAL,E/G/ZP,CAAP,A+G+ZoD,GAD7B,EAEf,EAAE,GAAI,KAAK,IAAI,WAAW,GAAG,WAAlB,CAAL,GAAsC,GAF7B,EAGf,EAAE,GAAI,KAAK,GAAG,WAHC,EAIf,EAAE,GAAI,KAAK,GAAG,WAJC,EAKf,EAAE,GAAI,KAAK,GAAG,WALC,EAMf,EAAE,GAAI,KAAK,GAAG,WANC,EAOf,KAPe,EAQf,KARe,CAAL,GASV,CATJ;A9IkaZ,AuIpbI,AhG3aa,ARgCZ,AyBiVG,AsFsFC,EP5BL,GOgBI,EvGvcI,EiB6XC,EsFuFA,GtFvFL,C+E0DJ,AO6Ba,CP7Bb,C/E1DiB,GsFuFC,CAAC,CtFvFf,EsFuFS,CP7Bb,CAAA,GO6B2B,MP7B3B,EO6BmC,CP7BnC,AO6BoC,MAA3B,EACL,EP9BM,SAAV,EAA8B;AvIqblC,AuInbQ,AhG5aQ,AiBiXR,AsFwFI,MvGzcI,AuGycJ,EP7BA,CAAC,AhG5aM,AiBiXN,EjBjXM,IiBiXX,CsFwFc,EP7BV,A/E3DU,EsFwFI,EP7BA,CAAC,AhG5aR,CiBiXX,EsFwFwB,CAAC,EAAD,EAAK,CP7BD,CAAC,AO6BL,EAAS,KAAT,CP7BxB,CO6BwC,CP5BxC,IO4BwB,EAAuB,WAAvB,EAAoC,WAApC,EAAiD,KAAjD,EAAwD,KAAxD,CAApB;A9IuZZ,AuIlbY,AhG5aQ,AR+BhB,A+GyaK,S/GzaE,GwG6YO,GhG5aS,CgG4aL,IhG5aU,CgG4ad,CAAU,KhG5aR,oCgG4aF,CAAN;AvImbZ,AuIlbS,AhG5aQ,AR+BT,AyBgVA,AsFyFH,I/GzaG,KyBgVK,CzBhVC,EAAA,MADH,EyBiVH;AxDgfR,A+Cn4BI,ARoBQ,ARgDJ,IAAA,CQjDA,IRiDK,EgBpET,AhBoES,KgBpET,AhBkEO,CgBlEK,CAAZ,EAAmB,CAAnB,EAAwB;A/Co4B5B,AuIlbQ,AxFldQ,AhBqER,AyB+UA,AsF0FJ,IP5BI,AxG7YA,E+GyaE,E/F9eM,AhBqEJ,CgBrEI,ASoZH,CzB/UD,GwG6YK,AO4BA,CP5BC,AxFldF,CSoZR,CsF0FY,G/F9eJ,CAAA,EwFkdR,AxFldQ,CwFkdW,IAAnB,KO4B4B,CAAC,OAAjC;A9IuZJ,AuIjbQ,AxFpdQ,AhBkEL,AyBoVH,AsFyFJ,G/G7aA,GgBlEY,A+F+eN,C/F/eM,GAAA,A+F+eF,CP3BC,AxFpdC,ASsZD,EsFyFE,EtFzFT,K+E8DA,QO2BwB,CAAC,OAAhB,GAA0B,eAAe,CAAC,OAAvD,CA9UsF;A9IquB1F,AuIjbK,AxFrdgB,AhBuEpB,AyBgVI,G+EoDD,A/E7DA;AxDyfJ,AgC35BA,A8GsgBI,OAAK,IAAI,CAAC,GAAG,UAAb,EAAyB,CAAC,GAAG,UAAU,GAAG,UAAb,GAA0B,CAAvD,EAA0D,EAAE,CAA5D,EACA;A9IqZJ,A+Cx4BuB,A+Foff,IAAA,EAAE,E/Fpfa,CAAA,A+FofV,K/FpfU,A+FofL,CAAE,CAAC,G/FpfE,A+FofC,C/FpfD,A+FofL,CAAV,C/Fpfe;A/Cy4BvB,A+Cz4BuB,A+Fqff,IAAA,E/Frfe,A+Fqfb,C/Frfa,E+FqfV,C/FrfU,CAAA,G+FqfL,CAAE,CAAC,GAAG,CAAL,GAAU,CAAX,CAAV;A9IqZR,A+C14B4B,AR4CpB,AuG2cA,IAAA,EAAE,GvG3cG,AuG2cA,IvG3cL,CuG2cU,CAAC,CvG3cC,AuG2cA,CAAC,GAAG,CAAL,IAAU,CAAX,CAAV,CvG3cY;AvC+1BpB,AuC71BY,AuG0cJ,IAAA,EvG1cI,AuG0cF,GAAG,EvG1cG,CAAC,EuG0cC,CAAE,CAAC,CAAC,EvG1cV,CAAa,AuG0cA,CAAL,GvG1cR,CuG0ckB,CAAX,GAAgB,CAAjB,CAAV;A9IoZR,AuC71BS,AuG2cD,IAAA,CvG9cA,CuG8cE,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAL,IAAU,CAAX,CAAV;A9ImZR,A8IlZQ,IAAA,EAAE,GAAG,KAAK,CAAE,CAAC,CAAC,GAAG,CAAL,IAAU,CAAX,GAAgB,CAAjB,CAAV;A9ImZR;AACA;AACA,A8IlZQ,QAAI,IAAI,CAAC,GAAL,CAAU,EAAE,IAAI,EAAE,GAAG,EAAT,CAAH,GAAoB,EAAE,IAAI,EAAE,GAAG,EAAT,CAAtB,GAAuC,EAAE,IAAI,EAAE,GAAG,EAAT,CAAlD,IAAmE,IAAvE,EACA;A9IkZR,A+C34BQ,AS2ZJ,AsF+FQ,EtF/FR,OT3ZS,CAAL,GAAS,AS2Zb,CT3ZI,AS2ZJ,SAAA,CAAA,WAAA,GAAA,UAAY,SAAZ,EAA+B,UAA/B,EAAmD,UAAnD,EAAsE;AxDif1E,AgC75BA,AwB8aQ,AsF8FC,I9G5gBI,KwB8aA,GxB9aQ,GAAG,IwB8ahB,GAAkB,UAAU,IAAI,KAAK,UAArC,0CxB9aR;AhC85BA,AwD/eQ,SAAK,KAAL,GAAa,SAAS,GAAG,KAAK,UAA9B;AxDgfR,AuC91BQ,AiB+WA,AsF8FA,IAAA,KvG7cK,AiB+WA,EsF8FE,CAAC,EvG7cR,CiB+WA,CsF8FA,CvG7ca,AuG6cA,CtF9FC,AsF8Fd,EAAgB,CAAC,GAAG,CAApB,EAAuB,CtF9FC,AsF8FA,CvG7cX,EiB+Wc,AsF8FA,CAA3B,ItF9FgC,UAAhC;AxDgfR,AuC71BY,AuG4cP,MvG5cO,KAAI,CAAC,OAAL,CAAa,KAAb;AvC81BZ,AuC71BS,AiB6WD,AsF+FP,KvG/cO,IiBgXK,WAAL;AxDifR,AuIlbI,AxFzdI,EwFydJ,OxFzdS,CAAL,GAAS,CAAT,CwFydJ,CAAA,SAAA,CAAA,YAAA,GAAA,UAAa,CAAb,EAAoB,CAApB,EAA2B,MAA3B,EAAuC,MAAvC,EAAmD,QAAnD,EAAiE,KAAjE,EAA4E,KAA5E,EAAuF,MAAvF,EAAmG,MAAnG,EAA6G;AvImbjH,AuInbiB,AxFxdZ,AS0ZG,Q+E8DS,CAAA,A/E9DJ,K+E8DI,C/E9DT,I+E8DS,CAAA,EAAA;AvIobjB,AuIpbiB,A/E5DT,M+E4DS,CAAA,GAAA,CAAA,A/E5DF,IAAP;AxDifR,AuIrbsB,A/E3DjB,GATD;AxD0fJ;AACA,AuIvbwB,QAAA,CAAA,KAAA,KAAA,CAAA,EAAA;AvIwbxB,AuIxbwB,MAAA,CAAA,GAAA,CAAA;AvIybxB,AuIzb6B;AvI0b7B;AACA,AuI3b+B,AxFjd3B,EAAA,KAAA,CwFid2B,AxFjd3B,MwFid2B,GxFjd3B,CAAA,CwFid2B,IxFjd3B,CwFid2B,CAAA,CxFjd3B,CwFid2B,WxFjd3B;A/C64BJ,AuI5b+B,AxF/cvB,AR6CA,MgGkauB,GhGlalB,EQ7CE,CwF+cgB,GAAA,AxF/cZ,CwF+cY,AhGlavB,GAAe,CQ7CR,CAAU,ER6CjB,GQ7CsB,CAAf,EAAkB,KAAK,CAAvB,CAAP;A/C44BR,AuI7byC,AxF9cpC,AS0ZS,EAAA,CT7ZV,US6ZU,CAAA,SAAA,CAAA,WAAA,GAAV,YAAA;AxDkfJ,AwDhfQ,AsF8FR,StF9Fa,AsF8FJ,YtF9FD,GAAoB,AsF8F5B,CAAyB,YAAzB,EAAqD,ItF9FlB,KAAK,OsF8FxC,EtF9F4B,AsF8F2D,KtF9FjC,mBAAO,KAAK,UAAZ,CAA9C;AxDifR,AuI/b2C,A/EjDtC,AsF+FD,GtFlGU,GsFkGN,CAAC,CP9CkC,EO8C/B,CAAR,GP9CuC,KAAA,KAAA,CAAA,EAAA;AvIgc3C,AuIhc2C,AOgDvC,MPhDuC,AOgDjC,KAAK,CPhD4B,EOgDzB,CPhDyB,CAAA,UOgDb,CAAC,KAA3B;A9IiZJ,AuIjcqD,AOiDjD,MAAM,MAAM,GAAG,YAAY,CAAC,MAAb,IAAuB,KAAK,CAAC,MAA5C;A9IiZJ,A8IhZI,MAAM,WAAW,GAAG,KAAK,CAAC,IAAN,KAAe,aAAO,IAAtB,IAA8B,KAAK,CAAC,WAAxD;A9IiZJ,AuIncuD,QAAA,QAAA,KAAA,KAAA,CAAA,EAAA;AvIocvD,AuIpcuD,AOoDnD,MPpDmD,AOoD/C,MAAM,CAAC,CPpDwC,GAAA,CAAA,COoD/C,KAAkB,CAAtB;A9IiZJ,AuIrcmE,AOoDtC;A9IkZ7B,A+C54BI,AR8CI,AuG4c4B,E/F1fhC,KAAA,CAAA,CR8CS,MAAL,EQ9CJ,CAAA,AR8CkB,OAAO,CQ9CzB,AR8C0B,GQ9C1B,SR8CkB,CQ9CT,CAAT,CR8CyC,CQ9CnB,KR8CyB,CAAC,MAA9B,GAAuC,IAAI,MAAJ,EAArD,CAnEqC;AvCk6B7C,AuIvcqE,AxFpc7D,QwFoc6D,CxFpcxD,GAAL,CwFoc6D,AxFpcpD,CAAC,CAAC,CAAX,EwFoc6D,AxFpc/C,CAAC,CAAC,CAAhB,EwFoc6D,CAAA,EAAA;AvIwcrE,AuIxcqE,AxFlc7D,AR6CA,AiB4WJ,AsF+FA,EtF/FA,I+EyCiE,AOsD3D,EvG3cE,GgGqZyD,AxFlctD,A+FwfA,EtF/FX,C+EyCiE,A/EzCjE,AsF+Fc,CPtDmD,AxFlc7D,AR6CW,CAAC,OiB4WhB,CAAA,CjB5WI,EACA,GuG0c0B,CAAC,MtF/F/B,AsF+FA,GtF/FA,UAAc,UAAd,EAAgC;AxDkfpC,AuIzc8E,AxFjczE,AR8CO,AiB4WJ,AsF8FJ,G/F7fA,G+F6fM,EtF9FI,GjB5WG,EuG0cA,GvG1cL,AuG0cQ,KtF9FO,GAAG,KAAK,GsF8FC,CAAC,MtF9F7B,CsF8FJ;A9ImZJ,AuC51BS,AuG0cL,MAAM,MAAM,GAAG,MAAM,CAAC,MAAP,GAAgB,CAA/B;A9ImZJ,AuI3cgF,AhGjZ3E,AiB4WG,AsF+FJ,GvGrhBO,GuGqhBD,EP1DsE,A/ErCpE,K+EqCoE,GO0D5D,EP1D4D,CO0DzD,EtF/FE,E+EqCuD,CAAA,AO0DpD,CAAC,CP1DmD,A/ErClD,KsF+FP,GAAe,CAAlC,CtF/FI,EACA;AxDgfR,AuI5cgF,A/EnCpE,AsF8FR,MP3D4E,AO2DxE,KP3DwE,E/EnC7D,C+EmC6D,CAAA,E/EnCpE,CsF8FQ,GAAG,UAAnB;A9IkZJ,AuI7cyF,A/ElChF,AsF+FL,EAAA,KAAK,CAAC,IAAN,CAAW,MAAM,CAAC,CAAD,CAAjB,EAAsB,MAAM,CAAC,CAAD,CAA5B;A9IiZJ;AACA,AuI/c2F,A/EhCnF,AsF+FJ,OAAK,CP/DkF,AO+DjF,CtF/FG,EsF+FA,CAAT,EP/DuF,AO+D3E,CAAC,GAAG,CP/DuE,A/EhCnF,GAAkB,E+EgCiE,AO+DvF,CP/DuF,CO+D/D,CP/D+D,AO+D9D,EAAzB,EACA,CtFhGI;AxDgfR,AuIhd2F,AOiEnF,IAAA,EPjEmF,GOiE9E,CAAC,EPjE6E,EOiEnF,CPjEmF,AOiExE,CPjEwE,KOiElE,CAAC,CAAC,GAAG,CAAL,CAAjB,EAA0B,MAAM,CAAE,CAAC,GAAG,CAAL,GAAU,CAAX,CAAhC;A9IgZR,AuIjdqG,A/E9B7F,AsFgGA,IAAA,ItFhGI,GsFgGG,CAAC,CtFhGC,GsFgGT,CAAa,CtFhGb,EACA,SsF+FA,EAA2B,YAAY,GAAG,CAA1C;A9IgZR,A+C34BI,AS6ZQ,AsFgGJ,E/F7fJ,E+F6fI,G/F7fJ,CAAA,GS6Za,KAAL,AsFgGQ,C/F7fhB,CAAA,CS6ZqB,KT7ZrB,AS6Z0B,GT7Z1B,ES6ZqB,GAAa,KT7ZT,CAAzB,EAA6B,KS6ZR,GAA6B,UAA1C;AxD+eZ,AuInduG,AxFvb/F,AS4ZI,AsFgGP,I/F5fG,CAAC,CAAC,EwFub6F,CxFvb/F,CAAM,CS4ZG,G+E2BsF,CxFvbpF,CAAX,CS4ZI,CT5ZU,CwFubiF,C/E3B7E,GT5ZC,CwFub4E,AxFvb/F,CwFub+F,A/E3BxE,E+E2BwE,I/E3B7E,GAAc,aAAd,GAA8B,UAA5C;AxD+eZ,AuIpduG,AxFrb/F,AR4CG,AiB+WC,EjB/WD,IgGyY4F,KxFrbxF,AS2ZE,C+E0BsF,AxFrb/F,ER4CG,CgGyY4F,AhGzY5F,AiB+WC,C+E0B2F,A/E1BjF,MjB/WX,EiB+WC,CjB/WR,CiB+W4B,IAApB,OjB/WR;AvC81BJ,AuIrdiH,AxFpb5G,AR6CG,AiB8WC,AsFgGL,G/FhgBA,G+FggBI,EvG9cI,KAAK,IuG8cb,EACA,CvG/cI,EACA;AvC41BR,AuC31BY,AuG8cJ,IAAA,MvG9cU,CuG8cH,CAAC,IAAR,CAAa,EvG9cM,GAAG,KAAK,EuG8c3B,EAA2B,GvG9cvB,OuG8cJ;A9I8YR,AuIrdQ,AhGrYI,AiB4WJ,AsFiGH,SPxEQ,A/EzBA,EjB5WI,MgGqYT,AhGrYI,CgGqYU,CAAd,ChGrYkB,AiB4WlB,E+EyBkB,CAAlB,ChGrYI;AvC21BZ,AuIrdQ,AhGrYI,AuG6cX,MvG7cW,GgGqYC,MhGrYQ,CAAC,CgGqYd,CAAc,CAAd,GAAkB,CAAlB,AhGrYI;AvC21BZ,AuIrdQ,AhGrYC,AiB4WD,S+EyBK,E/EzBE,G+EyBP,CAAW,A/EzBX,C+EyBA,GAAe,CAAC,MAAD,GAAU,CAAV,GAAc,MAA7B;AvIsdR,AuIrdQ,AhGrYH,AiB4WA,GjBrXM,AiBgWP,M+E8CS,KAAL,CAAW,CAAX,GAAe,CAAC,MAAD,GAAU,CAAV,GAAc,MAA7B;AvIsdR,AuIrdQ,SAAK,QAAL,GAAgB,QAAhB;AvIsdR,AuIrdQ,AhGtYR,ANrEA,SsG2ca,AhGtYb,ANrEgB,IsG2cR,CAAU,CAAV,GAAc,GhGtYtB,EgGsYQ,EtG3cR,CAAiC,OAAjC,EAAgD;AjCi6BhD,AuIrdQ,AhGvYP,ANnEG,CMvCJ,EAAA,GNuCU,GsG0cG,IAAL,CAAU,CAAV,GAAc,AtG1cA,GAAG,EsG0cjB,MtG1cyB,CAAC,IAAT,CAAc,OAAd,CAArB;AjCg6BJ,AuIrdQ,AxFrbJ,EAAA,KAAA,CAAA,CwFqbS,KAAL,CAAW,CAAX,CxFrbJ,CAAA,CwFqbmB,KxFrbnB,CwFqbI,ExFrbJ,UAAO,CAAP,EAAoB;A/C24BxB,AuIrdQ,AxFpbA,AdtBJ,MAAI,GsG0cK,ExFpbG,CAAC,CAAC,CwFobV,AxFpbQ,CwFobG,CAAX,EtG1cJ,CsG0cmB,AxFpbC,CdrBpB,IcqByB,CwFobrB,AxFpbO,IAAqB,CAAC,CAAC,CAAF,KAAQ,KAAK,CAAzC;A/C04BR,AuIpdQ,AxFrbH,AdrBG,GckBJ,QwFwbW,AtG1cA,IsG0cP;AvIqdR,AuIpdK,AtG1cO,GsG6bR,GtG7bQ,SAAS,EAAE,YAAY,CAAC,CAAD,CAAZ,GAAkB,YAAY,CAAC,CAAD,CAAZ,CAAgB,WAAhB,EAAlB,GAAkD,SAD1D;AjCg6Bf,AiC95BY,MAAA,OAAO,EAAE,YAAY,CAAC,CAAD,CAAZ,GAAkB,YAAY,CAAC,CAAD,CAAZ,CAAgB,WAAhB,EAAlB,GAAkD,SAFxD;AjCi6Bf,AiC95BY,AuB+aR,EAAA,IvB/aQ,OAAO,AuB+af,CAAA,CvB/aiB,QuB+ajB,CAAA,GvB/a6B,CAAC,CAAD,CAAZ,GAAkB,EuB+anC,GAAA,OvB/a+C,CAAC,CAAD,CAAZ,AuB+avB,CvB/auC,OuB+anD,EAA8B,EvB/aK,EAAlB,GAAkD,SAHxD;AjCk6Bf,AiC95BY,AuBgbJ,MvBhbI,EuBgbA,KAAK,CvBhbG,EAAE,KuBgbV,KAAkB,EvBhbI,CAAC,CAAD,CAAZ,GAAkB,AuBgbhC,EACA,UvBjb4C,CAAC,CAAD,CAAZ,CAAgB,WAAhB,EAAlB,GAAkD,SAJzD;AjCm6Bf,AiC95BY,AuBibA,AsF+FZ,M7GhhBY,G6GghBI,C7GhhBA,EAAE,CuBibC,IAAP,CsF+FZ,CAA0B,K7GhhBI,CAAC,CAAD,K6GghB9B,EAAsD,gBAAtD,EAAwF;A9I+YxF,AiCp6Be,AuBubN,AsFgGL,K7GvhBI,C6GuhBA,YAAY,CAAC,SAAb,CAAuB,MAA3B,EACA;A9I6YJ,AiC95BK,A6GkhBG,IAAA,eAAe,CAAC,YAAD,EAAe,gBAAf,CAAf;A9I6YR,AwD7eQ,AsFiGH,GAHD,KtF9FQ,CsFmGR,ItFnGa,QAAT,EACA;AxD6eR,AiC95BI,AuBkbQ,AsFkGJ,IAAA,K7GphBG,GuBkbO,IAAI,EvBlblB,GuBkbc,CAAU,AsFkGF,CAAC,YAAD,EAAe,gBtFlGvB,AsFkGQ,CtFlGd,AsFkGJ;A9I2YR,AiC95BC,AuBkbQ,AsFkGJ;A9I2YL,AuIrdI,AxFrbA,A+FggBH,EP3EG,AxFrbA,KAAA,CAAA,OwFqbA,CAAA,CxFrbA,CAAA,GAAA,GAAA,CwFqbA,CAAA,OAAA,CxFrbI,CAAJ,CwFqbA,CxFrbW,CAAX,EAAgB,MwFqbR,QAAR,EAA0C;AvIsd9C,AuIpdQ,AxFvbA,AbxFR,AsBufQ,ItBvfJ,AsBufI,I+EwBI,AxFvbJ,CAAA,GS+ZQ,C+EwBC,A/ExBA,CT/ZT,AbxFR,GsBufQ,CAAc,C+EwBd,AxFvbA,CAAA,CwFwbA,CxFxbA,AS+ZA;AxD6eR,AuIndY,AxFzbJ,ASiaA,MTjaA,CAAA,ESiaK,CTjaL,CwFybS,AxFzbT,MwFybI,A/ExBJ,C+EwBgB,E/ExBA,QAAhB,C+EwBI,CAAwB,IAAxB;AvIodZ,AuIndS,AxF1bI,ASmaL,WAAO,IAAP;AxD2eR,AwD1eK,GAjBD;AxD4fJ,AuIpdQ,AxF3bO,QAAA,CwF2bF,AxF3bE,KAAA,KAAA,CAAA,EAAA,KwF2bP;AvIqdR,AuIpdQ,AxF5bO,MAAA,CAAA,EwF4bF,CxF5bE,CAAA,OwF4bP,GAAiB,IAAjB;AvIqdR,AuIndQ,AxF9bY,SwF8bP,MAAL,GAAc,IAAd;AvIodR,AuIndQ,SAAK,OAAL,GAAe,IAAf;AvIodR,AuIndQ,AxF9bA,SwF8bK,AxF9bA,CAAL,GAAS,CwF8bT,AxF9bA,GwF8ba,IAAb;AvIodR,AuIldQ,AxF/bA,ASsaJ,EAAA,O+EyBS,AxF/bA,CAAL,GAAS,ASsab,CTtaI,ASsaJ,E+EyBI,GAAe,IAAf,A/EzBJ,CAAA,MAAA,GAAA,YAAA;AxD4eJ,AuIldQ,AxF9bA,ASsaA,QAAI,C+EwBC,A/ExBA,ETtaE,GSsaG,CTtaV,IwF8bA,A/ExBA,EACA,C+EuBkB,IAAlB;AvImdR,AuIldQ,AxF9bH,ASuaO,GT7aR,MwFocS,C/EvBG,KAAK,C+EuBb,GAAe,C/EvBP,G+EuBR,A/EvBqB,CAAb,IAAkB,KAAK,MAAL,GAAc,CAApC,EACA;AxDyeZ,AuIjdQ,A/EvBQ,S+EuBH,I/EvBQ,KAAL,E+EuBR,C/EvBqB,E+EuBF,E/EvBX,G+EuBR;AvIkdR,AuIjdQ,AxFhcR,AblFA,AsB2fgB,S+EuBH,AxFhcb,AblFgB,IsB2fK,CTzarB,GSyagB,CAAU,QAAV,E+EuBR,A/EvB4B,CtB3fpC,CAAqC,CqGkhBF,C/EvBnB,CtB3fhB,EAAkD,CqGkhB1C,ErGlhBR,EAAiF;AlCo+BjF,AuIhdQ,AxFlcP,AblFiD,AsB4flC,CThgBhB,EAAA,GbIkD,GqGohBrC,ArGphBqC,IsB4f7B,CtB5f6B,GsB4flC,CAAU,C+EwBlB,ArGphB0C,CAAA,EqGohBxB,ArGphBwB,IqGohB1C,A/ExBQ,EAAoB,IAApB;AxDyehB,AuIhdK,AvFjiBL,AdYkD,AsB6frC,G+EGT,CrGhgB8C,GAAA,GAAgB,MAAM,CAAC,QAAvB;AlCs+BlD,AkCt+BiF,AsB8fxE,AuF7fT,G7GDiF,C6GCjF,CvFqfQ,GuFrfR,GvF+fQ;AxDueR,AuI5cI,A/E1BQ,AuFhgBZ,ER0hBI,MAAA,CAAA,E/E1Ba,OAAL,K+E0BR,CAAI,aAAA,CAAA,SAAJ,EAAI,0BAAJ,EAA4B;AvI6chC,AwDteY,AuFjgBZ,UAAA,CvFigBiB,KuFjgBjB,EAAA,KvFigBY;AxDueZ,AkCt+BI,AsBggBQ,AuFlgBc,EAAA,I7GElB,GAAG,CAAC,CsBggBK,AuFlgBS,CAAA,GvFkgBd,CAAU,AuFlgBI,C7GElB,CAAY,A6GFM,MvFkgBd,AuFlgBc,C7GElB,A6GFkB,CvFkgBM,IAApB,CtBhgBqB,CAA7B,EACA;AlCs+BJ,AkCr+BQ,AsB+fC,WtB/fM,EAAP;AlCs+BR,AkCr+BK,AsB+fA,AuFlgBD,G7GH6E,AsBof7E,QuFjfA,IAAA,CAAY,CAAZ,EAAuB,CAAvB,EAAkC,MAAlC,EAAkD,MAAlD,EAAkE,WAAlE,EAAuF,QAAvF,EAAmG;A/Iy+BvG,A+Iz+B2F,QAAA,CRwhBvF,OQxhBuF,KRwhBvF,AQxhBuF,KAAA,CAAA,EAAA;A/I0+B3F,AuIhdQ,AQ1hBmF,MAAA,IR0hB/E,IQ1hB+E,CR0hB1E,EQ1hB0E,CAAA,oBR0hB/E,KAAiC,IAArC,EACA;AvIgdR,AkCr+BI,A6GNmG,E7GMnG,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC,QAApB;AlCs+BJ,AuI/cY,aAAK,uBAAL,GAA+B,IAAI,sBAAJ,EAA/B;AvIgdZ,AuI/cS,ArGthBL,A6GRA,M7GQI,CAAC,C6GRL,KAAA,GAAA,C7GQA,EACA,C6GTA;A/I8+BJ,AkCp+BQ,IAAA,UAAU,GAAG,QAAQ,CAAC,aAAT,CAAuB,GAAvB,CAAb;AlCq+BR,AuI/cQ,ArGrhBH,A6GTG,G7GLyE,C6GKzE,SR8hBO,EQ9hBI,GR8hBC,AQ9hBE,WAAW,IAAI,MAAM,ER8hBnC,CQ9hBsC,CAAtC;A/I8+BR,AuI/cK,AvFtiBL,AQ8gBI,AuFrgBI,EvFqgBJ,ER9gBJ,CuF6hBgC,GQphBlB,KvFqgBV,CAAA,IuFrgBoB,C/FTxB,E+FS4B,CAAC,CvFqgBzB,AuFrgBwB,CvFqgBxB,EuFrgB6B,IAAI,CvFqgBjC,AuFrgBkC,EAAV,CvFqgBxB,EuFrgBuC,CAAhB,GAAqB,IvFqgBpC,IuFrgBJ,CvFqgBJ,EAAyB;AxDwe7B,AgDt/BA,AQghBQ,AuFtgBA,QAAM,CvFsgBD,EuFtgBI,EvFsgBT,CAAU,AuFtgBE,MAAM,CRmhBM,A/EbxB,EAAmB,AuFtgBE,CAArB,GvFsgBA,EAAyB,KAAzB;AxDueR,AgDv/BA,AQihBK,AuFtgBG,GvFmgBJ,KuFngBU,I/FXd,C+FWmB,GAAG,aAAO,GAArB;A/I6+BR,AuI3dgC,AQjhBxB,GRihBJ,KQjhBU,OAAO,GAAG,EAAhB;A/I6+BR,AkCp+BI,EAAA,UAAU,CAAC,IAAX,GAAkB,GAAlB;AlCq+BJ,AkCp+BI,A6GRI,M7GQE,G6GRG,IAAI,CAAC,C7GQC,E6GRE,C7GQCQ,A6GRd,EAAgB,CAAC,GAAG,GAApB,EAAyB,CAAC,EAA1B,E7GQyB,A6GPzB,U7GOmC,CAAC,IAAtBA,CAAlB;AlCq+BJ,AkCn+BI,A6GRQ,M7GQF,I6GRQ,CAAC,G7GQD,A6GRI,CAAC,E7GQD,CAAC,A6GRG,CAAJ,GAAQ,K7GQE,CAAC,IAAX,C6GRA,G7GQmB,A6GRG,G7GQA,CAAC,E6GRjC,E7GQ6B,KAAa,EAAjC,IAAyC,SAAS,CAAC,IAAV,KAAmB,GAAG,CAAC,IAAjF,CAtB6E;AlC0/BjF,A+I3+BY,UAAM,KAAK,GAAI,CAAC,GAAG,KAAL,GAAc,UAA5B;A/I4+BZ,AkCl+BI,A6GRQ,M7GQJ,A6GRI,OAAO,CAAC,C7GQH,CAAC,E6GRN,CACI,CAAC,GAAI,C7GOb,A6GPc,GAAG,E7GOM,E6GPF,C7GOK,A6GPJ,C7GOK,E6GPV,CAAS,K7GO1B,A6GPiB,CADb,EAEI,C7GM+B,A6GN9B,C7GM+B,E6GN3B,CAAC,GAAG,E7GMjB,E6GNqB,CAAC,C7GM8B,E6GNnC,CAAS,KAAT,C7GM4C,A6GRzD,C7GQ0D,QAAV,KAAuB,GAAG,CAAC,QAAnF,EACA;AlCk+BJ,AgDj/BI,AdgBI,A6GNC,W/FVL,AdgBW,WAAP,IchBJ,CAAY,EAAZ,EAAkC,KAAlC,EAA4C,CAA5C,EAAmD,CAAnD,EAAwD;AhDk/B5D,AgDl/BgD,AdiB3C,AsB0fD,EAAA,MR3gB4C,CAAA,IQ2gB5C,CR3gB4C,AQ2gB5C,KR3gB4C,CAAA,EAAA,CQ2gB5C,CAAA,OAAA,GAAA,YAAA;AxDweJ,AgDn/BgD,A+FYxC,IAAA,E/FZwC,CAAA,E+FYxC,C/FZwC,CAAA,C+FYxC,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,OAAN,KAAc,IAAd;A/Iw+BR,AgDp/BqD,AdmBjD,AsB2fI,QAAI,CtB3fD,EAAP,EsB2fa,QAAT,EACA;AxDseR,AkCj+BC,AsB4fW,AuFngBP,WvFmgBY,QAAL,CAAc,MAAd,CAAqB,IAArB,EADJ;AxDueR,AgDt/BuD,QAAA,CAAA,KAAA,KAAA,CAAA,EAAA;AhDu/BvD,AgDv/BuD,AQkhB3C,AuFpgBZ,M/FduD,CAAA,E+FcvD,C/FduD,AQkhBvC,CRlhBuC,E+FcvD,EvFogBqB,QAAL,CAAc,QAAlB,EACA;AxDqeZ,AuIldI,AvFtiBwD,AQohB5C,AuF9hBhB,CAAA,CRgjBI,AQhjBsB,WvF8hBL,E+EkBjB,AQhjBJ,CRgjBI,AQhjBJ,KvF8hBgB,CAAc,G+EkB1B,CAAA,G/ElBY,a+EkBZ,GAAA,YAAA;AvImdJ,AuIjdQ,A/EnBK,Q+EmBC,QAAQ,GAAG,KAAK,MAAtB;AvIkdR,AuIhdQ,AvFxiBA,SuFwiBK,AvFxiBA,EAAL,GAAU,CuFwiBV,AvFxiBA,GuFwiBc,KAAK,wBAAnB;AvIidR,AuI/cQ,AvFziBA,AQmhBI,SRnhBC,EuFyiBE,AvFziBP,AQmhBS,GRnhBC,CAAV,IuFyiBA,A/EtBI,GAAgB,IAAhB;AxDseZ,AuI/cK,AvFxiBG,AQkhBC,G+EeL,MvFjiBS,EAAL,GAAU,EAAV;AhDw/BR,AgDv/BQ,SAAK,KAAL,GAAa,KAAb;AhDw/BR,AgDv/BK,AQkhBG,QAAI,KAAK,OAAT,EACA;AxDqeR,AwDpeY,aAAO,wBAAiB,KAAK,OAAtB,CAAP;AxDqeZ,AwDpeY,AwFriBZ,IAAA,QAAA,CxFqiBmB,oBAAa,KAAK,OAAlB,CAAP;AxDqeZ,AwDneY,AwFviBZ,WxFuiBiB,OAAL,GAAe,IAAf;AxDoeZ,AmChhCA,AqB6iBS,AwFxiBT,KxFohBI,IrBzhBY,G6GKhB,e7GLA,CAAmC,GAAnC,EAAgD,YAAhD,EAAqE;AnCihCrE,AuIhdI,ApG/jBA,A6GGJ,ET4jBI,IpG/jBM,K6GGV,IT4jBI,CAAA,ApG/jBgB,GAAG,A6GGvB,GAAA,CA8GC,ET8cG,CAAA,YpG/jB4B,KoG+jB5B,GAAA,KpG/jBmB,CAAuB,IoG+jBxB,ApG/jBC,CAA4B,GAA5B,CAAnB,MoG+jBA,EAA4C;AvIidhD,AuI/cQ,SAAK,MAAL,GAAc,WAAd;AvIgdR,AuI/cK,ApGhkBD,AqB4iBI,G+EiBJ,GpG7jBI,GqB4iBK,OrB5iBT,AqB4iBI,ErB3iBJ;AnC+gCJ,AmC9gCQ,AqB4iBA,IAAA,OrB5iBO,IqB4iBI,CAAC,KrB5iBK,CAAC,SqB4iBlB,CrB5iB4B,AqB4iBA,CrB5iBC,CAAD,CAAX,CAAjB,AqB4iBA;AxDmeR,AuIzcI,ApGrkBC,AqB4iBG,E+EyBJ,MAAA,CAAA,A/EzBS,c+EyBT,CAAI,A/EzBA,GAAuB,IAAvB,M+EyBA,CAAA,SAAJ,EAAI,GAAJ,EAAK;AvI0cT,AwDjeQ,SAAK,SAAL,GAAiB,IAAjB;AxDkeR,AmC9gCI,AqB6iBC,GA7BD,MrBhhBO,YAAY,KAAK,SAAjB,GAA6B,YAA7B,GAA4C,CAAnD;AnC+gCJ,AmC9gCC;AnC+gCD,AgDx/BI,A5C7CJ,E4C6CI,eAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAM,EAAN,EAAoB,KAApB,EAAsC;AhDy/B1C,AgDz/BU,QAAA,EAAA,KAAA,KAAA,CAAA,EAAA;AhD0/BV,AgD1/BU,MAAA,EAAA,GAAK,KAAK,EAAV;AhD2/BV,AgD3/BsB,SuF2iBlB,YAAA;AvIidJ,AuI/cQ,aAAO,KAAK,QAAL,CAAc,CAArB;AvIgdR,AuI/cK,AvF9iBmB,KuF2iBf,GvF3iBe,KAAA,KAAA,KAAA,CAAA,EAAA;AhD8/BxB,AgD9/BwB,MAAA,GuFgjBpB,EvFhjBoB,GAAQ,KuFgjBtB,AvFhjB2B,KuFgjBjC,AvFhjBoB,EuFgjBD;AvI+cvB,AuI7cQ,AvFljBkC,WuFkjB7B,SAAL,CAAe,QAAf,CAAwB,CAAxB,GAA4B,KAA5B;AvI8cR,AuI7cK,A/ErBD,AwF3iBO,ExF2iBP,AwF3iBO,GTwjBF,KSxjBE,CAAA,ExF2iBP,CAAA,IwF3iBO,GAAP,ExF2iBA,CAAA,OAAA,AwF3iBe,EAAf,CxF2iBA,CwF3iB2B,EAA3B,EAAuC,EAAvC,EAAmD,EAAnD,CxF2iBA,CwF3iB+D,MAA/D,EAA+E,MAA/E,EAAoG;AhJ8gCxG,AgD//BQ,AQ8hBA,AwF3iBA,QAAM,CxF2iBD,ER9hBE,EQ8hBP,AwF3iBW,CxF2iBD,CR9hBC,CgGbG,KTsjBb,CStjBmB,CxF2iBpB,AwF3iBqB,ExF2iBA,IAArB,AwF3iB2B,ChGapB,AgGbqB,ChGaD,EAApB,EAAwB,CgGbV,GAAgB,ChGa9B,AgGba,CAApB,ChGasC,KAAK,EAApC,EAAwC,KAAK,EAA7C,CAAP;AhDggCR,AgD//BK,AQ8hBA,AwF3iBG,GhGUJ,AQ8hBA,KwFxiBU,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,MAAP,GAAgB,CAAjB,CAApB;AhJ6gCR,AuIxdS,ASnjBD,GTmjBJ,KSnjBU,EAAE,GAAG,KAAK,GAAG,EAAnB;AhJ4gCR,AuIzcI,ASlkBI,ETkkBJ,MAAA,ASlkBU,CTkkBV,CSlkBY,GAAG,KAAK,GAAG,ETkkBvB,ASlkBI,CTkkBA,aAAA,CAAA,SAAJ,EAAI,GAAJ,EAAK;AvI0cT,AgJ3gCQ,QAAM,EAAE,GAAG,EAAE,GAAG,EAAhB;AhJ4gCR,AgJ3gCQ,QAAM,EAAE,GAAG,EAAE,GAAG,EAAhB;AhJ4gCR,AgJ3gCQ,QAAM,EAAE,GAAG,IAAI,CAAC,GAAL,CAAU,EAAE,GAAG,EAAN,GAAa,EAAE,GAAG,EAA3B,CAAX;AhJ4gCR,AwDleI,EAAA,WAAA,CAAA,SAAA,CAAA,iBAAA,GAAA,YAAA;AxDmeJ,AwDjeQ,AwF1iBA,QAAI,EAAE,CxF0iBC,EwF1iBE,ExF0iBT,IwF1iBI,IAAe,MAAM,KAAK,CAA9B,EACA;AhJ2gCR,AwDjeK,AwFziBO,GxFsiBR,OwFtiBY,MAAM,CAAC,MAAM,CAAC,MAAP,GAAgB,CAAjB,CAAN,KAA8B,EAA9B,IAAoC,MAAM,CAAC,MAAM,CAAC,MAAP,GAAgB,CAAjB,CAAN,KAA8B,EAAtE,EACA;AhJ0gCZ,AgJzgCgB,QAAA,CTyjBZ,KSzjBkB,CAAC,IAAP,CAAY,CTyjBxB,CSzjBY,EAAgB,EAAhB;AhJ0gChB,AuI/cQ,AS1jBK,aT0jBE,KAAK,QAAL,CAAc,CAArB;AvIgdR,AuI/cK,AvFjjBD,EAAA,GuF8iBK,YvF9iBL,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,CAAJ,EAAW,CAAX,EAAgB;AhDigCpB,AgDjgCQ,AgGRI,QhGQJ,CuFmjBJ,AvFnjBI,IgGRW,ChGQX,GgGRI,ET2jBF,AvFnjBF,CAAA,EAAA,EuFmjBJ,EAAmB;AvI+cvB,AuI7cQ,AvFrjBA,AgGPC,MhGOD,CAAA,GAAA,CuFqjBK,AvFrjBL,SuFqjBA,CAAe,QAAf,CAAwB,CAAxB,GAA4B,KAA5B;AvI8cR,AuI7cK,AvFtjBQ,KuF8iBJ;AvIsdT,AgJzgCQ,QAAM,EAAE,GAAI,EAAE,GAAG,EAAN,CTmjBV,ESnjBuB,EAAE,GAAG,EAA7B;AhJ0gCR,AgDrgCe,AgGJP,QhGIO,AgGJD,ChGIC,CgGJC,GAAI,ChGIL,CgGJO,GAAG,ChGIV,CAAA,AgGJI,EhGIJ,CgGJiB,EAAE,GAAG,EAA7B;AhJ0gCR,AuIxdS,AvF9iBM,AgGHP,GTijBJ,GvF9iBW,CAAA,CgGHD,EhGGC,AgGHC,ChGGD,EgGHK,EAAE,GAAG,EAAN,GAAa,EAAE,GAAG,EAA7B;AhJ0gCR,AuIzcI,AvF9jBgB,AgGFZ,ETgkBJ,MAAA,AShkBU,CTgkBV,CShkBY,GAAG,MAAM,GAAG,CTgkBxB,CAAI,EShkBwB,CAAC,IAAL,CAAU,EAAV,CAAT,ETgkBX,CAAA,AShkBoC,EAApC,OTgkBJ,EAAI,gBAAJ,EAAkB;AvI0ctB,AgJzgCQ,QAAM,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC,IAAL,CAAU,EAAV,CAAT,GAAyB,EAApC;AhJ0gCR,AgDvgCQ,AgGFA,QhGEI,AgGFE,EAAE,GhGEC,AgGFE,EhGEP,AgGFS,GAAG,EhGEA,AgGFL,ChGEP,EgGFiB,EhGEA,AgGFrB,KhGE0B,EAAL,KAAY,CAAjC,EACA;AhDugCR,AgDtgCY,AgGHJ,QAAM,EAAE,ChGGC,EAAL,AgGHO,EAAE,ChGGC,CAAV,CgGHY,EAAL,GAAU,EAArB;AhJ0gCR,AgDtgCY,AgGHJ,QAAM,EAAE,ChGGC,EAAL,AgGHQ,EAAE,ChGGA,CAAV,CgGHa,EAAN,GAAa,EAAE,GAAG,EAA7B;AhJ0gCR,AgDtgCY,AgGHJ,QAAM,EAAE,ChGGC,EAAL,AgGHQ,ChGGA,CgGHE,GhGGV,AgGHa,ChGGA,CgGHN,GAAa,ChGGF,CgGHI,GAAG,ChGGzB,CgGHJ;AhJ0gCR,AgDtgCS,AQoiBE,AwFviBH,ExFuiBG,MwFviBG,EAAE,GxFuiBL,AwFviBQ,CxFuiBR,CwFviBU,GxFuiBV,CwFviBc,ExFuiBrB,AwFviBuB,GAAG,EAAT,CAAb,IxFuiBQ,MAAZ,EAAwC,OAAxC,EACI,MADJ,EAC0C;AxDke9C,AwDleQ,AwFviBA,QxFuiBA,AwFviBM,CTyjBV,CSzjBY,GAAG,CxFuiBX,CwFviBa,IxFuiBb,AwFviBiB,ETyjBrB,ASzjBuB,GxFuiBnB,AwFviBsB,CxFuiBtB,CwFviBa,CxFuiBb,AwFviBA;AhJ0gCR,AuI/cQ,AvFvjBA,AQmiBA,AwFtiBA,MxFsiBA,EwFtiBM,EAAE,ChGGD,CQmiBP,C+EoBO,AS1jBI,EhGGX,AQmiBS,AwFtiBI,GT0jBD,CS1jBK,EAAE,GAAG,EAAT,CT0jBN,AS1jBP,CT0jBsB,M/EpBJ,Q+EoBlB,Y/EpBA;AxDoeR,AuI/cK,AvFvjBA,AQkiByC,AwFriBtC,GhGPJ,EuF8jBkB,GSvjBR,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAT,CAAb;AhJ0gCR,AgJzgCQ,QAAM,UAAU,GTsjBF,AStjBK,IAAI,CAAC,KAAL,CAAW,EAAE,GAAG,EAAhB,EAAoB,EAAE,GAAG,EAAzB,CAAnB;AhJ0gCR,AwDpeQ,AwFriBA,QxFqiBM,AwFriBA,OxFqiBO,CwFriBC,ExFqiBE,CwFriBC,IAAI,CAAC,CxFqiBC,IwFriBN,CAAW,CxFqiBZ,CwFriBc,GAAG,CxFqiBC,CwFriBjB,EAAoB,EAAE,GxFqiBvC,AwFriB0C,EAAzB,CAAjB;AhJ0gCR,AuIrdsB,A/Efd,AwFpiBA,GTmjBJ,K/EfQ,GwFpiBG,IxFoiBI,GAAG,IAAd;AxDqeR,AuI3cI,AS7jBQ,ET6jBR,IS7jBQ,ET6jBR,AS7jBU,CT6jBV,CS7jBa,EAAE,GAAG,EADP,MT8jBX,CAAI,aAAA,CAAA,SAAJ,EAAI,gBAAJ,EAAkB;AvI4ctB,AwDpeQ,AwFpiBI,MAAA,ExFoiBA,AwFpiBE,EAAG,EAAE,GxFoiBX,AwFpiBc,ExFqiBd,AwFviBO;AhJ2gCf,AwDneY,AwFriBA,MxFqiBA,AwFriBA,MAAM,CxFqiBC,CwFriBD,ExFqiBI,IwFxiBP,ExFwiBH;AxDoeZ,AwDneS,AwFriBG,KxFkiBJ,CwFliBI,KxFuiBJ,KwFviBc,EAAA,UAJP;AhJ6gCf,AwDjeY,AwFviBA,MAAA,IxFuiBI,CAAE,GwFviBE,EAAA,CxFuiBY,CAAC,MwF5iBlB,CxF4iBH,EACA;AxDieZ,AgDvgCI,AQuiBa,AwFxiBL,EhGCR,IgGDQ,ExFwiBK,MAAc,CAAC,ERviB5B,CAAA,CgGDqB,EAAG,CxFwiBX,CwFxiBa,ExFwiBY,CwFxiBT,ChGC7B,CAAA,AgGDwB,GAAU,EAAE,GhGCpC,AgGDuC,CxFwiBS,ERviBhD,UAAS,CAAT,EAAsB,EQuiBT;AxDiejB,AgDtgCQ,AQsiBK,AwF/iBE,KAAP,GhGSI,KAAK,EAAL,KAAY,CAAC,CAAC,CAAd,IAAmB,KAAK,EAAL,KAAY,CAAC,CAAC,CAArC,EACA;AhDsgCR,AgDrgCY,AgGHP,GA7CM,MTmmBP,EvFnjBa,EAAL,GAAU,CAAC,CAAC,CAAZ,EuFmjBR;AvImdJ,AuIjdQ,AvFpjBI,AQqiBA,MAAA,KRriBK,EuFojBF,AvFpjBH,AQqiBO,GRriBG,AQqiBC,CRriBA,CuFojBH,AvFpjBI,CAAZ,GQqiByB,CAAC,I+EevB,CAAe,E/EflB,Y+EeJ;AvIkdR,AuIjdK,AvFpjBO,AQqiBH,K+EYa,MvFjjBL,EAAL,CAAQ,IAAR,CAAa,KAAK,KAAlB;AhDsgCZ,AgDrgCS,qBuFgjBa;AvIsdtB,AwDheQ,QAAI,WAAW,GAAG,wBAAiB,OAAjB,CAAlB,CAnBsC;AxDof9C,AuIvdsB,AvF9iBd,GuF8iBJ,QvF9iBW,IAAP;AhDsgCR,AuI7cI,AvFxjBC,AQsiBG,E+EkBJ,CvFlkBA,KuFkkBA,A/ElBQ,C+EkBR,M/ElBe,IAAI,I+EkBnB,CAAI,C/ElBI,IAAqB,CAAC,O+EkB1B,CAAA,G/ElBA,EACA,I+EiBJ,EAAI,UAAJ,EAAY;AvI8chB,AwD9dY,YAAM,IAAI,KAAJ,CAAU,mBAAgB,OAAhB,GAAuB,wCAAjC,CAAN;AxD+dZ,AwD9dS;AxD+dT;AACA,AwD9dQ,QAAI,CAAC,WAAL,EACA;AxD8dR,AwD7dY,MAAA,WAAW,GAAG,IAAI,WAAJ,CAAgB,MAAhB,EAAwB,OAAxB,CAAd;AxD8dZ,AwD7dY,MAAA,WAAW,CAAC,OAAZ,GAAsB,OAAtB;AxD8dZ,AwD7dY,MAAA,G+ESR,Q/ETmB,CAAC,G+ESpB,O/ETQ,CAAuB,WAAvB,EAAoC,OAApC;AxD8dZ,AuIndQ,A/EVC,a+EUM,KAAK,SAAL,CAAe,QAAtB;AvIodR,AuIndK,AvFnjBD,EAAA,GuFgjBY,YvFhjBZ,CAAA,SAAA,CAAA,MAAA,GAAA,UAAyB,CAAzB,EAA6B;AhDugCjC,AgDrgCQ,AQwiBA,IRxiBA,CAAC,CAAC,GuFmjBN,AvFnjBI,CAAM,CQwiBC,IRxiBI,EAAX,EuFmjBS,AvFnjBM,GQwiBf,E+EWJ,AvFnjBwB,EuFmjBW,AvFnjB/B;AhDsgCR,AuIjdQ,AvFnjBA,AQuiBH,GApCM,Q+EgDE,AvFnjBE,CAAP,QuFmjBA,CAAe,QAAf,CAAwB,QAAxB,CAAiC,KAAjC;AvIkdR,AuIjdK,AvFnjBA,GALD,EuFgjBY;AvI0dhB,qBuI1dgB;AvI2dhB;AACA,AuI5dgB,GAAZ;AvI6dJ,AuI7cI,AS7jBO,ET6jBP,AS7jBO,MT6jBP,CAAA,CS7jBO,CAAA,GAAA,GAAP,MT6jBA,CAAI,GS7jBO,OAAX,EAA4B,CT6jBxB,CAAA,KS7jBJ,EAA6C,ET6jB7C,AS7jBA,ET6jBI,AS7jBqD,EAAzD,EAAqE,GT6jBrE,EAAS,CS7jBT,EACI,UADJ,EACwB,QADxB,EAC0C,cAD1C,EACmE,MADnE,EACwF;AhJ0gC5F,AgJxgCQ,QAAM,KAAK,GAAG,QAAQ,GAAG,UAAzB;AhJygCR;AACA,AgJzgCQ,QAAM,CAAC,GAAG,eAAe,CAAC,cAAhB,CACN,IAAI,CAAC,GAAL,CAAS,KAAT,IAAkB,MADZ,EAEN,IAAI,CAAC,IAAL,CAAU,IAAI,CAAC,GAAL,CAAS,KAAT,IAAkB,UAA5B,IAAoC,EAF9B,CAAV;AhJ0gCR;AACA,AgDrgCI,AgGDI,EhGCJ,MgGDU,KAAK,GAAI,ChGCnB,CAAA,GgGDkB,IAAW,CAAC,ChGC9B,CAAA,CgGDiC,CAAf,CAAd,GhGCJ,GAAA,UAAO,CAAP,EAAoB;AhDsgCxB,AgDpgCQ,AgGFA,QAAM,GhGEE,CAAC,CAAC,CAAF,AgGFI,GAAG,EhGEC,GgGFI,EhGEC,CgGFE,ChGEhB,AgGFP,IhGE6B,CAAC,CAAC,CAAF,KAAQ,KAAK,EAA1C;AhDqgCR,AgDpgCK,AgGFG,GhGDJ,KgGCU,CTkjBV,KSljBgB,GAAG,ITkjBnB,ASljBuB,CAAC,GAAL,CAAS,KAAT,CAAf;AhJugCR,AuIndQ,ASnjBA,QAAM,KTmjBC,CSnjBK,GAAG,CTmjBH,GSnjBO,CAAC,GAAL,CAAS,CTmjBjB,CAAe,GSnjBP,CAAf,CTmjBA;AvIodR,AuIndK,AvF5iBD,AQiiBO,AwFxiBH,EhGOJ,AQiiBO,G+EQE,GvFziBT,AgGPU,ChGOV,IQiiBO,CAAA,EwFxiBW,GAAG,CAAC,GhGOtB,AgGPyB,ChGOrB,AQiiBG,AwFxiBH,GxFwiBJ,UAAkB,ERjiBd,CAAA,GQiiBJ,EACI,IRliBJ,CQiiBA,CRjiBI,CQkiBe,ERliBnB,EAAK,EQiiBL,EACmC,OADnC,EAC+D;AxD8dnE,AwD5dQ,AwF1iBA,IxF0iBA,IwF1iBM,CTojBV,C/EVU,GAAG,IwF1iBM,ETojBT,A/EVS,CwF1iBI,GxF0iBA,C+EUvB,EAAgC,C/EVL,CwF1iBI,GAAG,CAAZ,GAAiB,IxF0iBhB,CAAiB,GwF1iBpC,ExF0iByC,GAAG,MAAR,GAAiB,CAAlC,CAAnB;AxD6dR,AuIjdQ,A/EVA,QAAM,G+EUD,K/EVS,GAAG,C+EUjB,CAAe,E/EVM,G+EUrB,CAAqB,QAArB,CAA8B,C/EVb,CAAmB,G+EUpC,G/EViB,EAA2B;AxD4dpD,AuIjdK,A/EXiD,AwF1iB9C,KT6iBK,C/EHyC,GwF1iBzC,ExF0iB8C,EAAA,AwF1iB1C,CAAC,GAAG,CxF0iB+B,AwF1iB5C,EAAgB,CAAC,IAAI,QAArB,EAA+B,EAAE,CAAjC,EACA;AhJsgCR,AwD7d6D,AwFxiBjD,MxFwiBiD,IwFxiB3C,ExFwiBiD,EAAA,AwFxiB7C,GAAG,CAAC,GT2iBb,AS3iBiB,SAAS,GAAG,CAA9B;AhJsgCZ,AwD9doD,AwFviBxC,KxFuiBa,CAAjB,IwFviBU,KAAK,GAAK,KAAD,GAAU,UAAV,GAAwB,MAAM,GAAG,IAAhD;AhJsgCZ,AuI5da,A/EFL,AwFviBI,GTyiBR,K/EFU,CRviBV,CgGAc,CAAC,CxFuiBD,EwFviBI,CxFuiBD,GwFviBK,CAAC,EhGAvB,AQuiBuB,CwFviBL,CAAS,KAAT,CAAV,IxFuiB2B,YAAlB,GAAiC,iBAAM,KAAvC,GAA+C,iBAAM,aAAlE;AxD+dR,AuI7cI,AvFvjBI,AQuiBA,AwFxiBI,ETwjBR,MAAA,CAAA,CSxjBc,CxFwiBH,AwFxiBI,EhGCJ,CgGDO,CxFwiBH,AwFxiBI,GhGCH,CgGDO,ChGCnB,AgGDoB,GTwjBxB,ASxjBmB,CTwjBf,ASxjBwB,ExFwiBjB,CAAgB,EwFxiBR,CAAX,KxFwiBG,E+EgBP,A/EhBiC,C+EgBjC,K/EhBuC,CAAC,G+EgB5C,EAAI,C/EhBiC,CAAc,K+EgBnD,EAAS,a/EhB4B,EAAoC,OAAO,IAAI;AxD8dxF,AgDpgCK,AQsiBqF,AwFtiB9E,KhGHH,CQyiBiF,AwFtiB9E,KxFsiBmF,CwFtiB7E,CxFsiB6E,AwFtiB5E,IAAP,CxFsiB4E,AwFriBvE,CAAE,MAAM,GAAG,CAAV,GAAgB,MAAM,GAAG,CAA1B,IAAgC,MAAjC,GAA2C,EAD/C,EAEK,CAAE,MAAM,GAAG,CAAC,CAAX,GAAiB,MAAM,GAAG,CAA3B,IAAiC,MAAlC,GAA4C,EAFhD;AhJqgCZ,AwD/diG,AwFliBxF,MxFkiBwF,GRpiB7F,GQoiBmG,EAAA,KRpiB7F,CQoiB8E,IRpiBpF,EAAmB;AhDogCvB,AgDlgCQ,AQkiBiG,AwFjiBpG,GA5BM,GxF6jB8F,IRliB7F,AQkiBiG,EAAA,GRliB5F,EAAL,KAAY,KAAhB,EACA;AhDkgCR,AgDjgCY,AQgiB4E,KAA/C,CAA1B,CAAP,MRhiBS,EAAL,GAAU,KAAV;AhDkgCZ,AgDjgCY,AQgiBP,AwFhiBL,GxFuhBW,MwFvhBX,IhGAiB,EAAL,CAAQ,CgGApB,GhGAY,CAAa,KAAK,KAAlB;AhDkgCZ,AgDjgCS,AgGDR,CA9GD,EAAA;AhJinCA,AgDjgCK,KAZI,IuFyjBL,YAAA;AvIqdJ,AuIndQ,aAAO,KAAK,GvF3jBX,MuF2jBM,CAAe,KAAtB;AvIodR,AuIndK,KAHQ;AvIudb,AgDhhCS,GAAL,MuF8jBA,UAAU,KAAV,EAAgC;AvImdpC,AuIjdQ,AvF7iBJ,EAAA,MAAA,CAAA,EuF6iBS,SAAL,CAAe,EvF7iBnB,CAAI,EuF6iBA,CAAqB,QAArB,CAA8B,GvF7iB9B,CAAA,CuF6iBA,QvF7iBJ,EAAI,GAAJ,EAAK;AhD+/BT,AuIjdK,KARQ;AvI0db,qBuI1da;AvI2db,AiJloCA,IAAA,WAAA;AjJmoCA,AuI5da,A/ENF,AyFjqBX,EzFiqBW,C+EMP,U/ENO,CAAA,UAAA,GAAP,UAAkB,WAAlB,EAA4C,EAA5C,EAAsD;AxDme1D,AuI7cI,A/EpBI,AyFnqBR,EVurBI,MAAA,A/EpBQ,C+EoBR,C/EpBI,EACA,AyFpqBR,WVurBI,CAAI,aAAA,CAAA,SAAJ,EAAI,MAAJ,EAAQ;AvI8cZ,AwDheY,AyFrqBZ,SjGiII,CQoiBY,CyFrqBhB,UjGiII,AQoiBuB,CAAC,AyFrqB5B,GAAA,CAmHC,WzFkjBe,CAA4B,OAA5B,CAAoC,EAApC,MAA4C,CAAC,CAAjD,EACA;AxDgeZ,AgDngCQ,AQoiBQ,QAAA,KRpiBD,KAAK,CQoiBO,CRpiBnB,AQoiBoB,eAAZ,CAA4B,IAA5B,CAAiC,EAAjC;AxDgehB,AgDngCK,AQoiBQ,KRviBJ;AhDugCT,SgDlgCI,UAAM,KAAN,EAAmB;AhDmgCvB,AgDjgCQ,AQkiBI,URliBA,AQkiBI,KRliBC,EAAL,KAAY,KAAhB,EACA,KQiiByB,EAAjB,CAAJ,EACA;AxD+dZ,AgDhgCY,aAAK,EAAL,GAAU,KAAV;AhDigCZ,AgDhgCY,AQkiBI,QAAA,C+EUZ,IvF5iBa,EAAL,AQkiBW,CRliBH,AQkiBI,IRliBZ,AQkiBI,C+EUZ,AvF5iBqB,AQkiBI,KRliBC,KAAlB,sCQkiB+D,EAA9C,GAAgD,6BAA7D;AxD+dhB,AuIndQ,AvF7iBC,AQkiBI,a+EWE,KAAK,SAAL,CAAe,IAAtB;AvIodR,AuIndK,AvF7iBA,KuF0iBO,AvFtjBH;AhD6gCT,AwD9dY,S+EYR,UAAS,EvF3jBJ,GuF2jBL,EAA+B,I/EZN,EAAjB,IAAuB,WAAvB;AxD+dZ,AuIjdQ,A/EbC,W+EaI,SAAL,CAAe,IAAf,CAAoB,QAApB,CAA6B,KAA7B;AvIkdR,AuIjdK,AvF9jBI,AQijBJ,GRjjBD,AQgiBO,E+EsBC;AvI0dZ,AgDngCA,SAAA,YuFyiBY,GvFziBZ;AhDogCA,AgDpgCC,CAxID,EAAA;AhD6oCA,AuI5dY,GAAR;AvI6dJ,AuI7cI,EAAA,MAAA,CAAA,cAAA,CAAI,aAAA,CAAA,SAAJ,EAAI,UAAJ,EAAY;AvI8chB;AACA;AACA;AACA,AiJtoCW,EAAA,WAAA,CAAA,WAAA,GAAP,UACI,KADJ,EACmB,KADnB,EAEI,GAFJ,EAEiB,GAFjB,EAGI,IAHJ,EAGkB,IAHlB,EAII,GAJJ,EAIiB,GAJjB,EAI4B;AjJmoChC,AiJjoCQ,QAAM,CAAC,GAAG,EAAV;AjJkoCR,AwD/dW,AyFlqBH,EzFkqBG,MyFlqBC,KzFkqBD,CAAA,AyFlqBO,GAAG,GAAb,SzFkqBG,GAAP,UAAuB,WAAvB,EAAwD;AxDge5D,AwD9dQ,AyFnqBA,QzFmqBI,AyFnqBA,CV6qBR,AU7qBS,GAAG,GzFmqBG,AyFnqBX,MV6qBJ,K/EVQ,KAAuB,QAA3B,EACA;AxD8dR,AuIndQ,A/EVI,AyFpqBJ,QAAI,EzFoqBM,AyFpqBJ,GV8qBC,AU9qBE,GAAT,EV8qBY,SAAL,CAAe,E/EVQ,GAAG,G+EUjC,qB/EVkD,WAAjB,CAA7B;AxD8dZ,AuIndK,AU9qBG,KV2qBQ,GU3qBJ,EAAE,GAAG,GAAT;AjJkoCR,AwD7dY,AyFpqBJ,QAAI,CV+qBR,C/EXY,AyFpqBF,GAAG,GAAT,GV+qBS,KAAb,EAA0B,I/EXlB,EACA;AxD6dZ,AuIjdQ,A/EXQ,AyFrqBR,QAAI,GVgrBC,AUhrBE,CzFqqBO,EyFrqBJ,GzFqqBS,AyFrqBnB,GVgrBA,A/EXsB,C+EWP,QAAf,GAA0B,KAA1B,G/EX0C,CAAC,eAArB,CAAqC,OAArC,CAA6C,WAA7C,CAAd;AxD6dhB,AuIjdK,AUhrBG,KVwqBQ,GUxqBJ,GAAG,GAAG,GAAV;AjJkoCR,AwD5dgB,AyFrqBR,QAAI,CAAC,GzFqqBO,AyFrqBJ,GAAR,EzFqqBiB,GAAG,C+EEZ,A/EFa,CAAb,EACA;AxD4dhB,AwD3doB,AyFtqBZ,QAAI,CAAC,CzFsqBO,EyFtqBJ,GAAR,ezFsqBgC,CAAC,eAArB,CAAqC,MAArC,CAA4C,KAA5C,EAAmD,CAAnD;AxD4dpB,AuI5dgB,AtF5rBhB,AO6rBiB,AyFtqBT,GVqqBJ,CtF5rBJ,IgGuBY,EhGvBZ,AgGuBc,GAAG,GAAT;AjJkoCR,AuI7cI,AtF5sBJ,AgGwBQ,EVorBJ,MAAA,AUprBQ,CVorBR,CUprBU,GAAG,GAAT,OVorBJ,CAAI,aAAA,CAAA,SAAJ,EAAI,OAAJ,EAAS;AvI8cb,AiD1pCA,AO+rBgB,AyFtqBR,QAAI,IhGzBZ,CgGyBiB,EzFsqBM,CyFtqBH,KAAZ,kBzFsqBgC,WAAjB,CAAP;AxD4dhB,AwD1dgB,AyFvqBR,QAAI,KAAK,EzFuqBM,CyFvqBH,KAAZ,czFuqBQ;AxD2dhB,AwD1da;AxD2db,AwD1dS,AyFvqBD,KzFspBA,IyFtpBK,EzFwqBA,EyFxqBI,CAAC,CzFwqBD,EyFxqBI,CAAb,EAAgB,CAAC,IAAI,CzFwqBD,AyFxqBpB,EAAwB,EzFwqBA,AyFxqBE,CAA1B,EACA,QzFuqBmC,CAAC,eAA/B,EACL;AxDydR,AwDxdY,AyFxqBA,MAAA,CAAC,GAAG,CzFwqBC,AyFxqBA,GAAG,CzFwqBC,AyFxqBT,CzFwqBU,GAAG,CAAb,EAAgB,CAAC,GAAG,WAAW,CAAC,eAAZ,CAA4B,MAAhD,EAAwD,EAAE,CAA1D,EACA;AxDwdZ,AwDvdgB,AyFzqBJ,MAAA,EAAE,GAAG,CAAC,GzFyqBK,AyFzqBF,CAAT,uBzFyqB4B,WAAW,CAAC,eAAZ,CAA4B,CAA5B,CAAjB,CAAP;AxDwdhB,AwDvda,AyFzqBD,MAAA,EAAE,CV4qBV,EU5qBa,EAAE,GAAG,CAAV,IV4qBR;AvIqdJ,AuIndQ,AU7qBI,MAAA,EAAE,GAAI,EV6qBH,IU7qBS,CV6qBJ,AU7qBR,SV6qBG,CAAe,QAAf,GAA0B,gBAAjC;AvIodR,AuIndK,A/EJO,AyFzqBA,KV0qBC,C/EDD,AyFzqBA,GAAG,GAAG,EAAE,GzFyqBG,AyFzqBA,CzFyqBC,CyFzqBZ,czFyqBA,CAA4B,MAA5B,GAAqC,CAArC;AxDwdZ,AiDhpCI,AO0rBQ,AyF1qBA,MAAA,GV8qBR,AU9qBW,EhGhBX,CgGgBc,CzF0qBC,EyF1qBE,EhGhBjB,CAAY,AgGgBQ,CV8qBV,AtF9rBV,CgGgBQ,ChGhBW,CAAnB,EsF8rBA,AtF9rB0B,AO0rBlB,CP1rBR,CsF8rBuB,CtF9rBU,CAAjC,EAAwC,EAAxC,EAAgD,EAAhD,EAAsD;AjDipC1D,AuIjdQ,AtFhsBQ,AO2rBP,AyFzqBG,MAAA,CAAC,ChGlBG,CAAA,CgGkBC,CV8qBJ,EU9qBO,ChGlBJ,EgGkBO,GhGlBP,CsFgsBR,AtFhsBQ,CsFgsBO,AU9qBP,ChGlBA,EgGkBiB,KV8qBzB,CU9qB+B,EV8qBL,CU9qBD,GAAY,CV8qBN,AU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AA;AzDusCA,AyDvsCoD,AwFgF5C,ExFhF4C,MwFgFxC,CVmqBR,CUnqBU,CxFhFsC,CAAA,CwFgFnC,CAAT,OVmqBJ,Y9EnvBgD,EAAA,MAAA,CAAA;AzDwsCpD,AuIndQ,AUpqBA,QAAI,EVoqBA,CUpqBG,GVoqBC,AUpqBE,CAAV,EVoqBW,IAAX;AvIodR,AiDzqCQ,AQvBJ,AwFyEI,QAAI,ChGlDC,CAAL,CQvBJ,AwFyEW,EhGlDE,CAAT,AgGkDU,CAAV,iBxFzEJ,CAAY,MAAZ,EAA4B,OAA5B,EAA2C;AzDisC/C,AuIndQ,A9E9uBJ,AwF0EI,QxF1EJ,AwF0EQ,CVqqBJ,CUrqBM,GxF1EV,AwF0Ea,CAAT,ExF1EJ,IAAA;AzDksCJ,AuIldY,AUrqBJ,QAAI,EAAE,EVqqBE,CAAC,AUrqBA,CAAT,GVqqBa,CAAC,OAAV,EACA;AvIkdZ,AuIjdgB,A9EhvBF,AwF2EN,IAAA,IxF3EM,EAAA,AwF2EA,CAAC,ExF3EmB,EwF2E1B,CAAY,CVqqBG,G9EhvBkB,CwF2EjC,CVqqBQ,CUrqBW,CxF3EkB,EAA/B,EwF2EN;AjJunCR,AuIjda,A9EjvBC,QAAE,KAAK,GAAA,EAAA,CAAA,KAAP;AzDmsCd,AyDnsCc,AwF6EN,QxF7Ee,CwF6EV,IAAI,CxF7EY,AwF6EX,GxF7EW,AwF6ER,CAAR,CxF7EgB,CAAA,AwF6EL,CAAC,GAAG,CAApB,CxF7EM,CwF6EiB,CAAC,IAAI,CAA5B,EAA+B,EAAE,CAAjC,EACA;AjJsnCR,AuIjdY,AtFxtBJ,AgGoDI,MAAA,CAAC,CVoqBD,CtFxtBC,CAAL,AgGoDQ,CAAC,CVoqBD,CtFxtBC,CAAT,AgGoDY,CVoqBD,AUpqBP,IVoqBW,CAAC,MAAZ;AvIkdZ,AuIjdS,A9ElvBD,AwF+EI,IxF/EJ,EwF+EI,CV2pBJ,CU3pBM,CxF/EN,EwF+EU,CxF/EV,G8EkvBS,AUnqBK,CAAV,ExF/EJ,C8E0uBA,A9E1uBA,IAAA,CAAA,IAAA,EAAM,KAAN,EAAa,MAAb,KAAoB,IAApB;AzDosCR,AiJpnCY,MAAA,GAAG,GAAG,EAAE,GAAG,EAAX;AjJqnCZ,AuIjdQ,AUnqBI,MAAA,GAAG,GAAG,CVmqBH,EUnqBM,EVmqBb,CUnqBgB,EAAZ;AjJqnCZ,AuIjdK,AUlqBO,KVmpBQ,CUnpBR,EAAE,GAAG,CAAC,GAAG,CAAT;AjJonCZ,AiJnnCY,MAAA,EAAE,GAAG,EAAE,GAAG,CAAV,IVkpBQ;AvIkepB,AiDzqCQ,AgGuDI,MAAA,GhGvDC,CAAL,EgGuDU,ChGvDD,AgGuDE,ChGvDX,GgGuDI,CACK,GAAG,GAAG,KAAP,GAAiB,IAAI,GAAJ,GAAU,CAAV,GAAc,GAA/B,GAAuC,IAAI,EAAJ,GAAS,EAAT,GAAc,IAArD,GAA8D,EAAE,GAAG,GADvE,EAEK,GAAG,GAAG,KAAP,GAAiB,IAAI,GAAJ,GAAU,CAAV,GAAc,GAA/B,GAAuC,IAAI,EAAJ,GAAS,EAAT,GAAc,IAArD,GAA8D,EAAE,GAAG,GAFvE;AjJmnCZ,AuIneoB,AU5oBX,GV4oBL;AvIoeJ,AuIhcI,A9EpwBI,AwFqFH,EV+qBD,CUttBO,CxF9CH,I8EowBJ,CAAA,A9EpwBQ,CAAC,KAAL,GAAa,EAAb,G8EowBJ,CAAI,aAAA,CAAA,SAAJ,EAAI,MAAJ,EAAQ;AvIicZ;AACA,AiJhnCA,SAAA,WAAA;AjJinCA,AiJjnCC,CAnHD,EAAA;AjJquCA,AiDzqCQ,SAAK,EAAL,GAAU,EAAV;AjD0qCR;AACA;AACA,AyDpsCQ,IAAA,KAAI,CAAC,YAAL,GAAoB,EAApB;AzDqsCR;AACA,AyDpsCQ,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAApB,EAA4B,CAAC,EAA7B,EACA;AzDosCR,AiDzqCQ,AQ1BI,SR0BC,CQ1BK,CR0BV,GAAU,EAAV,KQ1BqB,GAAG,IAAI,WAAJ,EAApB;AzDosCZ,AiDzqCK,AiGnEL,IAAA,cAAA;AlJ6uCA,AyDnsCY,AyF1CZ,MzF0CY,KAAI,CAAC,KAAL,CAAW,IAAX,CAAgB,WAAhB,EAHJ;AzDusCR,AkJ9uCA,YAAA;AlJ+uCA,AkJ/uCA,WAAA,cAAA,GAAA,CA+EC;AlJiqCD;AACA;AACA,AyDpsCY,MAAA,KAAI,CAAC,YAAL,CAAkB,IAAlB,CAAuB,CAAC,CAAxB;AzDqsCZ,AyDpsCS;AzDqsCT;AACA,SuIpdI,YAAA;AvIqdJ,AuIndQ,aAAO,KAAK,KAAZ;AvIodR,AuIndK,KAHO;AvIudZ,SuIldI,UAAS,KAAT,EAAuC;AvImd3C,AuIjdQ,UAAI,KAAK,KAAT,EACA;AvIidR,AuIhdY,YAAM,UAAU,GAAK,KAAK,KAAL,CAAwB,UAAxB,IAAsC,KAAK,KAAhE;AvIidZ,AuI/cY,AtF3tBR,EAAA,MsF2tBQ,AtF3tBR,CAAA,SsF2tBkB,AtF3tBlB,CsF2tBmB,AtF3tBnB,SAAA,CsF2tBQ,EtF3tBR,CsF2tBgC,IAAxB,KtF3tBE,KAAV,EAAyB;AjD2qC7B,AuI/cY,AtF1tBJ,AQ5BA,IAAA,I8EsvBI,CtF1tBC,AQ5BD,CR4BJ,AQ5BK,GR4BI,GQ5BT,E8EsvBc,AtF1tBA,CsF0tBC,AtF1tBA,AQ5BD,CR4BA,CAAd,IsF0tBI,A9EtvBJ,G8EsvBwB,KAApB;AvIgdZ,AuI/cS,AtF1tBD,SAAK,CAAL,GAAS,KAAK,CAAC,CAAD,CAAd;AjD0qCR,AiDzqCQ,SAAK,CAAL,GAAS,KAAK,CAAC,CAAD,CAAd;AjD0qCR,AuI/cQ,AtF1tBA,SAAK,CAAL,CsF0tBK,EtF1tBI,GsF0tBT,EtF1tBc,CsF0tBD,AtF1tBE,CAAD,CAAd,GsF0tBA;AvIgdR,AiDzqCQ,AiGvEG,EAAA,OjGuEE,EAAL,GAAU,EiGvEP,CAAA,EjGuEY,CAAC,CAAD,CAAf,MiGvEG,GAAP,UACI,KADJ,EACmB,KADnB,EAEI,GAFJ,EAEiB,GAFjB,EAGI,GAHJ,EAGiB,GAHjB,EAG4B;AlJ8uChC,AuI/cQ,AtF1tBA,AiGnEA,QAAM,CjGmED,CsF0tBD,AW7xBI,CjGmER,EiGnEW,CjGmED,CsF0tBD,GW7xBO,CjGmED,CsF0tBf,AtF1tBgB,CAAD,AiGnEK,CX8xBpB,AtF3tBA,KiGnE0B,GAAf,GAAsB,GAAjC;AlJ6uCR,AuI9cY,AtF3tBP,AiGnEG,GjG2DJ,KiG3DU,EAAE,EX8xBE,CW9xBC,KAAK,GAAI,CX8xBA,GAAK,EW9xBC,GX8xBI,AW9xBnB,GAAsB,EX8xBR,CAAwB,AW9xBjD,UX8xByB,IAAsC,KAAK,KAAhE;AvI+cZ,AuI7cY,AW/xBJ,QX+xBI,AW/xBE,EAAE,GAAI,KX+xBE,CAAC,AW/xBG,GAAP,GAAe,IX+xBtB,EW/xB4B,CX+xBJ,IW/xB5B,CX+xBI;AvI8cZ,AuI7cY,A9ExvBJ,AyFvCA,IzFuCA,I8EwvBI,AW/xBE,CzFuCF,CAAC,AyFvCG,GAAI,EzFuCZ,G8EwvBc,A9ExvBD,C8EwvBE,AW/xBG,GzFuClB,AyFvCW,GX+xBP,AW/xBsB,GX+xBF,GW/xBQ,CX+xB5B,IW/xBJ;AlJ6uCR,AuI7cS,AW/xBD,QAAM,CAAC,GAAG,OAAQ,EAAE,GAAG,EAAN,GAAa,EAAE,GAAG,EAAzB,CAAV;AlJ6uCR,AuI7cK,AW/xBG,KXuwBI,GWvwBE,CAAC,GAAG,OAAQ,EAAE,GAAG,EAAN,GAAa,EAAE,GAAG,EAAzB,CAAV;AlJ6uCR,AkJ5uCQ,QAAM,CAAC,GAAI,EAAE,GAAG,EAAN,EXswBN,CWtwBmB,EAAE,GAAG,EAA5B;AlJ6uCR,AkJ3uCQ,QAAM,CAAC,GAAG,MAAM,IAAI,CAAC,IAAL,CAAU,CAAC,GAAG,CAAJ,GAAQ,CAAlB,CAAhB;AlJ4uCR,AuIxeY,AWnwBJ,GXmwBJ,KWnwBU,EAAE,GAAG,IAAI,CAAC,IAAL,CAAU,CAAV,CAAX;AlJ4uCR,AuIhdA,A9ErvBQ,AyFtCA,IzFsCA,IyFtCM,CX2xBd,A9ErvBY,CAAC,CyFtCI,GAAG,MAAM,CzFsClB,AyFtCY,CX2xBpB,E9ErvB2B,AyFtCG,EAAtB,EzFsCA;AzDssCR,AuIxvCA,AWaQ,CXbR,CAA4C,MWa9B,EAAE,GAAG,MAAM,EXbzB,CAAA,CWa6B,CAAC,IAAL,CAAU,CAAV,CAAjB;AlJ4uCR,AyDtsCK,AyFrCG,QAAM,EAAE,GAAG,CAAC,GAAG,EAAf;AlJ4uCR,AkJ1uCQ,WAAO,CACF,GAAG,GAAG,CAAP,GACO,EAAE,GAAG,CAAL,IAAU,CAAC,GAAG,EAAd,CADP,GAGQ,CAAE,MAAM,CAAN,GAAU,CAAX,GAAiB,CAAC,GAAG,CAAtB,IACC,IAAI,CAAC,GAAL,CAAS,CAAE,MAAM,EAAP,GAAa,EAAb,GAAkB,CAAnB,KAAyB,EAAE,GAAG,EAA9B,CAAT,CALN,KAOF,MAAM,GAPJ,CAAP;AlJ2uCR,AkJnuCK,GA3BM;AlJ+vCX;AACA;AACA,AiD1qCI,EAAA,MAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,CAAJ,EAAe,CAAf,EAA0B,CAA1B,EAAqC,CAArC,EAAgD,EAAhD,EAA4D,EAA5D,EAAsE;AjD2qC1E,AuItd4C,AtFntBpC,EsFmtBoC,OtFntB/B,CAAL,CsFmtBoC,CAAA,CtFntB3B,CAAT,oBsFmtBoC,EAAA,MAAA,CAAA;AvIud5C,AiDzqCQ,SAAK,CAAL,GAAS,CAAT;AjD0qCR,AuIxdA,AtFjtBQ,SAAK,CAAL,CsFitBR,EtFjtBiB,CAAT,mBsFitBR,GAAA;AvIydA,AuIzdA,AtFhtBQ,QsFgtBR,CtFhtBa,CAAL,GsFgtBR,AtFhtBiB,CAAT,EsFgtBR,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;AvI0dA,AiDzqCQ,AQ9BM,EAAA,OR8BD,EAAL,GAAU,EAAV,OQ9BM,CAAA,SAAA,CAAA,aAAA,GAAV,UAAwB,SAAxB,EAA+C,OAA/C,EAA2E;AzDwsC/E,AuItdI,AtFntBI,AQ7BA,I8EgvBJ,KAAA,AtFntBS,AQ7BA,C8EgvBT,CtFntBI,EQ7BS,CR6BC,AQ7BA,ER6BV,CQ7Ba,CAAb,C8EgvBJ,C9EhvBoB,CAAC,C8EgvBA,E9EhvBG,E8EgvBxB,G9EhvB6B,MAAzB,EAAiC,CAAC,EAAlC,EACA;AzDssCR,AiDxqCQ,AQ7BI,UAAI,CR6BD,AQ7BE,IR6BT,KQ7BkB,CAAC,CAAD,CAAd,EACA;AzDqsCZ,AuIvdC,AtFjtBI,AQ5BW,GRkBZ;AjDmrCJ,AyDpsCa;AzDqsCb,AuIzdA,SAAA,sBAAA;AvI0dA,AuIheA,A9EruBY,AyF/BD,EXowBiC,AWpwBjC,QzF+BK,MyF/BL,CAAA,EzF+Bc,CAAC,CAAD,CAAT,CAAa,CyF/BlB,GAAP,UAAe,GzF+BP,AyF/BR,EzFgCQ,AyFhCoB,GAA5B,EAAyC,GAAzC,EAAsD,GAAtD,EAAmE,MAAnE,EAAwF;AlJquC5F,AyDpsCgB,AyF/BR,QAAM,KzF+BO,AyF/BF,GAAG,MAAM,CAAC,MzF+Bb,AyF/BmB,CzF+BG,AyF/BF,MAAP,GzF+BkB,AyF/BF,CzF+BG,AyF/BpB,CzF+BmB,AyF/BvC,CzF+B8B,CAAa,iBAAb,EAAtB,EAAwD,CAAxD;AzDqsChB,AyDpsCa,AyF/BL,OzF4BI,CyF5BE,KzFgCG,AyFhCE,GAAG,CzFgCD,KyFhCO,CAAC,GzFgCC,CAAC,CAAD,CAAT,AyFhCc,CAAC,MAAP,GAAgB,CAAjB,CzFgCiB,AyFhCrC,QzFgCS,EACL;AzDmsCZ,AyDlsCgB,aAAK,aAAL,CAAmB,SAAS,CAAC,CAAD,CAA5B,EAAiC,CAAjC;AzDmsChB,AyDlsCa,AyFjCL,OzF8BS,CyF9BH,CAAC,GAAG,CzFmCN,cyFnCqB,CAAC,cAAhB,CACN,cAAc,CAAC,WAAf,CAA2B,KAA3B,EAAkC,KAAlC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,CADM,CAAV;AlJouCR,AyDhsCgB,aAAK,aAAL,CAAmB,kBAAkB,CAAC,SAAS,CAAC,CAAD,CAAV,EAAe,OAAf,CAArC,EAA8D,CAA9D;AzDisChB,AyDhsCa,AyFjCL,QAAI,EAAE,GAAG,CAAT;AlJkuCR,AiDzqCI,AQvBK,AyFjCD,EjGwDJ,MAAA,AiGxDQ,CjGwDR,CiGxDU,GAAG,CAAT,IjGwDJ,CAAA,OAAA,GAAA,UAAQ,SAAR,EAA4B,GAA5B,EAA8C;AjD0qClD,AiDxqCQ,AQxBH,GArBS,KR6CF,CAAC,KAAK,KAAV,EACA;AjDwqCR,AiDvqCY,AiG1DJ,SAAK,EjG0DI,EiG1DA,CAAC,EjG0DN,CiG1DS,CAAb,CjG0DiB,CiG1DD,CAAC,EjG0DI,EiG1DA,CAArB,EAAwB,EAAE,CAA1B,EACA,EjGyDiB,CAAiB,CAAjB,CAAb;AjDwqCZ,AiDvqCS,AiGzDG,UAAM,CAAC,GAAG,CAAC,GAAG,CAAd;AlJiuCZ,AuI5dA,AWnwBY,MAAA,EAAE,GAAG,EXmwBJ,CAAC,EWnwBQ,GAAI,CAAC,GXmwB3B,AWnwB8B,CXmwBN,EWnwBS,KAAP,IAAgB,CAA9B,gBXmwBZ,GAAuD,aAAa,CAAC,SAAd,CAAwB,eAA/E;AvI6dA,AiDvqCQ,AiGxDI,MAAA,EjGwDE,AiGxDA,GAAG,EjGwDE,GAAG,AiGxDA,GjGwDG,AiGxDC,CAAC,GjGwDE,AiGxDC,GAAG,EjGwDC,GiGxDR,EjGwDlB,EiGxDkC,CAA9B;AlJguCZ,AwIxyCA,AU0EY,MAAA,GV1EH,GU0ES,CAAC,IAAP,CAAY,EAAE,CV1E1B,CAAsB,CAAtB,AU0E8B,CAAE,CV1EQ,CAAxC,CU0EmC,CV1EqB,EU0EjB,CAAC,GAAG,GAAG,GAAP,IAAc,CAAtB,GAA4B,EAA7B,IAAmC,CAArD,EACI,EAAE,GAAI,CAAE,GAAG,GAAI,CAAC,GAAG,GAAG,GAAP,IAAc,CAAtB,GAA4B,EAA7B,IAAmC,CAD7C;AlJ+tCZ,AwIvyCI,AvFgII,AiGtDC,MV1ED,CAAC,CAAC,AvFgIE,MuFhIJ,GvFgIA,EuFhIa,AvFiIb,CuFjIc,CAAC,MAAnB,EACA;AxIuyCJ,AwItyCQ,AvFgII,AQ3BR,AyF5BC,EzF4BD,CyFlDO,GjG6EC,KuFhIG,AvFgIE,CuFhID,AvFgIE,CuFhID,AvFgIA,CAAL,GAAW,KAAK,CAAhB,AQ3BR,CAAA,K+ErGW,GAAqB,CAAC,A/EqGjC,C+ErGkC,A/EqGlC,OAAA,GAAA,M+ErGI,M/EqGJ;AzDksCJ,AwItyCK,AvFgIO,AQ1BJ,MR0BI,GQ1BC,ER0BI,CAAC,CAAD,AQ1BA,CR0BL,AQ1BM,GR0BK,AQ1BF,CAAR,EAAW,ER0BI,CAAhB,AQ1Be,GAAG,KAAK,MAA3B,EAAmC,CAAC,GAAG,GAAvC,EAA4C,CAAC,EAA7C,EACA;AzDgsCR,AiDtqCY,AQzBA,AyF/BZ,MjGwDY,GiGxDZ,EjGwDiB,AQzBA,CRyBC,CAAD,CAAL,EQzBA,CRyBW,AQzBA,CRyBX,AQzBA,EAAc,GyF/B1B,IzF+BY;AzDgsCZ,AwItyCI,AvFgIQ,AQzBH,AyFhCR,CA/ED,EAAA,GjGwIY,GuFhID,CAAC,CAAC,AvFgII,CAAC,CAAD,CAAL,GuFhID,AvFgIY,GuFhID,CAAC,CAAC,AvFgII,CAAhB,KuFhIR;AxIuyCJ,AwItyCC,AvFgIW,A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V;AjD6pCR,AiD5pCQ,AQ1BA,QAAM,CR0BD,CAAL,IAAU,CAAV,CQ1Bc,GAAG,SAAS,CAAC,GAAV,CAAc,UAAC,IAAD,EAAK;AzDurC5C,AiD5pCQ,AQ3ByC,SR2BpC,CAAL,GQ3ByC,CR2B/B,CAAV,EQ3B6C,CAAC,IAAL,EAAA;AzDwrCjD,AiD5pCQ,AQ5BoD,KAAnC,CAAjB,GR4BK,CAAL,IAAU,CAAV;AjD6pCR,AwIjyCc,AvFqIN,AQ3BA,A2FvJR,EZ6Cc,EY7CD,KnGkLA,AQ3BA,E+E1GC,AvFqIN,CuFrIM,E/E0GN,CR2BW,CAAX,CQ3Ba,C2FvJM,GZ6Cb,AY7CsC,CZ6CtC,CY7Cd,C3FuJ4B,CAAC,GAAR,CAAY,QAAZ,C+E1GP,C/E2GD,E+E3GT,E/E0GiB,CACH,O+E3Ga,K/E2Gb,E+E3Gd,EAA0C;AxIkyC9C,AiD5pCQ,AQzBc,SRyBT,CQzBS,CRyBd,CQzBc,GRyBH,AQzB+B,CRyB1C,IQzB8C,CAAC,KAAL,CAAW,CAAX,CAA5B;AzDsrCtB,AwIhyCK,AvFqIG,AQ3Bc,G+E7GR,O/E6GU,CR2BT,IAAP,IQ3ByB,GAAA,EAAA,CAAA,SAAX;AzDurCtB,AiD3pCK,AQ5BiB,GRkBlB,OQlB+B,UAAU,GAAA,EAAA,CAAA,UAAvB;AzDwrCtB;AACA,AyDvrCgB,MAAA,KAAI,CAAC,MAAL,CAAY,SAAZ,EAAuB,UAAvB;AzDwrChB;AACA,AyDvrCgB,aAAO,OAAO,CAAC,OAAR,CAAgB,KAAhB,CAAP;AzDwrChB,AyDvrCa,KARQ,CAAb;AzDgsCR,AyDrrCQ,WAAO,KAAK,KAAZ;AzDsrCR,AyDrrCK,GAxBD;AzD8sCJ;AACA,AiD5pCI,AQ1BJ,ER0BI,MAAA,CAAA,AQ1BJ,SR0BI,CAAA,MAAA,GAAA,EQ1BJ,QR0BW,KAAP,EAAoB;AjD6pCxB,AwIjyCI,AvFsII,AQ3OR,CAAA,C+EqGI,A/ErGgD,MR2OtC,EQ3Od,C+EqGI,AvFsIa,AQ3OjB,C+EqGI,EvFsIgB,IAAI,CAAC,EuFtIrB,CAAA,AvFsIgB,CAAS,KAAT,CAAZ,CuFtIJ,GAAA,YAAA;AxIkyCJ,AiD3pCQ,QAAM,GAAG,GAAG,IAAI,CAAC,GAAL,CAAS,KAAT,CAAZ;AjD4pCR,AwInyCwC,AvFyIhC,QuFzIgC,AvFyI1B,EAAE,GAAG,GuFzIqB,EvFyIhB,CuFzIgB,AvFyIhC,EuFzIgC;AxIoyCxC,AqJt5CA,ApG4PQ,QAAM,EAAE,GAAG,KAAK,CAAhB;AjD2pCR,AiD1pCQ,QAAM,CuF3I0B,EvF2IvB,EuF3IuB,CvF2IpB,CuF3IoB,GAAA,CvF2If,EuF3Ie,AvF2IhC,EuF3IgC,GAAA,SAAA,CAAA,QAAA,EAAA,IAAc;AxIsyCtD,AwItyCwC,AvF6IhC,MuF7IgC,GvF6I3B,CAAL,GAAU,CuF7IsB,CAAA,AvF6IpB,EuF7IoB,CAAA,AvF6IjB,GuF7IiB,AvF6IvB,GAAc,KAAK,CAAL,EuF7IS,CAAA,AvF6IA,EuF7IA,CAAA,AvF6IhC;AjD0pCR,AiDzpCQ,KuF9IJ,IvF8IS,CAAL,GAAU,EAAE,GAAG,GAAN,GAAc,KAAK,CAAL,GAAS,GAAhC;AjD0pCR,AiDzpCQ,SAAK,CAAL,GAAU,EAAE,GAAG,GAAN,GAAc,KAAK,CAAL,GAAS,GAAhC;AjD0pCR,AiDzpCQ,SAAK,CAAL,GAAU,EAAE,GAAG,GAAN,GAAc,KAAK,CAAL,GAAS,GAAhC;AjD0pCR,AwIvyCQ,AvF8IA,QuF9II,CvF8IC,EAAL,GAAW,EuF9IC,CAAC,AvF8IC,GAAG,GuF9Ib,AvF8IM,GuF9IY,AvF8IG,CuF9IzB,EACA,EvF6I8B,EAAL,GAAU,GAAnC;AjD0pCR,AiDzpCQ,SAAK,EAAL,GAAW,GAAG,GAAG,GAAP,GAAe,KAAK,EAAL,GAAU,GAAnC;AjD0pCR,AwItyCY,AvF8IJ,WuF9IS,AvF8IF,IuF9IM,AvF8Ib,CuF9Ic,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,MAA7B,EAAqC,CAAC,EAAtC,EACA;AxIsyCZ,AqJz5CA,ApGiQK,GAjBD,CoGhPJ,YAAA;ArJ05CA,AwIryCgB,AarHhB,abqHqB,QAAL,CAAc,QAAQ,CAAC,CAAD,CAAtB;AxIsyChB,AwIryCa,AatHb,YAAA;ArJ45CA,AwIryCS,A9E5GT,IAAA,C8EoGQ,MAUA,M9E9GR;A1Dk5CA,AwInyCY,A9E/GZ,U8E+GkB,KAAK,GAAG,QAAQ,CAAC,CAAD,CAAtB,CADJ;AxIqyCR,A0Dn5CA,UAAA,MAAA,EAAA;A1Do5CA,AwIlyCY,A9ElHuB,EAAA,Q8EkHnB,C9ElHmB,CAAA,G8EkHd,CAAC,MAAV,EACA,C9EnHuB,EAAA,MAAA,CAAA;A1Dq5CnC,AwIjyCgB,QAAA,KAAK,CAAC,MAAN,CAAa,WAAb,CAAyB,KAAzB;AxIkyChB,AwIjyCa,A9EnHT,WAAA,aAAA,CAAY,MAAZ,EAAuC,OAAvC,EAAsD;A1Dq5C1D,AiDzpCI,AS5PA,ET4PA,MAAA,AS5PA,CT4PA,IS5PA,GAAA,ET4PA,CAAA,CS5PA,KT4PA,GAAA,UAAO,MAAP,EAAqB;AjD0pCzB,AwIjyCY,AalHR,ApG2PI,MuFzII,EvFyIE,EAAE,CuFzIC,AalHb,CbkHc,CvFyIC,KuFzIP,AvFyIY,CAAhB,EuFzImB,EalHvB,CAAY,CbkHJ,IalHR,EAA2B,SAA3B,EAAwD,SAAxD,EAAqF,MAArF,EAA0G;ArJo5C9G,AwIjyCY,AanHmB,ApG4PvB,AS7PM,Q2FCiB,ApG4PjB,AS7PA,ET6PE,AS7PF,C8EoHG,EvFyIE,AS7Pe,I2FCH,CpG4PP,CAAhB,CuFzII,A9EpH6B,E2FCV,CbmHF,C9EpHgB,EAA/B,C8EoHF,AanHmB,CbyGvB,AazGuB,EAAA;ArJq5C/B,AqJr5C+B,ApG6PvB,AS9PM,M2FCiB,EpG6PjB,AS9PE,ET8PA,GAAG,AS9PE,E2FCU,C3FDV,E2FCU,ApG6PP,AS9PH,CT8Pb,AS9Pa,G2FCU,E3FDjB;A1Du5Cd,AwIhyCY,AatH8C,ApG8PlD,AS/PM,M8EuHF,EvFwIE,AS/PS,ET+PP,CuFxIC,CAAC,CvFwIC,CS/PU,GAAA,CT+PL,CAAhB,AS/PqB,CAAA,C8EuHjB,CAAgB,I9EvHd,K8EuHF,GAA4B,CAAC,CAA7B;AxIiyCZ,AwI/xCY,AvFwIJ,SAAK,CAAL,CuFxIS,EvFwIC,MuFxIN,AvFwIY,CuFxIE,AvFwID,CAAP,GuFxIN,AvFwIiB,CuFxIE,CvFwId,GAAmB,CuFxIxB,EAfJ,GvFuJkC,CAAC,CAAP,GAAW,EAAvC;AjDwpCR,AqJx5C4D,ApGiQpD,AShQA,Q2FDoD,A3FChD,CTgQC,CAAL,EShQA,CTgQU,IoGjQ0C,EpGiQpC,CAAC,CAAP,CoGjQ0C,EpGiQ/B,EAAZ,CoGjQ2C,CAAA,CpGiQxB,CoGjQwB,KpGiQlB,CAAC,CAAP,GAAW,EAAvC;AjDwpCR,AwI9xCY,Aa3HgD,ApGkQpD,AShQA,M2FFoD,E3FEhD,CTgQC,CAAL,CuFvIS,EvFuIC,CShQV,C2FFoD,GAAA,CpGkQpC,CuFvIZ,AvFuIa,CAAP,CoGlQ0C,CbyGpD,CvFyJqB,EAAZ,GAAmB,MAAM,CAAC,CAAP,GAAW,EAAvC;AjDwpCR,AqJ15CuF,ApGmQ/E,SAAK,CAAL,GAAU,MAAM,CAAC,CAAP,GAAW,EAAZ,GAAmB,MAAM,CAAC,CAAP,GAAW,EAAvC;AjDwpCR,AwI7xCY,AvFuIJ,ASjQA,QAAI,CTiQC,EuFvII,AvFuIT,ESjQS,CTiQE,ASjQD,MTiQO,CAAC,ASjQd,CAAc,CTiQP,GAAY,CuFvInB,CAAsB,AvFuIhB,ASjQN,CAAJ,ETiQ8B,AShQ9B,E8EyH+B,IvFuIK,CAAC,EAAP,CuFvIJ,CAAc,CvFuIE,EAAhC,GuFvIgB,AvFuIsB,GuFvIC,CAA7C,CvFuIiD,EAArD;AjDupCR,AwI7xCY,Aa/H6E,ApGsQjF,AShQI,MAAA,E2FN6E,CpGsQ5E,CShQG,C8EyHC,AvFuIT,EShQW,C2FNsE,ApGsQtE,CuFvIP,CAAU,Ga/HmE,A3FM7E,CTgQa,CAAC,EAAP,CoGtQsE,CAAA,CpGsQ1D,CoGtQ0D,Cb+H7E,AvFuIM,EuFvIkB,CvFuIE,IuFvI1B,EAA+B,AvFuIC,CAAC,EAAP,CuFvI1B,EAAqC,AvFuIC,EAAhC,GuFvIoC,AvFuIE,KAAK,EAArD,CuFvIyC,CAAc,MAAd,GAAuB,CAA5D;AxI8xCZ,AwI7xCY,AahI6E,ApGwQjF,ASjQI,M8EyHA,AahI6E,A3FO7E,K8EyHK,AvFwIF,CuFxIG,AahIuE,A3FOvE,G2FPuE,ApGwQjF,ASjQa,C8EyHT,CAAW,EahIkE,E3FO9D,CAAC,E8EyHhB,EAAoB,E9EzHpB,E8EyHA;AxI8xCZ,AwI7xCS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C,GAAA,OSxQU,GTwQA,SAAV,EAA8B;AjDipClC,A0Dz5Cc,QAAwB,KAAK,GAAA,EAAA,CAAA,KAA7B;A1D05Cd,AiD/oCQ,QAAM,CAAC,GAAG,KAAK,CAAf;AjDgpCR,AqJ35CW,ApG4QH,AS3QQ,E2FDL,MpG4QG,AS3QE,CT2QD,CS3QG,ET2QA,CS3QK,C2FDZ,CAAA,EpG4QY,CAAf,GS3QuB,CAAA,E2FDpB,A3FCK,C2FDL,OAAA,GAAP,YAAA;ArJ45CJ,AwIrxCI,AarII,ApG2QA,EuFtIJ,MvFsIU,CoG3QD,ApG2QE,EuFtIX,CAAA,AvFsIc,EoG3QV,GAAa,ApG2QE,CAAf,GuFtIJ,AarII,CbqIJ,aAAA,GAAA,UAAc,KAAd,EAAkC;AxIsxCtC,AwIpxCQ,AatIA,ApG2QA,AS3QA,Q8EsIM,AvFqIA,AS3QF,C2FAC,ApG2QE,GAAG,CuFrIC,CatIX,CAAW,CbsIG,CvFqIC,AS3QF,CT2Qb,AS3Qc,G8EsIK,AatInB,GAAoB,CAApB,A3FAI,GAAoB,C8EsIV,A9EtId,C8EsI4B,C9ErI5B,M8EqIc,CAAsB,KAAtB,CAAd;AxIqxCR,AqJ15CQ,ApG4QA,AS3QI,MAAA,ET2QE,AS3QA,C2FDD,A3FCE,IT2QI,CoG5QX,EpG4Qc,CoG5QD,ApG4QE,ES3QX,CACI,C2FFR,ApG4QmB,CAAC,AS1QV,CAAC,IT0QI,CAAW,CAAC,CAAZ,EAAe,CAAf,CAAf,KS3QI,EAEI,CAFJ,EAGI,OAAO,CAAC,MAHZ,EAII,KAAK,MAJT,EAKI,KAAK,OALT,EAMI,MANJ,EAOI,CAPJ,EAQI,OAAO,CAAC,MARZ,EASI,OAAO,CAAC,IATZ,EAUI,IAVJ;A1D05CZ,AwIpxCQ,AatIA,ApG4QA,AShQC,Q8E0HG,AvFsIE,CoG5QD,IbsII,AvFsIE,EoG5QX,CAAY,ApG4QE,EuFtIA,CAAC,CAAf,AvFsIkB,CAAC,CuFrInB,AavIA,GAAqB,CAArB,ApG4Qc,CAAW,CAAX,EAAc,CAAd,CAAd;AjD+oCR,AwInxCY,AavIJ,ApG6QA,QAAM,CoG7QD,GbuIK,CvFsIC,EoG7QX,CbuIc,AvFsIA,EoG7QA,EpG6QI,CuFtIR,AvFsIS,CuFtIC,AavIpB,EpG6Qc,CAAS,KAAK,GAAG,KAAjB,CAAd,yCuFtIU,CAAN;AxIoxCZ,AwInxCS,AavID,A3FYA,S2FZK,A3FYA,IAAI,CAAC,GAAG,C2FZb,A3FYA,EAAgB,C2FZC,A3FYA,GAAG,C2FZpB,K3FYA,EAA4B,CAAC,EAA7B,EACA;A1D84CR,AqJ15CQ,ApG6QA,AShQI,QTgQA,CoG7QC,C3FaK,GTgQD,CShQK,ETgQF,CShQK,C2FbjB,GAAiB,C3FaK,CTgQlB,AShQmB,CAAD,C2FbtB,A3FaI,ETgQmB,IAAI,CAAC,GAAL,CAAS,IAAI,GAAG,KAAhB,IAAyB,OAAhD,EACA;AjD6oCR,AwInxCQ,AavIH,ApG8QO,GoGvRD,GpGuRC,KuFvIG,IvFuIM,CuFvIb,AvFuIc,QAAV,GAAqB,KAArB;AjD6oCZ,AwInxCK,AvFuIO,ASjQA,G8EgHR,GvFiJQ,ISjQI,KTiQK,CAAC,IAAV,CAAe,CAAf,ASjQgB,CAAC,CAAD,CTiQG,ASjQf,GAAkB,IAAI,CAAC,CTiQC,CAAC,IAAV,CAAe,ASjQlC,CTiQmB,CShQnB,ETgQsC,CAAtC;AjD6oCZ,AqJ35CA,ApG+QS,AShQO,KT4PR,GS5PQ,C2FfhB,EpGiRQ,SSlQoB,C2Ff5B,A3Fe6B,CAAD,CAAZ,GAAkB,IAAI,CAAC,OAAvB;A1D64ChB,AqJ55CC,ApGkRW,CoG5WZ,EAAA,GpG4WY,SAAS,CAAC,QAAV,GAAqB,CAArB;AjD2oCZ,AiD1oCY,ASnQI,MTmQJ,MSnQQ,GTmQC,CAAC,ASnQE,CAAC,GTmQb,CAAe,CAAf,ASnQI,EACA,CTkQe,KAAnB;AjD2oCZ,AiD1oCY,ASlQQ,MTkQR,ISlQQ,EAAE,CAAC,ETkQF,CAAC,IAAV,CAAe,CAAf,GAAmB,CSlQX,CACI,EAAE,CTiQd,ASjQe,gBADP,EAEI,CAFJ,EAGI,CAHJ,EAGK;A1D04CzB,AsJl+CA,ArGwVS,AS/Pe,I4FzFlB,CrGiU4B,MS5Od,C4FrFN,C5FyFW,E4FzFR,IAAI,WAAJ,EAAjB;AtJm+CA,AsJl+CA,A5FyFwB,I4FzFlB,M5FyFkB,CALJ,E4FpFL,A5FyFU,G4FzFP,IAAI,eAAJ,EAAlB;AtJm+CA,A0Dz4CwB,UAAA,IAAI,CAAC,QAAL,CAAc,KANlB,EAOI,IAAI,CAAC,QAAL,CAAc,MAPlB,EAQI,CARJ,EASI,OAAO,CAAC,MATZ,EAUI,OAAO,CAAC,IAVZ,EAWK,IAAI,CAAC,QAAL,CAAoC,MAXzC;A1Dg5CpB,AiD1oCQ,ASzPS,ITyPT,SAAS,CAAC,KAAV,CAAgB,CAAhB,GAAoB,IAAI,CAAC,IAAL,CAAW,CAAC,GAAG,CAAL,GAAW,CAAC,GAAG,CAAzB,CAApB;AjD2oCR,AwIpxCI,AvF0II,ASzPK,E8E+GT,EvF0II,OuF1IJ,CAAA,CvF0Ia,CAAC,KAAV,CAAgB,CuF1IpB,AvF0II,CuF1IJ,EvF0IwB,IAAI,CAAC,IAAL,CAAW,CuF1InC,AvF0IoC,GuF1IpC,AvF0IuC,CAAL,GAAW,CAAC,GAAG,CAAzB,CuF1IV,AvF0IV,CA3B0B,IuF/G9B,EAAoC,KAApC,EAAiD;AxIqxCrD,AwInxCQ,A9EhHC,Q8EgHG,KAAK,GAAG,CAAR,IAAa,KAAK,IAAI,KAAK,QAAL,CAAc,MAAxC,EACA;AxImxCR,AwIlxCY,AvFyIJ,IAAA,QuFzIU,CvFyID,CAAC,EuFzII,KAAJ,CAAU,AvFyIpB,CAAmB,CAAnB,GAAuB,KAAK,EAA5B,GuFzIiC,KAAb,GAAkB,6BAAlB,GAAgD,KAAK,QAAL,CAAc,MAAxE,CAAN;AxImxCZ,AwIlxCS,AvFyID,AS1PA,IT0PA,OS1PO,ET0PE,CAAC,CS1PV,OT0PA,CAAmB,CAAnB,GAAuB,KAAK,EAA5B;AjD0oCR,AiDxoCQ,AS3PH,GAhDD,QT2SW,SAAP;AjDyoCR,AwIlxCQ,AvF0IH,GAlCD,KuFxGU,YAAY,GAAG,KAAK,aAAL,CAAmB,KAAnB,CAArB;AxImxCR,AwIjxCQ,A9EnHR,SAAA,aAAA,M8EmHoB,KAAK,QAAjB,EAA2B,YAA3B,EAAyC,CAAzC,EAT6C,CASD;AxIkxCpD,A0Dz/CA,CAAA,CAAmC,qBAAnC,CAAA;A1D0/CA,AwIlxCQ,SAAK,QAAL,CAAc,MAAd,CAAqB,KAArB,EAA4B,CAA5B,EAA+B,KAA/B,EAV6C,CAUP;AxImxC9C;AACA,AwIlxCQ,AchNR,IAAA,KdgNa,WchNb,KdgNQ,CAAsB,KAAtB;AxImxCR,AwIlxCK,AcjNL,GdoMI;AxIgyCJ,AsJp+CA,UAAA,MAAA,EAAA;AtJq+CA,AsJr+CsC,ArG4VlC,EqG5VkC,ArG4VlC,MAAA,CAAA,EqG5VkC,CAAA,MrG4VlC,CAAA,MAAA,GqG5VkC,ArG4VlC,EqG5VkC,MAAA,CAAA,GrG4VlC;AjD0oCJ,AiDxoCQ,QAAM,EAAE,GAAG,KAAK,CAAhB;AjDyoCR,AsJn8CI,ArG2TI,QAAM,EAAE,CqG3TZ,ErG2Te,KAAK,CAAhB,QqG3TJ,GAAA;AtJo8CJ,AsJp8CI,ArG4TI,AUlYR,IAAA,I2FsEI,ArG4TU,EAAE,GqG5TZ,ArG4Te,GqG1TX,ErG0TgB,CAAhB,EUlYR,C2FwEQ,CAAA,IAAA,CAAA,IAAA,KAAO,IAFX;AtJq8CJ,AiDxoCQ,AUnYR,QVmYc,EAAE,GAAG,KAAK,CAAhB;AjDyoCR,AsJ19CI,ArGkVI,AUpYR,I2FkDI,IrGkVU,CqGlVV,CAAA,A3FlDJ,CVoYiB,GAAG,EUpYpB,EAAA,CVoYyB,CqGlVrB,CrGkVI,EqGlVuB,IAA3B;AtJ29CJ,AsJ19CI,ArGkVI,AUrY+B,EAAA,E2FmDnC,IrGkVU,CqGlVV,ArGkVW,CqGlVX,C3FnDmC,CVqYpB,AUrYoB,EVqYlB,GAAG,EAAN,GAAa,CqGlV3B,CrGkV6B,EqGlVc,CrGkVX,EAA5B,AUrY+B,C2FmDnC,C3FnDmC,MAAA,CAAA;A3D8gDvC,AwInxCI,AvF4II,EuF5IJ,OvF4IS,CAAL,CuF5IJ,CAAA,CvF4Ia,EAAE,GAAG,CAAd,EuF5IJ,CAAA,UAAA,GAAA,UAAW,KAAX,EAAwB;AxIoxC5B,AwIlxCQ,AvF2IA,QuF3II,CvF2IC,CAAL,GuF3IS,AvF2IA,CAAC,EuF3IE,AvF2IH,CuF3IL,EvF2IW,CAAf,CuF3IiB,KAAK,IAAI,KAAK,QAAL,CAAc,MAAxC,EACA;AxIkxCR,AwIjxCY,AvF0IJ,SAAK,CAAL,EuF1IU,CvF0ID,CAAC,EuF1II,AvF0IL,GAAM,CAAf,CuF1IU,CAAU,wBAAsB,KAAtB,GAA2B,m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B,IAGG,SAAS,CAAC,MAAV,KAAqB,MAH5B,EAIA;A3DogDR,AwInxCQ,A7EhPI,MAAA,EAAE,CAAC,aAAH,CAAiB,EAAE,CAAC,E6EgPZ,KAAK,G7EhPb,EAAgC,CAAhC,E6EgPJ,A7EhPuC,CAAnC,C6EgPuB,C7EhPe,CAAtC,EAAyC,C6EgP7C,EAAkC,CAAlC,EAPuB,K7EzOiC,CAAC,MAArD,EAA6D,WAAW,CAAC,IAAzE,EAA+E,MAA/E;A3DogDZ,A2DngDS,KAND,MAQA;A3DkgDR,AwIlxCQ,AvF+IJ,AU9XQ,EV8XR,IU9XQ,EV8XR,CuF/IS,AvF+IT,MU9XiB,CAAC,E6E+Od,AvF+IJ,CAAA,EuFzJ2B,A7ErOnB,GAAkB,GV8X1B,EU9XQ,CV8XR,UAAS,MAAT,EAAuB;AjDooC3B,AiDloCQ,AU/XI,MAAA,GV+XC,CAAL,GAAS,EU/XI,CAAC,GV+XC,CAAC,CAAhB,CU/XI,GAAmB,MAAnB;A3DkgDZ,AwIjxCQ,AvF+IA,AU9XI,MAAA,EAAE,C6E+OD,AvF+IA,AU9XE,CV8XP,GAAS,MAAM,AU9XX,CV8XY,AU9XE,CV8XlB,IuF/IA,CAAsB,KAAtB,A7E/O6B,CAAC,MAA1B,EAAkC,CAAlC,EAAqC,WAAW,CAAC,MAAjD,EAAyD,WAAW,CAAC,MAArE,EAA6E,WAAW,CAAC,IAAzF,EAA+F,MAA/F;A3DigDZ,AwIjxCQ,AvF+IA,AU9XC,I6E+OD,KAAK,AvF+IA,CuF/IC,AvF+IN,GAAS,CuF/IT,CAAW,IvF+II,CAAC,CAAhB,GuF/IA,EAAsB,IAAtB;AxIkxCR,AwIjxCQ,AvF+IA,SuF/IK,AvF+IA,CAAL,GuF/IA,AvF+IS,CuF/IC,KvF+IK,CAAC,CAAhB,OuF/IA,EAA0B,KAA1B,EAAiC,IAAjC,EAAuC,KAAvC;AxIkxCR,AwIhxCQ,AcrLA,ArGmUA,AU9XA,I2F2DA,KAAI,ArGmUC,CqGnUA,CdqLE,AvF8IP,AU9XO,GV8XG,CU9XV,C6EgPA,IcrLA,ArGmUgB,CAAC,EqGnUC,ArGmUlB,CqGnUmB,CAAnB;AtJs8CR,AwIhxCK,AvF8IG,AU9XH,G6E8ND,A7ExPA,MVwZS,EAAL,GAAU,MAAM,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/wCgB,AtFlXhB,IAAM,IsFkXU,YAAY,AtFlXN,GsFkXS,AtFlXI,EAAnC,EsFkXgB;AxIgxChB,AwI/wCa,A5EzXL,QAAI,eAAe,IAAI,MAAM,YAAY,eAAzC,EACA;A5DwoDR,AwI/wCS,A5ExXG,aAAO,IAAP;A5DwoDZ,A4DvoDS;A5DwoDT,AwI/wCQ,QAAI,YAAY,IAAI,KAAK,QAAL,CAAc,MAAd,GAAuB,CAA3C,EACA;AxI+wCR,AwI9wCY,AcpLJ,ApG/LR,AUNQ,I0FqMA,ApG/LF,KoG+LM,CAAC,ApG/LD,CsFmXK,A5EzXF,EVMA,IAAI,AUNE,CVMD,CsFmXR,CAAc,EtFnX1B,CoG+LQ,CdoLI,CAAmB,CcpLF,G1FrMI,C0FqMzB,OdoLI,S5EzXJ;A5DwoDR,AwI9wCS,A5EzXJ,GAXM;A5DmpDX,AsJn8CK;AtJo8CL,AwI9wCQ,A5E1XR,S4E0Xa,A5E1Xb,S4E0XQ,GAAiB,E5E1XzB,G4E0XQ;AxI+wCR,AwI9wCK,Ac/KD,A1FjOJ,CAAA,C0FiOI,A1FjOgC,C4E0XhC,KczJA,CAAA,U1FjOJ,CAAA,G0FiOI,CAAW,gBAAA,CAAA,SAAX,EAAW,QAAX,EAAiB;AtJ87CrB;AACA,AkDjoDA,SAAS,IAAT,GAAa;AlDkoDb,AkDhoDI,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,EAApB,EAAwB,CAAC,EAAzB,EACA;AlDgoDJ,AkD/nDQ,QAAM,GAAG,GAAa,EAAtB;AlDgoDR,AkD9nDQ,IAAA,cAAc,CAAC,IAAf,CAAoB,GAApB;AlD+nDR,AwI/wCI,EAAA,SAAA,CAAA,SAAA,CAAA,eAAA,GAAA,YAAA;AxIgxCJ,AwI9wCQ,AtFhXA,QsFgXI,CctLR,ApG1LS,IsFgXI,AtFhXA,CAAC,GAAG,CAAb,EAAgB,CoG0LpB,ApG1LqB,GAAG,EAApB,EAAwB,CsFgXpB,AtFhXqB,EAAzB,EsFgX6B,AtF/W7B,KsF+WkC,SAAlC,EACA;AxI8wCR,AwI7wCY,ActLJ,UAAI,CdsLK,IctLA,QdsLL,GctLA,KAAqB,KAAK,KAA9B,EACA;AtJm8CR,AwI7wCS,AcrLG,ApG3LA,UAAM,GoG2LD,ApG3LI,GAAG,MAAM,CAAE,CoG2LpB,CpG3LsB,CAAC,CoG2LJ,ApG3LG,CAAF,GAAQ,CoG2LJ,CpG3LM,CAAC,CAAD,CAAX,CoG2LnB,EpG3LsC,EAAE,CAAC,CAAD,CAAF,GAAQ,EAAE,CAAC,CAAD,CAA9B,CAAlB;AlD8nDZ,AsJl8CY,aAAK,eAAL;AtJm8CZ,AwI7wCQ,AcrLC,ApG5LG,SsFiXC,CtFjXK,GAAG,GAAG,EsFiXhB,ItFjXsB,CAAE,EAAE,CAAC,CAAD,CAAF,GAAQ,EAAE,CAAC,CAAD,CAAX,GAAmB,EAAE,CAAC,CAAD,CAAF,GAAQ,EAAE,CAAC,CAAD,CAA9B,CAAlB;AlD+nDZ,AwI5wCQ,SAAK,SAAL,CAAe,eAAf,CAA+B,KAAK,MAAL,CAAY,SAA3C,EATJ;AxIsxCJ,AsJl8CQ,ApG7LI,UAAM,GoG6LH,ApG7LM,GAAG,EoG6LJ,IpG7LU,CAAE,EoG6LxB,ApG7L0B,CAAC,CAAD,CAAF,GAAQ,EAAE,CAAC,CAAD,CAAX,GAAmB,EAAE,CAAC,CAAD,CAAF,GAAQ,EAAE,CAAC,CAAD,CAA9B,CAAlB;AlDgoDZ,AwI3wCQ,AcvLH,KATgB,IdgMR,UAAL,GAAkB,KAAK,KAAL,GAAa,KAAK,MAAL,CAAY,UAA3C;AxI4wCR,AkDhoDY,UAAM,GAAG,GAAG,KoGoLH,CpGpLS,CAAE,EAAE,CAAC,CAAD,CAAF,GAAQ,EAAE,CAAC,CAAD,CAAX,GAAmB,EAAE,CAAC,CAAD,CAAF,GAAQ,EAAE,CAAC,CAAD,CAA9B,CAAlB;AlDioDZ,AwI3wCQ,SAAK,IAAI,CAAC,GAAG,CAAR,EAAW,CAAC,GAAG,KAAK,QAAL,CAAc,MAAlC,EAA0C,CAAC,GAAG,CAA9C,EAAiD,EAAE,CAAnD,EACA;AxI2wCR,AwI1wCY,AcpMS,GAAjB,OdoMc,KAAK,GAAG,KAAK,QAAL,CAAc,CAAd,CAAd;AxI2wCZ,A6D3pDA,IAAA,YAAA;A7D4pDA,AwI1wCY,AtFvXA,AW3BZ,U2EkZgB,CtFvXC,IsFuXI,AtFvXA,CsFuXC,AtFvXA,GAAG,CAAb,EAAgB,CsFuXhB,AtFvXiB,EsFwXjB,CtFxXoB,EAApB,EAAwB,CAAC,EAAzB,EACA;AlDioDZ,AwIzwCgB,AtFvXA,AW7BhB,Q2EoZgB,E3EpZhB,EX6BoB,CsFuXC,CAAC,AtFvXA,CAAC,CAAD,AW7BtB,CX6BoB,CW7BpB,IX6B8B,GAAV,IsFuXJ,AtFvXqB,EAAE,CAAC,CAAD,CAAF,KAAU,GAA3B,IACK,EAAE,CAAC,CAAD,CAAF,KAAU,GADf,IACsB,EAAE,CAAC,CAAD,CAAF,KAAU,GADpC,EAEA;AlD+nDhB,AwIzwCa,AtFrXO,AWhCc,EAAA,QXgCd,CWhCc,CAAA,CXgCX,CAAC,IAAJ,CAAS,CAAT,IWhCc,EAAA,MAAA,CAAA;A7D+pDlC,AwIzwCS,AtFrXW;AlD+nDpB,AwIzwCK,Ac5LS,ApGzLG,AW5Bb,EyFqNU,CdqKV,Q3E1XA,OyFqNU,CAAA,IzFrNV,CAAY,IyFqNF,CAAA,CzFrNV,EAAqD,OyFqN3C,AzFrNV,EAAmF,CyFqNnF,YAAA;AtJs8CJ,AsJp8CQ,ApG1LK,AW7BT,QAAA,CyFuNS,IzFvNT,GAAA,IyFuNI,AzFvNJ,GyFuNuB,CAAC,CAApB;AtJq8CR,AsJp8CQ,ApG1LC,SoG0LI,KAAL;AtJq8CR,AsJp8CQ,ApG1LH,AW7BS,QAAA,CyFuND,CzFvNC,GAA+C,MyFuNrD,CzFvN4D,IAAI,EAA1D;A7D4pDd,AsJp8CQ,AzFxNM,QAAE,CyFwNH,IzFxNQ,GAAA,EAAA,CyFwNb,AzFxNa,GyFwNK,CAAlB,CzFxNM;A7D6pDd,AsJn8CQ,ApG3LJ,AW/BU,OX+BL,CW/Bc,CyF0NV,EpG3LA,CAAC,EW/Be,CyF0NrB,ApG3LS,CoG2LG,ApG3LhB,CW/ByB,CX+BT,CAAC,AW/BQ,CAAA,EyF0NrB,ApG3LgB,EAApB,CoG2LyB,CAArB,ApG3LoB,AW/Bd,CX+Be,EAAzB,EACA;AlD8nDJ,AsJn8CQ,ApG1LA,AWjCM,QXiCA,AWjCiB,CyF2NlB,EpG1LI,GAAG,CoG0LZ,CAAY,AzF3NmB,EXiCf,CWjCe,EAAA,CyF2N/B,AzF3N+B,EXiCnB,CoG0LS,CAArB,ApG1LA,IWjCM;A7D+pDd,AwI1wCI,AczLI,ApGzLA,AWnCM,E2EqZV,EtFlXI,GAAG,CAAC,AWnC6B,CyF4N5B,EdyLT,AtFlXI,CsFkXJ,AczLI,ApGzLQ,CoGyLC,CpGzLC,CAAC,CAAD,CAAV,EoGyLA,ApGzLe,EsFkXnB,AtFlXqB,CsFkXrB,AczLsB,ApGzLA,CoGyLlB,ApGzLiB,AWnC+B,CXmChD,EAAsB,AWnC0B,EXmCxB,AWnCwB,CXmCvB,AWnCuB,CXmCxB,CAAxB,EAA6B,EAAE,CAAC,CsFkXpC,AtFlXmC,CAA/B,EsFkXJ,AtFlXwC,CAApC,EAAuC,CAAvC,AWnCM,Q2EqZV;AxI2wCJ,AwIzwCQ,Ac1LA,ApGzLA,IAAA,KsFmXK,Ac1LA,Od0LL,Ac1LA,Cd0La,Ac1LA,GpGzLG,CAAC,CsFmXjB,Cc1LA,EpGzLA,CoGyLsB,ApGzLA,CoGyLtB,EpGzLA;AlD6nDR,AsJn8CQ,ApGzLH,AWnCG,QAAI,CyF4NC,KzF5NK,IAAI,CyF4Nd,CAAgB,IzF5NI,CAAC,CyF4NrB,GAAyB,CAAzB,CzF5Nc,KAAkB,YAAY,CAAC,KAA7C,EACA;A7D+pDR,AwIzwCQ,AtFnXP,AWlCW,S2EqZC,G3ErZK,IAAI,KAAJ,CAAU,G2EqZpB,sB3ErZ2C,MAAM,CAAC,MAA9B,GAAoC,cAA9C,CAAN;A7D+pDZ,AsJn8CQ,AzF3NC,SyF2NI,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,SAAL,CAAe,MAAnC,EAA2C,CAAC,EAA5C,EACA;AtJm8CR,AwIzwCQ,AczLI,ApG1LZ,IAAI,KsFmXS,EczLI,EdyLA,CAAC,GAAG,CAAb,EAAgB,AczLZ,CdyLa,AczLE,CAAf,EdyLgB,AczLE,KdyLG,GczLrB,CAA2B,IdyLX,CAAc,AczL9B,MdyLJ,EAA0C,CAAC,EAA3C,EACA;AxIywCR,AwIxwCY,Ac1LA,AzF5NJ,IAAA,EyF4NI,GzF5NJ,C2EsZU,E3EtZV,G2EsZe,GAAG,A3EtZlB,CAAA,CyF4NkB,CAAC,Ed0LI,A3EtZvB,CAAA,CyF4NI,CAAoB,EzF5NxB,EAAM,C2EsZY,Ac1LW,AzF5N7B,C2EsZgC,CAAd,A3EtZT,C2EsZL,Mc1LoB,CAAe,CAAf,CAApB;AtJm8CZ,AsJl8CS,AzF7NU,MAAA,KAAK,EAAA,KAAP;A7DgqDjB,AwIxwCY,A3ExZc,MAAA,I2EwZV,CAAC,C3ExZe,EAAA,E2EwZV,CAAC,OAAP,IAAkB,CAAC,KAAK,CAAC,UAA7B,EACA;AxIwwCZ,AwIvwCgB,Ac3LR,AzF/NS,KAAT,IyF+NK,CzF/NsB,IAA3B,IyF+NA,CAAe,MAAf,GAAwB,CAAxB;AtJm8CR,AwIvwCa;AxIwwCb,AsJl8CQ,AzF/NA,SyF+NK,AzF/NA,IyF+NI,AzF/NA,CyF+NC,AzF/NA,GyF+NG,AzF/NA,CyF+Nb,AzF/NA,EyF+NgB,AzF/NA,CyF+NC,AzF/NA,GyF+NG,AzF/NA,KyF+NK,OAAL,AzF/NY,CyF+NC,AzF/NA,KAAjC,CyF+NA,CzF/NwC,CyF+NC,AzF/NA,CyF+NC,CzF/N1C,CyF+NA,CzF9NA,CyF+NA;AtJk8CR,AwIvwCY,Ac1LA,AzF/NA,M2EyZA,A3EzZA,IyF+NM,Cd0LD,A3EzZD,C2EyZE,A3EzZD,KAAL,CAAW,CyF+NI,AzF/Nf,EAAc,CyF+NI,Kd0LlB,Ac1LuB,AzF/NvB,G2EiZJ,A3EjZ2B,IyF+NL,CAAa,CAAb,CAAlB,YzF/N+B,2BAAR,GAAsC,CAA7D;A7DiqDZ,AsJh8CY,AzFhOH,MyFgOG,SAAS,CAAC,KAAV;AtJi8CZ,AwItwCY,Ac1LA,MAAA,Id0LI,KAAK,CAAC,Ac1LA,CAAC,Id0LX,Ac1LA,CAAgB,Cd2LhB,Qc3LA;AtJi8CZ,AwIrwCgB,Ac3LP,Yd2La,UAAU,GAAK,KAAK,CAAC,KAAN,CAAyB,UAAzB,IAAuC,KAAK,CAAC,KAAlE;AxIswChB,AwIpwCgB,QAAA,UAAU,CAAC,eAAX;AxIqwChB,AsJh8CQ,SAAK,OAAL,CAAa,MAAb,GAAsB,CAAtB;AtJi8CR,AwIrwCgB,Ac3LX,GA9BS,UdyNO,OAAL,CAAa,aAAb,CAA2B,KAAK,CAAC,OAAjC,EAA0C,UAAU,CAAC,OAArD;AxIswChB,AwIrwCa,OAND,MAOK,IAAI,KAAK,CAAC,UAAV,EACL;AxIowCZ,AwInwCgB,aAAK,OAAL,CAAa,aAAb,CAA2B,KAAK,CAAC,OAAjC,EAA0C,KAAK,CAAC,UAAhD;AxIowChB,AwInwCa,A3E9ZL,IAAA,G2E2ZS,E3E3ZL,CAAC,G2EgaD,Y3EhaJ,GAAuB,eAAe,KAAK,KAA3C;A7DkqDR,AwIjwCgB,aAAK,OAAL,CAAa,SAAb,CAAuB,KAAK,CAAC,OAA7B;AxIkwChB,AwIjwCa,A3EhaL,QAAI,MAAJ,EACA;A7DiqDR,AwIjwCS,A3E/ZG,MAAA,KAAI,CAAC,aAAL,CAAmB,MAAnB,EAA2B,OAA3B;A7DiqDZ,A6DhqDS;A7DiqDT,AwIjwCQ,AchMG,EAAA,OdgME,OAAL,CAAa,CchMV,CAAA,MdgMH,GAAwB,AchMrB,CAAA,IdgM0B,CchM1B,GAAP,KdgMI,OchMJ;AtJk8CJ,AwIjwCK,Ac/LG,AzFhOA,G2E2XJ,Kc3JQ,AzFhOA,KyFgOK,GzFhOG,KAAK,IyFgOb,CAAkB,AzFhOtB,EACA,IyF+NI,GAA2B,CAA/B,EACA;AtJg8CR,AsJ/7CY,AzFhOA,MAAA,KyFgOK,AzFhOD,CAAC,IAAL,KyFgOA;AtJg8CZ,AsJ/7CY,AzFhOH,WyFgOQ,UAAL;AtJg8CZ,AsJ/7CY,WAAK,YAAL,CAAkB,MAAlB,GAA2B,CAA3B;AtJg8CZ,AsJ/7CS;AtJg8CT,A6DjqDK;A7DkqDL,AsJ/7CQ,WAAO,IAAP;AtJg8CR,AsJ/7CK,GAVM;AtJ08CX;AACA;AACA;AACA,AwIlwCW,AtFzXX,EsFyXW,EtFzXE,OsFyXF,AtFzXS,CsFyXT,EtFzXY,OsFyXZ,CAAA,cAAA,GAAP,UAAsB,IAAtB,EAAwC,kBAAxC,EAAkE;AxImwCtE,AwInwC4C,QAAA,kBAAA,KAAA,KAAA,CAAA,EAAA;AxIowC5C,AwIpwC4C,MAAA,kBAAA,GAAA,KAAA;AxIqwC5C,AwIrwCsE,A3E7ZlE,EAAA,YAAA,CAAA,SAAA,CAAA,IAAA,GAAA,UAAK,WAAL,EAA6B;A7DmqDjC,A6DjqDQ,IAAA,MAAA,CAAA,SAAA,CAAM,IAAN,CAAU,IAAV,CAAU,IAAV,EAAW,WAAX;A7DkqDR,AwIrwCQ,QAAM,MAAM,GAAG,MAAA,CAAA,SAAA,CAAM,cAAN,CAAoB,IAApB,CAAoB,IAApB,EAAqB,IAArB,CAAf;AxIswCR,A6DjqDQ,IAAA,WAAW,CAAC,MAAZ,GAAqB,mBAAQ,gBAA7B;A7DkqDR,AwIrwCQ,A3E5ZH,GALD,K2EiaQ,CAAC,kBAAL,EACA;AxIqwCR,AwIpwCY,Ac5LD,EAAA,Sd4LM,IAAI,CAAC,Ec5LX,Cd4Lc,Ac5Ld,Cd4LM,EAAW,CAAC,GAAG,Ec5LrB,CAAA,Ed4L0B,Oc5L1B,Cd4LqB,CAAc,Cc5L1C,Kd4LQ,EAA0C,CAAC,Ec3L/C,Cd2LkD,CAA9C,EAAiD,Cc5LzD,Cd4L2D,CAAnD,Ac1LJ,Ed2LI,Oc7LR,EAGI,SAHJ,EAII,MAJJ,EAIyB;AtJ67C7B,AwInwCgB,Ac5LR,ApG5LJ,AWtCA,EXsCA,AWtCA,CXsCC,EAAE,CATgB,EoGqMf,Id4Lc,E3E9ZlB,CAAA,E2E8ZuB,Ac5LnB,Gd4LsB,Ec5LtB,EzFlOJ,C2E8Z+B,A3E9Z/B,EyFkOI,CAAA,EAAA,Gd4LsB,CAAc,CAAd,CAAd,K3E9ZZ,GAAA,UAAiB,WAAjB,EAA2C,KAA3C,EAA0D,eAA1D,EAAmF;A7DkqDvF,AsJh8CQ,AzFhOA,MyFgOA,EzFhOI,OyFgOJ,GAAA,IAAA,CzFhOmB,KAAK,SAAxB,EACA;A7DgqDR,AwInwCgB,Ac9LmB,AzF9NvB,MAAA,M2E4ZQ,KAAK,CAAC,G3E5ZC,GAAG,C2E4Zd,EACA,E3E7ZmB,eAAvB;A7DgqDZ,AwIlwCoB,A3E7ZX,U2E6ZW,KAAK,CAAC,eAAN;AxImwCpB,AwIlwCiB,AchMT,QAAA,SAAA,KAAA,KAAA,CAAA,EAAA;AtJm8CR,AwIlwCa,AcjML,AzF5NA,MyF4NA,EzF5NI,CAAC,KAAK,CyF4NV,GAAA,CzF5NK,CAAW,EyF4NhB,GzF5NK,CAAL,EACA;A7D+pDR,AwIlwCS,AclM0B,AzF1NvB,YAAM,IAAI,KAAJ,CAAU,WAAS,KAAT,GAAc,mBAAxB,CAAN;A7D+pDZ,A6D9pDS;A7D+pDT,AwIlwCQ,AcnMA,QAAA,GdmMO,GcnMP,GdmMA,EcnMA,KAAA,CAAA,EAAA;AtJs8CR,AwIlwCK,AcpMG,AzFxNA,G2E0YG,GclLH,EzFxNI,CAAC,GyFwNL,EzFxNU,CyFwNV,IAAA,UzFxNI,IACG,WAAW,CAAC,kBADf,IAEG,MAAM,CAAC,IAAP,CAAY,WAAW,CAAC,WAAxB,EAAqC,MAArC,GAA8C,CAFrD,EAGA;A7D4pDR,AsJv8C6B,ApGpLzB,EAAA,EAAE,EAAE,CAnBe;AlD+oDvB,A6D3pDY,UAAI,WAAW,CAAC,QAAhB,EACA;A7D2pDZ,AsJv8CQ,AzFnNQ,QyFmNF,IAAI,CzFnNG,EyFmNA,IAAI,OzFnNT,CAAmB,IyFmNd,CAAiB,KAAjB,CzFnNyB,CyFmND,AzFnNE,QAA/B,CyFmNK,CzFnNoC,CyFmND,IzFnNxC,KyFmNK,EAA8C,MAA9C,CAAb;AtJw8CR,AsJt8CQ,AzFpNK,OAHD,EyFuNC,IzFlND,QyFkNJ,CAAkB,IAAlB,CAAuB,IAAvB;AtJu8CR,AsJt8CQ,AzFlNQ,SyFkNH,KAAL,AzFlNc,IAAI,KAAJ,CAAU,yDAAV,CAAN;A7DypDhB,AsJr8CQ,AzFnNK,WyFmNE,IAAP;AtJs8CR,AsJr8CK,AzFnNI,GyFuME,EzFpNH,MAeA;A7DupDR;AACA,AwInwCc,A3EnZF,E2EmZE,I3EnZF,K2EmZE,CAAA,K3EnZS,CAAC,G2EmZV,CAAA,E3EnZF,GAAqB,W2EmZnB,GAAV,K3EnZqC,O2EmZrC,oB3EnZ6B,GAAsC,KAA3D;A7DupDZ,AwIjwCK,A3ErZO,G2EkZE,G3ElZF,WAAW,CAAC,kBAAZ,GAAiC,KAAK,WAAtC;A7DupDZ,AkD3nDI,AW1BQ,EX0BR,CAAC,EAAE,CA7BgB,KWGN,KAAL,CAAW,KAAX,IAAoB,WAApB;A7DspDZ,A6DrpDS;A7DspDT;AACA,A6DrpDQ,QAAI,WAAW,CAAC,KAAZ,IAAqB,CAAC,KAAK,KAA/B,EACA;A7DqpDR,A6DppDY,WAAK,MAAL,CAAY,WAAW,CAAC,SAAxB,EAAmC,WAAW,CAAC,UAA/C;A7DqpDZ,A6DppDS;A7DqpDT,AsJt8CW,EAAA,gBAAA,CAAA,SAAA,CAAA,QAAA,GAAP,UAAgB,KAAhB,EAA+B,MAA/B,EAAoD;AtJu8CxD,AwIlwCI,AcrM+B,AzF7M3B,E2EkZJ,McrM+B,CzF7MtB,E2EkZT,CAAA,EcrM+B,AzF7M3B,CAAW,IyF6MgB,CzF7M3B,C2EkZJ,CAAA,EcrM+B,AzF7MP,CyF6MO,EAAA,CdqM/B,GAAA,I3ElZI,M2EkZG,QAAP,EAAyB;AxImwC7B,AsJx8CmC,AzF3M3B,MyF2M2B,KzF3MpB,CyF2MoB,GAAA,AzF3M3B,IyF2M2B;AtJy8CnC,AwIjwCQ,AcxMgD,AzF1MnD,GA3CD,K2E6bQ,CAAC,KAAK,OAAN,IAAiB,KAAK,UAAL,IAAmB,CAApC,IAAyC,CAAC,KAAK,UAAnD,EACA;AxIiwCR,AwIhwCY,AtF3XR,EAAA,EAAE,EAAE,CAvCe;AlDmqDvB,AwIhwCS,AczMD,KdmMqB,GcnMjB,CAAC,KAAK,YAAL,CAAkB,MAAvB,EACA;AtJy8CR,AsJx8CY,aAAO,IAAP;AtJy8CZ,AsJx8CS;AtJy8CT,AwIhwCQ,QAAI,KAAK,KAAL,IAAe,KAAK,OAAL,IAAgB,KAAK,OAAL,CAAa,MAAhD,EACA;AxIgwCR,AwI/vCY,AczMJ,QAAM,GdyMG,CczMC,GAAG,IAAI,MdyMb,CAAoB,KczMX,CAAiB,EdyM1B,GczMS,EAAwB,IAAxB,EAA8B,IAA9B,EAAoC,MAApC,CAAb;AtJy8CR,AwI/vCS,AcxMD,KdqMA,GcrMM,Gd0MN,Mc1Me,GAAG,KAAK,YAAL,CAAkB,KAAK,YAAL,CAAkB,MAAlB,GAA2B,CAA7C,CAAlB;AtJw8CR,AwI7vCY,AczMJ,AzF9MJ,EAAA,EyF8MI,IAAI,CAAC,EdyMI,G3EvZb,CAAA,G2EuZQ,AczMJ,CdyMiB,EczMA,GzF9MrB,CAAA,E2EuZQ,EADJ,CcxM0B,CAAC,AzF9M/B,GAAA,MyF8MI,IzF9MG,QAAP,EAA2B,YAA3B,EAAsD,SAAtD,EAA0E;A7DqpD9E,AsJr8CQ,AzF9MA,IyF8MA,IzF9MM,KyF8MG,AzF9ME,CyF8MD,EzF9MI,GyF8Md,CAAgB,CzF9MG,GyF8MnB,CAAqB,IAArB,IzF9MA;A7DopDR,AsJp8CQ,SAAK,KAAL;AtJq8CR,AwI7vCY,ActMJ,ApGxLJ,AWxBI,EXwBJ,CAAC,EAAE,CAjDgB,GWyBV,E2EsZI,ActMF,EzFhNE,CAAC,C2EsZG,ActMb,CdsMc,C3EtZD,CAAb,C2EsZiB,CAAR,A3EtZO,CAAC,C2EsZG,CAAC,C3EtZD,E2EsZI,KAAK,K3EtZG,CAAC,E2EsZT,CAAc,E3EtZtC,EAAwC,CAAC,C2EsZrC,C3EtZJ,C2EsZ8C,CAAC,A3ErZ/C,G2EqZkD,CAA9C,EAAiD,EAAE,CAAnD,EACA;AxI6vCZ,AwI5vCgB,AcvMX,AzF/MO,GyF6LD,OzF7LO,G2EsZG,C3EtZC,GAAG,I2EsZT,CAAc,A3EtZA,C2EsZd,EAAiB,E3EtZR,CAAW,CAAX,CAAb,C2EsZI,CAAwB,QAAxB;AxI6vChB,AwI5vCa;AxI6vCb,AwI5vCS,A3EtZG,UAAI,KAAK,CAAC,CAAD,CAAL,GAAW,IAAI,CAAC,OAApB,EACA;A7DkpDZ,AwI5vCK,A3ErZW,G2E8XZ,S3E9XgB,IAAI,CAAC,KAAL,IAAc,IAAI,CAAC,QAAvB,EACA;A7DipDhB,A6DhpDoB,UAAA,IAAI,CAAC,QAAL,CAAc,MAAd,CAAqB,QAArB,EAA+B,IAA/B,EAAqC,SAArC;A7DipDpB,A6DhpDoB,UAAA,KAAK,CAAC,CAAD,CAAL,GAAW,IAAI,CAAC,OAAhB;A7DipDpB,A6DhpDiB,SAJD,MAKK,IAAI,KAAK,CAAC,CAAD,CAAL,GAAW,CAAC,CAAhB,EACL;A7D+oDhB,AsJp8CW,EAAA,gBAAA,CAAA,SAAA,CAAA,OAAA,GAAP,YAAA;AtJq8CJ,AsJn8CQ,IAAA,MAAA,CAAA,SAAA,CAAM,OAAN,CAAa,IAAb,CAAa,IAAb,EAFJ;AtJs8CJ,AkD3nDI,AWnBgB,EXmBhB,EAAE,EAAE,CA3De,GWwCH,QAAQ,CAAC,EAAT,CAAY,UAAZ,CAAuB,IAAI,CAAC,MAA5B,EAAoC,CAApC,EACI,SAAS,CAAC,cADd,EAEI,YAAY,CAAC,SAFjB,EAGI,YAAY,CAAC,UAHjB,EAII,CAJJ,EAKI,YAAY,CAAC,MALjB,EAMI,SAAS,CAAC,IANd,EAOI,IAPJ;A7D+oDpB,A6DvoDoB,UAAA,KAAK,CAAC,CAAD,CAAL,GAAW,CAAC,CAAZ;A7DwoDpB,AsJn8CQ,AzFpMS,SyFoMJ,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,YAAL,CAAkB,MAAtC,EAA8C,EAAE,CAAhD,EACA;AtJm8CR,AwI7vCc,AcrMF,AzFrMC,E2E0YC,SAAA,AcrMG,CdqMH,SAAA,CAAA,CcrMF,CAAkB,CAAlB,EAAqB,OAArB,EdqME,GAAV,UAAyB,QAAzB,EAA2C;AxI8vC/C,AwI5vCQ,ActMC,AzFrMA,I2E2YD,QAAQ,CAAC,KAAT,CAAe,KAAf;AxI6vCR,AwI3vCQ,QAAM,OAAO,GAAG,KAAK,OAArB;AxI4vCR,AwI3vCQ,AcvMA,AzFrMA,Q2E4YM,CcvMD,EzFrME,C2E4YG,GAAG,AcvMb,AzFrMA,CyFqMY,IduMM,EcvMlB,GduMA,AcvMqB,CdkMkB,AclMvC;AtJm8CR,AsJl8CQ,AzFrMH,GAjCD,MyFsOS,MAAL,GAAc,IAAd;AtJm8CR,AwI1vCQ,AcxMA,QdwMI,CcxMC,MdwML,AcxMA,CAAY,CdyMZ,KczMA,GAAqB,CAArB;AtJm8CR,AwIzvCY,AczMJ,SAAK,CdyMG,CAAC,IczMT,CdyMc,EczMA,IAAd,SdyMI,EACA;AxIyvCZ,AwIxvCgB,Ac1MR,ApGzLJ,EAAA,CAAC,EAAE,CArEgB,GoG8PV,GAAL,Cd0Ma,Ac1MJ,MAAT,GAAkB,CAAlB,Kd0MQ,GAAuB,EAAvB;AxIyvChB,AwIxvCa,Ac1ML,SAAK,GAAL,GAAW,IAAX;AtJm8CR,AsJl8CQ,SAAK,OAAL,CAAa,MAAb,GAAsB,CAAtB;AtJm8CR,AwIxvCY,Ac1MJ,SAAK,Ed0MI,Kc1MT,GAAe,IAAf,Gd0MI,CAAqB,MAArB,GAA8B,CAA9B;AxIyvCZ,AsJl8CQ,SAAK,WAAL,CAAiB,OAAjB;AtJm8CR,AwIxvCY,Ac1MJ,SAAK,Ed0MI,IAAI,CAAC,GAAG,CAAb,Ac1MJ,Ed0MoB,CAAC,Ac1MF,Gd0MK,Cc1MxB,Md0M+B,CAAC,MAA5B,EAAoC,CAAC,EAArC,EACA;AxIwvCZ,AwIvvCgB,Ac3MR,SAAK,Gd2MO,OAAO,CAAC,CAAD,Ac3MnB,Cd2MY,Ac3MM,Cd2MK,Kc3MvB,Ed2MQ,Cc3MmB,Cd4MnB,Ac5MR;AtJm8CR,AwItvCoB,Ac5MZ,AzF5LG,EAAA,OyF4LE,KzF5LF,C2EwYc,A3ExYd,IAAA,EyF4LH,CzF5LJ,EyF4LwB,IAApB,Ed4MY,CAAqB,C3ExYzB,G2EwYI,CAA0B,E3ExY1C,EAA2B,G2EwYsB,CAAC,CAAD,CAAjC;AxIuvCpB,AwItvCiB,Ac5MT,AzF3LA,SyF2LK,EzF3LE,KAAK,CAAC,CyF2Lb,CAAe,KzF3LR,CyF2LP,AzF3LqB,GyF2LG,CAAxB,EzF3LO,KAAyB,MAAM,CAAC,MAAP,KAAkB,YAAY,CAAC,KAA/D;A7D8nDR,AwItvCa,Ac5ML,AzF3LH,GAHM,MyF8LE,SAAL,GAAiB,IAAjB;AtJm8CR,AsJl8CQ,ApGzLJ,EAAA,EAAE,EAAE,CA/Ee,EoGwQV,OAAL,CAAa,MAAb,GAAsB,CAAtB;AtJm8CR,AwItvCY,Ac5MJ,SAAK,Cd4MG,KAAK,Cc5Mb,GAAe,IAAf,Od4MQ,CAAqB,MAAzB,EACA;AxIsvCZ,AwIrvCgB,Ac7MR,Qd6MQ,Cc7MH,Od6MW,Ac7MhB,Cd6MiB,Ec7MF,Id6MP,Ac7MR,Cd6MwB,IAAhB,CAAqB,IAArB,EAA2B,KAAK,eAAhC;AxIsvChB,AwIrvCa,Ac7MR,GA3BM;AtJ89CX,AwIrvCS;AxIsvCT;AACA,AwIrvCQ,QAAI,IAAJ,EACA;AxIqvCR,AwIpvCY,MAAA,QAAQ,CAAC,IAAT,CAAc,IAAd,CAAmB,IAAnB,EAAyB,KAAK,KAA9B;AxIqvCZ,AwIpvCS,AtFvYL,EAAA,GsFqW2C,YtFrW5B,EAAE,CAvFE;AlDmtDvB;AACA,A6DppDW,EAAA,YAAA,CAAA,KAAA,GAAQ,CAAR;A7DqpDX,AwIpvCQ,A3EpZR,S2EoZa,A3EpZb,O2EoZQ,CAAa,I3EpZrB,I2EoZQ,EArCuC;AxI0xC/C,AsJn8CW,AzFtMV,CA/JD,CyFqWW,AzFrWuB,gByFqWvB,CAAA,IzFrWX,CAAA,IyFqWW,CAAA,aAAA,GAAP,UAAqB,KAArB,EAAsC;AtJo8C1C,AsJl8CQ,QAAM,YAAY,GAAG,KAAK,YAA1B;AtJm8CR,AwIpvCQ,SAAK,IAAI,CAAC,GAAG,CAAR,EAAW,CAAC,GAAG,KAAK,QAAL,CAAc,MAAlC,EAA0C,CAAC,GAAG,CAA9C,EAAiD,CAAC,EAAlD,EACA;AxIovCR,AwInvCY,Ac/MJ,SAAK,Ed+MI,Ec/MA,CAAC,GAAG,CAAb,Cd+MI,CAAc,Ac/MF,Cd+MZ,Ac/Ma,Ed+MI,Cc/MD,Kd+MhB,CAAwB,Mc/MI,CAAC,Cd+M7B,Kc/MJ,EAAyC,EAAE,CAA3C,EACA;AtJk8CR,AwInvCS,Ac9MG,ApG1LR,EAAA,QoG0Lc,IAAI,CpG1LL,EoG0LQ,ApG1LN,EA/FI,UoGyRc,CAAC,CAAD,CAAzB;AtJk8CZ;AACA,AwInvCQ,Ac9MI,Id8MJ,Mc9MQ,CAAC,Cd8MD,CAAC,Ec9MI,CAAC,Ed8Md,CAAe,KAAf,Cc9MS,CAAe,OAApB,EACA;AtJi8CZ,AsJh8CgB;AtJi8ChB,AwInvCQ,Ac7MK,OANL,CdmNI,IAAJ,EACA;AxImvCR,AwIlvCY,A1E3kBZ,IAAA,E0E2kBY,QAAQ,CAAC,E1E3kBrB,E0E2kBY,CAAc,GAAd,CAAkB,IAAlB;AxImvCZ,AwIlvCS,A1E5kBT;A9D+zDA,AsJh8CY,AxF/XZ,UwF+XgB,AxF/XhB,IwF+XoB,CAAC,CxF/XrB,EAAA,EwF+XY,EACA;AtJg8CZ,AwIlvCQ,Ac7MQ,ApG5LZ,AYrM+B,EZqM/B,AYrM+B,M0E8kBvB,G1E9kBuB,CwFiYf,AxFjYe,G0E8kBhB,Cc7MK,CAAC,Ed6MF,AtFzYF,EAAE,EoG4LP,ApGnSO,CsFgfK,Cc5MZ,AxFlYmB,EAAA,MAAA,CAAA,K0E8kBvB,IAAmC,KAAK,eAAL,CAAqB,MAA5D,EACA;AxIkvCR,AwIjvCY,Ac7MQ,Md6MR,Ic7MQ,Id6MA,Ac7MI,Cd6MH,Ac7MI,Md6Mb,Ac7MQ,Cd6MQ,Ac7MI,Gd6MpB,Sc7MQ,CAAyB,KAAzB,EAAgC,QAAhC;AtJ+7CpB,AwIjvCS,Ac7MQ,SAHD,MAKA;AtJ67ChB,AwIjvCK,Ac3Me,GdmJN,OcnJM,QAAQ,CAAC,QAAT,CAAkB,KAAlB;AtJ67CpB,AsJ57CiB;AtJ67CjB;AACA,AsJ57CgB,YAAI,IAAI,CAAC,KAAL,CAAW,QAAX,CAAoB,QAAQ,CAAC,CAA7B,EAAgC,QAAQ,CAAC,CAAzC,CAAJ,EACA;AtJ47ChB,AsJ37CoB,cAAI,OAAO,GAAG,KAAd;AtJ47CpB,AkD3nDI,EAAA,gBAAgB,EAAE,EA/GC;AlD2uDvB,AsJ37CoB,cAAI,I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ACA,Gd0MQ;AxI6uChB,AwI5uCa,Ac1MD,AxFjYJ,IAAA,KAAI,CAAC,CwFiYI,ExFjYT,GAAW,IwFiYP,ExFjYa,CwFiYI,AxFjYH,GAAlB,CwFiYI;AtJu7CZ,AwI5uCS,AczMG;AtJs7CZ,AwI5uCK,AczMI,GdwLL;AxI8vCJ;AACA,AwIvuCI,Ac9MI,Ed8MJ,MAAA,Ac9MQ,Cd8MR,Ac9MS,KAAK,Sd8Md,CAAI,Mc9MK,EAAL,Cd8MA,CAAA,Ac7MA,Sd6MJ,EAAI,OAAJ,EAAS;AxIwuCb,AsJp7CY;AtJq7CZ,AsJp7CS;AtJq7CT,AkDjoDI,AYtLI,EZsLJ,EAAE,AYtLE,EZsLA,GYtLI,CAAC,MZsLJ,EYtLD,CZsLA,EAAiB,AYtLD,IAAhB;A9DwzDR,AsJp7CQ,ApG9MmC,SoG8M9B,EpG9M8B,EAAE,CAAC,GAAD,CAAF,CoG8MnC,GAAkB,KAAK,KAAvB;AtJq7CR,AsJn7CQ,ApGhN0C,GA/I3B,KoG+VT,GAAG,GAAG,KAAK,GAAjB;AtJo7CR,AsJn7CQ,QAAM,CdsMV,WctMsB,CdsMtB,EctMyB,KAAK,YAA1B;AtJo7CR,AwI5uCQ,ActMA,QAAI,KdsMG,IctMM,CdsMD,EctMe,GdsMpB,CAAW,ActMlB,CdsMO,GAAe,KAAK,cAAL,GAAsB,KAA5C;AxI6uCR,AwI5uCK,AcrMG,KdkMK,GclMD,YAAY,GAAG,IAAnB;AtJk7CR,SwI3uCI,UAAU,KAAV,EAAuB;AxI4uC3B,AwI1uCQ,AcvMA,AxFtYA,IAAA,IwFsYI,CxFtYA,C0E6kBE,A1E7kBD,GwFsYI,EduME,GAAG,EcvMV,CAAa,EduME,C1E7kBnB,GwFsYI,AxFtYkB,GwFsYI,CAA1B,CxFtYA,CwFuYA,IdsMc,GAAsB,KAApC;AxI2uCR,AsJh7CY,MAAA,SAAS,GAAG,KAAK,OAAL,CAAa,KAAK,OAAL,CAAa,MAAb,GAAsB,CAAnC,CAAZ;AtJi7CZ,AwI1uCQ,ActMI,MAAA,IdsMA,KAAK,GctMO,EdsMF,CAAd,ActMmB,EduMnB,OcvM4B,CAAC,KAAzB;AtJi7CZ,AwIzuCY,AcvMH,aduMQ,KAAL,CAAW,CAAX,GAAe,KAAK,GAAG,KAAvB;AxI0uCZ,AwIzuCS,AtF1ZL,EAAA,GAAG,EsFuZC,AtFvZC,MsF4ZD,ItF5ZE,QAAD,EAAsB;AlDooD/B,AwIvuCY,AczMJ,ApGlNA,QAAI,CoGkNC,IdyMI,AczMA,CAAC,EpGlNE,CoGkNC,CdyMT,CAAW,AtF3ZA,CsF2ZX,AtF3ZJ,EoGkNkB,ApGlNF,CsF2ZG,CAAf,QczMJ,EAA8B,CAAC,GAAG,YAAY,CAAC,MAA/C,EAAuD,CAAC,EAAxD,EACA;AtJg7CR,AwIvuCS,AcxMG,ApGnNJ,WoGmNS,UAAL;AtJg7CZ,AsJ96CY,ApGpNA,AYrLJ,IAAA,KAAI,CwFyYM,AxFzYL,IwFyYS,CpGpNH,EoGoNM,KxFzYjB,CZqLmB,EYrLC,CZqLE,AYrLD,EZqLjB,CoGoNyB,ApGrN7B,CoGqN8B,ApGpNL,CoGoNI,CAAzB,CxFzYwB,CAAC,YAAR,KAAyB,SAAzB,GACf,OAAO,CAAC,YADO,GACQ,mBAAS,mBADlB,KAC0C,CAAC,CAAC,MAAM,CAAC,iBADvE;A9DwzDR,AwIvuCQ,AcvMI,ApGpNH,UoGoNS,CduML,MAAL,EcvMmB,CduML,EcvMQ,GduMtB,CcvM0B,CAAC,SAAvB;AtJ+6CZ,AwIvuCK,AcvMO,KdoLC,KcpLK,SAAS,GAAG,IAAI,CAAC,SAAvB;AtJ+6CZ,AsJ96CY,ApGpNJ,UoGoNU,CpGpNF,CAAC,KoGoNQ,GAAG,ApGpNb,CsFuYF,EtFvYgB,CAArB,CAPuB,CAOA,OoGoNU,CAAC,IAAI,CAAC,IAAN,CAA7B,CANJ;AtJq7CR,AkDloDK,GAhKkB;AlDmyDvB,AwI7vCa,AchLD,GdgLR,GchLQ,OAAO,CAAC,KAAR,CAAc,IAAd;AtJ86CZ,AwIpuCI,EAAA,MAAA,CAAA,cAAA,CAAI,SAAA,CAAA,SAAJ,EAAI,QAAJ,EAAU;AxIquCd,AsJ76CY,UAAI,IAAI,CAAC,MAAT,EACA;AtJ66CZ,AsJ56CgB,aAAK,eAAL,CAAqB,IAAI,CAAC,MAA1B,EAAkC,IAAI,CAAC,MAAvC;AtJ66ChB,AsJ56Ca;AtJ66Cb,A8DtzDQ,IAAA,KAAI,CAAC,SAAL,GAAiB,OAAO,OAAO,CAAC,SAAf,KAA6B,QAA7B,GAAwC,OAAO,CAAC,SAAhD,GAA4D,IAA7E;A9DuzDR,AsJ56CY,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,CAApB,EAAuB,CAAC,EAAxB,EACA;AtJ46CZ,AsJ36CgB,AxF3YR,QAAK,C0E4kBT,GcjMkB,GxF3YM,CAAC,CwF2YF,GAAI,CdiM3B,AcjM4B,KAAK,CAAP,GAAY,ExF3Y7B,KAAqC,EwF2YpB,GAAwB,IxF3Y9C,EACA,GwF0YQ;AtJ46ChB,AwIzuCQ,aAAO,KAAK,KAAL,CAAW,CAAX,GAAe,KAAK,cAAL,GAAsB,MAA5C;AxI0uCR,AwIzuCK,AclMW,AxF1YH,K0EykBC,C1EzkBD,KAAY,CwF0YL,AxF1YM,CwF0YL,KAAK,CAAC,OAAX,ExF1YH,GAAiC,OAAe,CAAC,gBAAjD;A9DszDb,AsJ56CoC,AxFzY3B,S0E6kBL,UAAW,KAAX,EAAwB;AxIyuC5B,AwIvuCQ,ActMqC,UdsM/B,MAAM,GAAG,KAAK,cAAL,GAAsB,MAArC;AxIwuCR;AACA,AwIvuCQ,ActMQ,UdsMJ,EctMU,IdsMJ,KAAK,CAAf,CctMyB,CduMzB,EcvM4B,KAAK,CAAC,OAAN,CAAc,WAAlC;AtJ86ChB,AwItuCY,AcvMI,YAAM,CduML,KAAL,CAAW,AcvMI,CduMf,EcvMkB,CduMH,IcvMQ,CduMH,GAAG,GcvML,CAAa,EduM/B,IcvMI;AtJ86ChB,AwItuCS,AcvMO,OdoMR,KcpMc,CdyMd,UczMyB,GAAG,KAAK,MAAL,CAAY,MAAZ,GAAqB,CAAzC;AtJ86ChB,AwIpuCY,AcxMI,QAAA,KdwMC,KAAL,CAAW,AcxMI,CdwMf,AcxMgB,GdwMD,CAAf,IcxMI,GAAuB,sBAAW,MAAlC;AtJ66ChB,AwIpuCS;AxIquCT,AsJ56CgB,AxF1YR,IAAA,KAAI,CAAC,EwF0YO,CAAC,GxF1Yb,EwF0YkB,CAAV,AxF1YM,EwF2YN,ExF3YR;A9DuzDR,AwIpuCQ,AcvMY,WduMP,IcvMY,GduMjB,GAAe,KAAf,AcvMY,CAAiB,IAAjB;AtJ46CpB,AwIpuCK,AcvMY,KdoLH,IcvLE,MAKA;AtJ06ChB,AsJz6CoB,eAAK,MdiLX,KcjLM,CAAiB,IAAjB;AtJ06CpB,AsJz6CiB;AtJ06CjB,AwI1vCc,GAAV;AxI2vCJ,AwIvuCA,AclMgB,SdkMhB,GclMsB,IAAI,EdkM1B,CclM8B,KAAK,MAAL,CAAY,MAAZ,GAAqB,CAAtB,GAA2B,WAAxC;AtJ06ChB,AwI94DA,AtF4QI,CsF5QJ,CAA+B,AtF4Q3B,GAAG,EAAE,QsF5QT,CAAA,CtF4QU,cAAD,EAA8B,aAA9B,EAAwD;AlDmoDjE,AsJz6CgB,ApG1NmE,AYnL3E,IAAA,KAAI,CAAC,CZoLL,CoGyNY,GxF7YZ,CwF6YgB,ExF7YH,GwF6YQ,CAAb,AxF7YR,GZoLc,CAAC,cAAD,CAAd,CAA+B,aAA/B,CAD2E;AlDooDnF,AsJ16CgC,ApGxN3B,GA5LkB;AlD+zDvB,AsJ36CyC,AxF3YjC,QAAI,CwFqXA,MxFrXO,CAAC,QAAR,KAAqB,KAAzB,EACA;A9DszDR,A8DrzDY,MAAA,KAAI,CAAC,IAAL;A9DszDZ,A8DrzDS;A9DszDT,AsJ56CgB,YAAI,SAAS,IAAI,CAAC,KAAK,cAAL,CAAoB,YAApB,EAAkC,KAAlC,CAAlB,EACA;AtJ46ChB,AsJ36CoB,UAAA,SAAS,CAAC,GAAV,CAAc,OAAd,EAAqB,WAArB;AtJ46CpB,AsJ36CoB,AxF5Yf,UwF4Ye,SAAS,GAAG,IAAZ;AtJ46CpB,AsJ36CiB,SA5BL;AtJw8CZ;AACA,AwI1uCA,SAAS,CAAC,SAAV,CAAoB,wBAApB,GAA+C,SAAS,CAAC,SAAV,CAAoB,eAAnE;AxI2uCA,AsJ56CgB,ApGtNZ,EAAA,GAAG,EAAE,KoGsNW,CAAC,IpGtNX,KoGsNM,EACA,OpGvNP,EAA8B,aAA9B,EAAwD;AlDmoDjE,AsJ36CoB,ApGxN+D,UoGwN/D,CpGvNZ,QoGuNqB,GAAG,GpGvNV,CAAC,MoGuNmB,CAAC,GAAX,IpGvNV,CAAd,CoGuN4C,ApGvNb,IoGuNiB,GpGvNV,CAAC,GAAR,CAAY,CoGuNC,EAAhC,UpGvNmB,CAA/B,CAD2E;AlDooDnF,AsJ36CoB,ApGvNf,GAxMkB,OoG+ZH,SAAS,CAAC,KAAV,CAAgB,KAAhB,EAAuB,OAAvB,EAA8B,WAA9B;AtJ46CpB,AsJ36CoB,eAAK,OAAL,CAAa,IAAb,CAAkB,SAAlB;AtJ46CpB,AsJ36CoB,UAAA,YAAY,GAAG,KAAf;AtJ46CpB,AsJ36CiB,AxF7Yb,EAAA,aAAA,CAAA,SAAA,CAAA,IAAA,GAAA,UAAK,YAAL,EAA2B;A9DyzD/B,A8DzzDI,QAAA,KAAA,GAAA,IAAA;A9D0zDJ,AsJ36CgB,aAAK,MAAL,CAAY,KAAK,MAAjB,EAAyB,GAAzB,EAA8B,KAAK,CAAC,OAApC,EAA6C,WAA7C,EAA0D,IAA1D,EAAgE,KAAK,CAAC,MAAtE;AtJ46ChB,AsJ36Ca,AxF9YL,QAAI,KAAK,KAAT,EACA;A9DyzDR,AsJ36CS,AxF7YG,aAAO,KAAK,KAAZ;A9DyzDZ,A8DxzDS;A9DyzDT,AsJ36CQ,QAAM,KAAK,GAAG,KAAK,OAAL,CAAa,MAA3B;AtJ46CR,AsJ36CQ,ApGvNJ,AYtLI,EZsLJ,MoGuNU,AxF7YF,GZsLC,EAAE,CoGuNK,GAAG,GxF7YC,EwF6YI,CpGvNZ,EYtLa,GwF6YN,CAAY,EpGvNpB,EAAiB,CYtLxB,CwF6Ye,CxF5Yf,EwF4YoC,CAApC;AtJ46CR,AkDnoD6C,AYpLjC,WZoLiC,AYpL5B,QZoLoC,GAAG,CAAX,AYpLjC,GAAoB,YAApB;A9DwzDZ,AsJ36CQ,ApGzNiD,AYnLhD,GZ/Bc,KoG2aX,SAAJ,EACA;AtJ26CR,AsJ16CY,MAAA,SAAS,CAAC,GAAV,CAAc,KAAd,EAAqB,MAArB;AtJ26CZ,AsJ16CS,AxF7YD,SAAK,KAAL,GAAa,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAgB;A9DwzDjD,A8DtzDY,UAAM,MAAM,GAAG,KAAI,CAAC,MAApB;A9DuzDZ,AsJ16CQ,AxF3YI,MAAA,EwF2YA,GxF3YI,CAAC,CwF2YA,ExF3YL,GAAW,EwF2YX,CAAa,GxF3YI,CAAC,EwF2YlB,CxF3YA,IwF2YwB,CAA5B,EACA;AtJ06CR;AACA,A8DrzDY,UAAM,SAAS,GAAG,YAAA;A9DszD9B,AsJz6CY,AxF3YI,WwF2YC,CxF3YG,KAAI,CAAC,EwF2Yb,GAAiB,IAAjB,AxF3YI,EACA;A9DozDhB,AsJx6CY,AxF3YQ;A9DozDpB,AsJx6CS,AxF3YQ,KwFmSyB;AtJihD1C,AkDpoDI,EAAA,UAAU,EAAE,UAAC,QAAD,EAAsB;AlDqoDtC,AkDroDoD,AY/KpC,QAAA,GZ+KoC,CAAC,EY/K/B,CAAC,KZ+KsC,CY/K7C,EZ+KgD,CAAZ,AY/KpB,IAAhB,EZ+KuD,CAAnB;AlDsoDpD,AsJx6CQ,ApG9NgE,AY9KxD,GZ9CO,KoG0bX,AxF5YI,KwF4YC,CxF5YK,CAAC,OAAP,GAAiB,CwF4YrB,GxF5YI,CwF4YkB,KAAK,OAAL,CAAa,MAAb,KAAwB,KAAK,aAAL,CAAmB,MAArE,EACA;AtJw6CR,AsJv6CY,WAAK,aAAL,CAAmB,GAAnB,CAAuB,KAAK,OAA5B;AtJw6CZ,AsJv6CS,AxF7YO,KwF0YR,GxF1YQ,GwF+YR,ExF/YY,CAAC,MAAL,CAAY,MAAM,CAAC,KAAnB,EAA0B,MAAM,CAAC,MAAjC;A9DqzDhB,AsJr6CY,UAAM,MAAM,GACN,MAAM,GAAG,MAAT,IAAmB,cADzB;AtJs6CZ,AsJn6CY,AxFlZI,QAAA,GwFkZC,ExFlZG,CAAC,KAAL,GAAa,EwFkZjB,ExFlZI,CwFkZiB,MAAM,GAAG,IAAI,WAAJ,CAAgB,KAAK,OAArB,CAAH,GAAmC,IAAI,WAAJ,CAAgB,KAAK,OAArB,CAA9D;AtJo6CZ,AsJn6CS,KArHiC;AtJyhD1C,A8DrzDgB,YAAI,KAAI,CAAC,YAAT,EACA;A9DqzDhB,A8DpzDoB,UAAA,OAAO,CAAC,KAAI,CAAC,OAAL,EAAD,CAAP;A9DqzDpB,AsJn6CQ,AxFjZS,SwFiZJ,AxFpZG,MAKA,GwF+YR,GAAiB,KAAK,WAAL,EAAjB;AtJo6CR,A8DlzDoB,UAAA,OAAO,CAAC,KAAD,CAAP;A9DmzDpB,AsJn6CQ,AxF/YS,QwF+YL,KAAK,SAAT,EACA;AtJm6CR,AsJl6CY,AxFhZC,OApBD,IwFoaK,WAAL;AtJm6CZ,AsJl6CS,ApGpOL,EAAA,GoGiOI,MAKA,EpGtOO,EAAE,UAAC,EAAD,EAAa,EAAb,EAAuB;AlDuoDxC,AsJh6CY,ApGrOJ,AY7KI,QZ6KA,EY7KI,CwFkZC,CpGrOD,CAAC,GAAL,AY7KU,CZ6KD,AY7KE,EZ6KX,IAAe,CAAf,CoGqOA,AxFlZI,GZ6KgB,CY7KG,GZ6KC,CAAC,EY7KI,CZ6KT,AY7KU,CZ6KD,EAAT,AY7KpB,CZ6KJ,CY5KI,CZ6KJ;AlDqoDR,AsJh6CS,ApGpOG,AY7KI,QAAA,EZ6KA,EAAE,IAAI,CAAV,AY7Ka,EZ8Kb;AlDooDZ,AsJh6CK,ApGnOW,AY9KH,GwF+QT,IxFlRQ,MAKA,EZ4KW,OAAO,CAAC,CAAf;AlDooDhB,AkDnoDa,AY5KG,QAAA,MAAM,CAAC,MAAP,GAAgB,SAAhB;A9DgzDhB;AACA,AkDnoDY,AY7KI,QAAA,KZ6KG,CY7KG,CAAC,KZ6KG,CAAC,CAAf,AY7KI,GAAiB,UAAC,KAAD,EAAM;A9DizDvC,AkDnoDS,KARD,MASK,IAAI,IAAI,CAAC,GAAL,CAAS,EAAT,IAAe,CAAf,IAAoB,IAAI,CAAC,GAAL,CAAS,EAAT,CAAxB,EACL;AlDkoDR,AkDjoDY,AY9KQ,UZ8KJ,AY9KI,EZ8KF,GAAG,CAAT,AY9Kc,CAAC,CZ+Kf,IY/Kc,CAAN;A9DgzDpB,AkDhoDgB,eAAO,OAAO,CAAC,CAAf;AlDioDhB,AkDhoDa,AYhLO,UAAA,KAAI,CAAC,OAAL,CAAa,IAAb,CAAkB,KAAlB;A9DizDpB,A8DhzDiB,SALD;A9DszDhB,AsJj6Cc,ApG/NF,AYhLC,EwF+YC,WpG/NK,KoG+NL,CAAA,CpG/NY,CAAC,CAAf,MoG+NE,CAAA,cAAA,GAAV,UAAyB,MAAzB,EAAwD,MAAxD,EAAqF;AtJk6CzF,AsJh6CQ,ApGhOC,AYhLA,KZwKI,AYlNQ,CAAb,EwF0bI,CAAC,EpG/NA,IoG+ND,ApG/NK,EAAE,EoG+NI,CAAC,ApG/NF,CAAT,EACL,GoG8NA,EACA;AtJg6CR,AsJ/5CY,ApG/NA,AYjLJ,UZiLQ,CYjLD,CZiLG,CoG+NC,EpG/NE,CAAT,AYjLQ,EwFgZR,ApG9NA,GYlLJ;A9DgzDR,AsJ/5CS,ApG9NO,AYlLX,GAzDD,YZ2OmB,OAAO,CAAC,EAAf;AlD8nDhB,AkD7nDa;AlD8nDb,AsJ/5CQ,QAAI,MAAM,CAAC,OAAP,CAAe,WAAf,KAA+B,MAAM,CAAC,OAAP,CAAe,WAAlD,EACA;AtJ+5CR,AsJ95CY,ApG/NA,aoG+NO,ApG/NA,KoG+NP,EpG/Nc,CAAC,EAAf;AlD8nDZ,AsJ95CS,ApG/NA,KARI,MASA,IAAI,EAAE,GAAG,CAAT,EACL;AlD4nDR,AkD3nDY,aAAO,OAAO,CAAC,EAAf;AlD4nDZ,AsJ95CQ,ApG7NC,QoG6NG,MAAM,CAAC,KAAP,GAAe,MAAM,CAAC,KAAtB,KAAgC,MAAM,CAAC,KAAP,GAAe,MAAM,CAAC,KAA1D,EACA;AtJ85CR,AsJ75CY,aAAO,KAAP;AtJ85CZ,AsJ75CS,ApG9ND,WAAO,OAAO,CAAC,EAAf;AlD4nDR,AkD3nDK,AYrLD,EAAA,CZtFmB,YYsFnB,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;A9DizDJ,AsJ75CQ,AxFpZJ,QwFoZQ,AxFpZR,CwFoZS,CAAE,GxFpZX,GwFoZ+B,AxFpZ/B,CwFoZgC,GxFpZhC,GwFoZQ,KAAmC,CAAC,CAAE,MAAoB,CAAC,MAA/D,EACA;AtJ65CR,AsJ55CY,aAAO,KAAP;AtJ65CZ,AsJ55CS,AxFrZD,QAAM,MAAM,GAAG,KAAK,MAApB;A9DkzDR;AACA,AsJ55CQ,AxFrZA,QAAI,GwFqZG,ExFrZE,EwFqZT,MxFrZI,KAAkB,IAAtB,EACA;A9DizDR,AsJ55CK,AxFpZO,GwF6XE,UxF7XK,KAAK,QAAZ;A9DizDZ,A8DhzDS;A9DizDT;AACA,A8DjzDQ,QAAI,KAAK,MAAL,KAAgB,IAAhB,IAAwB,CAAC,MAAM,CAAC,iBAApC,EACA;A9DizDR,A8DhzDY,aAAO,OAAO,CAAC,OAAR,CAAgB,IAAhB,CAAP;A9DizDZ,AkD3nDI,AYrLK,EZqLL,uBAAuB,EAAE,UAAC,MAAD,EAAiB,QAAjB,EAAwC,EAAxC,EAAgD,EAAhD,EAAsD;AlD4nDnF,AkD5nDqE,QAAA,EAAA,KAAA,KAAA,CAAA,EAAA;AlD6nDrE,AkD7nDqE,AYnL7D,MZmL6D,EAAA,CYnLxD,EZmLwD,CAAA,KYnL7D,GAAiB,MAAM,CAAC,iBAAP,CAAiC,MAAjC,EACb,CADa,EACV,CADU,EACP,MAAM,CAAC,KADA,EACO,MAAM,CAAC,MADd,EAEb;A9D+yDZ,AsJ75Cc,ApGjO6D,AYhL3D,EwFiZF,IxFjZE,YwFiZF,CAAA,GxFjZkB,EAAE,IwFiZpB,CAAA,AxFjZyB,SAAL,KAAmB,EwFiZvC,GAAV,YAAA,MxFjZ6D,MAA/B,GAAwC,aAAxC,GAAwD;A9D+yD1F,AsJ55CQ,AxFpZI,KAFa,EAKZ,CwFiZD,GxFtZa,CAKP,CwFiZD,KAAL,IxFjZO,CwFiZQ,KAAK,AxFjZd,EAAoB,QwFiZ1B,IAAkC,CAAC,KAAK,YAAL,CAAkB,MAAzD,EACA;AtJ45CR,AsJ35CY,ApGrOiE,AY5K7D,QZ4K6D,EAAA,AY5KzD,GwFiZD,EpGrO0D,AY5KrD,CAAC,EwFiZb,EpGrOiE,CAAA,EAAA,EY5K7D,EACA;A9D4yDhB,AsJ35CS,ApGtOoE,AY1KzD,MZ0KyD,EAAA,GAAA,CAAA,GY1KlD,OAAO,CAAC,MAAR,EAAP;A9D4yDpB,AkDloDmF,AYzKlE,KZyKkE;AlDmoDnF,AsJ35CQ,SAAK,IAAI,CAAC,GAAG,CAAR,EAAW,CAAC,GAAG,KAAK,YAAL,CAAkB,MAAtC,EAA8C,CAAC,GAAG,CAAlD,EAAqD,CAAC,EAAtD,EACA;AtJ25CR,AsJ15CY,AxFlZI,MAAA,IwFkZE,CxFlZE,CAAC,EwFkZC,GAAG,CxFlZT,GAAc,CwFkZA,KxFlZd,OwFkZS,CAAkB,CAAlB,CAAb;AtJ25CZ,AsJ15CY,ApGxOJ,QAAM,EoGwOI,CpGxOD,GoGwOK,ApGxOM,GoGwOH,IAAI,CAAC,QpGxOc,CoGwOhC,ApGxOiC,OAAO,CAAC,GAAR,CAAY,QAAZ,CAAD,CAApC;AlDmoDR,AsJ15CY,ApGvOJ,AY5KQ,IZ4KR,EY5KQ,CZ4KL,CAAC,EoGuOM,ApGvOV,CY5KY,CAAC,CZ4KJ,CoGuOK,CpGvOd,EoGuOiB,CxFnZT,GwFmZa,CAAC,SAAlB;AtJ25CZ,AkDjoDQ,IAAA,GAAG,CAAC,EAAJ,GAAS,EAAT;AlDkoDR,AsJ15CY,ApGvOJ,AY7KQ,IZ6KR,EY7KQ,IwFoZA,ApGvOF,CAAC,AY7KK,CAAC,EwFoZD,GpGvOZ,CoGuOgB,ApGvOF,C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BJ,EAAA,MmG0nBU,GnG1nBV,CAAA,CmG0nBe,GAAG,KAAK,AnG1nBvB,CAAA,KmG0nBI,enG1nBJ,GAAA,YAAA;AnD8/DJ,AsJn4CQ,AnGznBA,QmGynBM,AnGznBA,EAAE,CmGynBC,EnGznBE,CmGynBC,InGznBI,CmGynBC,GAAjB,UnGznBA;AnD6/DR,AsJn4CQ,QAAM,MAAM,GAAG,KAAK,MAApB;AtJo4CR,AsJn4CQ,AnGznBA,QmGynBM,AnGznBF,KAAK,KmGynBO,GAAG,AnGznBf,KmGynBoB,AnGznBF,KAAK,KmGynB3B,CALJ,SnGpnBI,EACA;AnD4/DR,A+DjmEQ,IAAA,KAAI,CAAC,KAAL,GAAa,IAAb;A/DkmER,AsJl4CQ,AnGznBI,MAAA,EmGynBE,AnGznBA,CAAC,CAAH,GAAO,GmGynBG,EnGznBE,CmGynBC,EnGznBN,EmGynBU,CnGznBC,KAAK,KmGynBV,AnGznBK,CmGynBW,AnGznBA,CAA7B,ImGynBkC,CAAC,MAAN,GAAe,CAAf,GAAmB,CAAnC,CAAjB;AtJm4CR,AsJl4CQ,AnGznBI,AYtGJ,MZsGI,EmGynBE,AnGznBA,AYtGF,CZsGG,CAAH,CmGynBK,EnGznBE,CmGynBC,CvF/tBD,CAAC,EuF+tBI,AnGznBA,GAAL,GAAW,AYtGlB,KZsGuB,AYtGF,CuF+tBb,CAAiB,GnGznBP,AYtGtB,CZsGiC,CAA7B,AYrGJ,GuF8tBY,CAAZ;AtJm4CR,AsJl4CQ,AnGznBI,AYrGA,MZqGA,AYrGA,EuF8tBE,AnGznBA,CAAC,CAAH,CmGynBK,AvF9tBD,CAAC,CZqGE,CmGynBC,EvF9tBR,EuF8tBY,AnGznBA,GAAL,GAAW,KmGynBV,AnGznBe,CmGynBC,InGznBN,CAAW,CAA7B,EmGynBQ,CAAZ;AtJm4CR,AsJj4CQ,AnG1nBI,AYrGH,MZqGG,EmG0nBA,AnG1nBE,CmG0nBD,AnG1nBE,CAAH,EmG0nBI,CAAR,AnG1nBW,KAAK,GAAL,GAAW,KAAK,KAAL,CAAW,CAA7B;AnD4/DZ,AmD1/DY,MAAA,EAAE,CAAC,EAAH,GAAQ,KAAK,QAAL,CAAc,CAAd,IAAoB,KAAK,KAAL,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MuFsuB6B,AnGtnBjC,CmGsnBkC,AnGtnBlC,ImGsnBsC,CAAC,IAAN,AnGtnBrC,CmGsnBQ,CnGtnBJ,UAAJ,EAAY;AnD8+DhB,AsJt3CY,AvFvuBI,MuFuuBJ,OAAO,CAAC,KAAR,CAAc,IAAd;AtJu3CZ,A+D7lEa;A/D8lEb,AsJt3CY,UAAI,IAAI,CAAC,MAAT,EACA;AtJs3CZ,AsJr3CgB,AvFxuBJ,UAAM,GuFwuBG,KvFxuBK,GAAG,OuFwuBb,CAAqB,CvFxuBC,CAAC,EuFwuBE,CAAC,EvFxuB9B,IuFwuBI,EAAkC,IAAI,CAAC,MAAvC;AtJs3ChB,AsJr3Ca,AvFxuBD,UAAM,SAAS,GAAG,SAAS,CAAC,MAA5B;A/D8lEZ,AsJr3CS,SnG9nBL,YAAA;AnDo/DJ,AsJr3CK,AnG7nBG,AY3GI,GuF0tBE,OvF1tBE,CAAC,EZ2GF,KAAK,CY3GJ,IAAa,CAAC,GZ2GtB,MY3GI,EACA;A/D6lEZ,AmDl/DK,AY1GW,KZuGA,SYvGM,IAAI,KAAJ,CAAU,sFAAV,CAAN;A/D6lEhB,A+D5lEa,OAbc,EZwHvB,UAAa,KAAb,EAA0B;AnDk/D9B,AmDh/DQ,UAAI,KAAK,SAAL,KAAmB,KAAvB,EACA;AnDg/DR,AmD/+DY,aAAK,SAAL,GAAiB,KAAjB;AnDg/DZ,AmD/+DY,AY7GA,UAAI,GZ6GC,EY7GI,GAAG,KZ6GZ,GY7GoB,GAAG,KAAI,CAAC,KAA5B;A/D6lEZ,AmD/+DS,AY7GG,UAAI,MAAM,GAAG,SAAS,GAAG,KAAI,CAAC,KAA9B;A/D6lEZ,AmD/+DK,KAZW;AnD4/DhB,AsJt3Cc,AvFtuBF,EuFsuBE,QvFtuBE,KAAI,CAAC,EuFsuBP,CAAA,EnGtoBE,OmGsoBF,CAAA,CvFtuBE,IAAuB,KAAI,CAAC,IuFsuB9B,GAAV,QvFtuBQ,EACA,EuFquBR;AtJu3CJ,AsJr3CQ,AvFtuBQ,QuFsuBF,AvFtuBE,KAAK,CuFsuBD,EvFtuBI,CuFsuBD,IvFtuBK,CuFsuBA,AvFtuBC,OuFsuBrB,OvFtuBgB,IAAuB,KAAI,CAAC,eAAL,GAAuB,SAAvB,GAAmC,QAAlE;A/D4lEhB,AsJr3CQ,AnGzoBQ,AY7FA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","file":"pygame-zero.js","sourceRoot":"../src","sourcesContent":["/*!\n * matter-js 0.16.1 by @liabru 2021-01-31\n * http://brm.io/matter-js/\n * License MIT\n * \n * The MIT License (MIT)\n * \n * Copyright (c) Liam Brummitt and contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory((function webpackLoadOptionalExternalModule() { try { return require(\"poly-decomp\"); } catch(e) {} }()));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Matter\", [\"poly-decomp\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Matter\"] = factory((function webpackLoadOptionalExternalModule() { try { return require(\"poly-decomp\"); } catch(e) {} }()));\n\telse\n\t\troot[\"Matter\"] = factory(root[\"decomp\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__27__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 24);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\n/**\n* The `Matter.Common` module contains utility functions that are common to all modules.\n*\n* @class Common\n*/\n\nvar Common = {};\n\nmodule.exports = Common;\n\n(function() {\n\n    Common._nextId = 0;\n    Common._seed = 0;\n    Common._nowStartTime = +(new Date());\n\n    /**\n     * Extends the object in the first argument using the object in the second argument.\n     * @method extend\n     * @param {} obj\n     * @param {boolean} deep\n     * @return {} obj extended\n     */\n    Common.extend = function(obj, deep) {\n        var argsStart,\n            args,\n            deepClone;\n\n        if (typeof deep === 'boolean') {\n            argsStart = 2;\n            deepClone = deep;\n        } else {\n            argsStart = 1;\n            deepClone = true;\n        }\n\n        for (var i = argsStart; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            if (source) {\n                for (var prop in source) {\n                    if (deepClone && source[prop] && source[prop].constructor === Object) {\n                        if (!obj[prop] || obj[prop].constructor === Object) {\n                            obj[prop] = obj[prop] || {};\n                            Common.extend(obj[prop], deepClone, source[prop]);\n                        } else {\n                            obj[prop] = source[prop];\n                        }\n                    } else {\n                        obj[prop] = source[prop];\n                    }\n                }\n            }\n        }\n        \n        return obj;\n    };\n\n    /**\n     * Creates a new clone of the object, if deep is true references will also be cloned.\n     * @method clone\n     * @param {} obj\n     * @param {bool} deep\n     * @return {} obj cloned\n     */\n    Common.clone = function(obj, deep) {\n        return Common.extend({}, deep, obj);\n    };\n\n    /**\n     * Returns the list of keys for the given object.\n     * @method keys\n     * @param {} obj\n     * @return {string[]} keys\n     */\n    Common.keys = function(obj) {\n        if (Object.keys)\n            return Object.keys(obj);\n\n        // avoid hasOwnProperty for performance\n        var keys = [];\n        for (var key in obj)\n            keys.push(key);\n        return keys;\n    };\n\n    /**\n     * Returns the list of values for the given object.\n     * @method values\n     * @param {} obj\n     * @return {array} Array of the objects property values\n     */\n    Common.values = function(obj) {\n        var values = [];\n        \n        if (Object.keys) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                values.push(obj[keys[i]]);\n            }\n            return values;\n        }\n        \n        // avoid hasOwnProperty for performance\n        for (var key in obj)\n            values.push(obj[key]);\n        return values;\n    };\n\n    /**\n     * Gets a value from `base` relative to the `path` string.\n     * @method get\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} The object at the given path\n     */\n    Common.get = function(obj, path, begin, end) {\n        path = path.split('.').slice(begin, end);\n\n        for (var i = 0; i < path.length; i += 1) {\n            obj = obj[path[i]];\n        }\n\n        return obj;\n    };\n\n    /**\n     * Sets a value on `base` relative to the given `path` string.\n     * @method set\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {} val The value to set\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} Pass through `val` for chaining\n     */\n    Common.set = function(obj, path, val, begin, end) {\n        var parts = path.split('.').slice(begin, end);\n        Common.get(obj, path, 0, -1)[parts[parts.length - 1]] = val;\n        return val;\n    };\n\n    /**\n     * Shuffles the given array in-place.\n     * The function uses a seeded random generator.\n     * @method shuffle\n     * @param {array} array\n     * @return {array} array shuffled randomly\n     */\n    Common.shuffle = function(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Common.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    };\n\n    /**\n     * Randomly chooses a value from a list with equal probability.\n     * The function uses a seeded random generator.\n     * @method choose\n     * @param {array} choices\n     * @return {object} A random choice object from the array\n     */\n    Common.choose = function(choices) {\n        return choices[Math.floor(Common.random() * choices.length)];\n    };\n\n    /**\n     * Returns true if the object is a HTMLElement, otherwise false.\n     * @method isElement\n     * @param {object} obj\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\n     */\n    Common.isElement = function(obj) {\n        if (typeof HTMLElement !== 'undefined') {\n            return obj instanceof HTMLElement;\n        }\n\n        return !!(obj && obj.nodeType && obj.nodeName);\n    };\n\n    /**\n     * Returns true if the object is an array.\n     * @method isArray\n     * @param {object} obj\n     * @return {boolean} True if the object is an array, otherwise false\n     */\n    Common.isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n\n    /**\n     * Returns true if the object is a function.\n     * @method isFunction\n     * @param {object} obj\n     * @return {boolean} True if the object is a function, otherwise false\n     */\n    Common.isFunction = function(obj) {\n        return typeof obj === \"function\";\n    };\n\n    /**\n     * Returns true if the object is a plain object.\n     * @method isPlainObject\n     * @param {object} obj\n     * @return {boolean} True if the object is a plain object, otherwise false\n     */\n    Common.isPlainObject = function(obj) {\n        return typeof obj === 'object' && obj.constructor === Object;\n    };\n\n    /**\n     * Returns true if the object is a string.\n     * @method isString\n     * @param {object} obj\n     * @return {boolean} True if the object is a string, otherwise false\n     */\n    Common.isString = function(obj) {\n        return toString.call(obj) === '[object String]';\n    };\n    \n    /**\n     * Returns the given value clamped between a minimum and maximum value.\n     * @method clamp\n     * @param {number} value\n     * @param {number} min\n     * @param {number} max\n     * @return {number} The value clamped between min and max inclusive\n     */\n    Common.clamp = function(value, min, max) {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n        return value;\n    };\n    \n    /**\n     * Returns the sign of the given value.\n     * @method sign\n     * @param {number} value\n     * @return {number} -1 if negative, +1 if 0 or positive\n     */\n    Common.sign = function(value) {\n        return value < 0 ? -1 : 1;\n    };\n    \n    /**\n     * Returns the current timestamp since the time origin (e.g. from page load).\n     * The result will be high-resolution including decimal places if available.\n     * @method now\n     * @return {number} the current timestamp\n     */\n    Common.now = function() {\n        if (typeof window !== 'undefined' && window.performance) {\n            if (window.performance.now) {\n                return window.performance.now();\n            } else if (window.performance.webkitNow) {\n                return window.performance.webkitNow();\n            }\n        }\n\n        return (new Date()) - Common._nowStartTime;\n    };\n    \n    /**\n     * Returns a random value between a minimum and a maximum value inclusive.\n     * The function uses a seeded random generator.\n     * @method random\n     * @param {number} min\n     * @param {number} max\n     * @return {number} A random number between min and max inclusive\n     */\n    Common.random = function(min, max) {\n        min = (typeof min !== \"undefined\") ? min : 0;\n        max = (typeof max !== \"undefined\") ? max : 1;\n        return min + _seededRandom() * (max - min);\n    };\n\n    var _seededRandom = function() {\n        // https://en.wikipedia.org/wiki/Linear_congruential_generator\n        Common._seed = (Common._seed * 9301 + 49297) % 233280;\n        return Common._seed / 233280;\n    };\n\n    /**\n     * Converts a CSS hex colour string into an integer.\n     * @method colorToNumber\n     * @param {string} colorString\n     * @return {number} An integer representing the CSS hex string\n     */\n    Common.colorToNumber = function(colorString) {\n        colorString = colorString.replace('#','');\n\n        if (colorString.length == 3) {\n            colorString = colorString.charAt(0) + colorString.charAt(0)\n                        + colorString.charAt(1) + colorString.charAt(1)\n                        + colorString.charAt(2) + colorString.charAt(2);\n        }\n\n        return parseInt(colorString, 16);\n    };\n\n    /**\n     * The console logging level to use, where each level includes all levels above and excludes the levels below.\n     * The default level is 'debug' which shows all console messages.  \n     *\n     * Possible level values are:\n     * - 0 = None\n     * - 1 = Debug\n     * - 2 = Info\n     * - 3 = Warn\n     * - 4 = Error\n     * @property Common.logLevel\n     * @type {Number}\n     * @default 1\n     */\n    Common.logLevel = 1;\n\n    /**\n     * Shows a `console.log` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method log\n     * @param ...objs {} The objects to log.\n     */\n    Common.log = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.log.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.info` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method info\n     * @param ...objs {} The objects to log.\n     */\n    Common.info = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 2) {\n            console.info.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method warn\n     * @param ...objs {} The objects to log.\n     */\n    Common.warn = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.warn.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Returns the next unique sequential ID.\n     * @method nextId\n     * @return {Number} Unique sequential ID\n     */\n    Common.nextId = function() {\n        return Common._nextId++;\n    };\n\n    /**\n     * A cross browser compatible indexOf implementation.\n     * @method indexOf\n     * @param {array} haystack\n     * @param {object} needle\n     * @return {number} The position of needle in haystack, otherwise -1.\n     */\n    Common.indexOf = function(haystack, needle) {\n        if (haystack.indexOf)\n            return haystack.indexOf(needle);\n\n        for (var i = 0; i < haystack.length; i++) {\n            if (haystack[i] === needle)\n                return i;\n        }\n\n        return -1;\n    };\n\n    /**\n     * A cross browser compatible array map implementation.\n     * @method map\n     * @param {array} list\n     * @param {function} func\n     * @return {array} Values from list transformed by func.\n     */\n    Common.map = function(list, func) {\n        if (list.map) {\n            return list.map(func);\n        }\n\n        var mapped = [];\n\n        for (var i = 0; i < list.length; i += 1) {\n            mapped.push(func(list[i]));\n        }\n\n        return mapped;\n    };\n\n    /**\n     * Takes a directed graph and returns the partially ordered set of vertices in topological order.\n     * Circular dependencies are allowed.\n     * @method topologicalSort\n     * @param {object} graph\n     * @return {array} Partially ordered set of vertices in topological order.\n     */\n    Common.topologicalSort = function(graph) {\n        // https://github.com/mgechev/javascript-algorithms\n        // Copyright (c) Minko Gechev (MIT license)\n        // Modifications: tidy formatting and naming\n        var result = [],\n            visited = [],\n            temp = [];\n\n        for (var node in graph) {\n            if (!visited[node] && !temp[node]) {\n                Common._topologicalSort(node, visited, temp, graph, result);\n            }\n        }\n\n        return result;\n    };\n\n    Common._topologicalSort = function(node, visited, temp, graph, result) {\n        var neighbors = graph[node] || [];\n        temp[node] = true;\n\n        for (var i = 0; i < neighbors.length; i += 1) {\n            var neighbor = neighbors[i];\n\n            if (temp[neighbor]) {\n                // skip circular dependencies\n                continue;\n            }\n\n            if (!visited[neighbor]) {\n                Common._topologicalSort(neighbor, visited, temp, graph, result);\n            }\n        }\n\n        temp[node] = false;\n        visited[node] = true;\n\n        result.push(node);\n    };\n\n    /**\n     * Takes _n_ functions as arguments and returns a new function that calls them in order.\n     * The arguments applied when calling the new function will also be applied to every function passed.\n     * The value of `this` refers to the last value returned in the chain that was not `undefined`.\n     * Therefore if a passed function does not return a value, the previously returned value is maintained.\n     * After all passed functions have been called the new function returns the last returned value (if any).\n     * If any of the passed functions are a chain, then the chain will be flattened.\n     * @method chain\n     * @param ...funcs {function} The functions to chain.\n     * @return {function} A new function that calls the passed functions in order.\n     */\n    Common.chain = function() {\n        var funcs = [];\n\n        for (var i = 0; i < arguments.length; i += 1) {\n            var func = arguments[i];\n\n            if (func._chained) {\n                // flatten already chained functions\n                funcs.push.apply(funcs, func._chained);\n            } else {\n                funcs.push(func);\n            }\n        }\n\n        var chain = function() {\n            // https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\n            var lastResult,\n                args = new Array(arguments.length);\n\n            for (var i = 0, l = arguments.length; i < l; i++) {\n                args[i] = arguments[i];\n            }\n\n            for (i = 0; i < funcs.length; i += 1) {\n                var result = funcs[i].apply(lastResult, args);\n\n                if (typeof result !== 'undefined') {\n                    lastResult = result;\n                }\n            }\n\n            return lastResult;\n        };\n\n        chain._chained = funcs;\n\n        return chain;\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathBefore\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathBefore = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            func,\n            Common.get(base, path)\n        ));\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathAfter\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathAfter = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            Common.get(base, path),\n            func\n        ));\n    };\n})();\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n/**\n* The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n*\n* @class Bounds\n*/\n\nvar Bounds = {};\n\nmodule.exports = Bounds;\n\n(function() {\n\n    /**\n     * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n     * @method create\n     * @param {vertices} vertices\n     * @return {bounds} A new bounds object\n     */\n    Bounds.create = function(vertices) {\n        var bounds = { \n            min: { x: 0, y: 0 }, \n            max: { x: 0, y: 0 }\n        };\n\n        if (vertices)\n            Bounds.update(bounds, vertices);\n        \n        return bounds;\n    };\n\n    /**\n     * Updates bounds using the given vertices and extends the bounds given a velocity.\n     * @method update\n     * @param {bounds} bounds\n     * @param {vertices} vertices\n     * @param {vector} velocity\n     */\n    Bounds.update = function(bounds, vertices, velocity) {\n        bounds.min.x = Infinity;\n        bounds.max.x = -Infinity;\n        bounds.min.y = Infinity;\n        bounds.max.y = -Infinity;\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertex = vertices[i];\n            if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\n            if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\n            if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\n            if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\n        }\n        \n        if (velocity) {\n            if (velocity.x > 0) {\n                bounds.max.x += velocity.x;\n            } else {\n                bounds.min.x += velocity.x;\n            }\n            \n            if (velocity.y > 0) {\n                bounds.max.y += velocity.y;\n            } else {\n                bounds.min.y += velocity.y;\n            }\n        }\n    };\n\n    /**\n     * Returns true if the bounds contains the given point.\n     * @method contains\n     * @param {bounds} bounds\n     * @param {vector} point\n     * @return {boolean} True if the bounds contain the point, otherwise false\n     */\n    Bounds.contains = function(bounds, point) {\n        return point.x >= bounds.min.x && point.x <= bounds.max.x \n               && point.y >= bounds.min.y && point.y <= bounds.max.y;\n    };\n\n    /**\n     * Returns true if the two bounds intersect.\n     * @method overlaps\n     * @param {bounds} boundsA\n     * @param {bounds} boundsB\n     * @return {boolean} True if the bounds overlap, otherwise false\n     */\n    Bounds.overlaps = function(boundsA, boundsB) {\n        return (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\n                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y);\n    };\n\n    /**\n     * Translates the bounds by the given vector.\n     * @method translate\n     * @param {bounds} bounds\n     * @param {vector} vector\n     */\n    Bounds.translate = function(bounds, vector) {\n        bounds.min.x += vector.x;\n        bounds.max.x += vector.x;\n        bounds.min.y += vector.y;\n        bounds.max.y += vector.y;\n    };\n\n    /**\n     * Shifts the bounds to the given position.\n     * @method shift\n     * @param {bounds} bounds\n     * @param {vector} position\n     */\n    Bounds.shift = function(bounds, position) {\n        var deltaX = bounds.max.x - bounds.min.x,\n            deltaY = bounds.max.y - bounds.min.y;\n            \n        bounds.min.x = position.x;\n        bounds.max.x = position.x + deltaX;\n        bounds.min.y = position.y;\n        bounds.max.y = position.y + deltaY;\n    };\n    \n})();\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n/**\n* The `Matter.Vector` module contains methods for creating and manipulating vectors.\n* Vectors are the basis of all the geometry related operations in the engine.\n* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vector\n*/\n\n// TODO: consider params for reusing vector objects\n\nvar Vector = {};\n\nmodule.exports = Vector;\n\n(function() {\n\n    /**\n     * Creates a new vector.\n     * @method create\n     * @param {number} x\n     * @param {number} y\n     * @return {vector} A new vector\n     */\n    Vector.create = function(x, y) {\n        return { x: x || 0, y: y || 0 };\n    };\n\n    /**\n     * Returns a new vector with `x` and `y` copied from the given `vector`.\n     * @method clone\n     * @param {vector} vector\n     * @return {vector} A new cloned vector\n     */\n    Vector.clone = function(vector) {\n        return { x: vector.x, y: vector.y };\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector.\n     * @method magnitude\n     * @param {vector} vector\n     * @return {number} The magnitude of the vector\n     */\n    Vector.magnitude = function(vector) {\n        return Math.sqrt((vector.x * vector.x) + (vector.y * vector.y));\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n     * @method magnitudeSquared\n     * @param {vector} vector\n     * @return {number} The squared magnitude of the vector\n     */\n    Vector.magnitudeSquared = function(vector) {\n        return (vector.x * vector.x) + (vector.y * vector.y);\n    };\n\n    /**\n     * Rotates the vector about (0, 0) by specified angle.\n     * @method rotate\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} [output]\n     * @return {vector} The vector rotated about (0, 0)\n     */\n    Vector.rotate = function(vector, angle, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = vector.x * cos - vector.y * sin;\n        output.y = vector.x * sin + vector.y * cos;\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Rotates the vector about a specified point by specified angle.\n     * @method rotateAbout\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} point\n     * @param {vector} [output]\n     * @return {vector} A new vector rotated about the point\n     */\n    Vector.rotateAbout = function(vector, angle, point, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin);\n        output.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos);\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Normalises a vector (such that its magnitude is `1`).\n     * @method normalise\n     * @param {vector} vector\n     * @return {vector} A new vector normalised\n     */\n    Vector.normalise = function(vector) {\n        var magnitude = Vector.magnitude(vector);\n        if (magnitude === 0)\n            return { x: 0, y: 0 };\n        return { x: vector.x / magnitude, y: vector.y / magnitude };\n    };\n\n    /**\n     * Returns the dot-product of two vectors.\n     * @method dot\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The dot product of the two vectors\n     */\n    Vector.dot = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y);\n    };\n\n    /**\n     * Returns the cross-product of two vectors.\n     * @method cross\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The cross product of the two vectors\n     */\n    Vector.cross = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x);\n    };\n\n    /**\n     * Returns the cross-product of three vectors.\n     * @method cross3\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} vectorC\n     * @return {number} The cross product of the three vectors\n     */\n    Vector.cross3 = function(vectorA, vectorB, vectorC) {\n        return (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x);\n    };\n\n    /**\n     * Adds the two vectors.\n     * @method add\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB added\n     */\n    Vector.add = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x + vectorB.x;\n        output.y = vectorA.y + vectorB.y;\n        return output;\n    };\n\n    /**\n     * Subtracts the two vectors.\n     * @method sub\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB subtracted\n     */\n    Vector.sub = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x - vectorB.x;\n        output.y = vectorA.y - vectorB.y;\n        return output;\n    };\n\n    /**\n     * Multiplies a vector and a scalar.\n     * @method mult\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector multiplied by scalar\n     */\n    Vector.mult = function(vector, scalar) {\n        return { x: vector.x * scalar, y: vector.y * scalar };\n    };\n\n    /**\n     * Divides a vector and a scalar.\n     * @method div\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector divided by scalar\n     */\n    Vector.div = function(vector, scalar) {\n        return { x: vector.x / scalar, y: vector.y / scalar };\n    };\n\n    /**\n     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n     * @method perp\n     * @param {vector} vector\n     * @param {bool} [negate=false]\n     * @return {vector} The perpendicular vector\n     */\n    Vector.perp = function(vector, negate) {\n        negate = negate === true ? -1 : 1;\n        return { x: negate * -vector.y, y: negate * vector.x };\n    };\n\n    /**\n     * Negates both components of a vector such that it points in the opposite direction.\n     * @method neg\n     * @param {vector} vector\n     * @return {vector} The negated vector\n     */\n    Vector.neg = function(vector) {\n        return { x: -vector.x, y: -vector.y };\n    };\n\n    /**\n     * Returns the angle between the vector `vectorB - vectorA` and the x-axis in radians.\n     * @method angle\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The angle in radians\n     */\n    Vector.angle = function(vectorA, vectorB) {\n        return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\n    };\n\n    /**\n     * Temporary vector pool (not thread-safe).\n     * @property _temp\n     * @type {vector[]}\n     * @private\n     */\n    Vector._temp = [\n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create()\n    ];\n\n})();\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vertices\n*/\n\nvar Vertices = {};\n\nmodule.exports = Vertices;\n\nvar Vector = __webpack_require__(2);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a new set of `Matter.Body` compatible vertices.\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n     * but with some additional references required for efficient collision detection routines.\n     *\n     * Vertices must be specified in clockwise order.\n     *\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n     *\n     * @method create\n     * @param {vector[]} points\n     * @param {body} body\n     */\n    Vertices.create = function(points, body) {\n        var vertices = [];\n\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i],\n                vertex = {\n                    x: point.x,\n                    y: point.y,\n                    index: i,\n                    body: body,\n                    isInternal: false\n                };\n\n            vertices.push(vertex);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas), \n     * into a `Matter.Vertices` object for the given `Matter.Body`.\n     * For parsing SVG paths, see `Svg.pathToVertices`.\n     * @method fromPath\n     * @param {string} path\n     * @param {body} body\n     * @return {vertices} vertices\n     */\n    Vertices.fromPath = function(path, body) {\n        var pathPattern = /L?\\s*([-\\d.e]+)[\\s,]*([-\\d.e]+)*/ig,\n            points = [];\n\n        path.replace(pathPattern, function(match, x, y) {\n            points.push({ x: parseFloat(x), y: parseFloat(y) });\n        });\n\n        return Vertices.create(points, body);\n    };\n\n    /**\n     * Returns the centre (centroid) of the set of vertices.\n     * @method centre\n     * @param {vertices} vertices\n     * @return {vector} The centre point\n     */\n    Vertices.centre = function(vertices) {\n        var area = Vertices.area(vertices, true),\n            centre = { x: 0, y: 0 },\n            cross,\n            temp,\n            j;\n\n        for (var i = 0; i < vertices.length; i++) {\n            j = (i + 1) % vertices.length;\n            cross = Vector.cross(vertices[i], vertices[j]);\n            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\n            centre = Vector.add(centre, temp);\n        }\n\n        return Vector.div(centre, 6 * area);\n    };\n\n    /**\n     * Returns the average (mean) of the set of vertices.\n     * @method mean\n     * @param {vertices} vertices\n     * @return {vector} The average point\n     */\n    Vertices.mean = function(vertices) {\n        var average = { x: 0, y: 0 };\n\n        for (var i = 0; i < vertices.length; i++) {\n            average.x += vertices[i].x;\n            average.y += vertices[i].y;\n        }\n\n        return Vector.div(average, vertices.length);\n    };\n\n    /**\n     * Returns the area of the set of vertices.\n     * @method area\n     * @param {vertices} vertices\n     * @param {bool} signed\n     * @return {number} The area\n     */\n    Vertices.area = function(vertices, signed) {\n        var area = 0,\n            j = vertices.length - 1;\n\n        for (var i = 0; i < vertices.length; i++) {\n            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\n            j = i;\n        }\n\n        if (signed)\n            return area / 2;\n\n        return Math.abs(area) / 2;\n    };\n\n    /**\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n     * @method inertia\n     * @param {vertices} vertices\n     * @param {number} mass\n     * @return {number} The polygon's moment of inertia\n     */\n    Vertices.inertia = function(vertices, mass) {\n        var numerator = 0,\n            denominator = 0,\n            v = vertices,\n            cross,\n            j;\n\n        // find the polygon's moment of inertia, using second moment of area\n        // from equations at http://www.physicsforums.com/showthread.php?t=25293\n        for (var n = 0; n < v.length; n++) {\n            j = (n + 1) % v.length;\n            cross = Math.abs(Vector.cross(v[j], v[n]));\n            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\n            denominator += cross;\n        }\n\n        return (mass / 6) * (numerator / denominator);\n    };\n\n    /**\n     * Translates the set of vertices in-place.\n     * @method translate\n     * @param {vertices} vertices\n     * @param {vector} vector\n     * @param {number} scalar\n     */\n    Vertices.translate = function(vertices, vector, scalar) {\n        var i;\n        if (scalar) {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x * scalar;\n                vertices[i].y += vector.y * scalar;\n            }\n        } else {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x;\n                vertices[i].y += vector.y;\n            }\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Rotates the set of vertices in-place.\n     * @method rotate\n     * @param {vertices} vertices\n     * @param {number} angle\n     * @param {vector} point\n     */\n    Vertices.rotate = function(vertices, angle, point) {\n        if (angle === 0)\n            return;\n\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                dx = vertice.x - point.x,\n                dy = vertice.y - point.y;\n                \n            vertice.x = point.x + (dx * cos - dy * sin);\n            vertice.y = point.y + (dx * sin + dy * cos);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Returns `true` if the `point` is inside the set of `vertices`.\n     * @method contains\n     * @param {vertices} vertices\n     * @param {vector} point\n     * @return {boolean} True if the vertices contains point, otherwise false\n     */\n    Vertices.contains = function(vertices, point) {\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                nextVertice = vertices[(i + 1) % vertices.length];\n            if ((point.x - vertice.x) * (nextVertice.y - vertice.y) + (point.y - vertice.y) * (vertice.x - nextVertice.x) > 0) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    /**\n     * Scales the vertices from a point (default is centre) in-place.\n     * @method scale\n     * @param {vertices} vertices\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     */\n    Vertices.scale = function(vertices, scaleX, scaleY, point) {\n        if (scaleX === 1 && scaleY === 1)\n            return vertices;\n\n        point = point || Vertices.centre(vertices);\n\n        var vertex,\n            delta;\n\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            delta = Vector.sub(vertex, point);\n            vertices[i].x = point.x + delta.x * scaleX;\n            vertices[i].y = point.y + delta.y * scaleY;\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\n     * @method chamfer\n     * @param {vertices} vertices\n     * @param {number[]} radius\n     * @param {number} quality\n     * @param {number} qualityMin\n     * @param {number} qualityMax\n     */\n    Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\n        if (typeof radius === 'number') {\n            radius = [radius];\n        } else {\n            radius = radius || [8];\n        }\n\n        // quality defaults to -1, which is auto\n        quality = (typeof quality !== 'undefined') ? quality : -1;\n        qualityMin = qualityMin || 2;\n        qualityMax = qualityMax || 14;\n\n        var newVertices = [];\n\n        for (var i = 0; i < vertices.length; i++) {\n            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n                vertex = vertices[i],\n                nextVertex = vertices[(i + 1) % vertices.length],\n                currentRadius = radius[i < radius.length ? i : radius.length - 1];\n\n            if (currentRadius === 0) {\n                newVertices.push(vertex);\n                continue;\n            }\n\n            var prevNormal = Vector.normalise({ \n                x: vertex.y - prevVertex.y, \n                y: prevVertex.x - vertex.x\n            });\n\n            var nextNormal = Vector.normalise({ \n                x: nextVertex.y - vertex.y, \n                y: vertex.x - nextVertex.x\n            });\n\n            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\n                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\n                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\n\n            var precision = quality;\n\n            if (quality === -1) {\n                // automatically decide precision\n                precision = Math.pow(currentRadius, 0.32) * 1.75;\n            }\n\n            precision = Common.clamp(precision, qualityMin, qualityMax);\n\n            // use an even value for precision, more likely to reduce axes by using symmetry\n            if (precision % 2 === 1)\n                precision += 1;\n\n            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n                theta = alpha / precision;\n\n            for (var j = 0; j < precision; j++) {\n                newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\n            }\n        }\n\n        return newVertices;\n    };\n\n    /**\n     * Sorts the input vertices into clockwise order in place.\n     * @method clockwiseSort\n     * @param {vertices} vertices\n     * @return {vertices} vertices\n     */\n    Vertices.clockwiseSort = function(vertices) {\n        var centre = Vertices.mean(vertices);\n\n        vertices.sort(function(vertexA, vertexB) {\n            return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);\n        });\n\n        return vertices;\n    };\n\n    /**\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n     * @method isConvex\n     * @param {vertices} vertices\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n     */\n    Vertices.isConvex = function(vertices) {\n        // http://paulbourke.net/geometry/polygonmesh/\n        // Copyright (c) Paul Bourke (use permitted)\n\n        var flag = 0,\n            n = vertices.length,\n            i,\n            j,\n            k,\n            z;\n\n        if (n < 3)\n            return null;\n\n        for (i = 0; i < n; i++) {\n            j = (i + 1) % n;\n            k = (i + 2) % n;\n            z = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y);\n            z -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x);\n\n            if (z < 0) {\n                flag |= 1;\n            } else if (z > 0) {\n                flag |= 2;\n            }\n\n            if (flag === 3) {\n                return false;\n            }\n        }\n\n        if (flag !== 0){\n            return true;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Returns the convex hull of the input vertices as a new array of points.\n     * @method hull\n     * @param {vertices} vertices\n     * @return [vertex] vertices\n     */\n    Vertices.hull = function(vertices) {\n        // http://geomalgorithms.com/a10-_hull-1.html\n\n        var upper = [],\n            lower = [], \n            vertex,\n            i;\n\n        // sort vertices on x-axis (y-axis for ties)\n        vertices = vertices.slice(0);\n        vertices.sort(function(vertexA, vertexB) {\n            var dx = vertexA.x - vertexB.x;\n            return dx !== 0 ? dx : vertexA.y - vertexB.y;\n        });\n\n        // build lower hull\n        for (i = 0; i < vertices.length; i += 1) {\n            vertex = vertices[i];\n\n            while (lower.length >= 2 \n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {\n                lower.pop();\n            }\n\n            lower.push(vertex);\n        }\n\n        // build upper hull\n        for (i = vertices.length - 1; i >= 0; i -= 1) {\n            vertex = vertices[i];\n\n            while (upper.length >= 2 \n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {\n                upper.pop();\n            }\n\n            upper.push(vertex);\n        }\n\n        // concatenation of the lower and upper hulls gives the convex hull\n        // omit last points because they are repeated at the beginning of the other list\n        upper.pop();\n        lower.pop();\n\n        return upper.concat(lower);\n    };\n\n})();\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Events` module contains methods to fire and listen to events on other objects.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Events\n*/\n\nvar Events = {};\n\nmodule.exports = Events;\n\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Subscribes a callback function to the given object's `eventName`.\n     * @method on\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.on = function(object, eventNames, callback) {\n        var names = eventNames.split(' '),\n            name;\n\n        for (var i = 0; i < names.length; i++) {\n            name = names[i];\n            object.events = object.events || {};\n            object.events[name] = object.events[name] || [];\n            object.events[name].push(callback);\n        }\n\n        return callback;\n    };\n\n    /**\n     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n     * @method off\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.off = function(object, eventNames, callback) {\n        if (!eventNames) {\n            object.events = {};\n            return;\n        }\n\n        // handle Events.off(object, callback)\n        if (typeof eventNames === 'function') {\n            callback = eventNames;\n            eventNames = Common.keys(object.events).join(' ');\n        }\n\n        var names = eventNames.split(' ');\n\n        for (var i = 0; i < names.length; i++) {\n            var callbacks = object.events[names[i]],\n                newCallbacks = [];\n\n            if (callback && callbacks) {\n                for (var j = 0; j < callbacks.length; j++) {\n                    if (callbacks[j] !== callback)\n                        newCallbacks.push(callbacks[j]);\n                }\n            }\n\n            object.events[names[i]] = newCallbacks;\n        }\n    };\n\n    /**\n     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n     * @method trigger\n     * @param {} object\n     * @param {string} eventNames\n     * @param {} event\n     */\n    Events.trigger = function(object, eventNames, event) {\n        var names,\n            name,\n            callbacks,\n            eventClone;\n\n        var events = object.events;\n        \n        if (events && Common.keys(events).length > 0) {\n            if (!event)\n                event = {};\n\n            names = eventNames.split(' ');\n\n            for (var i = 0; i < names.length; i++) {\n                name = names[i];\n                callbacks = events[name];\n\n                if (callbacks) {\n                    eventClone = Common.clone(event, false);\n                    eventClone.name = name;\n                    eventClone.source = object;\n\n                    for (var j = 0; j < callbacks.length; j++) {\n                        callbacks[j].apply(object, [eventClone]);\n                    }\n                }\n            }\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Composite` module contains methods for creating and manipulating composite bodies.\n* A composite body is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`, therefore composites form a tree structure.\n* It is important to use the functions in this module to modify composites, rather than directly modifying their properties.\n* Note that the `Matter.World` object is also a type of `Matter.Composite` and as such all composite methods here can also operate on a `Matter.World`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composite\n*/\n\nvar Composite = {};\n\nmodule.exports = Composite;\n\nvar Events = __webpack_require__(4);\nvar Common = __webpack_require__(0);\nvar Bounds = __webpack_require__(1);\nvar Body = __webpack_require__(6);\n\n(function() {\n\n    /**\n     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properites section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} [options]\n     * @return {composite} A new composite\n     */\n    Composite.create = function(options) {\n        return Common.extend({ \n            id: Common.nextId(),\n            type: 'composite',\n            parent: null,\n            isModified: false,\n            bodies: [], \n            constraints: [], \n            composites: [],\n            label: 'Composite',\n            plugin: {}\n        }, options);\n    };\n\n    /**\n     * Sets the composite's `isModified` flag. \n     * If `updateParents` is true, all parents will be set (default: false).\n     * If `updateChildren` is true, all children will be set (default: false).\n     * @method setModified\n     * @param {composite} composite\n     * @param {boolean} isModified\n     * @param {boolean} [updateParents=false]\n     * @param {boolean} [updateChildren=false]\n     */\n    Composite.setModified = function(composite, isModified, updateParents, updateChildren) {\n        composite.isModified = isModified;\n\n        if (updateParents && composite.parent) {\n            Composite.setModified(composite.parent, isModified, updateParents, updateChildren);\n        }\n\n        if (updateChildren) {\n            for(var i = 0; i < composite.composites.length; i++) {\n                var childComposite = composite.composites[i];\n                Composite.setModified(childComposite, isModified, updateParents, updateChildren);\n            }\n        }\n    };\n\n    /**\n     * Generic add function. Adds one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n     * @method add\n     * @param {composite} composite\n     * @param {} object\n     * @return {composite} The original composite with the objects added\n     */\n    Composite.add = function(composite, object) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeAdd', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                // skip adding compound parts\n                if (obj.parent !== obj) {\n                    Common.warn('Composite.add: skipped adding a compound body part (you must add its parent instead)');\n                    break;\n                }\n\n                Composite.addBody(composite, obj);\n                break;\n            case 'constraint':\n                Composite.addConstraint(composite, obj);\n                break;\n            case 'composite':\n                Composite.addComposite(composite, obj);\n                break;\n            case 'mouseConstraint':\n                Composite.addConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterAdd', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Optionally searching its children recursively.\n     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n     * @method remove\n     * @param {composite} composite\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the objects removed\n     */\n    Composite.remove = function(composite, object, deep) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeRemove', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                Composite.removeBody(composite, obj, deep);\n                break;\n            case 'constraint':\n                Composite.removeConstraint(composite, obj, deep);\n                break;\n            case 'composite':\n                Composite.removeComposite(composite, obj, deep);\n                break;\n            case 'mouseConstraint':\n                Composite.removeConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterRemove', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Adds a composite to the given composite.\n     * @private\n     * @method addComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @return {composite} The original compositeA with the objects from compositeB added\n     */\n    Composite.addComposite = function(compositeA, compositeB) {\n        compositeA.composites.push(compositeB);\n        compositeB.parent = compositeA;\n        Composite.setModified(compositeA, true, true, false);\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @param {boolean} [deep=false]\n     * @return {composite} The original compositeA with the composite removed\n     */\n    Composite.removeComposite = function(compositeA, compositeB, deep) {\n        var position = Common.indexOf(compositeA.composites, compositeB);\n        if (position !== -1) {\n            Composite.removeCompositeAt(compositeA, position);\n            Composite.setModified(compositeA, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < compositeA.composites.length; i++){\n                Composite.removeComposite(compositeA.composites[i], compositeB, true);\n            }\n        }\n\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite.\n     * @private\n     * @method removeCompositeAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the composite removed\n     */\n    Composite.removeCompositeAt = function(composite, position) {\n        composite.composites.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a body to the given composite.\n     * @private\n     * @method addBody\n     * @param {composite} composite\n     * @param {body} body\n     * @return {composite} The original composite with the body added\n     */\n    Composite.addBody = function(composite, body) {\n        composite.bodies.push(body);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeBody\n     * @param {composite} composite\n     * @param {body} body\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBody = function(composite, body, deep) {\n        var position = Common.indexOf(composite.bodies, body);\n        if (position !== -1) {\n            Composite.removeBodyAt(composite, position);\n            Composite.setModified(composite, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeBody(composite.composites[i], body, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeBodyAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBodyAt = function(composite, position) {\n        composite.bodies.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a constraint to the given composite.\n     * @private\n     * @method addConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @return {composite} The original composite with the constraint added\n     */\n    Composite.addConstraint = function(composite, constraint) {\n        composite.constraints.push(constraint);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a constraint from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraint = function(composite, constraint, deep) {\n        var position = Common.indexOf(composite.constraints, constraint);\n        if (position !== -1) {\n            Composite.removeConstraintAt(composite, position);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeConstraint(composite.composites[i], constraint, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeConstraintAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraintAt = function(composite, position) {\n        composite.constraints.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes all bodies, constraints and composites from the given composite.\n     * Optionally clearing its children recursively.\n     * @method clear\n     * @param {composite} composite\n     * @param {boolean} keepStatic\n     * @param {boolean} [deep=false]\n     */\n    Composite.clear = function(composite, keepStatic, deep) {\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.clear(composite.composites[i], keepStatic, true);\n            }\n        }\n        \n        if (keepStatic) {\n            composite.bodies = composite.bodies.filter(function(body) { return body.isStatic; });\n        } else {\n            composite.bodies.length = 0;\n        }\n\n        composite.constraints.length = 0;\n        composite.composites.length = 0;\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns all bodies in the given composite, including all bodies in its children, recursively.\n     * @method allBodies\n     * @param {composite} composite\n     * @return {body[]} All the bodies\n     */\n    Composite.allBodies = function(composite) {\n        var bodies = [].concat(composite.bodies);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            bodies = bodies.concat(Composite.allBodies(composite.composites[i]));\n\n        return bodies;\n    };\n\n    /**\n     * Returns all constraints in the given composite, including all constraints in its children, recursively.\n     * @method allConstraints\n     * @param {composite} composite\n     * @return {constraint[]} All the constraints\n     */\n    Composite.allConstraints = function(composite) {\n        var constraints = [].concat(composite.constraints);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            constraints = constraints.concat(Composite.allConstraints(composite.composites[i]));\n\n        return constraints;\n    };\n\n    /**\n     * Returns all composites in the given composite, including all composites in its children, recursively.\n     * @method allComposites\n     * @param {composite} composite\n     * @return {composite[]} All the composites\n     */\n    Composite.allComposites = function(composite) {\n        var composites = [].concat(composite.composites);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            composites = composites.concat(Composite.allComposites(composite.composites[i]));\n\n        return composites;\n    };\n\n    /**\n     * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n     * @method get\n     * @param {composite} composite\n     * @param {number} id\n     * @param {string} type\n     * @return {object} The requested object, if found\n     */\n    Composite.get = function(composite, id, type) {\n        var objects,\n            object;\n\n        switch (type) {\n        case 'body':\n            objects = Composite.allBodies(composite);\n            break;\n        case 'constraint':\n            objects = Composite.allConstraints(composite);\n            break;\n        case 'composite':\n            objects = Composite.allComposites(composite).concat(composite);\n            break;\n        }\n\n        if (!objects)\n            return null;\n\n        object = objects.filter(function(object) { \n            return object.id.toString() === id.toString(); \n        });\n\n        return object.length === 0 ? null : object[0];\n    };\n\n    /**\n     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n     * @method move\n     * @param {compositeA} compositeA\n     * @param {object[]} objects\n     * @param {compositeB} compositeB\n     * @return {composite} Returns compositeA\n     */\n    Composite.move = function(compositeA, objects, compositeB) {\n        Composite.remove(compositeA, objects);\n        Composite.add(compositeB, objects);\n        return compositeA;\n    };\n\n    /**\n     * Assigns new ids for all objects in the composite, recursively.\n     * @method rebase\n     * @param {composite} composite\n     * @return {composite} Returns composite\n     */\n    Composite.rebase = function(composite) {\n        var objects = Composite.allBodies(composite)\n            .concat(Composite.allConstraints(composite))\n            .concat(Composite.allComposites(composite));\n\n        for (var i = 0; i < objects.length; i++) {\n            objects[i].id = Common.nextId();\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Translates all children in the composite by a given vector relative to their current positions, \n     * without imparting any velocity.\n     * @method translate\n     * @param {composite} composite\n     * @param {vector} translation\n     * @param {bool} [recursive=true]\n     */\n    Composite.translate = function(composite, translation, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            Body.translate(bodies[i], translation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n     * @method rotate\n     * @param {composite} composite\n     * @param {number} rotation\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.rotate = function(composite, rotation, point, recursive) {\n        var cos = Math.cos(rotation),\n            sin = Math.sin(rotation),\n            bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.rotate(body, rotation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n     * @method scale\n     * @param {composite} composite\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.scale = function(composite, scaleX, scaleY, point, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + dx * scaleX,\n                y: point.y + dy * scaleY\n            });\n\n            Body.scale(body, scaleX, scaleY);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns the union of the bounds of all of the composite's bodies.\n     * @method bounds\n     * @param {composite} composite The composite.\n     * @returns {bounds} The composite bounds.\n     */\n    Composite.bounds = function(composite) {\n        var bodies = Composite.allBodies(composite),\n            vertices = [];\n\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i];\n            vertices.push(body.bounds.min, body.bounds.max);\n        }\n\n        return Bounds.create(vertices);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, before objects have been added.\n    *\n    * @event beforeAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, after objects have been added.\n    *\n    * @event afterAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, before objects have been removed.\n    *\n    * @event beforeRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, after objects have been removed.\n    *\n    * @event afterRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"composite\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage composites.\n     *\n     * @property label\n     * @type string\n     * @default \"Composite\"\n     */\n\n    /**\n     * A flag that specifies whether the composite has been modified during the current step.\n     * Most `Matter.Composite` methods will automatically set this flag to `true` to inform the engine of changes to be handled.\n     * If you need to change it manually, you should use the `Composite.setModified` method.\n     *\n     * @property isModified\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n     *\n     * @property parent\n     * @type composite\n     * @default null\n     */\n\n    /**\n     * An array of `Body` that are _direct_ children of this composite.\n     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n     *\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n    /**\n     * An array of `Constraint` that are _direct_ children of this composite.\n     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n     *\n     * @property constraints\n     * @type constraint[]\n     * @default []\n     */\n\n    /**\n     * An array of `Composite` that are _direct_ children of this composite.\n     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n     *\n     * @property composites\n     * @type composite[]\n     * @default []\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Body` module contains methods for creating and manipulating body models.\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\n* @class Body\n*/\n\nvar Body = {};\n\nmodule.exports = Body;\n\nvar Vertices = __webpack_require__(3);\nvar Vector = __webpack_require__(2);\nvar Sleeping = __webpack_require__(7);\nvar Render = __webpack_require__(10);\nvar Common = __webpack_require__(0);\nvar Bounds = __webpack_require__(1);\nvar Axes = __webpack_require__(15);\n\n(function() {\n\n    Body._inertiaScale = 4;\n    Body._nextCollidingGroupId = 1;\n    Body._nextNonCollidingGroupId = -1;\n    Body._nextCategory = 0x0001;\n\n    /**\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * Vertices must be specified in clockwise order.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {body} body\n     */\n    Body.create = function(options) {\n        var defaults = {\n            id: Common.nextId(),\n            type: 'body',\n            label: 'Body',\n            parts: [],\n            plugin: {},\n            angle: 0,\n            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\n            position: { x: 0, y: 0 },\n            force: { x: 0, y: 0 },\n            torque: 0,\n            positionImpulse: { x: 0, y: 0 },\n            constraintImpulse: { x: 0, y: 0, angle: 0 },\n            totalContacts: 0,\n            speed: 0,\n            angularSpeed: 0,\n            velocity: { x: 0, y: 0 },\n            angularVelocity: 0,\n            isSensor: false,\n            isStatic: false,\n            isSleeping: false,\n            motion: 0,\n            sleepThreshold: 60,\n            density: 0.001,\n            restitution: 0,\n            friction: 0.1,\n            frictionStatic: 0.5,\n            frictionAir: 0.01,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            },\n            slop: 0.05,\n            timeScale: 1,\n            render: {\n                visible: true,\n                opacity: 1,\n                strokeStyle: null,\n                fillStyle: null,\n                lineWidth: null,\n                sprite: {\n                    xScale: 1,\n                    yScale: 1,\n                    xOffset: 0,\n                    yOffset: 0\n                }\n            },\n            events: null,\n            bounds: null,\n            chamfer: null,\n            circleRadius: 0,\n            positionPrev: null,\n            anglePrev: 0,\n            parent: null,\n            axes: null,\n            area: 0,\n            mass: 0,\n            inertia: 0,\n            _original: null\n        };\n\n        var body = Common.extend(defaults, options);\n\n        _initProperties(body, options);\n\n        return body;\n    };\n\n    /**\n     * Returns the next unique group index for which bodies will collide.\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n     * See `body.collisionFilter` for more information.\n     * @method nextGroup\n     * @param {bool} [isNonColliding=false]\n     * @return {Number} Unique group index\n     */\n    Body.nextGroup = function(isNonColliding) {\n        if (isNonColliding)\n            return Body._nextNonCollidingGroupId--;\n\n        return Body._nextCollidingGroupId++;\n    };\n\n    /**\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n     * There are 32 available. See `body.collisionFilter` for more information.\n     * @method nextCategory\n     * @return {Number} Unique category bitfield\n     */\n    Body.nextCategory = function() {\n        Body._nextCategory = Body._nextCategory << 1;\n        return Body._nextCategory;\n    };\n\n    /**\n     * Initialises body properties.\n     * @method _initProperties\n     * @private\n     * @param {body} body\n     * @param {} [options]\n     */\n    var _initProperties = function(body, options) {\n        options = options || {};\n\n        // init required properties (order is important)\n        Body.set(body, {\n            bounds: body.bounds || Bounds.create(body.vertices),\n            positionPrev: body.positionPrev || Vector.clone(body.position),\n            anglePrev: body.anglePrev || body.angle,\n            vertices: body.vertices,\n            parts: body.parts || [body],\n            isStatic: body.isStatic,\n            isSleeping: body.isSleeping,\n            parent: body.parent || body\n        });\n\n        Vertices.rotate(body.vertices, body.angle, body.position);\n        Axes.rotate(body.axes, body.angle);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n\n        // allow options to override the automatically calculated properties\n        Body.set(body, {\n            axes: options.axes || body.axes,\n            area: options.area || body.area,\n            mass: options.mass || body.mass,\n            inertia: options.inertia || body.inertia\n        });\n\n        // render properties\n        var defaultFillStyle = (body.isStatic ? '#14151f' : Common.choose(['#f19648', '#f5d259', '#f55a3c', '#063e7b', '#ececd1'])),\n            defaultStrokeStyle = body.isStatic ? '#555' : '#ccc',\n            defaultLineWidth = body.isStatic && body.render.fillStyle === null ? 1 : 0;\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\n        body.render.lineWidth = body.render.lineWidth || defaultLineWidth;\n        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\n        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\n    };\n\n    /**\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n     * Prefer to use the actual setter functions in performance critical situations.\n     * @method set\n     * @param {body} body\n     * @param {} settings A property name (or map of properties and values) to set on the body.\n     * @param {} value The value to set if `settings` is a single property name.\n     */\n    Body.set = function(body, settings, value) {\n        var property;\n\n        if (typeof settings === 'string') {\n            property = settings;\n            settings = {};\n            settings[property] = value;\n        }\n\n        for (property in settings) {\n            if (!Object.prototype.hasOwnProperty.call(settings, property))\n                continue;\n\n            value = settings[property];\n            switch (property) {\n\n            case 'isStatic':\n                Body.setStatic(body, value);\n                break;\n            case 'isSleeping':\n                Sleeping.set(body, value);\n                break;\n            case 'mass':\n                Body.setMass(body, value);\n                break;\n            case 'density':\n                Body.setDensity(body, value);\n                break;\n            case 'inertia':\n                Body.setInertia(body, value);\n                break;\n            case 'vertices':\n                Body.setVertices(body, value);\n                break;\n            case 'position':\n                Body.setPosition(body, value);\n                break;\n            case 'angle':\n                Body.setAngle(body, value);\n                break;\n            case 'velocity':\n                Body.setVelocity(body, value);\n                break;\n            case 'angularVelocity':\n                Body.setAngularVelocity(body, value);\n                break;\n            case 'parts':\n                Body.setParts(body, value);\n                break;\n            case 'centre':\n                Body.setCentre(body, value);\n                break;\n            default:\n                body[property] = value;\n\n            }\n        }\n    };\n\n    /**\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n     * @method setStatic\n     * @param {body} body\n     * @param {bool} isStatic\n     */\n    Body.setStatic = function(body, isStatic) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.isStatic = isStatic;\n\n            if (isStatic) {\n                part._original = {\n                    restitution: part.restitution,\n                    friction: part.friction,\n                    mass: part.mass,\n                    inertia: part.inertia,\n                    density: part.density,\n                    inverseMass: part.inverseMass,\n                    inverseInertia: part.inverseInertia\n                };\n\n                part.restitution = 0;\n                part.friction = 1;\n                part.mass = part.inertia = part.density = Infinity;\n                part.inverseMass = part.inverseInertia = 0;\n\n                part.positionPrev.x = part.position.x;\n                part.positionPrev.y = part.position.y;\n                part.anglePrev = part.angle;\n                part.angularVelocity = 0;\n                part.speed = 0;\n                part.angularSpeed = 0;\n                part.motion = 0;\n            } else if (part._original) {\n                part.restitution = part._original.restitution;\n                part.friction = part._original.friction;\n                part.mass = part._original.mass;\n                part.inertia = part._original.inertia;\n                part.density = part._original.density;\n                part.inverseMass = part._original.inverseMass;\n                part.inverseInertia = part._original.inverseInertia;\n\n                part._original = null;\n            }\n        }\n    };\n\n    /**\n     * Sets the mass of the body. Inverse mass, density and inertia are automatically updated to reflect the change.\n     * @method setMass\n     * @param {body} body\n     * @param {number} mass\n     */\n    Body.setMass = function(body, mass) {\n        var moment = body.inertia / (body.mass / 6);\n        body.inertia = moment * (mass / 6);\n        body.inverseInertia = 1 / body.inertia;\n\n        body.mass = mass;\n        body.inverseMass = 1 / body.mass;\n        body.density = body.mass / body.area;\n    };\n\n    /**\n     * Sets the density of the body. Mass and inertia are automatically updated to reflect the change.\n     * @method setDensity\n     * @param {body} body\n     * @param {number} density\n     */\n    Body.setDensity = function(body, density) {\n        Body.setMass(body, density * body.area);\n        body.density = density;\n    };\n\n    /**\n     * Sets the moment of inertia (i.e. second moment of area) of the body. \n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n     * @method setInertia\n     * @param {body} body\n     * @param {number} inertia\n     */\n    Body.setInertia = function(body, inertia) {\n        body.inertia = inertia;\n        body.inverseInertia = 1 / body.inertia;\n    };\n\n    /**\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n     * They are then automatically translated to world space based on `body.position`.\n     *\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n     * Vertices must form a convex hull, concave hulls are not supported.\n     *\n     * @method setVertices\n     * @param {body} body\n     * @param {vector[]} vertices\n     */\n    Body.setVertices = function(body, vertices) {\n        // change vertices\n        if (vertices[0].body === body) {\n            body.vertices = vertices;\n        } else {\n            body.vertices = Vertices.create(vertices, body);\n        }\n\n        // update properties\n        body.axes = Axes.fromVertices(body.vertices);\n        body.area = Vertices.area(body.vertices);\n        Body.setMass(body, body.density * body.area);\n\n        // orient vertices around the centre of mass at origin (0, 0)\n        var centre = Vertices.centre(body.vertices);\n        Vertices.translate(body.vertices, centre, -1);\n\n        // update inertia while vertices are at origin (0, 0)\n        Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));\n\n        // update geometry\n        Vertices.translate(body.vertices, body.position);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n    };\n\n    /**\n     * Sets the parts of the `body` and updates mass, inertia and centroid.\n     * Each part will have its parent set to `body`.\n     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n     * @method setParts\n     * @param {body} body\n     * @param [body] parts\n     * @param {bool} [autoHull=true]\n     */\n    Body.setParts = function(body, parts, autoHull) {\n        var i;\n\n        // add all the parts, ensuring that the first part is always the parent body\n        parts = parts.slice(0);\n        body.parts.length = 0;\n        body.parts.push(body);\n        body.parent = body;\n\n        for (i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            if (part !== body) {\n                part.parent = body;\n                body.parts.push(part);\n            }\n        }\n\n        if (body.parts.length === 1)\n            return;\n\n        autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\n\n        // find the convex hull of all parts to set on the parent body\n        if (autoHull) {\n            var vertices = [];\n            for (i = 0; i < parts.length; i++) {\n                vertices = vertices.concat(parts[i].vertices);\n            }\n\n            Vertices.clockwiseSort(vertices);\n\n            var hull = Vertices.hull(vertices),\n                hullCentre = Vertices.centre(hull);\n\n            Body.setVertices(body, hull);\n            Vertices.translate(body.vertices, hullCentre);\n        }\n\n        // sum the properties of all compound parts of the parent body\n        var total = Body._totalProperties(body);\n\n        body.area = total.area;\n        body.parent = body;\n        body.position.x = total.centre.x;\n        body.position.y = total.centre.y;\n        body.positionPrev.x = total.centre.x;\n        body.positionPrev.y = total.centre.y;\n\n        Body.setMass(body, total.mass);\n        Body.setInertia(body, total.inertia);\n        Body.setPosition(body, total.centre);\n    };\n\n    /**\n     * Set the centre of mass of the body. \n     * The `centre` is a vector in world-space unless `relative` is set, in which case it is a translation.\n     * The centre of mass is the point the body rotates about and can be used to simulate non-uniform density.\n     * This is equal to moving `body.position` but not the `body.vertices`.\n     * Invalid if the `centre` falls outside the body's convex hull.\n     * @method setCentre\n     * @param {body} body\n     * @param {vector} centre\n     * @param {bool} relative\n     */\n    Body.setCentre = function(body, centre, relative) {\n        if (!relative) {\n            body.positionPrev.x = centre.x - (body.position.x - body.positionPrev.x);\n            body.positionPrev.y = centre.y - (body.position.y - body.positionPrev.y);\n            body.position.x = centre.x;\n            body.position.y = centre.y;\n        } else {\n            body.positionPrev.x += centre.x;\n            body.positionPrev.y += centre.y;\n            body.position.x += centre.x;\n            body.position.y += centre.y;\n        }\n    };\n\n    /**\n     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\n     * @method setPosition\n     * @param {body} body\n     * @param {vector} position\n     */\n    Body.setPosition = function(body, position) {\n        var delta = Vector.sub(position, body.position);\n        body.positionPrev.x += delta.x;\n        body.positionPrev.y += delta.y;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.position.x += delta.x;\n            part.position.y += delta.y;\n            Vertices.translate(part.vertices, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\n     * @method setAngle\n     * @param {body} body\n     * @param {number} angle\n     */\n    Body.setAngle = function(body, angle) {\n        var delta = angle - body.angle;\n        body.anglePrev += delta;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.angle += delta;\n            Vertices.rotate(part.vertices, delta, body.position);\n            Axes.rotate(part.axes, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n            if (i > 0) {\n                Vector.rotateAbout(part.position, delta, body.position, part.position);\n            }\n        }\n    };\n\n    /**\n     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setVelocity\n     * @param {body} body\n     * @param {vector} velocity\n     */\n    Body.setVelocity = function(body, velocity) {\n        body.positionPrev.x = body.position.x - velocity.x;\n        body.positionPrev.y = body.position.y - velocity.y;\n        body.velocity.x = velocity.x;\n        body.velocity.y = velocity.y;\n        body.speed = Vector.magnitude(body.velocity);\n    };\n\n    /**\n     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setAngularVelocity\n     * @param {body} body\n     * @param {number} velocity\n     */\n    Body.setAngularVelocity = function(body, velocity) {\n        body.anglePrev = body.angle - velocity;\n        body.angularVelocity = velocity;\n        body.angularSpeed = Math.abs(body.angularVelocity);\n    };\n\n    /**\n     * Moves a body by a given vector relative to its current position, without imparting any velocity.\n     * @method translate\n     * @param {body} body\n     * @param {vector} translation\n     */\n    Body.translate = function(body, translation) {\n        Body.setPosition(body, Vector.add(body.position, translation));\n    };\n\n    /**\n     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\n     * @method rotate\n     * @param {body} body\n     * @param {number} rotation\n     * @param {vector} [point]\n     */\n    Body.rotate = function(body, rotation, point) {\n        if (!point) {\n            Body.setAngle(body, body.angle + rotation);\n        } else {\n            var cos = Math.cos(rotation),\n                sin = Math.sin(rotation),\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.setAngle(body, body.angle + rotation);\n        }\n    };\n\n    /**\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n     * @method scale\n     * @param {body} body\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} [point]\n     */\n    Body.scale = function(body, scaleX, scaleY, point) {\n        var totalArea = 0,\n            totalInertia = 0;\n\n        point = point || body.position;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            // scale vertices\n            Vertices.scale(part.vertices, scaleX, scaleY, point);\n\n            // update properties\n            part.axes = Axes.fromVertices(part.vertices);\n            part.area = Vertices.area(part.vertices);\n            Body.setMass(part, body.density * part.area);\n\n            // update inertia (requires vertices to be at origin)\n            Vertices.translate(part.vertices, { x: -part.position.x, y: -part.position.y });\n            Body.setInertia(part, Body._inertiaScale * Vertices.inertia(part.vertices, part.mass));\n            Vertices.translate(part.vertices, { x: part.position.x, y: part.position.y });\n\n            if (i > 0) {\n                totalArea += part.area;\n                totalInertia += part.inertia;\n            }\n\n            // scale position\n            part.position.x = point.x + (part.position.x - point.x) * scaleX;\n            part.position.y = point.y + (part.position.y - point.y) * scaleY;\n\n            // update bounds\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n\n        // handle parent body\n        if (body.parts.length > 1) {\n            body.area = totalArea;\n\n            if (!body.isStatic) {\n                Body.setMass(body, body.density * totalArea);\n                Body.setInertia(body, totalInertia);\n            }\n        }\n\n        // handle circles\n        if (body.circleRadius) { \n            if (scaleX === scaleY) {\n                body.circleRadius *= scaleX;\n            } else {\n                // body is no longer a circle\n                body.circleRadius = null;\n            }\n        }\n    };\n\n    /**\n     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\n     * @method update\n     * @param {body} body\n     * @param {number} deltaTime\n     * @param {number} timeScale\n     * @param {number} correction\n     */\n    Body.update = function(body, deltaTime, timeScale, correction) {\n        var deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2);\n\n        // from the previous step\n        var frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\n            velocityPrevX = body.position.x - body.positionPrev.x,\n            velocityPrevY = body.position.y - body.positionPrev.y;\n\n        // update velocity with Verlet integration\n        body.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared;\n        body.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared;\n\n        body.positionPrev.x = body.position.x;\n        body.positionPrev.y = body.position.y;\n        body.position.x += body.velocity.x;\n        body.position.y += body.velocity.y;\n\n        // update angular velocity with Verlet integration\n        body.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared;\n        body.anglePrev = body.angle;\n        body.angle += body.angularVelocity;\n\n        // track speed and acceleration\n        body.speed = Vector.magnitude(body.velocity);\n        body.angularSpeed = Math.abs(body.angularVelocity);\n\n        // transform the body geometry\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            Vertices.translate(part.vertices, body.velocity);\n            \n            if (i > 0) {\n                part.position.x += body.velocity.x;\n                part.position.y += body.velocity.y;\n            }\n\n            if (body.angularVelocity !== 0) {\n                Vertices.rotate(part.vertices, body.angularVelocity, body.position);\n                Axes.rotate(part.axes, body.angularVelocity);\n                if (i > 0) {\n                    Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);\n                }\n            }\n\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Applies a force to a body from a given world-space position, including resulting torque.\n     * @method applyForce\n     * @param {body} body\n     * @param {vector} position\n     * @param {vector} force\n     */\n    Body.applyForce = function(body, position, force) {\n        body.force.x += force.x;\n        body.force.y += force.y;\n        var offset = { x: position.x - body.position.x, y: position.y - body.position.y };\n        body.torque += offset.x * force.y - offset.y * force.x;\n    };\n\n    /**\n     * Returns the sums of the properties of all compound parts of the parent body.\n     * @method _totalProperties\n     * @private\n     * @param {body} body\n     * @return {}\n     */\n    Body._totalProperties = function(body) {\n        // from equations at:\n        // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n        // http://output.to/sideway/default.asp?qno=121100087\n\n        var properties = {\n            mass: 0,\n            area: 0,\n            inertia: 0,\n            centre: { x: 0, y: 0 }\n        };\n\n        // sum the properties of all compound parts of the parent body\n        for (var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++) {\n            var part = body.parts[i],\n                mass = part.mass !== Infinity ? part.mass : 1;\n\n            properties.mass += mass;\n            properties.area += part.area;\n            properties.inertia += part.inertia;\n            properties.centre = Vector.add(properties.centre, Vector.mult(part.position, mass));\n        }\n\n        properties.centre = Vector.div(properties.centre, properties.mass);\n\n        return properties;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a body starts sleeping (where `this` is the body).\n    *\n    * @event sleepStart\n    * @this {body} The body that has started sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a body ends sleeping (where `this` is the body).\n    *\n    * @event sleepEnd\n    * @this {body} The body that has ended sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"body\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Body\"\n     */\n\n    /**\n     * An array of bodies that make up this body. \n     * The first body in the array must always be a self reference to the current body instance.\n     * All bodies in the `parts` array together form a single rigid compound body.\n     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n     * Parts themselves should never be added to a `World`, only the parent body should be.\n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n     *\n     * @property parts\n     * @type body[]\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * A self reference if the body is _not_ a part of another body.\n     * Otherwise this is a reference to the body that this is a part of.\n     * See `body.parts`.\n     *\n     * @property parent\n     * @type body\n     */\n\n    /**\n     * A `Number` specifying the angle of the body, in radians.\n     *\n     * @property angle\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An array of `Vector` objects that specify the convex hull of the rigid body.\n     * These should be provided about the origin `(0, 0)`. E.g.\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\n     * The `Vector` objects are also augmented with additional properties required for efficient collision detection. \n     *\n     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\n     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\n     *\n     * @property vertices\n     * @type vector[]\n     */\n\n    /**\n     * A `Vector` that specifies the current world-space position of the body.\n     *\n     * @property position\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\n     *\n     * @property force\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\n     *\n     * @property torque\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\n     *\n     * @readOnly\n     * @property speed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\n     *\n     * @readOnly\n     * @property angularSpeed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property velocity\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property angularVelocity\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\n     *\n     * @property isStatic\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n     *\n     * @property isSensor\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\n     *\n     * @property isSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\n     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\n     *\n     * @readOnly\n     * @property motion\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n     *\n     * @property sleepThreshold\n     * @type number\n     * @default 60\n     */\n\n    /**\n     * A `Number` that defines the density of the body, that is its mass per unit area.\n     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\n     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\n     *\n     * @property density\n     * @type number\n     * @default 0.001\n     */\n\n    /**\n     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\n     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\n     *\n     * @property mass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\n     * If you modify this value, you must also modify the `body.mass` property.\n     *\n     * @property inverseMass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\n     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\n     *\n     * @property inertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n     * If you modify this value, you must also modify the `body.inertia` property.\n     *\n     * @property inverseInertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur. \n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n     *\n     *     Math.max(bodyA.restitution, bodyB.restitution)\n     *\n     * @property restitution\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means that the body may slide indefinitely.\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n     *\n     * The effects of the value may be non-linear. \n     * High values may be unstable depending on the body.\n     * The engine uses a Coulomb friction model including static and kinetic friction.\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n     *\n     *     Math.min(bodyA.friction, bodyB.friction)\n     *\n     * @property friction\n     * @type number\n     * @default 0.1\n     */\n\n    /**\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model). \n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n     *\n     * @property frictionStatic\n     * @type number\n     * @default 0.5\n     */\n\n    /**\n     * A `Number` that defines the air friction of the body (air resistance). \n     * A value of `0` means the body will never slow as it moves through space.\n     * The higher the value, the faster a body slows when moving through space.\n     * The effects of the value are non-linear. \n     *\n     * @property frictionAir\n     * @type number\n     * @default 0.01\n     */\n\n    /**\n     * An `Object` that specifies the collision filtering properties of this body.\n     *\n     * Collisions between two bodies will obey the following rules:\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n     *   they will always collide if the value is positive, and they will never collide\n     *   if the value is negative.\n     * - If the two bodies have different values of `collisionFilter.group` or if one\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n     *\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\n     * value is used as a bit field and the category should have only one bit set, meaning that\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n     * different collision categories available.\n     *\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\n     *\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n     * are both true.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n    /**\n     * An Integer `Number`, that specifies the collision group this body belongs to.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.group\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * A bit field that specifies the collision category this body belongs to.\n     * The category value should have only one bit set, for example `0x0001`.\n     * This means there are up to 32 unique collision categories available.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.category\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * A bit mask that specifies the collision categories this body may collide with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.mask\n     * @type object\n     * @default -1\n     */\n\n    /**\n     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\n     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\n     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\n     *\n     * @property slop\n     * @type number\n     * @default 0.05\n     */\n\n    /**\n     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\n     *\n     * @property timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the body should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * Sets the opacity to use when rendering.\n     *\n     * @property render.opacity\n     * @type number\n     * @default 1\n    */\n\n    /**\n     * An `Object` that defines the sprite properties to use when rendering, if any.\n     *\n     * @property render.sprite\n     * @type object\n     */\n\n    /**\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\n     *\n     * @property render.sprite.texture\n     * @type string\n     */\n     \n    /**\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n     *\n     * @property render.sprite.xScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n     *\n     * @property render.sprite.yScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n      *\n      * @property render.sprite.xOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n      *\n      * @property render.sprite.yOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.fillStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * An array of unique axis vectors (edge normals) used for collision detection.\n     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\n     * They are constantly updated by `Body.update` during the simulation.\n     *\n     * @property axes\n     * @type vector[]\n     */\n     \n    /**\n     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\n     *\n     * @property area\n     * @type string\n     * @default \n     */\n\n    /**\n     * A `Bounds` object that defines the AABB region for the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n})();\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n*\n* @class Sleeping\n*/\n\nvar Sleeping = {};\n\nmodule.exports = Sleeping;\n\nvar Events = __webpack_require__(4);\n\n(function() {\n\n    Sleeping._motionWakeThreshold = 0.18;\n    Sleeping._motionSleepThreshold = 0.08;\n    Sleeping._minBias = 0.9;\n\n    /**\n     * Puts bodies to sleep or wakes them up depending on their motion.\n     * @method update\n     * @param {body[]} bodies\n     * @param {number} timeScale\n     */\n    Sleeping.update = function(bodies, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // update bodies sleeping status\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                motion = body.speed * body.speed + body.angularSpeed * body.angularSpeed;\n\n            // wake up bodies if they have a force applied\n            if (body.force.x !== 0 || body.force.y !== 0) {\n                Sleeping.set(body, false);\n                continue;\n            }\n\n            var minMotion = Math.min(body.motion, motion),\n                maxMotion = Math.max(body.motion, motion);\n        \n            // biased average motion estimation between frames\n            body.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion;\n            \n            if (body.sleepThreshold > 0 && body.motion < Sleeping._motionSleepThreshold * timeFactor) {\n                body.sleepCounter += 1;\n                \n                if (body.sleepCounter >= body.sleepThreshold)\n                    Sleeping.set(body, true);\n            } else if (body.sleepCounter > 0) {\n                body.sleepCounter -= 1;\n            }\n        }\n    };\n\n    /**\n     * Given a set of colliding pairs, wakes the sleeping bodies involved.\n     * @method afterCollisions\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Sleeping.afterCollisions = function(pairs, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // wake up bodies involved in collisions\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            // don't wake inactive pairs\n            if (!pair.isActive)\n                continue;\n\n            var collision = pair.collision,\n                bodyA = collision.bodyA.parent, \n                bodyB = collision.bodyB.parent;\n        \n            // don't wake if at least one body is static\n            if ((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic)\n                continue;\n        \n            if (bodyA.isSleeping || bodyB.isSleeping) {\n                var sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\n                    movingBody = sleepingBody === bodyA ? bodyB : bodyA;\n\n                if (!sleepingBody.isStatic && movingBody.motion > Sleeping._motionWakeThreshold * timeFactor) {\n                    Sleeping.set(sleepingBody, false);\n                }\n            }\n        }\n    };\n  \n    /**\n     * Set a body as sleeping or awake.\n     * @method set\n     * @param {body} body\n     * @param {boolean} isSleeping\n     */\n    Sleeping.set = function(body, isSleeping) {\n        var wasSleeping = body.isSleeping;\n\n        if (isSleeping) {\n            body.isSleeping = true;\n            body.sleepCounter = body.sleepThreshold;\n\n            body.positionImpulse.x = 0;\n            body.positionImpulse.y = 0;\n\n            body.positionPrev.x = body.position.x;\n            body.positionPrev.y = body.position.y;\n\n            body.anglePrev = body.angle;\n            body.speed = 0;\n            body.angularSpeed = 0;\n            body.motion = 0;\n\n            if (!wasSleeping) {\n                Events.trigger(body, 'sleepStart');\n            }\n        } else {\n            body.isSleeping = false;\n            body.sleepCounter = 0;\n\n            if (wasSleeping) {\n                Events.trigger(body, 'sleepEnd');\n            }\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n* The stiffness of constraints can be modified to create springs or elastic.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Constraint\n*/\n\nvar Constraint = {};\n\nmodule.exports = Constraint;\n\nvar Vertices = __webpack_require__(3);\nvar Vector = __webpack_require__(2);\nvar Sleeping = __webpack_require__(7);\nvar Bounds = __webpack_require__(1);\nvar Axes = __webpack_require__(15);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    Constraint._warming = 0.4;\n    Constraint._torqueDampen = 1;\n    Constraint._minLength = 0.000001;\n\n    /**\n     * Creates a new constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * To simulate a revolute constraint (or pin joint) set `length: 0` and a high `stiffness` value (e.g. `0.7` or above).\n     * If the constraint is unstable, try lowering the `stiffness` value and / or increasing `engine.constraintIterations`.\n     * For compound bodies, constraints must be applied to the parent body (not one of its parts).\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {constraint} constraint\n     */\n    Constraint.create = function(options) {\n        var constraint = options;\n\n        // if bodies defined but no points, use body centre\n        if (constraint.bodyA && !constraint.pointA)\n            constraint.pointA = { x: 0, y: 0 };\n        if (constraint.bodyB && !constraint.pointB)\n            constraint.pointB = { x: 0, y: 0 };\n\n        // calculate static length using initial world space points\n        var initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\n            initialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\n            length = Vector.magnitude(Vector.sub(initialPointA, initialPointB));\n    \n        constraint.length = typeof constraint.length !== 'undefined' ? constraint.length : length;\n\n        // option defaults\n        constraint.id = constraint.id || Common.nextId();\n        constraint.label = constraint.label || 'Constraint';\n        constraint.type = 'constraint';\n        constraint.stiffness = constraint.stiffness || (constraint.length > 0 ? 1 : 0.7);\n        constraint.damping = constraint.damping || 0;\n        constraint.angularStiffness = constraint.angularStiffness || 0;\n        constraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA;\n        constraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB;\n        constraint.plugin = {};\n\n        // render\n        var render = {\n            visible: true,\n            lineWidth: 2,\n            strokeStyle: '#ffffff',\n            type: 'line',\n            anchors: true\n        };\n\n        if (constraint.length === 0 && constraint.stiffness > 0.1) {\n            render.type = 'pin';\n            render.anchors = false;\n        } else if (constraint.stiffness < 0.9) {\n            render.type = 'spring';\n        }\n\n        constraint.render = Common.extend(render, constraint.render);\n\n        return constraint;\n    };\n\n    /**\n     * Prepares for solving by constraint warming.\n     * @private\n     * @method preSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.preSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            body.position.x += impulse.x;\n            body.position.y += impulse.y;\n            body.angle += impulse.angle;\n        }\n    };\n\n    /**\n     * Solves all constraints in a list of collisions.\n     * @private\n     * @method solveAll\n     * @param {constraint[]} constraints\n     * @param {number} timeScale\n     */\n    Constraint.solveAll = function(constraints, timeScale) {\n        // Solve fixed constraints first.\n        for (var i = 0; i < constraints.length; i += 1) {\n            var constraint = constraints[i],\n                fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic),\n                fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (fixedA || fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n\n        // Solve free constraints last.\n        for (i = 0; i < constraints.length; i += 1) {\n            constraint = constraints[i];\n            fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic);\n            fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (!fixedA && !fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n    };\n\n    /**\n     * Solves a distance constraint with Gauss-Siedel method.\n     * @private\n     * @method solve\n     * @param {constraint} constraint\n     * @param {number} timeScale\n     */\n    Constraint.solve = function(constraint, timeScale) {\n        var bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB;\n\n        if (!bodyA && !bodyB)\n            return;\n\n        // update reference angle\n        if (bodyA && !bodyA.isStatic) {\n            Vector.rotate(pointA, bodyA.angle - constraint.angleA, pointA);\n            constraint.angleA = bodyA.angle;\n        }\n        \n        // update reference angle\n        if (bodyB && !bodyB.isStatic) {\n            Vector.rotate(pointB, bodyB.angle - constraint.angleB, pointB);\n            constraint.angleB = bodyB.angle;\n        }\n\n        var pointAWorld = pointA,\n            pointBWorld = pointB;\n\n        if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\n        if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\n\n        if (!pointAWorld || !pointBWorld)\n            return;\n\n        var delta = Vector.sub(pointAWorld, pointBWorld),\n            currentLength = Vector.magnitude(delta);\n\n        // prevent singularity\n        if (currentLength < Constraint._minLength) {\n            currentLength = Constraint._minLength;\n        }\n\n        // solve distance constraint with Gauss-Siedel method\n        var difference = (currentLength - constraint.length) / currentLength,\n            stiffness = constraint.stiffness < 1 ? constraint.stiffness * timeScale : constraint.stiffness,\n            force = Vector.mult(delta, difference * stiffness),\n            massTotal = (bodyA ? bodyA.inverseMass : 0) + (bodyB ? bodyB.inverseMass : 0),\n            inertiaTotal = (bodyA ? bodyA.inverseInertia : 0) + (bodyB ? bodyB.inverseInertia : 0),\n            resistanceTotal = massTotal + inertiaTotal,\n            torque,\n            share,\n            normal,\n            normalVelocity,\n            relativeVelocity;\n\n        if (constraint.damping) {\n            var zero = Vector.create();\n            normal = Vector.div(delta, currentLength);\n\n            relativeVelocity = Vector.sub(\n                bodyB && Vector.sub(bodyB.position, bodyB.positionPrev) || zero,\n                bodyA && Vector.sub(bodyA.position, bodyA.positionPrev) || zero\n            );\n\n            normalVelocity = Vector.dot(normal, relativeVelocity);\n        }\n\n        if (bodyA && !bodyA.isStatic) {\n            share = bodyA.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyA.constraintImpulse.x -= force.x * share;\n            bodyA.constraintImpulse.y -= force.y * share;\n\n            // apply forces\n            bodyA.position.x -= force.x * share;\n            bodyA.position.y -= force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyA.positionPrev.x -= constraint.damping * normal.x * normalVelocity * share;\n                bodyA.positionPrev.y -= constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointA, force) / resistanceTotal) * Constraint._torqueDampen * bodyA.inverseInertia * (1 - constraint.angularStiffness);\n            bodyA.constraintImpulse.angle -= torque;\n            bodyA.angle -= torque;\n        }\n\n        if (bodyB && !bodyB.isStatic) {\n            share = bodyB.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyB.constraintImpulse.x += force.x * share;\n            bodyB.constraintImpulse.y += force.y * share;\n            \n            // apply forces\n            bodyB.position.x += force.x * share;\n            bodyB.position.y += force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyB.positionPrev.x += constraint.damping * normal.x * normalVelocity * share;\n                bodyB.positionPrev.y += constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointB, force) / resistanceTotal) * Constraint._torqueDampen * bodyB.inverseInertia * (1 - constraint.angularStiffness);\n            bodyB.constraintImpulse.angle += torque;\n            bodyB.angle += torque;\n        }\n\n    };\n\n    /**\n     * Performs body updates required after solving constraints.\n     * @private\n     * @method postSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.postSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            Sleeping.set(body, false);\n\n            // update geometry and reset\n            for (var j = 0; j < body.parts.length; j++) {\n                var part = body.parts[j];\n                \n                Vertices.translate(part.vertices, impulse);\n\n                if (j > 0) {\n                    part.position.x += impulse.x;\n                    part.position.y += impulse.y;\n                }\n\n                if (impulse.angle !== 0) {\n                    Vertices.rotate(part.vertices, impulse.angle, body.position);\n                    Axes.rotate(part.axes, impulse.angle);\n                    if (j > 0) {\n                        Vector.rotateAbout(part.position, impulse.angle, body.position, part.position);\n                    }\n                }\n\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n            }\n\n            // dampen the cached impulse for warming next step\n            impulse.angle *= Constraint._warming;\n            impulse.x *= Constraint._warming;\n            impulse.y *= Constraint._warming;\n        }\n    };\n\n    /**\n     * Returns the world-space position of `constraint.pointA`, accounting for `constraint.bodyA`.\n     * @method pointAWorld\n     * @param {constraint} constraint\n     * @returns {vector} the world-space position\n     */\n    Constraint.pointAWorld = function(constraint) {\n        return {\n            x: (constraint.bodyA ? constraint.bodyA.position.x : 0) + constraint.pointA.x,\n            y: (constraint.bodyA ? constraint.bodyA.position.y : 0) + constraint.pointA.y\n        };\n    };\n\n    /**\n     * Returns the world-space position of `constraint.pointB`, accounting for `constraint.bodyB`.\n     * @method pointBWorld\n     * @param {constraint} constraint\n     * @returns {vector} the world-space position\n     */\n    Constraint.pointBWorld = function(constraint) {\n        return {\n            x: (constraint.bodyB ? constraint.bodyB.position.x : 0) + constraint.pointB.x,\n            y: (constraint.bodyB ? constraint.bodyB.position.y : 0) + constraint.pointB.y\n        };\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Constraint\"\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the constraint should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the constraint outline.\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the constraint outline.\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the constraint rendering type. \n     * The possible values are 'line', 'pin', 'spring'.\n     * An appropriate render type will be automatically chosen unless one is given in options.\n     *\n     * @property render.type\n     * @type string\n     * @default 'line'\n     */\n\n    /**\n     * A `Boolean` that defines if the constraint's anchor points should be rendered.\n     *\n     * @property render.anchors\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * The first possible `Body` that this constraint is attached to.\n     *\n     * @property bodyA\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The second possible `Body` that this constraint is attached to.\n     *\n     * @property bodyB\n     * @type body\n     * @default null\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointA\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyB` if defined, otherwise a world-space position.\n     *\n     * @property pointB\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n     * A value of `1` means the constraint should be very stiff.\n     * A value of `0.2` means the constraint acts like a soft spring.\n     *\n     * @property stiffness\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the damping of the constraint, \n     * i.e. the amount of resistance applied to each body based on their velocities to limit the amount of oscillation.\n     * Damping will only be apparent when the constraint also has a very low `stiffness`.\n     * A value of `0.1` means the constraint will apply heavy damping, resulting in little to no oscillation.\n     * A value of `0` means the constraint will apply no damping.\n     *\n     * @property damping\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that specifies the target resting length of the constraint. \n     * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n     *\n     * @property length\n     * @type number\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n*\n* @class Pair\n*/\n\nvar Pair = {};\n\nmodule.exports = Pair;\n\nvar Contact = __webpack_require__(18);\n\n(function() {\n    \n    /**\n     * Creates a pair.\n     * @method create\n     * @param {collision} collision\n     * @param {number} timestamp\n     * @return {pair} A new pair\n     */\n    Pair.create = function(collision, timestamp) {\n        var bodyA = collision.bodyA,\n            bodyB = collision.bodyB,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n\n        var pair = {\n            id: Pair.id(bodyA, bodyB),\n            bodyA: bodyA,\n            bodyB: bodyB,\n            contacts: {},\n            activeContacts: [],\n            separation: 0,\n            isActive: true,\n            confirmedActive: true,\n            isSensor: bodyA.isSensor || bodyB.isSensor,\n            timeCreated: timestamp,\n            timeUpdated: timestamp,\n            inverseMass: parentA.inverseMass + parentB.inverseMass,\n            friction: Math.min(parentA.friction, parentB.friction),\n            frictionStatic: Math.max(parentA.frictionStatic, parentB.frictionStatic),\n            restitution: Math.max(parentA.restitution, parentB.restitution),\n            slop: Math.max(parentA.slop, parentB.slop)\n        };\n\n        Pair.update(pair, collision, timestamp);\n\n        return pair;\n    };\n\n    /**\n     * Updates a pair given a collision.\n     * @method update\n     * @param {pair} pair\n     * @param {collision} collision\n     * @param {number} timestamp\n     */\n    Pair.update = function(pair, collision, timestamp) {\n        var contacts = pair.contacts,\n            supports = collision.supports,\n            activeContacts = pair.activeContacts,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n        \n        pair.collision = collision;\n        pair.inverseMass = parentA.inverseMass + parentB.inverseMass;\n        pair.friction = Math.min(parentA.friction, parentB.friction);\n        pair.frictionStatic = Math.max(parentA.frictionStatic, parentB.frictionStatic);\n        pair.restitution = Math.max(parentA.restitution, parentB.restitution);\n        pair.slop = Math.max(parentA.slop, parentB.slop);\n        activeContacts.length = 0;\n        \n        if (collision.collided) {\n            for (var i = 0; i < supports.length; i++) {\n                var support = supports[i],\n                    contactId = Contact.id(support),\n                    contact = contacts[contactId];\n\n                if (contact) {\n                    activeContacts.push(contact);\n                } else {\n                    activeContacts.push(contacts[contactId] = Contact.create(support));\n                }\n            }\n\n            pair.separation = collision.depth;\n            Pair.setActive(pair, true, timestamp);\n        } else {\n            if (pair.isActive === true)\n                Pair.setActive(pair, false, timestamp);\n        }\n    };\n    \n    /**\n     * Set a pair as active or inactive.\n     * @method setActive\n     * @param {pair} pair\n     * @param {bool} isActive\n     * @param {number} timestamp\n     */\n    Pair.setActive = function(pair, isActive, timestamp) {\n        if (isActive) {\n            pair.isActive = true;\n            pair.timeUpdated = timestamp;\n        } else {\n            pair.isActive = false;\n            pair.activeContacts.length = 0;\n        }\n    };\n\n    /**\n     * Get the id for the given pair.\n     * @method id\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {string} Unique pairId\n     */\n    Pair.id = function(bodyA, bodyB) {\n        if (bodyA.id < bodyB.id) {\n            return 'A' + bodyA.id + 'B' + bodyB.id;\n        } else {\n            return 'A' + bodyB.id + 'B' + bodyA.id;\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Render` module is a simple HTML5 canvas based renderer for visualising instances of `Matter.Engine`.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n*\n* @class Render\n*/\n\nvar Render = {};\n\nmodule.exports = Render;\n\nvar Common = __webpack_require__(0);\nvar Composite = __webpack_require__(5);\nvar Bounds = __webpack_require__(1);\nvar Events = __webpack_require__(4);\nvar Grid = __webpack_require__(11);\nvar Vector = __webpack_require__(2);\nvar Mouse = __webpack_require__(14);\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    /**\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {render} A new renderer\n     */\n    Render.create = function(options) {\n        var defaults = {\n            controller: Render,\n            engine: null,\n            element: null,\n            canvas: null,\n            mouse: null,\n            frameRequestId: null,\n            options: {\n                width: 800,\n                height: 600,\n                pixelRatio: 1,\n                background: '#14151f',\n                wireframeBackground: '#14151f',\n                hasBounds: !!options.bounds,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showSeparations: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false,\n                showVertexNumbers: false,\n                showConvexHulls: false,\n                showInternalEdges: false,\n                showMousePosition: false\n            }\n        };\n\n        var render = Common.extend(defaults, options);\n\n        if (render.canvas) {\n            render.canvas.width = render.options.width || render.canvas.width;\n            render.canvas.height = render.options.height || render.canvas.height;\n        }\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.canvas = render.canvas || _createCanvas(render.options.width, render.options.height);\n        render.context = render.canvas.getContext('2d');\n        render.textures = {};\n\n        render.bounds = render.bounds || {\n            min: {\n                x: 0,\n                y: 0\n            },\n            max: {\n                x: render.canvas.width,\n                y: render.canvas.height\n            }\n        };\n\n        if (render.options.pixelRatio !== 1) {\n            Render.setPixelRatio(render, render.options.pixelRatio);\n        }\n\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else if (!render.canvas.parentNode) {\n            Common.log('Render.create: options.element was undefined, render.canvas was created but not appended', 'warn');\n        }\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     */\n    Render.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            Render.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     */\n    Render.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Sets the pixel ratio of the renderer and updates the canvas.\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n     * @method setPixelRatio\n     * @param {render} render\n     * @param {number} pixelRatio\n     */\n    Render.setPixelRatio = function(render, pixelRatio) {\n        var options = render.options,\n            canvas = render.canvas;\n\n        if (pixelRatio === 'auto') {\n            pixelRatio = _getPixelRatio(canvas);\n        }\n\n        options.pixelRatio = pixelRatio;\n        canvas.setAttribute('data-pixel-ratio', pixelRatio);\n        canvas.width = options.width * pixelRatio;\n        canvas.height = options.height * pixelRatio;\n        canvas.style.width = options.width + 'px';\n        canvas.style.height = options.height + 'px';\n    };\n\n    /**\n     * Positions and sizes the viewport around the given object bounds.\n     * Objects must have at least one of the following properties:\n     * - `object.bounds`\n     * - `object.position`\n     * - `object.min` and `object.max`\n     * - `object.x` and `object.y`\n     * @method lookAt\n     * @param {render} render\n     * @param {object[]} objects\n     * @param {vector} [padding]\n     * @param {bool} [center=true]\n     */\n    Render.lookAt = function(render, objects, padding, center) {\n        center = typeof center !== 'undefined' ? center : true;\n        objects = Common.isArray(objects) ? objects : [objects];\n        padding = padding || {\n            x: 0,\n            y: 0\n        };\n\n        // find bounds of all objects\n        var bounds = {\n            min: { x: Infinity, y: Infinity },\n            max: { x: -Infinity, y: -Infinity }\n        };\n\n        for (var i = 0; i < objects.length; i += 1) {\n            var object = objects[i],\n                min = object.bounds ? object.bounds.min : (object.min || object.position || object),\n                max = object.bounds ? object.bounds.max : (object.max || object.position || object);\n\n            if (min && max) {\n                if (min.x < bounds.min.x)\n                    bounds.min.x = min.x;\n\n                if (max.x > bounds.max.x)\n                    bounds.max.x = max.x;\n\n                if (min.y < bounds.min.y)\n                    bounds.min.y = min.y;\n\n                if (max.y > bounds.max.y)\n                    bounds.max.y = max.y;\n            }\n        }\n\n        // find ratios\n        var width = (bounds.max.x - bounds.min.x) + 2 * padding.x,\n            height = (bounds.max.y - bounds.min.y) + 2 * padding.y,\n            viewHeight = render.canvas.height,\n            viewWidth = render.canvas.width,\n            outerRatio = viewWidth / viewHeight,\n            innerRatio = width / height,\n            scaleX = 1,\n            scaleY = 1;\n\n        // find scale factor\n        if (innerRatio > outerRatio) {\n            scaleY = innerRatio / outerRatio;\n        } else {\n            scaleX = outerRatio / innerRatio;\n        }\n\n        // enable bounds\n        render.options.hasBounds = true;\n\n        // position and size\n        render.bounds.min.x = bounds.min.x;\n        render.bounds.max.x = bounds.min.x + width * scaleX;\n        render.bounds.min.y = bounds.min.y;\n        render.bounds.max.y = bounds.min.y + height * scaleY;\n\n        // center\n        if (center) {\n            render.bounds.min.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.max.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.min.y += height * 0.5 - (height * scaleY) * 0.5;\n            render.bounds.max.y += height * 0.5 - (height * scaleY) * 0.5;\n        }\n\n        // padding\n        render.bounds.min.x -= padding.x;\n        render.bounds.max.x -= padding.x;\n        render.bounds.min.y -= padding.y;\n        render.bounds.max.y -= padding.y;\n\n        // update mouse\n        if (render.mouse) {\n            Mouse.setScale(render.mouse, {\n                x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n            });\n\n            Mouse.setOffset(render.mouse, render.bounds.min);\n        }\n    };\n\n    /**\n     * Applies viewport transforms based on `render.bounds` to a render context.\n     * @method startViewTransform\n     * @param {render} render\n     */\n    Render.startViewTransform = function(render) {\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        render.context.setTransform(\n            render.options.pixelRatio / boundsScaleX, 0, 0, \n            render.options.pixelRatio / boundsScaleY, 0, 0\n        );\n        \n        render.context.translate(-render.bounds.min.x, -render.bounds.min.y);\n    };\n\n    /**\n     * Resets all transforms on the render context.\n     * @method endViewTransform\n     * @param {render} render\n     */\n    Render.endViewTransform = function(render) {\n        render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n    };\n\n    /**\n     * Renders the given `engine`'s `Matter.World` object.\n     * This is the entry point for all rendering and should be called every time the scene changes.\n     * @method world\n     * @param {render} render\n     */\n    Render.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            canvas = render.canvas,\n            context = render.context,\n            options = render.options,\n            allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            background = options.wireframes ? options.wireframeBackground : options.background,\n            bodies = [],\n            constraints = [],\n            i;\n\n        var event = {\n            timestamp: engine.timing.timestamp\n        };\n\n        Events.trigger(render, 'beforeRender', event);\n\n        // apply background if it has changed\n        if (render.currentBackground !== background)\n            _applyBackground(render, background);\n\n        // clear the canvas with a transparent fill, to allow the canvas background to show\n        context.globalCompositeOperation = 'source-in';\n        context.fillStyle = \"transparent\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.globalCompositeOperation = 'source-over';\n\n        // handle bounds\n        if (options.hasBounds) {\n            // filter out bodies that are not in view\n            for (i = 0; i < allBodies.length; i++) {\n                var body = allBodies[i];\n                if (Bounds.overlaps(body.bounds, render.bounds))\n                    bodies.push(body);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            Render.startViewTransform(render);\n\n            // update mouse\n            if (render.mouse) {\n                Mouse.setScale(render.mouse, {\n                    x: (render.bounds.max.x - render.bounds.min.x) / render.options.width,\n                    y: (render.bounds.max.y - render.bounds.min.y) / render.options.height\n                });\n\n                Mouse.setOffset(render.mouse, render.bounds.min);\n            }\n        } else {\n            constraints = allConstraints;\n            bodies = allBodies;\n\n            if (render.options.pixelRatio !== 1) {\n                render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n            }\n        }\n\n        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\n            // fully featured rendering of bodies\n            Render.bodies(render, bodies, context);\n        } else {\n            if (options.showConvexHulls)\n                Render.bodyConvexHulls(render, bodies, context);\n\n            // optimised method for wireframes only\n            Render.bodyWireframes(render, bodies, context);\n        }\n\n        if (options.showBounds)\n            Render.bodyBounds(render, bodies, context);\n\n        if (options.showAxes || options.showAngleIndicator)\n            Render.bodyAxes(render, bodies, context);\n\n        if (options.showPositions)\n            Render.bodyPositions(render, bodies, context);\n\n        if (options.showVelocity)\n            Render.bodyVelocity(render, bodies, context);\n\n        if (options.showIds)\n            Render.bodyIds(render, bodies, context);\n\n        if (options.showSeparations)\n            Render.separations(render, engine.pairs.list, context);\n\n        if (options.showCollisions)\n            Render.collisions(render, engine.pairs.list, context);\n\n        if (options.showVertexNumbers)\n            Render.vertexNumbers(render, bodies, context);\n\n        if (options.showMousePosition)\n            Render.mousePosition(render, render.mouse, context);\n\n        Render.constraints(constraints, context);\n\n        if (options.showBroadphase && engine.broadphase.controller === Grid)\n            Render.grid(render, engine.broadphase, context);\n\n        if (options.showDebug)\n            Render.debug(render, context);\n\n        if (options.hasBounds) {\n            // revert view transforms\n            Render.endViewTransform(render);\n        }\n\n        Events.trigger(render, 'afterRender', event);\n    };\n\n    /**\n     * Description\n     * @private\n     * @method debug\n     * @param {render} render\n     * @param {RenderingContext} context\n     */\n    Render.debug = function(render, context) {\n        var c = context,\n            engine = render.engine,\n            world = engine.world,\n            metrics = engine.metrics,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            space = \"    \";\n\n        if (engine.timing.timestamp - (render.debugTimestamp || 0) >= 500) {\n            var text = \"\";\n\n            if (metrics.timing) {\n                text += \"fps: \" + Math.round(metrics.timing.fps) + space;\n            }\n\n            // @if DEBUG\n            if (metrics.extended) {\n                if (metrics.timing) {\n                    text += \"delta: \" + metrics.timing.delta.toFixed(3) + space;\n                    text += \"correction: \" + metrics.timing.correction.toFixed(3) + space;\n                }\n\n                text += \"bodies: \" + bodies.length + space;\n\n                if (engine.broadphase.controller === Grid)\n                    text += \"buckets: \" + metrics.buckets + space;\n\n                text += \"\\n\";\n\n                text += \"collisions: \" + metrics.collisions + space;\n                text += \"pairs: \" + engine.pairs.list.length + space;\n                text += \"broad: \" + metrics.broadEff + space;\n                text += \"mid: \" + metrics.midEff + space;\n                text += \"narrow: \" + metrics.narrowEff + space;\n            }\n            // @endif\n\n            render.debugString = text;\n            render.debugTimestamp = engine.timing.timestamp;\n        }\n\n        if (render.debugString) {\n            c.font = \"12px Arial\";\n\n            if (options.wireframes) {\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n            } else {\n                c.fillStyle = 'rgba(0,0,0,0.5)';\n            }\n\n            var split = render.debugString.split('\\n');\n\n            for (var i = 0; i < split.length; i++) {\n                c.fillText(split[i], 50, 50 + i * 18);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method constraints\n     * @param {constraint[]} constraints\n     * @param {RenderingContext} context\n     */\n    Render.constraints = function(constraints, context) {\n        var c = context;\n\n        for (var i = 0; i < constraints.length; i++) {\n            var constraint = constraints[i];\n\n            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\n                continue;\n\n            var bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB,\n                start,\n                end;\n\n            if (bodyA) {\n                start = Vector.add(bodyA.position, constraint.pointA);\n            } else {\n                start = constraint.pointA;\n            }\n\n            if (constraint.render.type === 'pin') {\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                if (bodyB) {\n                    end = Vector.add(bodyB.position, constraint.pointB);\n                } else {\n                    end = constraint.pointB;\n                }\n\n                c.beginPath();\n                c.moveTo(start.x, start.y);\n\n                if (constraint.render.type === 'spring') {\n                    var delta = Vector.sub(end, start),\n                        normal = Vector.perp(Vector.normalise(delta)),\n                        coils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\n                        offset;\n\n                    for (var j = 1; j < coils; j += 1) {\n                        offset = j % 2 === 0 ? 1 : -1;\n\n                        c.lineTo(\n                            start.x + delta.x * (j / coils) + normal.x * offset * 4,\n                            start.y + delta.y * (j / coils) + normal.y * offset * 4\n                        );\n                    }\n                }\n\n                c.lineTo(end.x, end.y);\n            }\n\n            if (constraint.render.lineWidth) {\n                c.lineWidth = constraint.render.lineWidth;\n                c.strokeStyle = constraint.render.strokeStyle;\n                c.stroke();\n            }\n\n            if (constraint.render.anchors) {\n                c.fillStyle = constraint.render.strokeStyle;\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.arc(end.x, end.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n                c.fill();\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodyShadows\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyShadows = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            if (body.circleRadius) {\n                c.beginPath();\n                c.arc(body.position.x, body.position.y, body.circleRadius, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                c.beginPath();\n                c.moveTo(body.vertices[0].x, body.vertices[0].y);\n                for (var j = 1; j < body.vertices.length; j++) {\n                    c.lineTo(body.vertices[j].x, body.vertices[j].y);\n                }\n                c.closePath();\n            }\n\n            var distanceX = body.position.x - render.options.width * 0.5,\n                distanceY = body.position.y - render.options.height * 0.2,\n                distance = Math.abs(distanceX) + Math.abs(distanceY);\n\n            c.shadowColor = 'rgba(0,0,0,0.15)';\n            c.shadowOffsetX = 0.05 * distanceX;\n            c.shadowOffsetY = 0.05 * distanceY;\n            c.shadowBlur = 1 + 12 * Math.min(1, distance / 1000);\n\n            c.fill();\n\n            c.shadowColor = null;\n            c.shadowOffsetX = null;\n            c.shadowOffsetY = null;\n            c.shadowBlur = null;\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodies\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodies = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            showInternalEdges = options.showInternalEdges || !options.wireframes,\n            body,\n            part,\n            i,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                if (!part.render.visible)\n                    continue;\n\n                if (options.showSleeping && body.isSleeping) {\n                    c.globalAlpha = 0.5 * part.render.opacity;\n                } else if (part.render.opacity !== 1) {\n                    c.globalAlpha = part.render.opacity;\n                }\n\n                if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\n                    // part sprite\n                    var sprite = part.render.sprite,\n                        texture = _getTexture(render, sprite.texture);\n\n                    c.translate(part.position.x, part.position.y);\n                    c.rotate(part.angle);\n\n                    c.drawImage(\n                        texture,\n                        texture.width * -sprite.xOffset * sprite.xScale,\n                        texture.height * -sprite.yOffset * sprite.yScale,\n                        texture.width * sprite.xScale,\n                        texture.height * sprite.yScale\n                    );\n\n                    // revert translation, hopefully faster than save / restore\n                    c.rotate(-part.angle);\n                    c.translate(-part.position.x, -part.position.y);\n                } else {\n                    // part polygon\n                    if (part.circleRadius) {\n                        c.beginPath();\n                        c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\n                    } else {\n                        c.beginPath();\n                        c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                        for (var j = 1; j < part.vertices.length; j++) {\n                            if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                                c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                            } else {\n                                c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                            }\n\n                            if (part.vertices[j].isInternal && !showInternalEdges) {\n                                c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                            }\n                        }\n\n                        c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                        c.closePath();\n                    }\n\n                    if (!options.wireframes) {\n                        c.fillStyle = part.render.fillStyle;\n\n                        if (part.render.lineWidth) {\n                            c.lineWidth = part.render.lineWidth;\n                            c.strokeStyle = part.render.strokeStyle;\n                            c.stroke();\n                        }\n\n                        c.fill();\n                    } else {\n                        c.lineWidth = 1;\n                        c.strokeStyle = '#bbb';\n                        c.stroke();\n                    }\n                }\n\n                c.globalAlpha = 1;\n            }\n        }\n    };\n\n    /**\n     * Optimised method for drawing body wireframes in one pass\n     * @private\n     * @method bodyWireframes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyWireframes = function(render, bodies, context) {\n        var c = context,\n            showInternalEdges = render.options.showInternalEdges,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render all bodies\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                for (j = 1; j < part.vertices.length; j++) {\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                        c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                    } else {\n                        c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                    }\n\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\n                        c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                    }\n                }\n\n                c.lineTo(part.vertices[0].x, part.vertices[0].y);\n            }\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = '#bbb';\n        c.stroke();\n    };\n\n    /**\n     * Optimised method for drawing body convex hull wireframes in one pass\n     * @private\n     * @method bodyConvexHulls\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyConvexHulls = function(render, bodies, context) {\n        var c = context,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render convex hulls\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible || body.parts.length === 1)\n                continue;\n\n            c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n            for (j = 1; j < body.vertices.length; j++) {\n                c.lineTo(body.vertices[j].x, body.vertices[j].y);\n            }\n\n            c.lineTo(body.vertices[0].x, body.vertices[0].y);\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = 'rgba(255,255,255,0.2)';\n        c.stroke();\n    };\n\n    /**\n     * Renders body vertex numbers.\n     * @private\n     * @method vertexNumbers\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.vertexNumbers = function(render, bodies, context) {\n        var c = context,\n            i,\n            j,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            var parts = bodies[i].parts;\n            for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n                var part = parts[k];\n                for (j = 0; j < part.vertices.length; j++) {\n                    c.fillStyle = 'rgba(255,255,255,0.2)';\n                    c.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\n                }\n            }\n        }\n    };\n\n    /**\n     * Renders mouse position.\n     * @private\n     * @method mousePosition\n     * @param {render} render\n     * @param {mouse} mouse\n     * @param {RenderingContext} context\n     */\n    Render.mousePosition = function(render, mouse, context) {\n        var c = context;\n        c.fillStyle = 'rgba(255,255,255,0.8)';\n        c.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\n    };\n\n    /**\n     * Draws body bounds\n     * @private\n     * @method bodyBounds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyBounds = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.render.visible) {\n                var parts = bodies[i].parts;\n                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    var part = parts[j];\n                    c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,255,255,0.08)';\n        } else {\n            c.strokeStyle = 'rgba(0,0,0,0.1)';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Draws body angle indicators and axes\n     * @private\n     * @method bodyAxes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyAxes = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                parts = body.parts;\n\n            if (!body.render.visible)\n                continue;\n\n            if (options.showAxes) {\n                // render all axes\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        var axis = part.axes[k];\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\n                    }\n                }\n            } else {\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        // render a single axis indicator\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2,\n                            (part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2);\n                    }\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'indianred';\n            c.lineWidth = 1;\n        } else {\n            c.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n            c.globalCompositeOperation = 'overlay';\n            c.lineWidth = 2;\n        }\n\n        c.stroke();\n        c.globalCompositeOperation = 'source-over';\n    };\n\n    /**\n     * Draws body positions\n     * @private\n     * @method bodyPositions\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyPositions = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            body,\n            part,\n            i,\n            k;\n\n        c.beginPath();\n\n        // render current positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n                c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'indianred';\n        } else {\n            c.fillStyle = 'rgba(0,0,0,0.5)';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render previous positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n            if (body.render.visible) {\n                c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        c.fillStyle = 'rgba(255,165,0,0.8)';\n        c.fill();\n    };\n\n    /**\n     * Draws body velocity\n     * @private\n     * @method bodyVelocity\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyVelocity = function(render, bodies, context) {\n        var c = context;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            c.moveTo(body.position.x, body.position.y);\n            c.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2);\n        }\n\n        c.lineWidth = 3;\n        c.strokeStyle = 'cornflowerblue';\n        c.stroke();\n    };\n\n    /**\n     * Draws body ids\n     * @private\n     * @method bodyIds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyIds = function(render, bodies, context) {\n        var c = context,\n            i,\n            j;\n\n        for (i = 0; i < bodies.length; i++) {\n            if (!bodies[i].render.visible)\n                continue;\n\n            var parts = bodies[i].parts;\n            for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                var part = parts[j];\n                c.font = \"12px Arial\";\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n                c.fillText(part.id, part.position.x + 10, part.position.y - 10);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method collisions\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.collisions = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render collision positions\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            for (j = 0; j < pair.activeContacts.length; j++) {\n                var contact = pair.activeContacts[j],\n                    vertex = contact.vertex;\n                c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'rgba(255,255,255,0.7)';\n        } else {\n            c.fillStyle = 'orange';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render collision normals\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n\n            if (pair.activeContacts.length > 0) {\n                var normalPosX = pair.activeContacts[0].vertex.x,\n                    normalPosY = pair.activeContacts[0].vertex.y;\n\n                if (pair.activeContacts.length === 2) {\n                    normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\n                    normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\n                }\n\n                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\n                    c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\n                } else {\n                    c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\n                }\n\n                c.lineTo(normalPosX, normalPosY);\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.7)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method separations\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.separations = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render separations\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.bodyA;\n            bodyB = collision.bodyB;\n\n            var k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyB.isStatic) k = 0;\n\n            c.moveTo(bodyB.position.x, bodyB.position.y);\n            c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\n\n            k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyA.isStatic) k = 0;\n\n            c.moveTo(bodyA.position.x, bodyA.position.y);\n            c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.5)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method grid\n     * @param {render} render\n     * @param {grid} grid\n     * @param {RenderingContext} context\n     */\n    Render.grid = function(render, grid, context) {\n        var c = context,\n            options = render.options;\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,180,0,0.1)';\n        } else {\n            c.strokeStyle = 'rgba(255,180,0,0.5)';\n        }\n\n        c.beginPath();\n\n        var bucketKeys = Common.keys(grid.buckets);\n\n        for (var i = 0; i < bucketKeys.length; i++) {\n            var bucketId = bucketKeys[i];\n\n            if (grid.buckets[bucketId].length < 2)\n                continue;\n\n            var region = bucketId.split(/C|R/);\n            c.rect(0.5 + parseInt(region[1], 10) * grid.bucketWidth,\n                0.5 + parseInt(region[2], 10) * grid.bucketHeight,\n                grid.bucketWidth,\n                grid.bucketHeight);\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method inspector\n     * @param {inspector} inspector\n     * @param {RenderingContext} context\n     */\n    Render.inspector = function(inspector, context) {\n        var engine = inspector.engine,\n            selected = inspector.selected,\n            render = inspector.render,\n            options = render.options,\n            bounds;\n\n        if (options.hasBounds) {\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n        }\n\n        for (var i = 0; i < selected.length; i++) {\n            var item = selected[i].data;\n\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.9)';\n            context.setLineDash([1,2]);\n\n            switch (item.type) {\n\n            case 'body':\n\n                // render body selections\n                bounds = item.bounds;\n                context.beginPath();\n                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3),\n                    Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            case 'constraint':\n\n                // render constraint selections\n                var point = item.pointA;\n                if (item.bodyA)\n                    point = item.pointB;\n                context.beginPath();\n                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            }\n\n            context.setLineDash([]);\n            context.translate(-0.5, -0.5);\n        }\n\n        // render selection region\n        if (inspector.selectStart !== null) {\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.6)';\n            context.fillStyle = 'rgba(255,165,0,0.1)';\n            bounds = inspector.selectBounds;\n            context.beginPath();\n            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y),\n                Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\n            context.closePath();\n            context.stroke();\n            context.fill();\n            context.translate(-0.5, -0.5);\n        }\n\n        if (options.hasBounds)\n            context.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    /**\n     * Description\n     * @method _createCanvas\n     * @private\n     * @param {} width\n     * @param {} height\n     * @return canvas\n     */\n    var _createCanvas = function(width, height) {\n        var canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        canvas.oncontextmenu = function() { return false; };\n        canvas.onselectstart = function() { return false; };\n        return canvas;\n    };\n\n    /**\n     * Gets the pixel ratio of the canvas.\n     * @method _getPixelRatio\n     * @private\n     * @param {HTMLElement} canvas\n     * @return {Number} pixel ratio\n     */\n    var _getPixelRatio = function(canvas) {\n        var context = canvas.getContext('2d'),\n            devicePixelRatio = window.devicePixelRatio || 1,\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1;\n\n        return devicePixelRatio / backingStorePixelRatio;\n    };\n\n    /**\n     * Gets the requested texture (an Image) via its path\n     * @method _getTexture\n     * @private\n     * @param {render} render\n     * @param {string} imagePath\n     * @return {Image} texture\n     */\n    var _getTexture = function(render, imagePath) {\n        var image = render.textures[imagePath];\n\n        if (image)\n            return image;\n\n        image = render.textures[imagePath] = new Image();\n        image.src = imagePath;\n\n        return image;\n    };\n\n    /**\n     * Applies the background to the canvas using CSS.\n     * @method applyBackground\n     * @private\n     * @param {render} render\n     * @param {string} background\n     */\n    var _applyBackground = function(render, background) {\n        var cssBackground = background;\n\n        if (/(jpg|gif|png)$/.test(background))\n            cssBackground = 'url(' + background + ')';\n\n        render.canvas.style.background = cssBackground;\n        render.canvas.style.backgroundSize = \"contain\";\n        render.currentBackground = background;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A back-reference to the `Matter.Render` module.\n     *\n     * @property controller\n     * @type render\n     */\n\n    /**\n     * A reference to the `Matter.Engine` instance to be used.\n     *\n     * @property engine\n     * @type engine\n     */\n\n    /**\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n     *\n     * @property element\n     * @type HTMLElement\n     * @default null\n     */\n\n    /**\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     * @default null\n     */\n\n    /**\n     * The configuration options of the renderer.\n     *\n     * @property options\n     * @type {}\n     */\n\n    /**\n     * The target width in pixels of the `render.canvas` to be created.\n     *\n     * @property options.width\n     * @type number\n     * @default 800\n     */\n\n    /**\n     * The target height in pixels of the `render.canvas` to be created.\n     *\n     * @property options.height\n     * @type number\n     * @default 600\n     */\n\n    /**\n     * A flag that specifies if `render.bounds` should be used when rendering.\n     *\n     * @property options.hasBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Bounds` object that specifies the drawing view region.\n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n     * This allows for creating views that can pan or zoom around the scene.\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n    /**\n     * The 2d rendering context from the `render.canvas` element.\n     *\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n\n    /**\n     * The sprite texture cache.\n     *\n     * @property textures\n     * @type {}\n     */\n\n})();\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n*\n* @class Grid\n*/\n\nvar Grid = {};\n\nmodule.exports = Grid;\n\nvar Pair = __webpack_require__(9);\nvar Detector = __webpack_require__(12);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a new grid.\n     * @method create\n     * @param {} options\n     * @return {grid} A new grid\n     */\n    Grid.create = function(options) {\n        var defaults = {\n            controller: Grid,\n            detector: Detector.collisions,\n            buckets: {},\n            pairs: {},\n            pairsList: [],\n            bucketWidth: 48,\n            bucketHeight: 48\n        };\n\n        return Common.extend(defaults, options);\n    };\n\n    /**\n     * The width of a single grid bucket.\n     *\n     * @property bucketWidth\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * The height of a single grid bucket.\n     *\n     * @property bucketHeight\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * Updates the grid.\n     * @method update\n     * @param {grid} grid\n     * @param {body[]} bodies\n     * @param {engine} engine\n     * @param {boolean} forceUpdate\n     */\n    Grid.update = function(grid, bodies, engine, forceUpdate) {\n        var i, col, row,\n            world = engine.world,\n            buckets = grid.buckets,\n            bucket,\n            bucketId,\n            gridChanged = false;\n\n        // @if DEBUG\n        var metrics = engine.metrics;\n        metrics.broadphaseTests = 0;\n        // @endif\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isSleeping && !forceUpdate)\n                continue;\n\n            // don't update out of world bodies\n            if (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y)\n                continue;\n\n            var newRegion = Grid._getRegion(grid, body);\n\n            // if the body has changed grid region\n            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\n\n                // @if DEBUG\n                metrics.broadphaseTests += 1;\n                // @endif\n\n                if (!body.region || forceUpdate)\n                    body.region = newRegion;\n\n                var union = Grid._regionUnion(newRegion, body.region);\n\n                // update grid buckets affected by region change\n                // iterate over the union of both regions\n                for (col = union.startCol; col <= union.endCol; col++) {\n                    for (row = union.startRow; row <= union.endRow; row++) {\n                        bucketId = Grid._getBucketId(col, row);\n                        bucket = buckets[bucketId];\n\n                        var isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\n                                                && row >= newRegion.startRow && row <= newRegion.endRow);\n\n                        var isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\n                                                && row >= body.region.startRow && row <= body.region.endRow);\n\n                        // remove from old region buckets\n                        if (!isInsideNewRegion && isInsideOldRegion) {\n                            if (isInsideOldRegion) {\n                                if (bucket)\n                                    Grid._bucketRemoveBody(grid, bucket, body);\n                            }\n                        }\n\n                        // add to new region buckets\n                        if (body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate) {\n                            if (!bucket)\n                                bucket = Grid._createBucket(buckets, bucketId);\n                            Grid._bucketAddBody(grid, bucket, body);\n                        }\n                    }\n                }\n\n                // set the new region\n                body.region = newRegion;\n\n                // flag changes so we can update pairs\n                gridChanged = true;\n            }\n        }\n\n        // update pairs list only if pairs changed (i.e. a body changed region)\n        if (gridChanged)\n            grid.pairsList = Grid._createActivePairsList(grid);\n    };\n\n    /**\n     * Clears the grid.\n     * @method clear\n     * @param {grid} grid\n     */\n    Grid.clear = function(grid) {\n        grid.buckets = {};\n        grid.pairs = {};\n        grid.pairsList = [];\n    };\n\n    /**\n     * Finds the union of two regions.\n     * @method _regionUnion\n     * @private\n     * @param {} regionA\n     * @param {} regionB\n     * @return {} region\n     */\n    Grid._regionUnion = function(regionA, regionB) {\n        var startCol = Math.min(regionA.startCol, regionB.startCol),\n            endCol = Math.max(regionA.endCol, regionB.endCol),\n            startRow = Math.min(regionA.startRow, regionB.startRow),\n            endRow = Math.max(regionA.endRow, regionB.endRow);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Gets the region a given body falls in for a given grid.\n     * @method _getRegion\n     * @private\n     * @param {} grid\n     * @param {} body\n     * @return {} region\n     */\n    Grid._getRegion = function(grid, body) {\n        var bounds = body.bounds,\n            startCol = Math.floor(bounds.min.x / grid.bucketWidth),\n            endCol = Math.floor(bounds.max.x / grid.bucketWidth),\n            startRow = Math.floor(bounds.min.y / grid.bucketHeight),\n            endRow = Math.floor(bounds.max.y / grid.bucketHeight);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Creates a region.\n     * @method _createRegion\n     * @private\n     * @param {} startCol\n     * @param {} endCol\n     * @param {} startRow\n     * @param {} endRow\n     * @return {} region\n     */\n    Grid._createRegion = function(startCol, endCol, startRow, endRow) {\n        return { \n            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\n            startCol: startCol, \n            endCol: endCol, \n            startRow: startRow, \n            endRow: endRow \n        };\n    };\n\n    /**\n     * Gets the bucket id at the given position.\n     * @method _getBucketId\n     * @private\n     * @param {} column\n     * @param {} row\n     * @return {string} bucket id\n     */\n    Grid._getBucketId = function(column, row) {\n        return 'C' + column + 'R' + row;\n    };\n\n    /**\n     * Creates a bucket.\n     * @method _createBucket\n     * @private\n     * @param {} buckets\n     * @param {} bucketId\n     * @return {} bucket\n     */\n    Grid._createBucket = function(buckets, bucketId) {\n        var bucket = buckets[bucketId] = [];\n        return bucket;\n    };\n\n    /**\n     * Adds a body to a bucket.\n     * @method _bucketAddBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketAddBody = function(grid, bucket, body) {\n        // add new pairs\n        for (var i = 0; i < bucket.length; i++) {\n            var bodyB = bucket[i];\n\n            if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\n                continue;\n\n            // keep track of the number of buckets the pair exists in\n            // important for Grid.update to work\n            var pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair) {\n                pair[2] += 1;\n            } else {\n                grid.pairs[pairId] = [body, bodyB, 1];\n            }\n        }\n\n        // add to bodies (after pairs, otherwise pairs with self)\n        bucket.push(body);\n    };\n\n    /**\n     * Removes a body from a bucket.\n     * @method _bucketRemoveBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketRemoveBody = function(grid, bucket, body) {\n        // remove from bucket\n        bucket.splice(Common.indexOf(bucket, body), 1);\n\n        // update pair counts\n        for (var i = 0; i < bucket.length; i++) {\n            // keep track of the number of buckets the pair exists in\n            // important for _createActivePairsList to work\n            var bodyB = bucket[i],\n                pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair)\n                pair[2] -= 1;\n        }\n    };\n\n    /**\n     * Generates a list of the active pairs in the grid.\n     * @method _createActivePairsList\n     * @private\n     * @param {} grid\n     * @return [] pairs\n     */\n    Grid._createActivePairsList = function(grid) {\n        var pairKeys,\n            pair,\n            pairs = [];\n\n        // grid.pairs is used as a hashmap\n        pairKeys = Common.keys(grid.pairs);\n\n        // iterate over grid.pairs\n        for (var k = 0; k < pairKeys.length; k++) {\n            pair = grid.pairs[pairKeys[k]];\n\n            // if pair exists in at least one bucket\n            // it is a pair that needs further collision testing so push it\n            if (pair[2] > 0) {\n                pairs.push(pair);\n            } else {\n                delete grid.pairs[pairKeys[k]];\n            }\n        }\n\n        return pairs;\n    };\n    \n})();\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Detector` module contains methods for detecting collisions given a set of pairs.\n*\n* @class Detector\n*/\n\n// TODO: speculative contacts\n\nvar Detector = {};\n\nmodule.exports = Detector;\n\nvar SAT = __webpack_require__(13);\nvar Pair = __webpack_require__(9);\nvar Bounds = __webpack_require__(1);\n\n(function() {\n\n    /**\n     * Finds all collisions given a list of pairs.\n     * @method collisions\n     * @param {pair[]} broadphasePairs\n     * @param {engine} engine\n     * @return {array} collisions\n     */\n    Detector.collisions = function(broadphasePairs, engine) {\n        var collisions = [],\n            pairsTable = engine.pairs.table;\n\n        // @if DEBUG\n        var metrics = engine.metrics;\n        // @endif\n        \n        for (var i = 0; i < broadphasePairs.length; i++) {\n            var bodyA = broadphasePairs[i][0], \n                bodyB = broadphasePairs[i][1];\n\n            if ((bodyA.isStatic || bodyA.isSleeping) && (bodyB.isStatic || bodyB.isSleeping))\n                continue;\n            \n            if (!Detector.canCollide(bodyA.collisionFilter, bodyB.collisionFilter))\n                continue;\n\n            // @if DEBUG\n            metrics.midphaseTests += 1;\n            // @endif\n\n            // mid phase\n            if (Bounds.overlaps(bodyA.bounds, bodyB.bounds)) {\n                for (var j = bodyA.parts.length > 1 ? 1 : 0; j < bodyA.parts.length; j++) {\n                    var partA = bodyA.parts[j];\n\n                    for (var k = bodyB.parts.length > 1 ? 1 : 0; k < bodyB.parts.length; k++) {\n                        var partB = bodyB.parts[k];\n\n                        if ((partA === bodyA && partB === bodyB) || Bounds.overlaps(partA.bounds, partB.bounds)) {\n                            // find a previous collision we could reuse\n                            var pairId = Pair.id(partA, partB),\n                                pair = pairsTable[pairId],\n                                previousCollision;\n\n                            if (pair && pair.isActive) {\n                                previousCollision = pair.collision;\n                            } else {\n                                previousCollision = null;\n                            }\n\n                            // narrow phase\n                            var collision = SAT.collides(partA, partB, previousCollision);\n\n                            // @if DEBUG\n                            metrics.narrowphaseTests += 1;\n                            if (collision.reused)\n                                metrics.narrowReuseCount += 1;\n                            // @endif\n\n                            if (collision.collided) {\n                                collisions.push(collision);\n                                // @if DEBUG\n                                metrics.narrowDetections += 1;\n                                // @endif\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns `true` if both supplied collision filters will allow a collision to occur.\n     * See `body.collisionFilter` for more information.\n     * @method canCollide\n     * @param {} filterA\n     * @param {} filterB\n     * @return {bool} `true` if collision can occur\n     */\n    Detector.canCollide = function(filterA, filterB) {\n        if (filterA.group === filterB.group && filterA.group !== 0)\n            return filterA.group > 0;\n\n        return (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0;\n    };\n\n})();\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n*\n* @class SAT\n*/\n\n// TODO: true circles and curves\n\nvar SAT = {};\n\nmodule.exports = SAT;\n\nvar Vertices = __webpack_require__(3);\nvar Vector = __webpack_require__(2);\n\n(function() {\n\n    /**\n     * Detect collision between two bodies using the Separating Axis Theorem.\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {collision} previousCollision\n     * @return {collision} collision\n     */\n    SAT.collides = function(bodyA, bodyB, previousCollision) {\n        var overlapAB,\n            overlapBA, \n            minOverlap,\n            collision,\n            canReusePrevCol = false;\n\n        if (previousCollision) {\n            // estimate total motion\n            var parentA = bodyA.parent,\n                parentB = bodyB.parent,\n                motion = parentA.speed * parentA.speed + parentA.angularSpeed * parentA.angularSpeed\n                       + parentB.speed * parentB.speed + parentB.angularSpeed * parentB.angularSpeed;\n\n            // we may be able to (partially) reuse collision result \n            // but only safe if collision was resting\n            canReusePrevCol = previousCollision && previousCollision.collided && motion < 0.2;\n\n            // reuse collision object\n            collision = previousCollision;\n        } else {\n            collision = { collided: false, bodyA: bodyA, bodyB: bodyB };\n        }\n\n        if (previousCollision && canReusePrevCol) {\n            // if we can reuse the collision result\n            // we only need to test the previously found axis\n            var axisBodyA = collision.axisBody,\n                axisBodyB = axisBodyA === bodyA ? bodyB : bodyA,\n                axes = [axisBodyA.axes[previousCollision.axisNumber]];\n\n            minOverlap = SAT._overlapAxes(axisBodyA.vertices, axisBodyB.vertices, axes);\n            collision.reused = true;\n\n            if (minOverlap.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n        } else {\n            // if we can't reuse a result, perform a full SAT test\n\n            overlapAB = SAT._overlapAxes(bodyA.vertices, bodyB.vertices, bodyA.axes);\n\n            if (overlapAB.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            overlapBA = SAT._overlapAxes(bodyB.vertices, bodyA.vertices, bodyB.axes);\n\n            if (overlapBA.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            if (overlapAB.overlap < overlapBA.overlap) {\n                minOverlap = overlapAB;\n                collision.axisBody = bodyA;\n            } else {\n                minOverlap = overlapBA;\n                collision.axisBody = bodyB;\n            }\n\n            // important for reuse later\n            collision.axisNumber = minOverlap.axisNumber;\n        }\n\n        collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;\n        collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;\n        collision.collided = true;\n        collision.depth = minOverlap.overlap;\n        collision.parentA = collision.bodyA.parent;\n        collision.parentB = collision.bodyB.parent;\n        \n        bodyA = collision.bodyA;\n        bodyB = collision.bodyB;\n\n        // ensure normal is facing away from bodyA\n        if (Vector.dot(minOverlap.axis, Vector.sub(bodyB.position, bodyA.position)) < 0) {\n            collision.normal = {\n                x: minOverlap.axis.x,\n                y: minOverlap.axis.y\n            };\n        } else {\n            collision.normal = {\n                x: -minOverlap.axis.x,\n                y: -minOverlap.axis.y\n            };\n        }\n\n        collision.tangent = Vector.perp(collision.normal);\n\n        collision.penetration = collision.penetration || {};\n        collision.penetration.x = collision.normal.x * collision.depth;\n        collision.penetration.y = collision.normal.y * collision.depth; \n\n        // find support points, there is always either exactly one or two\n        var verticesB = SAT._findSupports(bodyA, bodyB, collision.normal),\n            supports = [];\n\n        // find the supports from bodyB that are inside bodyA\n        if (Vertices.contains(bodyA.vertices, verticesB[0]))\n            supports.push(verticesB[0]);\n\n        if (Vertices.contains(bodyA.vertices, verticesB[1]))\n            supports.push(verticesB[1]);\n\n        // find the supports from bodyA that are inside bodyB\n        if (supports.length < 2) {\n            var verticesA = SAT._findSupports(bodyB, bodyA, Vector.neg(collision.normal));\n                \n            if (Vertices.contains(bodyB.vertices, verticesA[0]))\n                supports.push(verticesA[0]);\n\n            if (supports.length < 2 && Vertices.contains(bodyB.vertices, verticesA[1]))\n                supports.push(verticesA[1]);\n        }\n\n        // account for the edge case of overlapping but no vertex containment\n        if (supports.length < 1)\n            supports = [verticesB[0]];\n        \n        collision.supports = supports;\n\n        return collision;\n    };\n\n    /**\n     * Find the overlap between two sets of vertices.\n     * @method _overlapAxes\n     * @private\n     * @param {} verticesA\n     * @param {} verticesB\n     * @param {} axes\n     * @return result\n     */\n    SAT._overlapAxes = function(verticesA, verticesB, axes) {\n        var projectionA = Vector._temp[0], \n            projectionB = Vector._temp[1],\n            result = { overlap: Number.MAX_VALUE },\n            overlap,\n            axis;\n\n        for (var i = 0; i < axes.length; i++) {\n            axis = axes[i];\n\n            SAT._projectToAxis(projectionA, verticesA, axis);\n            SAT._projectToAxis(projectionB, verticesB, axis);\n\n            overlap = Math.min(projectionA.max - projectionB.min, projectionB.max - projectionA.min);\n\n            if (overlap <= 0) {\n                result.overlap = overlap;\n                return result;\n            }\n\n            if (overlap < result.overlap) {\n                result.overlap = overlap;\n                result.axis = axis;\n                result.axisNumber = i;\n            }\n        }\n\n        return result;\n    };\n\n    /**\n     * Projects vertices on an axis and returns an interval.\n     * @method _projectToAxis\n     * @private\n     * @param {} projection\n     * @param {} vertices\n     * @param {} axis\n     */\n    SAT._projectToAxis = function(projection, vertices, axis) {\n        var min = Vector.dot(vertices[0], axis),\n            max = min;\n\n        for (var i = 1; i < vertices.length; i += 1) {\n            var dot = Vector.dot(vertices[i], axis);\n\n            if (dot > max) { \n                max = dot; \n            } else if (dot < min) { \n                min = dot; \n            }\n        }\n\n        projection.min = min;\n        projection.max = max;\n    };\n    \n    /**\n     * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n     * @method _findSupports\n     * @private\n     * @param {} bodyA\n     * @param {} bodyB\n     * @param {} normal\n     * @return [vector]\n     */\n    SAT._findSupports = function(bodyA, bodyB, normal) {\n        var nearestDistance = Number.MAX_VALUE,\n            vertexToBody = Vector._temp[0],\n            vertices = bodyB.vertices,\n            bodyAPosition = bodyA.position,\n            distance,\n            vertex,\n            vertexA,\n            vertexB;\n\n        // find closest vertex on bodyB\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            vertexToBody.x = vertex.x - bodyAPosition.x;\n            vertexToBody.y = vertex.y - bodyAPosition.y;\n            distance = -Vector.dot(normal, vertexToBody);\n\n            if (distance < nearestDistance) {\n                nearestDistance = distance;\n                vertexA = vertex;\n            }\n        }\n\n        // find next closest vertex using the two connected to it\n        var prevIndex = vertexA.index - 1 >= 0 ? vertexA.index - 1 : vertices.length - 1;\n        vertex = vertices[prevIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        nearestDistance = -Vector.dot(normal, vertexToBody);\n        vertexB = vertex;\n\n        var nextIndex = (vertexA.index + 1) % vertices.length;\n        vertex = vertices[nextIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        distance = -Vector.dot(normal, vertexToBody);\n        if (distance < nearestDistance) {\n            vertexB = vertex;\n        }\n\n        return [vertexA, vertexB];\n    };\n\n})();\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n*\n* @class Mouse\n*/\n\nvar Mouse = {};\n\nmodule.exports = Mouse;\n\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a mouse input.\n     * @method create\n     * @param {HTMLElement} element\n     * @return {mouse} A new mouse\n     */\n    Mouse.create = function(element) {\n        var mouse = {};\n\n        if (!element) {\n            Common.log('Mouse.create: element was undefined, defaulting to document.body', 'warn');\n        }\n        \n        mouse.element = element || document.body;\n        mouse.absolute = { x: 0, y: 0 };\n        mouse.position = { x: 0, y: 0 };\n        mouse.mousedownPosition = { x: 0, y: 0 };\n        mouse.mouseupPosition = { x: 0, y: 0 };\n        mouse.offset = { x: 0, y: 0 };\n        mouse.scale = { x: 1, y: 1 };\n        mouse.wheelDelta = 0;\n        mouse.button = -1;\n        mouse.pixelRatio = parseInt(mouse.element.getAttribute('data-pixel-ratio'), 10) || 1;\n\n        mouse.sourceEvents = {\n            mousemove: null,\n            mousedown: null,\n            mouseup: null,\n            mousewheel: null\n        };\n        \n        mouse.mousemove = function(event) { \n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.sourceEvents.mousemove = event;\n        };\n        \n        mouse.mousedown = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            } else {\n                mouse.button = event.button;\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mousedownPosition.x = mouse.position.x;\n            mouse.mousedownPosition.y = mouse.position.y;\n            mouse.sourceEvents.mousedown = event;\n        };\n        \n        mouse.mouseup = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                event.preventDefault();\n            }\n            \n            mouse.button = -1;\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mouseupPosition.x = mouse.position.x;\n            mouse.mouseupPosition.y = mouse.position.y;\n            mouse.sourceEvents.mouseup = event;\n        };\n\n        mouse.mousewheel = function(event) {\n            mouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n            event.preventDefault();\n        };\n\n        Mouse.setElement(mouse, mouse.element);\n\n        return mouse;\n    };\n\n    /**\n     * Sets the element the mouse is bound to (and relative to).\n     * @method setElement\n     * @param {mouse} mouse\n     * @param {HTMLElement} element\n     */\n    Mouse.setElement = function(mouse, element) {\n        mouse.element = element;\n\n        element.addEventListener('mousemove', mouse.mousemove);\n        element.addEventListener('mousedown', mouse.mousedown);\n        element.addEventListener('mouseup', mouse.mouseup);\n        \n        element.addEventListener('mousewheel', mouse.mousewheel);\n        element.addEventListener('DOMMouseScroll', mouse.mousewheel);\n\n        element.addEventListener('touchmove', mouse.mousemove);\n        element.addEventListener('touchstart', mouse.mousedown);\n        element.addEventListener('touchend', mouse.mouseup);\n    };\n\n    /**\n     * Clears all captured source events.\n     * @method clearSourceEvents\n     * @param {mouse} mouse\n     */\n    Mouse.clearSourceEvents = function(mouse) {\n        mouse.sourceEvents.mousemove = null;\n        mouse.sourceEvents.mousedown = null;\n        mouse.sourceEvents.mouseup = null;\n        mouse.sourceEvents.mousewheel = null;\n        mouse.wheelDelta = 0;\n    };\n\n    /**\n     * Sets the mouse position offset.\n     * @method setOffset\n     * @param {mouse} mouse\n     * @param {vector} offset\n     */\n    Mouse.setOffset = function(mouse, offset) {\n        mouse.offset.x = offset.x;\n        mouse.offset.y = offset.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n\n    /**\n     * Sets the mouse position scale.\n     * @method setScale\n     * @param {mouse} mouse\n     * @param {vector} scale\n     */\n    Mouse.setScale = function(mouse, scale) {\n        mouse.scale.x = scale.x;\n        mouse.scale.y = scale.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n    \n    /**\n     * Gets the mouse position relative to an element given a screen pixel ratio.\n     * @method _getRelativeMousePosition\n     * @private\n     * @param {} event\n     * @param {} element\n     * @param {number} pixelRatio\n     * @return {}\n     */\n    Mouse._getRelativeMousePosition = function(event, element, pixelRatio) {\n        var elementBounds = element.getBoundingClientRect(),\n            rootNode = (document.documentElement || document.body.parentNode || document.body),\n            scrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\n            scrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\n            touches = event.changedTouches,\n            x, y;\n        \n        if (touches) {\n            x = touches[0].pageX - elementBounds.left - scrollX;\n            y = touches[0].pageY - elementBounds.top - scrollY;\n        } else {\n            x = event.pageX - elementBounds.left - scrollX;\n            y = event.pageY - elementBounds.top - scrollY;\n        }\n\n        return { \n            x: x / (element.clientWidth / (element.width || element.clientWidth) * pixelRatio),\n            y: y / (element.clientHeight / (element.height || element.clientHeight) * pixelRatio)\n        };\n    };\n\n})();\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n*\n* @class Axes\n*/\n\nvar Axes = {};\n\nmodule.exports = Axes;\n\nvar Vector = __webpack_require__(2);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a new set of axes from the given vertices.\n     * @method fromVertices\n     * @param {vertices} vertices\n     * @return {axes} A new axes from the given vertices\n     */\n    Axes.fromVertices = function(vertices) {\n        var axes = {};\n\n        // find the unique axes, using edge normal gradients\n        for (var i = 0; i < vertices.length; i++) {\n            var j = (i + 1) % vertices.length, \n                normal = Vector.normalise({ \n                    x: vertices[j].y - vertices[i].y, \n                    y: vertices[i].x - vertices[j].x\n                }),\n                gradient = (normal.y === 0) ? Infinity : (normal.x / normal.y);\n            \n            // limit precision\n            gradient = gradient.toFixed(3).toString();\n            axes[gradient] = normal;\n        }\n\n        return Common.values(axes);\n    };\n\n    /**\n     * Rotates a set of axes by the given angle.\n     * @method rotate\n     * @param {axes} axes\n     * @param {number} angle\n     */\n    Axes.rotate = function(axes, angle) {\n        if (angle === 0)\n            return;\n        \n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < axes.length; i++) {\n            var axis = axes[i],\n                xx;\n            xx = axis.x * cos - axis.y * sin;\n            axis.y = axis.x * sin + axis.y * cos;\n            axis.x = xx;\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Bodies` module contains factory methods for creating rigid body models \n* with commonly used body configurations (such as rectangles, circles and other polygons).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Bodies\n*/\n\n// TODO: true circle bodies\n\nvar Bodies = {};\n\nmodule.exports = Bodies;\n\nvar Vertices = __webpack_require__(3);\nvar Common = __webpack_require__(0);\nvar Body = __webpack_require__(6);\nvar Bounds = __webpack_require__(1);\nvar Vector = __webpack_require__(2);\n\n(function() {\n\n    Bodies._decompWarned = false;\n\n    /**\n     * Creates a new rigid body model with a rectangle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method rectangle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {object} [options]\n     * @return {body} A new rectangle body\n     */\n    Bodies.rectangle = function(x, y, width, height, options) {\n        options = options || {};\n\n        var rectangle = { \n            label: 'Rectangle Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath('L 0 0 L ' + width + ' 0 L ' + width + ' ' + height + ' L 0 ' + height)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            rectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius, \n                chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, rectangle, options));\n    };\n    \n    /**\n     * Creates a new rigid body model with a trapezoid hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method trapezoid\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} slope\n     * @param {object} [options]\n     * @return {body} A new trapezoid body\n     */\n    Bodies.trapezoid = function(x, y, width, height, slope, options) {\n        options = options || {};\n\n        slope *= 0.5;\n        var roof = (1 - (slope * 2)) * width;\n        \n        var x1 = width * slope,\n            x2 = x1 + roof,\n            x3 = x2 + x1,\n            verticesPath;\n\n        if (slope < 0.5) {\n            verticesPath = 'L 0 0 L ' + x1 + ' ' + (-height) + ' L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        } else {\n            verticesPath = 'L 0 0 L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        }\n\n        var trapezoid = { \n            label: 'Trapezoid Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(verticesPath)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            trapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius, \n                chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, trapezoid, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a circle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method circle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} radius\n     * @param {object} [options]\n     * @param {number} [maxSides]\n     * @return {body} A new circle body\n     */\n    Bodies.circle = function(x, y, radius, options, maxSides) {\n        options = options || {};\n\n        var circle = {\n            label: 'Circle Body',\n            circleRadius: radius\n        };\n        \n        // approximate circles with polygons until true circles implemented in SAT\n        maxSides = maxSides || 25;\n        var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));\n\n        // optimisation: always use even number of sides (half the number of unique axes)\n        if (sides % 2 === 1)\n            sides += 1;\n\n        return Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a regular polygon hull with the given number of sides. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method polygon\n     * @param {number} x\n     * @param {number} y\n     * @param {number} sides\n     * @param {number} radius\n     * @param {object} [options]\n     * @return {body} A new regular polygon body\n     */\n    Bodies.polygon = function(x, y, sides, radius, options) {\n        options = options || {};\n\n        if (sides < 3)\n            return Bodies.circle(x, y, radius, options);\n\n        var theta = 2 * Math.PI / sides,\n            path = '',\n            offset = theta * 0.5;\n\n        for (var i = 0; i < sides; i += 1) {\n            var angle = offset + (i * theta),\n                xx = Math.cos(angle) * radius,\n                yy = Math.sin(angle) * radius;\n\n            path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\n        }\n\n        var polygon = { \n            label: 'Polygon Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(path)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius, \n                chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, polygon, options));\n    };\n\n    /**\n     * Creates a body based on set(s) of vertices.\n     * \n     * This utility builds on top of `Body.create` to automatically handle concave inputs.\n     * \n     * To use this decomposition feature the [poly-decomp](https://github.com/schteppe/poly-decomp.js) \n     * package should be additionally installed via npm or as a global.\n     * \n     * The resulting vertices are reorientated about their centre of mass,\n     * and offset such that `body.position` corresponds to this point.\n     * \n     * If needed the resulting offset may be found by subtracting `body.bounds` from the original input bounds.\n     * To later move the centre of mass see `Body.setCentre`.\n     * \n     * Note that decomposition results are not always perfect. \n     * \n     * For best results, simplify the input vertices as much as possible first.\n     * By default this function applies some addtional simplification to help.\n     * \n     * Some outputs may also require further manual processing afterwards to be robust.\n     * \n     * In particular some parts may need to be overlapped to avoid collision gaps.\n     * Thin parts and sharp points should be avoided or removed where possible.\n     *\n     * The options parameter object specifies any `Matter.Body` properties you wish to override the defaults.\n     * \n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method fromVertices\n     * @param {number} x\n     * @param {number} y\n     * @param [[vector]] vertexSets\n     * @param {object} [options]\n     * @param {bool} [flagInternal=false]\n     * @param {number} [removeCollinear=0.01]\n     * @param {number} [minimumArea=10]\n     * @param {number} [removeDuplicatePoints=0.01]\n     * @return {body}\n     */\n    Bodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea, removeDuplicatePoints) {\n        var decomp,\n            canDecomp,\n            body,\n            parts,\n            isConvex,\n            isConcave,\n            vertices,\n            i,\n            j,\n            k,\n            v,\n            z;\n\n        try {\n            decomp = __webpack_require__(27);\n        } catch (e) {\n            // continue without decomp\n            decomp = null;\n        }\n\n        // check expected decomp module was resolved\n        canDecomp = Boolean(decomp && decomp.quickDecomp);\n\n        options = options || {};\n        parts = [];\n\n        flagInternal = typeof flagInternal !== 'undefined' ? flagInternal : false;\n        removeCollinear = typeof removeCollinear !== 'undefined' ? removeCollinear : 0.01;\n        minimumArea = typeof minimumArea !== 'undefined' ? minimumArea : 10;\n        removeDuplicatePoints = typeof removeDuplicatePoints !== 'undefined' ? removeDuplicatePoints : 0.01;\n\n        // ensure vertexSets is an array of arrays\n        if (!Common.isArray(vertexSets[0])) {\n            vertexSets = [vertexSets];\n        }\n\n        for (v = 0; v < vertexSets.length; v += 1) {\n            vertices = vertexSets[v];\n            isConvex = Vertices.isConvex(vertices);\n            isConcave = !isConvex;\n\n            if (isConcave && !canDecomp && !Bodies._decompWarned) {\n                Common.warn(\n                    'Could not resolve the expected \\'poly-decomp\\' package for concave vertices in \\'Bodies.fromVertices\\''\n                );\n                Common.warn(\n                    'Try \\'npm install poly-decomp --save\\' or as a global e.g. \\'window.decomp\\''\n                );\n                Bodies._decompWarned = true;\n            }\n\n            if (isConvex || !canDecomp) {\n                if (isConvex) {\n                    vertices = Vertices.clockwiseSort(vertices);\n                } else {\n                    // fallback to convex hull when decomposition is not possible\n                    vertices = Vertices.hull(vertices);\n                }\n\n                parts.push({\n                    position: { x: x, y: y },\n                    vertices: vertices\n                });\n            } else {\n                // initialise a decomposition\n                var concave = vertices.map(function(vertex) {\n                    return [vertex.x, vertex.y];\n                });\n\n                // vertices are concave and simple, we can decompose into parts\n                decomp.makeCCW(concave);\n                if (removeCollinear !== false)\n                    decomp.removeCollinearPoints(concave, removeCollinear);\n                if (removeDuplicatePoints !== false && decomp.removeDuplicatePoints)\n                    decomp.removeDuplicatePoints(concave, removeDuplicatePoints);\n\n                // use the quick decomposition algorithm (Bayazit)\n                var decomposed = decomp.quickDecomp(concave);\n\n                // for each decomposed chunk\n                for (i = 0; i < decomposed.length; i++) {\n                    var chunk = decomposed[i];\n\n                    // convert vertices into the correct structure\n                    var chunkVertices = chunk.map(function(vertices) {\n                        return {\n                            x: vertices[0],\n                            y: vertices[1]\n                        };\n                    });\n\n                    // skip small chunks\n                    if (minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea)\n                        continue;\n\n                    // create a compound part\n                    parts.push({\n                        position: Vertices.centre(chunkVertices),\n                        vertices: chunkVertices\n                    });\n                }\n            }\n        }\n\n        // create body parts\n        for (i = 0; i < parts.length; i++) {\n            parts[i] = Body.create(Common.extend(parts[i], options));\n        }\n\n        // flag internal edges (coincident part edges)\n        if (flagInternal) {\n            var coincident_max_dist = 5;\n\n            for (i = 0; i < parts.length; i++) {\n                var partA = parts[i];\n\n                for (j = i + 1; j < parts.length; j++) {\n                    var partB = parts[j];\n\n                    if (Bounds.overlaps(partA.bounds, partB.bounds)) {\n                        var pav = partA.vertices,\n                            pbv = partB.vertices;\n\n                        // iterate vertices of both parts\n                        for (k = 0; k < partA.vertices.length; k++) {\n                            for (z = 0; z < partB.vertices.length; z++) {\n                                // find distances between the vertices\n                                var da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\n                                    db = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]));\n\n                                // if both vertices are very close, consider the edge concident (internal)\n                                if (da < coincident_max_dist && db < coincident_max_dist) {\n                                    pav[k].isInternal = true;\n                                    pbv[z].isInternal = true;\n                                }\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n\n        if (parts.length > 1) {\n            // create the parent body to be returned, that contains generated compound parts\n            body = Body.create(Common.extend({ parts: parts.slice(0) }, options));\n\n            // offset such that body.position is at the centre off mass\n            Body.setPosition(body, { x: x, y: y });\n\n            return body;\n        } else {\n            return parts[0];\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Plugin` module contains functions for registering and installing plugins on modules.\n*\n* @class Plugin\n*/\n\nvar Plugin = {};\n\nmodule.exports = Plugin;\n\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    Plugin._registry = {};\n\n    /**\n     * Registers a plugin object so it can be resolved later by name.\n     * @method register\n     * @param plugin {} The plugin to register.\n     * @return {object} The plugin.\n     */\n    Plugin.register = function(plugin) {\n        if (!Plugin.isPlugin(plugin)) {\n            Common.warn('Plugin.register:', Plugin.toString(plugin), 'does not implement all required fields.');\n        }\n\n        if (plugin.name in Plugin._registry) {\n            var registered = Plugin._registry[plugin.name],\n                pluginVersion = Plugin.versionParse(plugin.version).number,\n                registeredVersion = Plugin.versionParse(registered.version).number;\n\n            if (pluginVersion > registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'was upgraded to', Plugin.toString(plugin));\n                Plugin._registry[plugin.name] = plugin;\n            } else if (pluginVersion < registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'can not be downgraded to', Plugin.toString(plugin));\n            } else if (plugin !== registered) {\n                Common.warn('Plugin.register:', Plugin.toString(plugin), 'is already registered to different plugin object');\n            }\n        } else {\n            Plugin._registry[plugin.name] = plugin;\n        }\n\n        return plugin;\n    };\n\n    /**\n     * Resolves a dependency to a plugin object from the registry if it exists. \n     * The `dependency` may contain a version, but only the name matters when resolving.\n     * @method resolve\n     * @param dependency {string} The dependency.\n     * @return {object} The plugin if resolved, otherwise `undefined`.\n     */\n    Plugin.resolve = function(dependency) {\n        return Plugin._registry[Plugin.dependencyParse(dependency).name];\n    };\n\n    /**\n     * Returns a pretty printed plugin name and version.\n     * @method toString\n     * @param plugin {} The plugin.\n     * @return {string} Pretty printed plugin name and version.\n     */\n    Plugin.toString = function(plugin) {\n        return typeof plugin === 'string' ? plugin : (plugin.name || 'anonymous') + '@' + (plugin.version || plugin.range || '0.0.0');\n    };\n\n    /**\n     * Returns `true` if the object meets the minimum standard to be considered a plugin.\n     * This means it must define the following properties:\n     * - `name`\n     * - `version`\n     * - `install`\n     * @method isPlugin\n     * @param obj {} The obj to test.\n     * @return {boolean} `true` if the object can be considered a plugin otherwise `false`.\n     */\n    Plugin.isPlugin = function(obj) {\n        return obj && obj.name && obj.version && obj.install;\n    };\n\n    /**\n     * Returns `true` if a plugin with the given `name` been installed on `module`.\n     * @method isUsed\n     * @param module {} The module.\n     * @param name {string} The plugin name.\n     * @return {boolean} `true` if a plugin with the given `name` been installed on `module`, otherwise `false`.\n     */\n    Plugin.isUsed = function(module, name) {\n        return module.used.indexOf(name) > -1;\n    };\n\n    /**\n     * Returns `true` if `plugin.for` is applicable to `module` by comparing against `module.name` and `module.version`.\n     * If `plugin.for` is not specified then it is assumed to be applicable.\n     * The value of `plugin.for` is a string of the format `'module-name'` or `'module-name@version'`.\n     * @method isFor\n     * @param plugin {} The plugin.\n     * @param module {} The module.\n     * @return {boolean} `true` if `plugin.for` is applicable to `module`, otherwise `false`.\n     */\n    Plugin.isFor = function(plugin, module) {\n        var parsed = plugin.for && Plugin.dependencyParse(plugin.for);\n        return !plugin.for || (module.name === parsed.name && Plugin.versionSatisfies(module.version, parsed.range));\n    };\n\n    /**\n     * Installs the plugins by calling `plugin.install` on each plugin specified in `plugins` if passed, otherwise `module.uses`.\n     * For installing plugins on `Matter` see the convenience function `Matter.use`.\n     * Plugins may be specified either by their name or a reference to the plugin object.\n     * Plugins themselves may specify further dependencies, but each plugin is installed only once.\n     * Order is important, a topological sort is performed to find the best resulting order of installation.\n     * This sorting attempts to satisfy every dependency's requested ordering, but may not be exact in all cases.\n     * This function logs the resulting status of each dependency in the console, along with any warnings.\n     * - A green tick ✅ indicates a dependency was resolved and installed.\n     * - An orange diamond 🔶 indicates a dependency was resolved but a warning was thrown for it or one if its dependencies.\n     * - A red cross ❌ indicates a dependency could not be resolved.\n     * Avoid calling this function multiple times on the same module unless you intend to manually control installation order.\n     * @method use\n     * @param module {} The module install plugins on.\n     * @param [plugins=module.uses] {} The plugins to install on module (optional, defaults to `module.uses`).\n     */\n    Plugin.use = function(module, plugins) {\n        module.uses = (module.uses || []).concat(plugins || []);\n\n        if (module.uses.length === 0) {\n            Common.warn('Plugin.use:', Plugin.toString(module), 'does not specify any dependencies to install.');\n            return;\n        }\n\n        var dependencies = Plugin.dependencies(module),\n            sortedDependencies = Common.topologicalSort(dependencies),\n            status = [];\n\n        for (var i = 0; i < sortedDependencies.length; i += 1) {\n            if (sortedDependencies[i] === module.name) {\n                continue;\n            }\n\n            var plugin = Plugin.resolve(sortedDependencies[i]);\n\n            if (!plugin) {\n                status.push('❌ ' + sortedDependencies[i]);\n                continue;\n            }\n\n            if (Plugin.isUsed(module, plugin.name)) {\n                continue;\n            }\n\n            if (!Plugin.isFor(plugin, module)) {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'is for', plugin.for, 'but installed on', Plugin.toString(module) + '.');\n                plugin._warned = true;\n            }\n\n            if (plugin.install) {\n                plugin.install(module);\n            } else {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'does not specify an install function.');\n                plugin._warned = true;\n            }\n\n            if (plugin._warned) {\n                status.push('🔶 ' + Plugin.toString(plugin));\n                delete plugin._warned;\n            } else {\n                status.push('✅ ' + Plugin.toString(plugin));\n            }\n\n            module.used.push(plugin.name);\n        }\n\n        if (status.length > 0) {\n            Common.info(status.join('  '));\n        }\n    };\n\n    /**\n     * Recursively finds all of a module's dependencies and returns a flat dependency graph.\n     * @method dependencies\n     * @param module {} The module.\n     * @return {object} A dependency graph.\n     */\n    Plugin.dependencies = function(module, tracked) {\n        var parsedBase = Plugin.dependencyParse(module),\n            name = parsedBase.name;\n\n        tracked = tracked || {};\n\n        if (name in tracked) {\n            return;\n        }\n\n        module = Plugin.resolve(module) || module;\n\n        tracked[name] = Common.map(module.uses || [], function(dependency) {\n            if (Plugin.isPlugin(dependency)) {\n                Plugin.register(dependency);\n            }\n\n            var parsed = Plugin.dependencyParse(dependency),\n                resolved = Plugin.resolve(dependency);\n\n            if (resolved && !Plugin.versionSatisfies(resolved.version, parsed.range)) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(resolved), 'does not satisfy',\n                    Plugin.toString(parsed), 'used by', Plugin.toString(parsedBase) + '.'\n                );\n\n                resolved._warned = true;\n                module._warned = true;\n            } else if (!resolved) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(dependency), 'used by',\n                    Plugin.toString(parsedBase), 'could not be resolved.'\n                );\n\n                module._warned = true;\n            }\n\n            return parsed.name;\n        });\n\n        for (var i = 0; i < tracked[name].length; i += 1) {\n            Plugin.dependencies(tracked[name][i], tracked);\n        }\n\n        return tracked;\n    };\n\n    /**\n     * Parses a dependency string into its components.\n     * The `dependency` is a string of the format `'module-name'` or `'module-name@version'`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * This function can also handle dependencies that are already resolved (e.g. a module object).\n     * @method dependencyParse\n     * @param dependency {string} The dependency of the format `'module-name'` or `'module-name@version'`.\n     * @return {object} The dependency parsed into its components.\n     */\n    Plugin.dependencyParse = function(dependency) {\n        if (Common.isString(dependency)) {\n            var pattern = /^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?))?$/;\n\n            if (!pattern.test(dependency)) {\n                Common.warn('Plugin.dependencyParse:', dependency, 'is not a valid dependency string.');\n            }\n\n            return {\n                name: dependency.split('@')[0],\n                range: dependency.split('@')[1] || '*'\n            };\n        }\n\n        return {\n            name: dependency.name,\n            range: dependency.range || dependency.version\n        };\n    };\n\n    /**\n     * Parses a version string into its components.  \n     * Versions are strictly of the format `x.y.z` (as in [semver](http://semver.org/)).\n     * Versions may optionally have a prerelease tag in the format `x.y.z-alpha`.\n     * Ranges are a strict subset of [npm ranges](https://docs.npmjs.com/misc/semver#advanced-range-syntax).\n     * Only the following range types are supported:\n     * - Tilde ranges e.g. `~1.2.3`\n     * - Caret ranges e.g. `^1.2.3`\n     * - Greater than ranges e.g. `>1.2.3`\n     * - Greater than or equal ranges e.g. `>=1.2.3`\n     * - Exact version e.g. `1.2.3`\n     * - Any version `*`\n     * @method versionParse\n     * @param range {string} The version string.\n     * @return {object} The version range parsed into its components.\n     */\n    Plugin.versionParse = function(range) {\n        var pattern = /^(\\*)|(\\^|~|>=|>)?\\s*((\\d+)\\.(\\d+)\\.(\\d+))(-[0-9A-Za-z-]+)?$/;\n\n        if (!pattern.test(range)) {\n            Common.warn('Plugin.versionParse:', range, 'is not a valid version or range.');\n        }\n\n        var parts = pattern.exec(range);\n        var major = Number(parts[4]);\n        var minor = Number(parts[5]);\n        var patch = Number(parts[6]);\n\n        return {\n            isRange: Boolean(parts[1] || parts[2]),\n            version: parts[3],\n            range: range,\n            operator: parts[1] || parts[2] || '',\n            major: major,\n            minor: minor,\n            patch: patch,\n            parts: [major, minor, patch],\n            prerelease: parts[7],\n            number: major * 1e8 + minor * 1e4 + patch\n        };\n    };\n\n    /**\n     * Returns `true` if `version` satisfies the given `range`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * If a version or range is not specified, then any version (`*`) is assumed to satisfy.\n     * @method versionSatisfies\n     * @param version {string} The version string.\n     * @param range {string} The range string.\n     * @return {boolean} `true` if `version` satisfies `range`, otherwise `false`.\n     */\n    Plugin.versionSatisfies = function(version, range) {\n        range = range || '*';\n\n        var r = Plugin.versionParse(range),\n            v = Plugin.versionParse(version);\n\n        if (r.isRange) {\n            if (r.operator === '*' || version === '*') {\n                return true;\n            }\n\n            if (r.operator === '>') {\n                return v.number > r.number;\n            }\n\n            if (r.operator === '>=') {\n                return v.number >= r.number;\n            }\n\n            if (r.operator === '~') {\n                return v.major === r.major && v.minor === r.minor && v.patch >= r.patch;\n            }\n\n            if (r.operator === '^') {\n                if (r.major > 0) {\n                    return v.major === r.major && v.number >= r.number;\n                }\n\n                if (r.minor > 0) {\n                    return v.minor === r.minor && v.patch >= r.patch;\n                }\n\n                return v.patch === r.patch;\n            }\n        }\n\n        return version === range || version === '*';\n    };\n\n})();\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\n/**\n* The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n*\n* @class Contact\n*/\n\nvar Contact = {};\n\nmodule.exports = Contact;\n\n(function() {\n\n    /**\n     * Creates a new contact.\n     * @method create\n     * @param {vertex} vertex\n     * @return {contact} A new contact\n     */\n    Contact.create = function(vertex) {\n        return {\n            id: Contact.id(vertex),\n            vertex: vertex,\n            normalImpulse: 0,\n            tangentImpulse: 0\n        };\n    };\n    \n    /**\n     * Generates a contact id.\n     * @method id\n     * @param {vertex} vertex\n     * @return {string} Unique contactID\n     */\n    Contact.id = function(vertex) {\n        return vertex.body.id + '_' + vertex.index;\n    };\n\n})();\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.World` module contains methods for creating and manipulating the world composite.\n* A `Matter.World` is a `Matter.Composite` body, which is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`.\n* A `Matter.World` has a few additional properties including `gravity` and `bounds`.\n* It is important to use the functions in the `Matter.Composite` module to modify the world composite, rather than directly modifying its properties.\n* There are also a few methods here that alias those in `Matter.Composite` for easier readability.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class World\n* @extends Composite\n*/\n\nvar World = {};\n\nmodule.exports = World;\n\nvar Composite = __webpack_require__(5);\nvar Constraint = __webpack_require__(8);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a new world composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @constructor\n     * @param {} options\n     * @return {world} A new world\n     */\n    World.create = function(options) {\n        var composite = Composite.create();\n\n        var defaults = {\n            label: 'World',\n            gravity: {\n                x: 0,\n                y: 1,\n                scale: 0.001\n            },\n            bounds: { \n                min: { x: -Infinity, y: -Infinity }, \n                max: { x: Infinity, y: Infinity } \n            }\n        };\n        \n        return Common.extend(composite, defaults, options);\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * The gravity to apply on the world.\n     *\n     * @property gravity\n     * @type object\n     */\n\n    /**\n     * The gravity x component.\n     *\n     * @property gravity.x\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * The gravity y component.\n     *\n     * @property gravity.y\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * The gravity scale factor.\n     *\n     * @property gravity.scale\n     * @type object\n     * @default 0.001\n     */\n\n    /**\n     * A `Bounds` object that defines the world bounds for collision detection.\n     *\n     * @property bounds\n     * @type bounds\n     * @default { min: { x: -Infinity, y: -Infinity }, max: { x: Infinity, y: Infinity } }\n     */\n\n    // World is a Composite body\n    // see src/module/Outro.js for these aliases:\n    \n    /**\n     * An alias for Composite.add\n     * @method add\n     * @param {world} world\n     * @param {} object\n     * @return {composite} The original world with the objects added\n     */\n\n    /**\n     * An alias for Composite.remove\n     * @method remove\n     * @param {world} world\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original world with the objects removed\n     */\n\n    /**\n     * An alias for Composite.clear\n     * @method clear\n     * @param {world} world\n     * @param {boolean} keepStatic\n     */\n\n    /**\n     * An alias for Composite.addComposite\n     * @method addComposite\n     * @param {world} world\n     * @param {composite} composite\n     * @return {world} The original world with the objects from composite added\n     */\n    \n    /**\n      * An alias for Composite.addBody\n      * @method addBody\n      * @param {world} world\n      * @param {body} body\n      * @return {world} The original world with the body added\n      */\n\n    /**\n      * An alias for Composite.addConstraint\n      * @method addConstraint\n      * @param {world} world\n      * @param {constraint} constraint\n      * @return {world} The original world with the constraint added\n      */\n\n})();\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n*\n* @class Pairs\n*/\n\nvar Pairs = {};\n\nmodule.exports = Pairs;\n\nvar Pair = __webpack_require__(9);\nvar Common = __webpack_require__(0);\n\n(function() {\n    \n    Pairs._pairMaxIdleLife = 1000;\n\n    /**\n     * Creates a new pairs structure.\n     * @method create\n     * @param {object} options\n     * @return {pairs} A new pairs structure\n     */\n    Pairs.create = function(options) {\n        return Common.extend({ \n            table: {},\n            list: [],\n            collisionStart: [],\n            collisionActive: [],\n            collisionEnd: []\n        }, options);\n    };\n\n    /**\n     * Updates pairs given a list of collisions.\n     * @method update\n     * @param {object} pairs\n     * @param {collision[]} collisions\n     * @param {number} timestamp\n     */\n    Pairs.update = function(pairs, collisions, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            collisionStart = pairs.collisionStart,\n            collisionEnd = pairs.collisionEnd,\n            collisionActive = pairs.collisionActive,\n            collision,\n            pairId,\n            pair,\n            i;\n\n        // clear collision state arrays, but maintain old reference\n        collisionStart.length = 0;\n        collisionEnd.length = 0;\n        collisionActive.length = 0;\n\n        for (i = 0; i < pairsList.length; i++) {\n            pairsList[i].confirmedActive = false;\n        }\n\n        for (i = 0; i < collisions.length; i++) {\n            collision = collisions[i];\n\n            if (collision.collided) {\n                pairId = Pair.id(collision.bodyA, collision.bodyB);\n\n                pair = pairsTable[pairId];\n                \n                if (pair) {\n                    // pair already exists (but may or may not be active)\n                    if (pair.isActive) {\n                        // pair exists and is active\n                        collisionActive.push(pair);\n                    } else {\n                        // pair exists but was inactive, so a collision has just started again\n                        collisionStart.push(pair);\n                    }\n\n                    // update the pair\n                    Pair.update(pair, collision, timestamp);\n                    pair.confirmedActive = true;\n                } else {\n                    // pair did not exist, create a new pair\n                    pair = Pair.create(collision, timestamp);\n                    pairsTable[pairId] = pair;\n\n                    // push the new pair\n                    collisionStart.push(pair);\n                    pairsList.push(pair);\n                }\n            }\n        }\n\n        // deactivate previously active pairs that are now inactive\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            if (pair.isActive && !pair.confirmedActive) {\n                Pair.setActive(pair, false, timestamp);\n                collisionEnd.push(pair);\n            }\n        }\n    };\n    \n    /**\n     * Finds and removes pairs that have been inactive for a set amount of time.\n     * @method removeOld\n     * @param {object} pairs\n     * @param {number} timestamp\n     */\n    Pairs.removeOld = function(pairs, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            indexesToRemove = [],\n            pair,\n            collision,\n            pairIndex,\n            i;\n\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            collision = pair.collision;\n            \n            // never remove sleeping pairs\n            if (collision.bodyA.isSleeping || collision.bodyB.isSleeping) {\n                pair.timeUpdated = timestamp;\n                continue;\n            }\n\n            // if pair is inactive for too long, mark it to be removed\n            if (timestamp - pair.timeUpdated > Pairs._pairMaxIdleLife) {\n                indexesToRemove.push(i);\n            }\n        }\n\n        // remove marked pairs\n        for (i = 0; i < indexesToRemove.length; i++) {\n            pairIndex = indexesToRemove[i] - i;\n            pair = pairsList[pairIndex];\n            delete pairsTable[pair.id];\n            pairsList.splice(pairIndex, 1);\n        }\n    };\n\n    /**\n     * Clears the given pairs structure.\n     * @method clear\n     * @param {pairs} pairs\n     * @return {pairs} pairs\n     */\n    Pairs.clear = function(pairs) {\n        pairs.table = {};\n        pairs.list.length = 0;\n        pairs.collisionStart.length = 0;\n        pairs.collisionActive.length = 0;\n        pairs.collisionEnd.length = 0;\n        return pairs;\n    };\n\n})();\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Resolver` module contains methods for resolving collision pairs.\n*\n* @class Resolver\n*/\n\nvar Resolver = {};\n\nmodule.exports = Resolver;\n\nvar Vertices = __webpack_require__(3);\nvar Vector = __webpack_require__(2);\nvar Common = __webpack_require__(0);\nvar Bounds = __webpack_require__(1);\n\n(function() {\n\n    Resolver._restingThresh = 4;\n    Resolver._restingThreshTangent = 6;\n    Resolver._positionDampen = 0.9;\n    Resolver._positionWarming = 0.8;\n    Resolver._frictionNormalMultiplier = 5;\n\n    /**\n     * Prepare pairs for position solving.\n     * @method preSolvePosition\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolvePosition = function(pairs) {\n        var i,\n            pair,\n            activeCount;\n\n        // find total contacts on each body\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive)\n                continue;\n            \n            activeCount = pair.activeContacts.length;\n            pair.collision.parentA.totalContacts += activeCount;\n            pair.collision.parentB.totalContacts += activeCount;\n        }\n    };\n\n    /**\n     * Find a solution for pair positions.\n     * @method solvePosition\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solvePosition = function(pairs, timeScale) {\n        var i,\n            pair,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            bodyBtoA,\n            contactShare,\n            positionImpulse,\n            contactCount = {},\n            tempA = Vector._temp[0],\n            tempB = Vector._temp[1],\n            tempC = Vector._temp[2],\n            tempD = Vector._temp[3];\n\n        // find impulses required to resolve penetration\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n\n            // get current separation between body edges involved in collision\n            bodyBtoA = Vector.sub(Vector.add(bodyB.positionImpulse, bodyB.position, tempA), \n                Vector.add(bodyA.positionImpulse, \n                    Vector.sub(bodyB.position, collision.penetration, tempB), tempC), tempD);\n\n            pair.separation = Vector.dot(normal, bodyBtoA);\n        }\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            positionImpulse = (pair.separation - pair.slop) * timeScale;\n\n            if (bodyA.isStatic || bodyB.isStatic)\n                positionImpulse *= 2;\n            \n            if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyA.totalContacts;\n                bodyA.positionImpulse.x += normal.x * positionImpulse * contactShare;\n                bodyA.positionImpulse.y += normal.y * positionImpulse * contactShare;\n            }\n\n            if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyB.totalContacts;\n                bodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare;\n                bodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare;\n            }\n        }\n    };\n\n    /**\n     * Apply position resolution.\n     * @method postSolvePosition\n     * @param {body[]} bodies\n     */\n    Resolver.postSolvePosition = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset contact count\n            body.totalContacts = 0;\n\n            if (body.positionImpulse.x !== 0 || body.positionImpulse.y !== 0) {\n                // update body geometry\n                for (var j = 0; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n                    Vertices.translate(part.vertices, body.positionImpulse);\n                    Bounds.update(part.bounds, part.vertices, body.velocity);\n                    part.position.x += body.positionImpulse.x;\n                    part.position.y += body.positionImpulse.y;\n                }\n\n                // move the body without changing velocity\n                body.positionPrev.x += body.positionImpulse.x;\n                body.positionPrev.y += body.positionImpulse.y;\n\n                if (Vector.dot(body.positionImpulse, body.velocity) < 0) {\n                    // reset cached impulse if the body has velocity along it\n                    body.positionImpulse.x = 0;\n                    body.positionImpulse.y = 0;\n                } else {\n                    // warm the next iteration\n                    body.positionImpulse.x *= Resolver._positionWarming;\n                    body.positionImpulse.y *= Resolver._positionWarming;\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepare pairs for velocity solving.\n     * @method preSolveVelocity\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolveVelocity = function(pairs) {\n        var i,\n            j,\n            pair,\n            contacts,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            tangent,\n            contact,\n            contactVertex,\n            normalImpulse,\n            tangentImpulse,\n            offset,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1];\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            contacts = pair.activeContacts;\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            tangent = collision.tangent;\n\n            // resolve each contact\n            for (j = 0; j < contacts.length; j++) {\n                contact = contacts[j];\n                contactVertex = contact.vertex;\n                normalImpulse = contact.normalImpulse;\n                tangentImpulse = contact.tangentImpulse;\n\n                if (normalImpulse !== 0 || tangentImpulse !== 0) {\n                    // total impulse from contact\n                    impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                    impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                    \n                    // apply impulse from contact\n                    if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyA.position, tempA);\n                        bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                        bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                        bodyA.anglePrev += Vector.cross(offset, impulse) * bodyA.inverseInertia;\n                    }\n\n                    if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyB.position, tempA);\n                        bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                        bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                        bodyB.anglePrev -= Vector.cross(offset, impulse) * bodyB.inverseInertia;\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * Find a solution for pair velocities.\n     * @method solveVelocity\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solveVelocity = function(pairs, timeScale) {\n        var timeScaleSquared = timeScale * timeScale,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1],\n            tempB = Vector._temp[2],\n            tempC = Vector._temp[3],\n            tempD = Vector._temp[4],\n            tempE = Vector._temp[5];\n        \n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            var collision = pair.collision,\n                bodyA = collision.parentA,\n                bodyB = collision.parentB,\n                normal = collision.normal,\n                tangent = collision.tangent,\n                contacts = pair.activeContacts,\n                contactShare = 1 / contacts.length;\n\n            // update body velocities\n            bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\n            bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\n            bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\n            bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\n\n            // resolve each contact\n            for (var j = 0; j < contacts.length; j++) {\n                var contact = contacts[j],\n                    contactVertex = contact.vertex,\n                    offsetA = Vector.sub(contactVertex, bodyA.position, tempA),\n                    offsetB = Vector.sub(contactVertex, bodyB.position, tempB),\n                    velocityPointA = Vector.add(bodyA.velocity, Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity), tempC),\n                    velocityPointB = Vector.add(bodyB.velocity, Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity), tempD), \n                    relativeVelocity = Vector.sub(velocityPointA, velocityPointB, tempE),\n                    normalVelocity = Vector.dot(normal, relativeVelocity);\n\n                var tangentVelocity = Vector.dot(tangent, relativeVelocity),\n                    tangentSpeed = Math.abs(tangentVelocity),\n                    tangentVelocityDirection = Common.sign(tangentVelocity);\n\n                // raw impulses\n                var normalImpulse = (1 + pair.restitution) * normalVelocity,\n                    normalForce = Common.clamp(pair.separation + normalVelocity, 0, 1) * Resolver._frictionNormalMultiplier;\n\n                // coulomb friction\n                var tangentImpulse = tangentVelocity,\n                    maxFriction = Infinity;\n\n                if (tangentSpeed > pair.friction * pair.frictionStatic * normalForce * timeScaleSquared) {\n                    maxFriction = tangentSpeed;\n                    tangentImpulse = Common.clamp(\n                        pair.friction * tangentVelocityDirection * timeScaleSquared,\n                        -maxFriction, maxFriction\n                    );\n                }\n\n                // modify impulses accounting for mass, inertia and offset\n                var oAcN = Vector.cross(offsetA, normal),\n                    oBcN = Vector.cross(offsetB, normal),\n                    share = contactShare / (bodyA.inverseMass + bodyB.inverseMass + bodyA.inverseInertia * oAcN * oAcN  + bodyB.inverseInertia * oBcN * oBcN);\n\n                normalImpulse *= share;\n                tangentImpulse *= share;\n\n                // handle high velocity and resting collisions separately\n                if (normalVelocity < 0 && normalVelocity * normalVelocity > Resolver._restingThresh * timeScaleSquared) {\n                    // high normal velocity so clear cached contact normal impulse\n                    contact.normalImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // impulse constraint tends to 0\n                    var contactNormalImpulse = contact.normalImpulse;\n                    contact.normalImpulse = Math.min(contact.normalImpulse + normalImpulse, 0);\n                    normalImpulse = contact.normalImpulse - contactNormalImpulse;\n                }\n\n                // handle high velocity and resting collisions separately\n                if (tangentVelocity * tangentVelocity > Resolver._restingThreshTangent * timeScaleSquared) {\n                    // high tangent velocity so clear cached contact tangent impulse\n                    contact.tangentImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // tangent impulse tends to -tangentSpeed or +tangentSpeed\n                    var contactTangentImpulse = contact.tangentImpulse;\n                    contact.tangentImpulse = Common.clamp(contact.tangentImpulse + tangentImpulse, -maxFriction, maxFriction);\n                    tangentImpulse = contact.tangentImpulse - contactTangentImpulse;\n                }\n\n                // total impulse from contact\n                impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                \n                // apply impulse from contact\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                    bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                    bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                    bodyA.anglePrev += Vector.cross(offsetA, impulse) * bodyA.inverseInertia;\n                }\n\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                    bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                    bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                    bodyB.anglePrev -= Vector.cross(offsetB, impulse) * bodyB.inverseInertia;\n                }\n            }\n        }\n    };\n\n})();\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Engine` module contains methods for creating and manipulating engines.\n* An engine is a controller that manages updating the simulation of the world.\n* See `Matter.Runner` for an optional game loop utility.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Engine\n*/\n\nvar Engine = {};\n\nmodule.exports = Engine;\n\nvar World = __webpack_require__(19);\nvar Sleeping = __webpack_require__(7);\nvar Resolver = __webpack_require__(21);\nvar Render = __webpack_require__(10);\nvar Pairs = __webpack_require__(20);\nvar Metrics = __webpack_require__(23);\nvar Grid = __webpack_require__(11);\nvar Events = __webpack_require__(4);\nvar Composite = __webpack_require__(5);\nvar Constraint = __webpack_require__(8);\nvar Common = __webpack_require__(0);\nvar Body = __webpack_require__(6);\n\n(function() {\n\n    /**\n     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {engine} engine\n     */\n    Engine.create = function(element, options) {\n        // options may be passed as the first (and only) argument\n        options = Common.isElement(element) ? options : element;\n        element = Common.isElement(element) ? element : null;\n        options = options || {};\n\n        if (element || options.render) {\n            Common.warn('Engine.create: engine.render is deprecated (see docs)');\n        }\n\n        var defaults = {\n            positionIterations: 6,\n            velocityIterations: 4,\n            constraintIterations: 2,\n            enableSleeping: false,\n            events: [],\n            plugin: {},\n            timing: {\n                timestamp: 0,\n                timeScale: 1\n            },\n            broadphase: {\n                controller: Grid\n            }\n        };\n\n        var engine = Common.extend(defaults, options);\n\n        // back compatibility\n        if (element || engine.render) {\n            var renderDefaults = {\n                element: element,\n                controller: Render\n            };\n            \n            engine.render = Common.extend(renderDefaults, engine.render);\n        }\n\n        // back compatibility\n        if (engine.render && engine.render.controller) {\n            engine.render = engine.render.controller.create(engine.render);\n        }\n\n        // back compatibility\n        if (engine.render) {\n            engine.render.engine = engine;\n        }\n\n        engine.world = options.world || World.create(engine.world);\n        engine.pairs = Pairs.create();\n        engine.broadphase = engine.broadphase.controller.create(engine.broadphase);\n        engine.metrics = engine.metrics || { extended: false };\n\n        // @if DEBUG\n        engine.metrics = Metrics.create(engine.metrics);\n        // @endif\n\n        return engine;\n    };\n\n    /**\n     * Moves the simulation forward in time by `delta` ms.\n     * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\n     * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\n     * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\n     * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\n     * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\n     *\n     * Triggers `beforeUpdate` and `afterUpdate` events.\n     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n     * @method update\n     * @param {engine} engine\n     * @param {number} [delta=16.666]\n     * @param {number} [correction=1]\n     */\n    Engine.update = function(engine, delta, correction) {\n        delta = delta || 1000 / 60;\n        correction = correction || 1;\n\n        var world = engine.world,\n            timing = engine.timing,\n            broadphase = engine.broadphase,\n            broadphasePairs = [],\n            i;\n\n        // increment timestamp\n        timing.timestamp += delta * timing.timeScale;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(engine, 'beforeUpdate', event);\n\n        // get lists of all bodies and constraints, no matter what composites they are in\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world);\n\n        // @if DEBUG\n        // reset metrics logging\n        Metrics.reset(engine.metrics);\n        // @endif\n\n        // if sleeping enabled, call the sleeping controller\n        if (engine.enableSleeping)\n            Sleeping.update(allBodies, timing.timeScale);\n\n        // applies gravity to all bodies\n        Engine._bodiesApplyGravity(allBodies, world.gravity);\n\n        // update all body position and rotation by integration\n        Engine._bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds);\n\n        // update all constraints (first pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // broadphase pass: find potential collision pairs\n        if (broadphase.controller) {\n            // if world is dirty, we must flush the whole grid\n            if (world.isModified)\n                broadphase.controller.clear(broadphase);\n\n            // update the grid buckets based on current bodies\n            broadphase.controller.update(broadphase, allBodies, engine, world.isModified);\n            broadphasePairs = broadphase.pairsList;\n        } else {\n            // if no broadphase set, we just pass all bodies\n            broadphasePairs = allBodies;\n        }\n\n        // clear all composite modified flags\n        if (world.isModified) {\n            Composite.setModified(world, false, false, true);\n        }\n\n        // narrowphase pass: find actual collisions, then create or update collision pairs\n        var collisions = broadphase.detector(broadphasePairs, engine);\n\n        // update collision pairs\n        var pairs = engine.pairs,\n            timestamp = timing.timestamp;\n        Pairs.update(pairs, collisions, timestamp);\n        Pairs.removeOld(pairs, timestamp);\n\n        // wake up bodies involved in collisions\n        if (engine.enableSleeping)\n            Sleeping.afterCollisions(pairs.list, timing.timeScale);\n\n        // trigger collision events\n        if (pairs.collisionStart.length > 0)\n            Events.trigger(engine, 'collisionStart', { pairs: pairs.collisionStart });\n\n        // iteratively resolve position between collisions\n        Resolver.preSolvePosition(pairs.list);\n        for (i = 0; i < engine.positionIterations; i++) {\n            Resolver.solvePosition(pairs.list, timing.timeScale);\n        }\n        Resolver.postSolvePosition(allBodies);\n\n        // update all constraints (second pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // iteratively resolve velocity between collisions\n        Resolver.preSolveVelocity(pairs.list);\n        for (i = 0; i < engine.velocityIterations; i++) {\n            Resolver.solveVelocity(pairs.list, timing.timeScale);\n        }\n\n        // trigger collision events\n        if (pairs.collisionActive.length > 0)\n            Events.trigger(engine, 'collisionActive', { pairs: pairs.collisionActive });\n\n        if (pairs.collisionEnd.length > 0)\n            Events.trigger(engine, 'collisionEnd', { pairs: pairs.collisionEnd });\n\n        // @if DEBUG\n        // update metrics log\n        Metrics.update(engine.metrics, engine);\n        // @endif\n\n        // clear force buffers\n        Engine._bodiesClearForces(allBodies);\n\n        Events.trigger(engine, 'afterUpdate', event);\n\n        return engine;\n    };\n    \n    /**\n     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n     * @method merge\n     * @param {engine} engineA\n     * @param {engine} engineB\n     */\n    Engine.merge = function(engineA, engineB) {\n        Common.extend(engineA, engineB);\n        \n        if (engineB.world) {\n            engineA.world = engineB.world;\n\n            Engine.clear(engineA);\n\n            var bodies = Composite.allBodies(engineA.world);\n\n            for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                Sleeping.set(body, false);\n                body.id = Common.nextId();\n            }\n        }\n    };\n\n    /**\n     * Clears the engine including the world, pairs and broadphase.\n     * @method clear\n     * @param {engine} engine\n     */\n    Engine.clear = function(engine) {\n        var world = engine.world;\n        \n        Pairs.clear(engine.pairs);\n\n        var broadphase = engine.broadphase;\n        if (broadphase.controller) {\n            var bodies = Composite.allBodies(world);\n            broadphase.controller.clear(broadphase);\n            broadphase.controller.update(broadphase, bodies, engine, true);\n        }\n    };\n\n    /**\n     * Zeroes the `body.force` and `body.torque` force buffers.\n     * @method _bodiesClearForces\n     * @private\n     * @param {body[]} bodies\n     */\n    Engine._bodiesClearForces = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset force buffers\n            body.force.x = 0;\n            body.force.y = 0;\n            body.torque = 0;\n        }\n    };\n\n    /**\n     * Applys a mass dependant force to all given bodies.\n     * @method _bodiesApplyGravity\n     * @private\n     * @param {body[]} bodies\n     * @param {vector} gravity\n     */\n    Engine._bodiesApplyGravity = function(bodies, gravity) {\n        var gravityScale = typeof gravity.scale !== 'undefined' ? gravity.scale : 0.001;\n\n        if ((gravity.x === 0 && gravity.y === 0) || gravityScale === 0) {\n            return;\n        }\n        \n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            // apply gravity\n            body.force.y += body.mass * gravity.y * gravityScale;\n            body.force.x += body.mass * gravity.x * gravityScale;\n        }\n    };\n\n    /**\n     * Applys `Body.update` to all given `bodies`.\n     * @method _bodiesUpdate\n     * @private\n     * @param {body[]} bodies\n     * @param {number} deltaTime \n     * The amount of time elapsed between updates\n     * @param {number} timeScale\n     * @param {number} correction \n     * The Verlet correction factor (deltaTime / lastDeltaTime)\n     * @param {bounds} worldBounds\n     */\n    Engine._bodiesUpdate = function(bodies, deltaTime, timeScale, correction, worldBounds) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            Body.update(body, deltaTime, timeScale, correction);\n        }\n    };\n\n    /**\n     * An alias for `Runner.run`, see `Matter.Runner` for more information.\n     * @method run\n     * @param {engine} engine\n     */\n\n    /**\n    * Fired just before an update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update and all collision events\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n    *\n    * @event collisionStart\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n    *\n    * @event collisionActive\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n    *\n    * @event collisionEnd\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` that specifies the number of position iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property positionIterations\n     * @type number\n     * @default 6\n     */\n\n    /**\n     * An integer `Number` that specifies the number of velocity iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property velocityIterations\n     * @type number\n     * @default 4\n     */\n\n    /**\n     * An integer `Number` that specifies the number of constraint iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     * The default value of `2` is usually very adequate.\n     *\n     * @property constraintIterations\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n     * Sleeping can improve stability and performance, but often at the expense of accuracy.\n     *\n     * @property enableSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * An `Object` containing properties regarding the timing systems of the engine. \n     *\n     * @property timing\n     * @type object\n     */\n\n    /**\n     * A `Number` that specifies the global scaling factor of time for all bodies.\n     * A value of `0` freezes the simulation.\n     * A value of `0.1` gives a slow-motion effect.\n     * A value of `1.2` gives a speed-up effect.\n     *\n     * @property timing.timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`. \n     * It is incremented on every `Engine.update` by the given `delta` argument. \n     *\n     * @property timing.timestamp\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An instance of a `Render` controller. The default value is a `Matter.Render` instance created by `Engine.create`.\n     * One may also develop a custom renderer module based on `Matter.Render` and pass an instance of it to `Engine.create` via `options.render`.\n     *\n     * A minimal custom renderer object must define at least three functions: `create`, `clear` and `world` (see `Matter.Render`).\n     * It is also possible to instead pass the _module_ reference via `options.render.controller` and `Engine.create` will instantiate one for you.\n     *\n     * @property render\n     * @type render\n     * @deprecated see Demo.js for an example of creating a renderer\n     * @default a Matter.Render instance\n     */\n\n    /**\n     * An instance of a broadphase controller. The default value is a `Matter.Grid` instance created by `Engine.create`.\n     *\n     * @property broadphase\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * A `World` composite object that will contain all simulated bodies and constraints.\n     *\n     * @property world\n     * @type world\n     * @default a Matter.World instance\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// @if DEBUG\n/**\n* _Internal Class_, not generally used outside of the engine's internals.\n*\n*/\n\nvar Metrics = {};\n\nmodule.exports = Metrics;\n\nvar Composite = __webpack_require__(5);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Creates a new metrics.\n     * @method create\n     * @private\n     * @return {metrics} A new metrics\n     */\n    Metrics.create = function(options) {\n        var defaults = {\n            extended: false,\n            narrowDetections: 0,\n            narrowphaseTests: 0,\n            narrowReuse: 0,\n            narrowReuseCount: 0,\n            midphaseTests: 0,\n            broadphaseTests: 0,\n            narrowEff: 0.0001,\n            midEff: 0.0001,\n            broadEff: 0.0001,\n            collisions: 0,\n            buckets: 0,\n            bodies: 0,\n            pairs: 0\n        };\n\n        return Common.extend(defaults, false, options);\n    };\n\n    /**\n     * Resets metrics.\n     * @method reset\n     * @private\n     * @param {metrics} metrics\n     */\n    Metrics.reset = function(metrics) {\n        if (metrics.extended) {\n            metrics.narrowDetections = 0;\n            metrics.narrowphaseTests = 0;\n            metrics.narrowReuse = 0;\n            metrics.narrowReuseCount = 0;\n            metrics.midphaseTests = 0;\n            metrics.broadphaseTests = 0;\n            metrics.narrowEff = 0;\n            metrics.midEff = 0;\n            metrics.broadEff = 0;\n            metrics.collisions = 0;\n            metrics.buckets = 0;\n            metrics.pairs = 0;\n            metrics.bodies = 0;\n        }\n    };\n\n    /**\n     * Updates metrics.\n     * @method update\n     * @private\n     * @param {metrics} metrics\n     * @param {engine} engine\n     */\n    Metrics.update = function(metrics, engine) {\n        if (metrics.extended) {\n            var world = engine.world,\n                bodies = Composite.allBodies(world);\n\n            metrics.collisions = metrics.narrowDetections;\n            metrics.pairs = engine.pairs.list.length;\n            metrics.bodies = bodies.length;\n            metrics.midEff = (metrics.narrowDetections / (metrics.midphaseTests || 1)).toFixed(2);\n            metrics.narrowEff = (metrics.narrowDetections / (metrics.narrowphaseTests || 1)).toFixed(2);\n            metrics.broadEff = (1 - (metrics.broadphaseTests / (bodies.length || 1))).toFixed(2);\n            metrics.narrowReuse = (metrics.narrowReuseCount / (metrics.narrowphaseTests || 1)).toFixed(2);\n            //var broadphase = engine.broadphase[engine.broadphase.current];\n            //if (broadphase.instance)\n            //    metrics.buckets = Common.keys(broadphase.instance.buckets).length;\n        }\n    };\n\n})();\n// @endif\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Matter = module.exports = __webpack_require__(25);\r\n\r\nMatter.Body = __webpack_require__(6);\r\nMatter.Composite = __webpack_require__(5);\r\nMatter.World = __webpack_require__(19);\r\n\r\nMatter.Contact = __webpack_require__(18);\r\nMatter.Detector = __webpack_require__(12);\r\nMatter.Grid = __webpack_require__(11);\r\nMatter.Pairs = __webpack_require__(20);\r\nMatter.Pair = __webpack_require__(9);\r\nMatter.Query = __webpack_require__(26);\r\nMatter.Resolver = __webpack_require__(21);\r\nMatter.SAT = __webpack_require__(13);\r\n\r\nMatter.Constraint = __webpack_require__(8);\r\nMatter.MouseConstraint = __webpack_require__(28);\r\n\r\nMatter.Common = __webpack_require__(0);\r\nMatter.Engine = __webpack_require__(22);\r\nMatter.Events = __webpack_require__(4);\r\nMatter.Mouse = __webpack_require__(14);\r\nMatter.Runner = __webpack_require__(29);\r\nMatter.Sleeping = __webpack_require__(7);\r\nMatter.Plugin = __webpack_require__(17);\r\n\r\n// @if DEBUG\r\nMatter.Metrics = __webpack_require__(23);\r\n// @endif\r\n\r\nMatter.Bodies = __webpack_require__(16);\r\nMatter.Composites = __webpack_require__(30);\r\n\r\nMatter.Axes = __webpack_require__(15);\r\nMatter.Bounds = __webpack_require__(1);\r\nMatter.Svg = __webpack_require__(31);\r\nMatter.Vector = __webpack_require__(2);\r\nMatter.Vertices = __webpack_require__(3);\r\n\r\nMatter.Render = __webpack_require__(10);\r\nMatter.RenderPixi = __webpack_require__(32);\r\n\r\n// aliases\r\n\r\nMatter.World.add = Matter.Composite.add;\r\nMatter.World.remove = Matter.Composite.remove;\r\nMatter.World.addComposite = Matter.Composite.addComposite;\r\nMatter.World.addBody = Matter.Composite.addBody;\r\nMatter.World.addConstraint = Matter.Composite.addConstraint;\r\nMatter.World.clear = Matter.Composite.clear;\r\nMatter.Engine.run = Matter.Runner.run;\r\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\r\n* The `Matter` module is the top level namespace. It also includes a function for installing plugins on top of the library.\r\n*\r\n* @class Matter\r\n*/\r\n\r\nvar Matter = {};\r\n\r\nmodule.exports = Matter;\r\n\r\nvar Plugin = __webpack_require__(17);\r\nvar Common = __webpack_require__(0);\r\n\r\n(function() {\r\n\r\n    /**\r\n     * The library name.\r\n     * @property name\r\n     * @readOnly\r\n     * @type {String}\r\n     */\r\n    Matter.name = 'matter-js';\r\n\r\n    /**\r\n     * The library version.\r\n     * @property version\r\n     * @readOnly\r\n     * @type {String}\r\n     */\r\n    Matter.version =  true ? \"0.16.1\" : undefined;\r\n\r\n    /**\r\n     * A list of plugin dependencies to be installed. These are normally set and installed through `Matter.use`.\r\n     * Alternatively you may set `Matter.uses` manually and install them by calling `Plugin.use(Matter)`.\r\n     * @property uses\r\n     * @type {Array}\r\n     */\r\n    Matter.uses = [];\r\n\r\n    /**\r\n     * The plugins that have been installed through `Matter.Plugin.install`. Read only.\r\n     * @property used\r\n     * @readOnly\r\n     * @type {Array}\r\n     */\r\n    Matter.used = [];\r\n\r\n    /**\r\n     * Installs the given plugins on the `Matter` namespace.\r\n     * This is a short-hand for `Plugin.use`, see it for more information.\r\n     * Call this function once at the start of your code, with all of the plugins you wish to install as arguments.\r\n     * Avoid calling this function multiple times unless you intend to manually control installation order.\r\n     * @method use\r\n     * @param ...plugin {Function} The plugin(s) to install on `base` (multi-argument).\r\n     */\r\n    Matter.use = function() {\r\n        Plugin.use(Matter, Array.prototype.slice.call(arguments));\r\n    };\r\n\r\n    /**\r\n     * Chains a function to excute before the original function on the given `path` relative to `Matter`.\r\n     * See also docs for `Common.chain`.\r\n     * @method before\r\n     * @param {string} path The path relative to `Matter`\r\n     * @param {function} func The function to chain before the original\r\n     * @return {function} The chained function that replaced the original\r\n     */\r\n    Matter.before = function(path, func) {\r\n        path = path.replace(/^Matter./, '');\r\n        return Common.chainPathBefore(Matter, path, func);\r\n    };\r\n\r\n    /**\r\n     * Chains a function to excute after the original function on the given `path` relative to `Matter`.\r\n     * See also docs for `Common.chain`.\r\n     * @method after\r\n     * @param {string} path The path relative to `Matter`\r\n     * @param {function} func The function to chain after the original\r\n     * @return {function} The chained function that replaced the original\r\n     */\r\n    Matter.after = function(path, func) {\r\n        path = path.replace(/^Matter./, '');\r\n        return Common.chainPathAfter(Matter, path, func);\r\n    };\r\n\r\n})();\r\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Query` module contains methods for performing collision queries.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Query\n*/\n\nvar Query = {};\n\nmodule.exports = Query;\n\nvar Vector = __webpack_require__(2);\nvar SAT = __webpack_require__(13);\nvar Bounds = __webpack_require__(1);\nvar Bodies = __webpack_require__(16);\nvar Vertices = __webpack_require__(3);\n\n(function() {\n\n    /**\n     * Returns a list of collisions between `body` and `bodies`.\n     * @method collides\n     * @param {body} body\n     * @param {body[]} bodies\n     * @return {object[]} Collisions\n     */\n    Query.collides = function(body, bodies) {\n        var collisions = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var bodyA = bodies[i];\n            \n            if (Bounds.overlaps(bodyA.bounds, body.bounds)) {\n                for (var j = bodyA.parts.length === 1 ? 0 : 1; j < bodyA.parts.length; j++) {\n                    var part = bodyA.parts[j];\n\n                    if (Bounds.overlaps(part.bounds, body.bounds)) {\n                        var collision = SAT.collides(part, body);\n\n                        if (collision.collided) {\n                            collisions.push(collision);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n     * @method ray\n     * @param {body[]} bodies\n     * @param {vector} startPoint\n     * @param {vector} endPoint\n     * @param {number} [rayWidth]\n     * @return {object[]} Collisions\n     */\n    Query.ray = function(bodies, startPoint, endPoint, rayWidth) {\n        rayWidth = rayWidth || 1e-100;\n\n        var rayAngle = Vector.angle(startPoint, endPoint),\n            rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n            rayX = (endPoint.x + startPoint.x) * 0.5,\n            rayY = (endPoint.y + startPoint.y) * 0.5,\n            ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, { angle: rayAngle }),\n            collisions = Query.collides(ray, bodies);\n\n        for (var i = 0; i < collisions.length; i += 1) {\n            var collision = collisions[i];\n            collision.body = collision.bodyB = collision.bodyA;            \n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n     * @method region\n     * @param {body[]} bodies\n     * @param {bounds} bounds\n     * @param {bool} [outside=false]\n     * @return {body[]} The bodies matching the query\n     */\n    Query.region = function(bodies, bounds, outside) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                overlaps = Bounds.overlaps(body.bounds, bounds);\n            if ((overlaps && !outside) || (!overlaps && outside))\n                result.push(body);\n        }\n\n        return result;\n    };\n\n    /**\n     * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n     * @method point\n     * @param {body[]} bodies\n     * @param {vector} point\n     * @return {body[]} The bodies matching the query\n     */\n    Query.point = function(bodies, point) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n            \n            if (Bounds.contains(body.bounds, point)) {\n                for (var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n\n                    if (Bounds.contains(part.bounds, point)\n                        && Vertices.contains(part.vertices, point)) {\n                        result.push(body);\n                        break;\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n\n})();\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports) {\n\nif(typeof __WEBPACK_EXTERNAL_MODULE__27__ === 'undefined') {var e = new Error(\"Cannot find module 'undefined'\"); e.code = 'MODULE_NOT_FOUND'; throw e;}\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__27__;\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class MouseConstraint\n*/\n\nvar MouseConstraint = {};\n\nmodule.exports = MouseConstraint;\n\nvar Vertices = __webpack_require__(3);\nvar Sleeping = __webpack_require__(7);\nvar Mouse = __webpack_require__(14);\nvar Events = __webpack_require__(4);\nvar Detector = __webpack_require__(12);\nvar Constraint = __webpack_require__(8);\nvar Composite = __webpack_require__(5);\nvar Common = __webpack_require__(0);\nvar Bounds = __webpack_require__(1);\n\n(function() {\n\n    /**\n     * Creates a new mouse constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {engine} engine\n     * @param {} options\n     * @return {MouseConstraint} A new MouseConstraint\n     */\n    MouseConstraint.create = function(engine, options) {\n        var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);\n\n        if (!mouse) {\n            if (engine && engine.render && engine.render.canvas) {\n                mouse = Mouse.create(engine.render.canvas);\n            } else if (options && options.element) {\n                mouse = Mouse.create(options.element);\n            } else {\n                mouse = Mouse.create();\n                Common.warn('MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected');\n            }\n        }\n\n        var constraint = Constraint.create({ \n            label: 'Mouse Constraint',\n            pointA: mouse.position,\n            pointB: { x: 0, y: 0 },\n            length: 0.01, \n            stiffness: 0.1,\n            angularStiffness: 1,\n            render: {\n                strokeStyle: '#90EE90',\n                lineWidth: 3\n            }\n        });\n\n        var defaults = {\n            type: 'mouseConstraint',\n            mouse: mouse,\n            element: null,\n            body: null,\n            constraint: constraint,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            }\n        };\n\n        var mouseConstraint = Common.extend(defaults, options);\n\n        Events.on(engine, 'beforeUpdate', function() {\n            var allBodies = Composite.allBodies(engine.world);\n            MouseConstraint.update(mouseConstraint, allBodies);\n            MouseConstraint._triggerEvents(mouseConstraint);\n        });\n\n        return mouseConstraint;\n    };\n\n    /**\n     * Updates the given mouse constraint.\n     * @private\n     * @method update\n     * @param {MouseConstraint} mouseConstraint\n     * @param {body[]} bodies\n     */\n    MouseConstraint.update = function(mouseConstraint, bodies) {\n        var mouse = mouseConstraint.mouse,\n            constraint = mouseConstraint.constraint,\n            body = mouseConstraint.body;\n\n        if (mouse.button === 0) {\n            if (!constraint.bodyB) {\n                for (var i = 0; i < bodies.length; i++) {\n                    body = bodies[i];\n                    if (Bounds.contains(body.bounds, mouse.position) \n                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)) {\n                        for (var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++) {\n                            var part = body.parts[j];\n                            if (Vertices.contains(part.vertices, mouse.position)) {\n                                constraint.pointA = mouse.position;\n                                constraint.bodyB = mouseConstraint.body = body;\n                                constraint.pointB = { x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y };\n                                constraint.angleB = body.angle;\n\n                                Sleeping.set(body, false);\n                                Events.trigger(mouseConstraint, 'startdrag', { mouse: mouse, body: body });\n\n                                break;\n                            }\n                        }\n                    }\n                }\n            } else {\n                Sleeping.set(constraint.bodyB, false);\n                constraint.pointA = mouse.position;\n            }\n        } else {\n            constraint.bodyB = mouseConstraint.body = null;\n            constraint.pointB = null;\n\n            if (body)\n                Events.trigger(mouseConstraint, 'enddrag', { mouse: mouse, body: body });\n        }\n    };\n\n    /**\n     * Triggers mouse constraint events.\n     * @method _triggerEvents\n     * @private\n     * @param {mouse} mouseConstraint\n     */\n    MouseConstraint._triggerEvents = function(mouseConstraint) {\n        var mouse = mouseConstraint.mouse,\n            mouseEvents = mouse.sourceEvents;\n\n        if (mouseEvents.mousemove)\n            Events.trigger(mouseConstraint, 'mousemove', { mouse: mouse });\n\n        if (mouseEvents.mousedown)\n            Events.trigger(mouseConstraint, 'mousedown', { mouse: mouse });\n\n        if (mouseEvents.mouseup)\n            Events.trigger(mouseConstraint, 'mouseup', { mouse: mouse });\n\n        // reset the mouse state ready for the next step\n        Mouse.clearSourceEvents(mouse);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when the mouse has moved (or a touch moves) during the last step\n    *\n    * @event mousemove\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is down (or a touch has started) during the last step\n    *\n    * @event mousedown\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is up (or a touch has ended) during the last step\n    *\n    * @event mouseup\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user starts dragging a body\n    *\n    * @event startdrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user ends dragging a body\n    *\n    * @event enddrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body that has stopped being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n     *\n     * @property mouse\n     * @type mouse\n     * @default mouse\n     */\n\n    /**\n     * The `Body` that is currently being moved by the user, or `null` if no body.\n     *\n     * @property body\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The `Constraint` object that is used to move the body during interaction.\n     *\n     * @property constraint\n     * @type constraint\n     */\n\n    /**\n     * An `Object` that specifies the collision filter properties.\n     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n})();\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Runner` module is an optional utility which provides a game loop, \n* that handles continuously updating a `Matter.Engine` for you within a browser.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n* Instead just call `Engine.update(engine, delta)` in your own loop.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Runner\n*/\n\nvar Runner = {};\n\nmodule.exports = Runner;\n\nvar Events = __webpack_require__(4);\nvar Engine = __webpack_require__(22);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame;\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    if (!_requestAnimationFrame) {\n        var _frameTimeout;\n\n        _requestAnimationFrame = function(callback){ \n            _frameTimeout = setTimeout(function() { \n                callback(Common.now()); \n            }, 1000 / 60);\n        };\n\n        _cancelAnimationFrame = function() {\n            clearTimeout(_frameTimeout);\n        };\n    }\n\n    /**\n     * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * @method create\n     * @param {} options\n     */\n    Runner.create = function(options) {\n        var defaults = {\n            fps: 60,\n            correction: 1,\n            deltaSampleSize: 60,\n            counterTimestamp: 0,\n            frameCounter: 0,\n            deltaHistory: [],\n            timePrev: null,\n            timeScalePrev: 1,\n            frameRequestId: null,\n            isFixed: false,\n            enabled: true\n        };\n\n        var runner = Common.extend(defaults, options);\n\n        runner.delta = runner.delta || 1000 / runner.fps;\n        runner.deltaMin = runner.deltaMin || 1000 / runner.fps;\n        runner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5);\n        runner.fps = 1000 / runner.delta;\n\n        return runner;\n    };\n\n    /**\n     * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n     * @method run\n     * @param {engine} engine\n     */\n    Runner.run = function(runner, engine) {\n        // create runner if engine is first argument\n        if (typeof runner.positionIterations !== 'undefined') {\n            engine = runner;\n            runner = Runner.create();\n        }\n\n        (function render(time){\n            runner.frameRequestId = _requestAnimationFrame(render);\n\n            if (time && runner.enabled) {\n                Runner.tick(runner, engine, time);\n            }\n        })();\n\n        return runner;\n    };\n\n    /**\n     * A game loop utility that updates the engine and renderer by one step (a 'tick').\n     * Features delta smoothing, time correction and fixed or dynamic timing.\n     * Triggers `beforeTick`, `tick` and `afterTick` events on the engine.\n     * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n     * @method tick\n     * @param {runner} runner\n     * @param {engine} engine\n     * @param {number} time\n     */\n    Runner.tick = function(runner, engine, time) {\n        var timing = engine.timing,\n            correction = 1,\n            delta;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(runner, 'beforeTick', event);\n        Events.trigger(engine, 'beforeTick', event); // back compatibility\n\n        if (runner.isFixed) {\n            // fixed timestep\n            delta = runner.delta;\n        } else {\n            // dynamic timestep based on wall clock between calls\n            delta = (time - runner.timePrev) || runner.delta;\n            runner.timePrev = time;\n\n            // optimistically filter delta over a few frames, to improve stability\n            runner.deltaHistory.push(delta);\n            runner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize);\n            delta = Math.min.apply(null, runner.deltaHistory);\n            \n            // limit delta\n            delta = delta < runner.deltaMin ? runner.deltaMin : delta;\n            delta = delta > runner.deltaMax ? runner.deltaMax : delta;\n\n            // correction for delta\n            correction = delta / runner.delta;\n\n            // update engine timing object\n            runner.delta = delta;\n        }\n\n        // time correction for time scaling\n        if (runner.timeScalePrev !== 0)\n            correction *= timing.timeScale / runner.timeScalePrev;\n\n        if (timing.timeScale === 0)\n            correction = 0;\n\n        runner.timeScalePrev = timing.timeScale;\n        runner.correction = correction;\n\n        // fps counter\n        runner.frameCounter += 1;\n        if (time - runner.counterTimestamp >= 1000) {\n            runner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000);\n            runner.counterTimestamp = time;\n            runner.frameCounter = 0;\n        }\n\n        Events.trigger(runner, 'tick', event);\n        Events.trigger(engine, 'tick', event); // back compatibility\n\n        // if world has been modified, clear the render scene graph\n        if (engine.world.isModified \n            && engine.render\n            && engine.render.controller\n            && engine.render.controller.clear) {\n            engine.render.controller.clear(engine.render); // back compatibility\n        }\n\n        // update\n        Events.trigger(runner, 'beforeUpdate', event);\n        Engine.update(engine, delta, correction);\n        Events.trigger(runner, 'afterUpdate', event);\n\n        // render\n        // back compatibility\n        if (engine.render && engine.render.controller) {\n            Events.trigger(runner, 'beforeRender', event);\n            Events.trigger(engine, 'beforeRender', event); // back compatibility\n\n            engine.render.controller.world(engine.render);\n\n            Events.trigger(runner, 'afterRender', event);\n            Events.trigger(engine, 'afterRender', event); // back compatibility\n        }\n\n        Events.trigger(runner, 'afterTick', event);\n        Events.trigger(engine, 'afterTick', event); // back compatibility\n    };\n\n    /**\n     * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n     * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n     * @method stop\n     * @param {runner} runner\n     */\n    Runner.stop = function(runner) {\n        _cancelAnimationFrame(runner.frameRequestId);\n    };\n\n    /**\n     * Alias for `Runner.run`.\n     * @method start\n     * @param {runner} runner\n     * @param {engine} engine\n     */\n    Runner.start = function(runner, engine) {\n        Runner.run(runner, engine);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired at the start of a tick, before any updates to the engine or timing\n    *\n    * @event beforeTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine timing updated, but just before update\n    *\n    * @event tick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired at the end of a tick, after engine update and after rendering\n    *\n    * @event afterTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after update\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A flag that specifies whether the runner is running or not.\n     *\n     * @property enabled\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n     * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n     * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n     *\n     * @property isFixed\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that specifies the time step between updates in milliseconds.\n     * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n     * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n     *\n     * @property delta\n     * @type number\n     * @default 1000 / 60\n     */\n\n})();\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Composites` module contains factory methods for creating composite bodies\n* with commonly used configurations (such as stacks and chains).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composites\n*/\n\nvar Composites = {};\n\nmodule.exports = Composites;\n\nvar Composite = __webpack_require__(5);\nvar Constraint = __webpack_require__(8);\nvar Common = __webpack_require__(0);\nvar Body = __webpack_require__(6);\nvar Bodies = __webpack_require__(16);\n\n(function() {\n\n    /**\n     * Create a new composite containing bodies created in the callback in a grid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method stack\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        var stack = Composite.create({ label: 'Stack' }),\n            x = xx,\n            y = yy,\n            lastBody,\n            i = 0;\n\n        for (var row = 0; row < rows; row++) {\n            var maxHeight = 0;\n            \n            for (var column = 0; column < columns; column++) {\n                var body = callback(x, y, column, row, lastBody, i);\n                    \n                if (body) {\n                    var bodyHeight = body.bounds.max.y - body.bounds.min.y,\n                        bodyWidth = body.bounds.max.x - body.bounds.min.x; \n\n                    if (bodyHeight > maxHeight)\n                        maxHeight = bodyHeight;\n                    \n                    Body.translate(body, { x: bodyWidth * 0.5, y: bodyHeight * 0.5 });\n\n                    x = body.bounds.max.x + columnGap;\n\n                    Composite.addBody(stack, body);\n                    \n                    lastBody = body;\n                    i += 1;\n                } else {\n                    x += columnGap;\n                }\n            }\n            \n            y += maxHeight + rowGap;\n            x = xx;\n        }\n\n        return stack;\n    };\n    \n    /**\n     * Chains all bodies in the given composite together using constraints.\n     * @method chain\n     * @param {composite} composite\n     * @param {number} xOffsetA\n     * @param {number} yOffsetA\n     * @param {number} xOffsetB\n     * @param {number} yOffsetB\n     * @param {object} options\n     * @return {composite} A new composite containing objects chained together with constraints\n     */\n    Composites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\n        var bodies = composite.bodies;\n        \n        for (var i = 1; i < bodies.length; i++) {\n            var bodyA = bodies[i - 1],\n                bodyB = bodies[i],\n                bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n                bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x, \n                bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n                bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\n        \n            var defaults = {\n                bodyA: bodyA,\n                pointA: { x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA },\n                bodyB: bodyB,\n                pointB: { x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB }\n            };\n            \n            var constraint = Common.extend(defaults, options);\n        \n            Composite.addConstraint(composite, Constraint.create(constraint));\n        }\n\n        composite.label += ' Chain';\n        \n        return composite;\n    };\n\n    /**\n     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n     * @method mesh\n     * @param {composite} composite\n     * @param {number} columns\n     * @param {number} rows\n     * @param {boolean} crossBrace\n     * @param {object} options\n     * @return {composite} The composite containing objects meshed together with constraints\n     */\n    Composites.mesh = function(composite, columns, rows, crossBrace, options) {\n        var bodies = composite.bodies,\n            row,\n            col,\n            bodyA,\n            bodyB,\n            bodyC;\n        \n        for (row = 0; row < rows; row++) {\n            for (col = 1; col < columns; col++) {\n                bodyA = bodies[(col - 1) + (row * columns)];\n                bodyB = bodies[col + (row * columns)];\n                Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n            }\n\n            if (row > 0) {\n                for (col = 0; col < columns; col++) {\n                    bodyA = bodies[col + ((row - 1) * columns)];\n                    bodyB = bodies[col + (row * columns)];\n                    Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n\n                    if (crossBrace && col > 0) {\n                        bodyC = bodies[(col - 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n\n                    if (crossBrace && col < columns - 1) {\n                        bodyC = bodies[(col + 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n                }\n            }\n        }\n\n        composite.label += ' Mesh';\n        \n        return composite;\n    };\n    \n    /**\n     * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method pyramid\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        return Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i) {\n            var actualRows = Math.min(rows, Math.ceil(columns / 2)),\n                lastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0;\n            \n            if (row > actualRows)\n                return;\n            \n            // reverse row order\n            row = actualRows - row;\n            \n            var start = row,\n                end = columns - 1 - row;\n\n            if (column < start || column > end)\n                return;\n            \n            // retroactively fix the first body's position, since width was unknown\n            if (i === 1) {\n                Body.translate(lastBody, { x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0 });\n            }\n\n            var xOffset = lastBody ? column * lastBodyWidth : 0;\n            \n            return callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i);\n        });\n    };\n\n    /**\n     * Creates a composite with a Newton's Cradle setup of bodies and constraints.\n     * @method newtonsCradle\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} number\n     * @param {number} size\n     * @param {number} length\n     * @return {composite} A new composite newtonsCradle body\n     */\n    Composites.newtonsCradle = function(xx, yy, number, size, length) {\n        var newtonsCradle = Composite.create({ label: 'Newtons Cradle' });\n\n        for (var i = 0; i < number; i++) {\n            var separation = 1.9,\n                circle = Bodies.circle(xx + i * (size * separation), yy + length, size, \n                    { inertia: Infinity, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 1 }),\n                constraint = Constraint.create({ pointA: { x: xx + i * (size * separation), y: yy }, bodyB: circle });\n\n            Composite.addBody(newtonsCradle, circle);\n            Composite.addConstraint(newtonsCradle, constraint);\n        }\n\n        return newtonsCradle;\n    };\n    \n    /**\n     * Creates a composite with simple car setup of bodies and constraints.\n     * @method car\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} width\n     * @param {number} height\n     * @param {number} wheelSize\n     * @return {composite} A new composite car body\n     */\n    Composites.car = function(xx, yy, width, height, wheelSize) {\n        var group = Body.nextGroup(true),\n            wheelBase = 20,\n            wheelAOffset = -width * 0.5 + wheelBase,\n            wheelBOffset = width * 0.5 - wheelBase,\n            wheelYOffset = 0;\n    \n        var car = Composite.create({ label: 'Car' }),\n            body = Bodies.rectangle(xx, yy, width, height, { \n                collisionFilter: {\n                    group: group\n                },\n                chamfer: {\n                    radius: height * 0.5\n                },\n                density: 0.0002\n            });\n    \n        var wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var axelA = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelAOffset, y: wheelYOffset },\n            bodyA: wheelA,\n            stiffness: 1,\n            length: 0\n        });\n                        \n        var axelB = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelBOffset, y: wheelYOffset },\n            bodyA: wheelB,\n            stiffness: 1,\n            length: 0\n        });\n        \n        Composite.addBody(car, body);\n        Composite.addBody(car, wheelA);\n        Composite.addBody(car, wheelB);\n        Composite.addConstraint(car, axelA);\n        Composite.addConstraint(car, axelB);\n\n        return car;\n    };\n\n    /**\n     * Creates a simple soft body like object.\n     * @method softBody\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {boolean} crossBrace\n     * @param {number} particleRadius\n     * @param {} particleOptions\n     * @param {} constraintOptions\n     * @return {composite} A new composite softBody\n     */\n    Composites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\n        particleOptions = Common.extend({ inertia: Infinity }, particleOptions);\n        constraintOptions = Common.extend({ stiffness: 0.2, render: { type: 'line', anchors: false } }, constraintOptions);\n\n        var softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {\n            return Bodies.circle(x, y, particleRadius, particleOptions);\n        });\n\n        Composites.mesh(softBody, columns, rows, crossBrace, constraintOptions);\n\n        softBody.label = 'Soft Body';\n\n        return softBody;\n    };\n\n})();\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n*\n* To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Svg\n*/\n\nvar Svg = {};\n\nmodule.exports = Svg;\n\nvar Bounds = __webpack_require__(1);\nvar Common = __webpack_require__(0);\n\n(function() {\n\n    /**\n     * Converts an SVG path into an array of vector points.\n     * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n     * See `Bodies.fromVertices` which provides support for this.\n     * Note that this function is not guaranteed to support complex paths (such as those with holes).\n     * You must load the `pathseg.js` polyfill on newer browsers.\n     * @method pathToVertices\n     * @param {SVGPathElement} path\n     * @param {Number} [sampleLength=15]\n     * @return {Vector[]} points\n     */\n    Svg.pathToVertices = function(path, sampleLength) {\n        if (typeof window !== 'undefined' && !('SVGPathSeg' in window)) {\n            Common.warn('Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.');\n        }\n\n        // https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n        var i, il, total, point, segment, segments, \n            segmentsQueue, lastSegment, \n            lastPoint, segmentIndex, points = [],\n            lx, ly, length = 0, x = 0, y = 0;\n\n        sampleLength = sampleLength || 15;\n\n        var addPoint = function(px, py, pathSegType) {\n            // all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n            var isRelative = pathSegType % 2 === 1 && pathSegType > 1;\n\n            // when the last point doesn't equal the current point add the current point\n            if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {\n                if (lastPoint && isRelative) {\n                    lx = lastPoint.x;\n                    ly = lastPoint.y;\n                } else {\n                    lx = 0;\n                    ly = 0;\n                }\n\n                var point = {\n                    x: lx + px,\n                    y: ly + py\n                };\n\n                // set last point\n                if (isRelative || !lastPoint) {\n                    lastPoint = point;\n                }\n\n                points.push(point);\n\n                x = lx + px;\n                y = ly + py;\n            }\n        };\n\n        var addSegmentPoint = function(segment) {\n            var segType = segment.pathSegTypeAsLetter.toUpperCase();\n\n            // skip path ends\n            if (segType === 'Z') \n                return;\n\n            // map segment to x and y\n            switch (segType) {\n\n            case 'M':\n            case 'L':\n            case 'T':\n            case 'C':\n            case 'S':\n            case 'Q':\n                x = segment.x;\n                y = segment.y;\n                break;\n            case 'H':\n                x = segment.x;\n                break;\n            case 'V':\n                y = segment.y;\n                break;\n            }\n\n            addPoint(x, y, segment.pathSegType);\n        };\n\n        // ensure path is absolute\n        Svg._svgPathToAbsolute(path);\n\n        // get total length\n        total = path.getTotalLength();\n\n        // queue segments\n        segments = [];\n        for (i = 0; i < path.pathSegList.numberOfItems; i += 1)\n            segments.push(path.pathSegList.getItem(i));\n\n        segmentsQueue = segments.concat();\n\n        // sample through path\n        while (length < total) {\n            // get segment at position\n            segmentIndex = path.getPathSegAtLength(length);\n            segment = segments[segmentIndex];\n\n            // new segment\n            if (segment != lastSegment) {\n                while (segmentsQueue.length && segmentsQueue[0] != segment)\n                    addSegmentPoint(segmentsQueue.shift());\n\n                lastSegment = segment;\n            }\n\n            // add points in between when curving\n            // TODO: adaptive sampling\n            switch (segment.pathSegTypeAsLetter.toUpperCase()) {\n\n            case 'C':\n            case 'T':\n            case 'S':\n            case 'Q':\n            case 'A':\n                point = path.getPointAtLength(length);\n                addPoint(point.x, point.y, 0);\n                break;\n\n            }\n\n            // increment by sample value\n            length += sampleLength;\n        }\n\n        // add remaining segments not passed by sampling\n        for (i = 0, il = segmentsQueue.length; i < il; ++i)\n            addSegmentPoint(segmentsQueue[i]);\n\n        return points;\n    };\n\n    Svg._svgPathToAbsolute = function(path) {\n        // http://phrogz.net/convert-svg-path-to-all-absolute-commands\n        // Copyright (c) Gavin Kistner\n        // http://phrogz.net/js/_ReuseLicense.txt\n        // Modifications: tidy formatting and naming\n        var x0, y0, x1, y1, x2, y2, segs = path.pathSegList,\n            x = 0, y = 0, len = segs.numberOfItems;\n\n        for (var i = 0; i < len; ++i) {\n            var seg = segs.getItem(i),\n                segType = seg.pathSegTypeAsLetter;\n\n            if (/[MLHVCSQTA]/.test(segType)) {\n                if ('x' in seg) x = seg.x;\n                if ('y' in seg) y = seg.y;\n            } else {\n                if ('x1' in seg) x1 = x + seg.x1;\n                if ('x2' in seg) x2 = x + seg.x2;\n                if ('y1' in seg) y1 = y + seg.y1;\n                if ('y2' in seg) y2 = y + seg.y2;\n                if ('x' in seg) x += seg.x;\n                if ('y' in seg) y += seg.y;\n\n                switch (segType) {\n\n                case 'm':\n                    segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i);\n                    break;\n                case 'l':\n                    segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i);\n                    break;\n                case 'h':\n                    segs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i);\n                    break;\n                case 'v':\n                    segs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i);\n                    break;\n                case 'c':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i);\n                    break;\n                case 's':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i);\n                    break;\n                case 'q':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i);\n                    break;\n                case 't':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i);\n                    break;\n                case 'a':\n                    segs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i);\n                    break;\n                case 'z':\n                case 'Z':\n                    x = x0;\n                    y = y0;\n                    break;\n\n                }\n            }\n\n            if (segType == 'M' || segType == 'm') {\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n\n})();\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* The `Matter.RenderPixi` module is an example renderer using pixi.js.\n* See also `Matter.Render` for a canvas based renderer.\n*\n* @class RenderPixi\n* @deprecated the Matter.RenderPixi module will soon be removed from the Matter.js core.\n* It will likely be moved to its own repository (but maintenance will be limited).\n*/\n\nvar RenderPixi = {};\n\nmodule.exports = RenderPixi;\n\nvar Bounds = __webpack_require__(1);\nvar Composite = __webpack_require__(5);\nvar Common = __webpack_require__(0);\nvar Events = __webpack_require__(4);\nvar Vector = __webpack_require__(2);\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame \n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n    \n    /**\n     * Creates a new Pixi.js WebGL renderer\n     * @method create\n     * @param {object} options\n     * @return {RenderPixi} A new renderer\n     * @deprecated\n     */\n    RenderPixi.create = function(options) {\n        Common.warn('RenderPixi.create: Matter.RenderPixi is deprecated (see docs)');\n\n        var defaults = {\n            controller: RenderPixi,\n            engine: null,\n            element: null,\n            frameRequestId: null,\n            canvas: null,\n            renderer: null,\n            container: null,\n            spriteContainer: null,\n            pixiOptions: null,\n            options: {\n                width: 800,\n                height: 600,\n                background: '#fafafa',\n                wireframeBackground: '#222',\n                hasBounds: false,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false\n            }\n        };\n\n        var render = Common.extend(defaults, options),\n            transparent = !render.options.wireframes && render.options.background === 'transparent';\n\n        // init pixi\n        render.pixiOptions = render.pixiOptions || {\n            view: render.canvas,\n            transparent: transparent,\n            antialias: true,\n            backgroundColor: options.background\n        };\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.renderer = render.renderer || new PIXI.WebGLRenderer(render.options.width, render.options.height, render.pixiOptions);\n        render.container = render.container || new PIXI.Container();\n        render.spriteContainer = render.spriteContainer || new PIXI.Container();\n        render.canvas = render.canvas || render.renderer.view;\n        render.bounds = render.bounds || { \n            min: {\n                x: 0,\n                y: 0\n            }, \n            max: { \n                x: render.options.width,\n                y: render.options.height\n            }\n        };\n\n        // event listeners\n        Events.on(render.engine, 'beforeUpdate', function() {\n            RenderPixi.clear(render);\n        });\n\n        // caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // use a sprite batch for performance\n        render.container.addChild(render.spriteContainer);\n\n        // insert canvas\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else {\n            Common.warn('No \"render.element\" passed, \"render.canvas\" was not inserted into document.');\n        }\n\n        // prevent menus on canvas\n        render.canvas.oncontextmenu = function() { return false; };\n        render.canvas.onselectstart = function() { return false; };\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            RenderPixi.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Clears the scene graph\n     * @method clear\n     * @param {RenderPixi} render\n     * @deprecated\n     */\n    RenderPixi.clear = function(render) {\n        var container = render.container,\n            spriteContainer = render.spriteContainer;\n\n        // clear stage container\n        while (container.children[0]) { \n            container.removeChild(container.children[0]); \n        }\n\n        // clear sprite batch\n        while (spriteContainer.children[0]) { \n            spriteContainer.removeChild(spriteContainer.children[0]); \n        }\n\n        var bgSprite = render.sprites['bg-0'];\n\n        // clear caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // set background sprite\n        render.sprites['bg-0'] = bgSprite;\n        if (bgSprite)\n            container.addChildAt(bgSprite, 0);\n\n        // add sprite batch back into container\n        render.container.addChild(render.spriteContainer);\n\n        // reset background state\n        render.currentBackground = null;\n\n        // reset bounds transforms\n        container.scale.set(1, 1);\n        container.position.set(0, 0);\n    };\n\n    /**\n     * Sets the background of the canvas \n     * @method setBackground\n     * @param {RenderPixi} render\n     * @param {string} background\n     * @deprecated\n     */\n    RenderPixi.setBackground = function(render, background) {\n        if (render.currentBackground !== background) {\n            var isColor = background.indexOf && background.indexOf('#') !== -1,\n                bgSprite = render.sprites['bg-0'];\n\n            if (isColor) {\n                // if solid background color\n                var color = Common.colorToNumber(background);\n                render.renderer.backgroundColor = color;\n\n                // remove background sprite if existing\n                if (bgSprite)\n                    render.container.removeChild(bgSprite); \n            } else {\n                // initialise background sprite if needed\n                if (!bgSprite) {\n                    var texture = _getTexture(render, background);\n\n                    bgSprite = render.sprites['bg-0'] = new PIXI.Sprite(texture);\n                    bgSprite.position.x = 0;\n                    bgSprite.position.y = 0;\n                    render.container.addChildAt(bgSprite, 0);\n                }\n            }\n\n            render.currentBackground = background;\n        }\n    };\n\n    /**\n     * Description\n     * @method world\n     * @param {engine} engine\n     * @deprecated\n     */\n    RenderPixi.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            renderer = render.renderer,\n            container = render.container,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            constraints = [],\n            i;\n\n        if (options.wireframes) {\n            RenderPixi.setBackground(render, options.wireframeBackground);\n        } else {\n            RenderPixi.setBackground(render, options.background);\n        }\n\n        // handle bounds\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        if (options.hasBounds) {\n            // Hide bodies that are not in view\n            for (i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                body.render.sprite.visible = Bounds.overlaps(body.bounds, render.bounds);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            container.scale.set(1 / boundsScaleX, 1 / boundsScaleY);\n            container.position.set(-render.bounds.min.x * (1 / boundsScaleX), -render.bounds.min.y * (1 / boundsScaleY));\n        } else {\n            constraints = allConstraints;\n        }\n\n        for (i = 0; i < bodies.length; i++)\n            RenderPixi.body(render, bodies[i]);\n\n        for (i = 0; i < constraints.length; i++)\n            RenderPixi.constraint(render, constraints[i]);\n\n        renderer.render(container);\n    };\n\n\n    /**\n     * Description\n     * @method constraint\n     * @param {engine} engine\n     * @param {constraint} constraint\n     * @deprecated\n     */\n    RenderPixi.constraint = function(render, constraint) {\n        var engine = render.engine,\n            bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB,\n            container = render.container,\n            constraintRender = constraint.render,\n            primitiveId = 'c-' + constraint.id,\n            primitive = render.primitives[primitiveId];\n\n        // initialise constraint primitive if not existing\n        if (!primitive)\n            primitive = render.primitives[primitiveId] = new PIXI.Graphics();\n\n        // don't render if constraint does not have two end points\n        if (!constraintRender.visible || !constraint.pointA || !constraint.pointB) {\n            primitive.clear();\n            return;\n        }\n\n        // add to scene graph if not already there\n        if (Common.indexOf(container.children, primitive) === -1)\n            container.addChild(primitive);\n\n        // render the constraint on every update, since they can change dynamically\n        primitive.clear();\n        primitive.beginFill(0, 0);\n        primitive.lineStyle(constraintRender.lineWidth, Common.colorToNumber(constraintRender.strokeStyle), 1);\n        \n        if (bodyA) {\n            primitive.moveTo(bodyA.position.x + pointA.x, bodyA.position.y + pointA.y);\n        } else {\n            primitive.moveTo(pointA.x, pointA.y);\n        }\n\n        if (bodyB) {\n            primitive.lineTo(bodyB.position.x + pointB.x, bodyB.position.y + pointB.y);\n        } else {\n            primitive.lineTo(pointB.x, pointB.y);\n        }\n\n        primitive.endFill();\n    };\n    \n    /**\n     * Description\n     * @method body\n     * @param {engine} engine\n     * @param {body} body\n     * @deprecated\n     */\n    RenderPixi.body = function(render, body) {\n        var engine = render.engine,\n            bodyRender = body.render;\n\n        if (!bodyRender.visible)\n            return;\n\n        if (bodyRender.sprite && bodyRender.sprite.texture) {\n            var spriteId = 'b-' + body.id,\n                sprite = render.sprites[spriteId],\n                spriteContainer = render.spriteContainer;\n\n            // initialise body sprite if not existing\n            if (!sprite)\n                sprite = render.sprites[spriteId] = _createBodySprite(render, body);\n\n            // add to scene graph if not already there\n            if (Common.indexOf(spriteContainer.children, sprite) === -1)\n                spriteContainer.addChild(sprite);\n\n            // update body sprite\n            sprite.position.x = body.position.x;\n            sprite.position.y = body.position.y;\n            sprite.rotation = body.angle;\n            sprite.scale.x = bodyRender.sprite.xScale || 1;\n            sprite.scale.y = bodyRender.sprite.yScale || 1;\n        } else {\n            var primitiveId = 'b-' + body.id,\n                primitive = render.primitives[primitiveId],\n                container = render.container;\n\n            // initialise body primitive if not existing\n            if (!primitive) {\n                primitive = render.primitives[primitiveId] = _createBodyPrimitive(render, body);\n                primitive.initialAngle = body.angle;\n            }\n\n            // add to scene graph if not already there\n            if (Common.indexOf(container.children, primitive) === -1)\n                container.addChild(primitive);\n\n            // update body primitive\n            primitive.position.x = body.position.x;\n            primitive.position.y = body.position.y;\n            primitive.rotation = body.angle - primitive.initialAngle;\n        }\n    };\n\n    /**\n     * Creates a body sprite\n     * @method _createBodySprite\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Sprite} sprite\n     * @deprecated\n     */\n    var _createBodySprite = function(render, body) {\n        var bodyRender = body.render,\n            texturePath = bodyRender.sprite.texture,\n            texture = _getTexture(render, texturePath),\n            sprite = new PIXI.Sprite(texture);\n\n        sprite.anchor.x = body.render.sprite.xOffset;\n        sprite.anchor.y = body.render.sprite.yOffset;\n\n        return sprite;\n    };\n\n    /**\n     * Creates a body primitive\n     * @method _createBodyPrimitive\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Graphics} graphics\n     * @deprecated\n     */\n    var _createBodyPrimitive = function(render, body) {\n        var bodyRender = body.render,\n            options = render.options,\n            primitive = new PIXI.Graphics(),\n            fillStyle = Common.colorToNumber(bodyRender.fillStyle),\n            strokeStyle = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleIndicator = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleWireframe = Common.colorToNumber('#bbb'),\n            strokeStyleWireframeIndicator = Common.colorToNumber('#CD5C5C'),\n            part;\n\n        primitive.clear();\n\n        // handle compound parts\n        for (var k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n            part = body.parts[k];\n\n            if (!options.wireframes) {\n                primitive.beginFill(fillStyle, 1);\n                primitive.lineStyle(bodyRender.lineWidth, strokeStyle, 1);\n            } else {\n                primitive.beginFill(0, 0);\n                primitive.lineStyle(1, strokeStyleWireframe, 1);\n            }\n\n            primitive.moveTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            for (var j = 1; j < part.vertices.length; j++) {\n                primitive.lineTo(part.vertices[j].x - body.position.x, part.vertices[j].y - body.position.y);\n            }\n\n            primitive.lineTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            primitive.endFill();\n\n            // angle indicator\n            if (options.showAngleIndicator || options.showAxes) {\n                primitive.beginFill(0, 0);\n\n                if (options.wireframes) {\n                    primitive.lineStyle(1, strokeStyleWireframeIndicator, 1);\n                } else {\n                    primitive.lineStyle(1, strokeStyleIndicator);\n                }\n\n                primitive.moveTo(part.position.x - body.position.x, part.position.y - body.position.y);\n                primitive.lineTo(((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2 - body.position.x), \n                    ((part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2 - body.position.y));\n\n                primitive.endFill();\n            }\n        }\n\n        return primitive;\n    };\n\n    /**\n     * Gets the requested texture (a PIXI.Texture) via its path\n     * @method _getTexture\n     * @private\n     * @param {RenderPixi} render\n     * @param {string} imagePath\n     * @return {PIXI.Texture} texture\n     * @deprecated\n     */\n    var _getTexture = function(render, imagePath) {\n        var texture = render.textures[imagePath];\n\n        if (!texture)\n            texture = render.textures[imagePath] = PIXI.Texture.fromImage(imagePath);\n\n        return texture;\n    };\n\n})();\n\n\n/***/ })\n/******/ ]);\n});","'use strict'\r\n\r\nimport { Engine, World, MouseConstraint, Mouse } from 'matter-js';\r\n\r\nimport { PhysicsSprite } from './physics_objects/physics_sprite';\r\nimport { PhysicsGraphics } from './physics_objects/physics_graphics';\r\n\r\n/**\r\n * Manages pixi objects within the Matter engine.\r\n */\r\nexport class PixiMatter {\r\n  /**\r\n   * A reference to the Matter engine.\r\n   * \r\n   * @private\r\n   * \r\n   * @property {Engine}\r\n   */\r\n  private _engine = Engine.create();\r\n\r\n  /**\r\n   * A reference to all of the pixi objects added to the world.\r\n   * \r\n   * @private\r\n   * \r\n   * @property {Array<PhysicsSprite|PhysicsGraphics>}\r\n   */\r\n  private _pixiObjects: Array<PhysicsSprite | PhysicsGraphics> = [];\r\n\r\n  constructor(options) {\r\n    Engine.run(this.engine);\r\n\r\n    const mouseConstraint = MouseConstraint.create(this.engine, {\r\n      mouse: Mouse.create(options.stage),\r\n    });\r\n  \r\n    World.add(this.engine.world, mouseConstraint);\r\n  }\r\n\r\n  /**\r\n   * Returns the reference to the Matter engine.\r\n   * \r\n   * @returns {Engine}\r\n   */\r\n  get engine() { return this._engine; }\r\n\r\n  /**\r\n   * Returns the pixi objects added to the world.\r\n   * \r\n   * @property {Array<PhysicsSprite|PhysicsGraphics>}\r\n   */\r\n  get pixiObjects() { return this._pixiObjects; }\r\n\r\n  /**\r\n   * Updates the position of each pixi object added to the world.\r\n   */\r\n  update() {\r\n    this._pixiObjects.forEach(po => po.update());\r\n  }\r\n\r\n  /**\r\n   * Adds one or more pixi objects to the Matter world.\r\n   * \r\n   * @param {Array<PhysicsSprite|PhysicsGraphics>} pixiObjects The pixi object/s to add to the Matter world.\r\n   */\r\n  addToWorld(...pixiObjects: Array<PhysicsSprite | PhysicsGraphics>) {\r\n    pixiObjects.forEach(po => World.addBody(this.engine.world, po.body));\r\n\r\n    this._pixiObjects = this._pixiObjects.concat(pixiObjects);\r\n  }\r\n\r\n  /**\r\n   * Removes one or more pixi sprites from the Matter world.\r\n   * \r\n   * @param {Array<PhysicsSprite|PhysicsGraphics>} pixiObjects The pixi object/s to remove from the Matter world.\r\n   */\r\n  removeFromWorld(...pixiObjects: Array<PhysicsSprite | PhysicsGraphics>) {\r\n    pixiObjects.forEach(po => World.remove(this.engine.world, po.body));\r\n\r\n    this._pixiObjects = this._pixiObjects.filter(po => !pixiObjects.includes(po));\r\n  }\r\n}","'use strict'\r\n\r\nimport { Sprite } from '@pixi/sprite';\r\nimport { Texture } from '@pixi/core';\r\nimport { Body, Bodies, IBodyDefinition } from 'matter-js';\r\n\r\nimport { SpriteOptions } from '../interfaces/sprite_options';\r\n\r\n/**\r\n * Extends the pixi sprite class to include a Matter body and its properties.\r\n */\r\nexport class PhysicsSprite {\r\n  /**\r\n   * A reference to the physics options for this sprite's body.\r\n   * \r\n   * @property {IBodyDefinition}\r\n   */\r\n  physicsOptions: IBodyDefinition;\r\n\r\n  /**\r\n   * The physics body of the sprite.\r\n   * \r\n   * @private\r\n   * \r\n   * @property {Body}\r\n   */\r\n  private _body: Body;\r\n  private _update: ({position, rotation}) => void;\r\n  private _sprite: Sprite;\r\n\r\n  /**\r\n   * @param {sprite} The target sprite.\r\n   * @param {PhysicsOptions} physicsOptions The options to apply to the sprite's body.\r\n   * @param {update} \r\n   */\r\n  constructor(sprite: Sprite, physicsOptions: IBodyDefinition = {}, update?: ({position, rotation}) => void) {\r\n    const {x, y, width, height, texture} = sprite;\r\n    this._sprite = sprite;\r\n    this._update = update;\r\n    this.physicsOptions = physicsOptions;\r\n    if (physicsOptions.isCircle) this._body = Bodies.circle(x, y, width/2, physicsOptions);\r\n    else this._body = Bodies.rectangle(x, y, width, height, physicsOptions);\r\n  }\r\n\r\n  /**\r\n   * Returns the physics body of the sprite.\r\n   * \r\n   * @returns {Body}\r\n   */\r\n  get body(): Body { return this._body; }\r\n\r\n  /**\r\n   * Updates the position of the sprite according to where its body should be.\r\n   */\r\n  update() {\r\n    if (this._update) {\r\n      this._update({\r\n        position: this._body.position,\r\n        rotation: this._body.angle,\r\n      })\r\n    } else {\r\n      this._sprite.position = this._body.position;\r\n      this._sprite.rotation = this._body.angle;\r\n    }\r\n  }\r\n}","const appleIphone = /iPhone/i;\nconst appleIpod = /iPod/i;\nconst appleTablet = /iPad/i;\nconst appleUniversal = /\\biOS-universal(?:.+)Mac\\b/i;\nconst androidPhone = /\\bAndroid(?:.+)Mobile\\b/i; // Match 'Android' AND 'Mobile'\nconst androidTablet = /Android/i;\nconst amazonPhone = /(?:SD4930UR|\\bSilk(?:.+)Mobile\\b)/i; // Match 'Silk' AND 'Mobile'\nconst amazonTablet = /Silk/i;\nconst windowsPhone = /Windows Phone/i;\nconst windowsTablet = /\\bWindows(?:.+)ARM\\b/i; // Match 'Windows' AND 'ARM'\nconst otherBlackBerry = /BlackBerry/i;\nconst otherBlackBerry10 = /BB10/i;\nconst otherOpera = /Opera Mini/i;\nconst otherChrome = /\\b(CriOS|Chrome)(?:.+)Mobile/i;\nconst otherFirefox = /Mobile(?:.+)Firefox\\b/i; // Match 'Mobile' AND 'Firefox'\n\nexport type UserAgent = string;\nexport type Navigator = {\n  userAgent: string;\n  platform: string;\n  maxTouchPoints?: number;\n};\n\nconst isAppleTabletOnIos13 = (navigator?: Navigator): boolean => {\n  return (\n    typeof navigator !== 'undefined' &&\n    navigator.platform === 'MacIntel' &&\n    typeof navigator.maxTouchPoints === 'number' &&\n    navigator.maxTouchPoints > 1 &&\n    typeof MSStream === 'undefined'\n  );\n};\n\nfunction createMatch(userAgent: UserAgent): (regex: RegExp) => boolean {\n  return (regex: RegExp): boolean => regex.test(userAgent);\n}\n\nexport type isMobileResult = {\n  apple: {\n    phone: boolean;\n    ipod: boolean;\n    tablet: boolean;\n    universal: boolean;\n    device: boolean;\n  };\n  amazon: {\n    phone: boolean;\n    tablet: boolean;\n    device: boolean;\n  };\n  android: {\n    phone: boolean;\n    tablet: boolean;\n    device: boolean;\n  };\n  windows: {\n    phone: boolean;\n    tablet: boolean;\n    device: boolean;\n  };\n  other: {\n    blackberry: boolean;\n    blackberry10: boolean;\n    opera: boolean;\n    firefox: boolean;\n    chrome: boolean;\n    device: boolean;\n  };\n  phone: boolean;\n  tablet: boolean;\n  any: boolean;\n};\n\nexport type IsMobileParameter = UserAgent | Navigator;\n\nexport default function isMobile(param?: IsMobileParameter): isMobileResult {\n  let nav: Navigator = {\n    userAgent: '',\n    platform: '',\n    maxTouchPoints: 0,\n  };\n\n  if (!param && typeof navigator !== 'undefined') {\n    nav = {\n      userAgent: navigator.userAgent,\n      platform: navigator.platform,\n      maxTouchPoints: navigator.maxTouchPoints || 0,\n    };\n  } else if (typeof param === 'string') {\n    nav.userAgent = param;\n  } else if (param && param.userAgent) {\n    nav = {\n      userAgent: param.userAgent,\n      platform: param.platform,\n      maxTouchPoints: param.maxTouchPoints || 0,\n    };\n  }\n\n  let userAgent = nav.userAgent;\n\n  // Facebook mobile app's integrated browser adds a bunch of strings that\n  // match everything. Strip it out if it exists.\n  let tmp = userAgent.split('[FBAN');\n  if (typeof tmp[1] !== 'undefined') {\n    userAgent = tmp[0];\n  }\n\n  // Twitter mobile app's integrated browser on iPad adds a \"Twitter for\n  // iPhone\" string. Same probably happens on other tablet platforms.\n  // This will confuse detection so strip it out if it exists.\n  tmp = userAgent.split('Twitter');\n  if (typeof tmp[1] !== 'undefined') {\n    userAgent = tmp[0];\n  }\n\n  const match = createMatch(userAgent);\n\n  const result: isMobileResult = {\n    apple: {\n      phone: match(appleIphone) && !match(windowsPhone),\n      ipod: match(appleIpod),\n      tablet:\n        !match(appleIphone) &&\n        (match(appleTablet) || isAppleTabletOnIos13(nav)) &&\n        !match(windowsPhone),\n      universal: match(appleUniversal),\n      device:\n        (match(appleIphone) ||\n          match(appleIpod) ||\n          match(appleTablet) ||\n          match(appleUniversal) ||\n          isAppleTabletOnIos13(nav)) &&\n        !match(windowsPhone),\n    },\n    amazon: {\n      phone: match(amazonPhone),\n      tablet: !match(amazonPhone) && match(amazonTablet),\n      device: match(amazonPhone) || match(amazonTablet),\n    },\n    android: {\n      phone:\n        (!match(windowsPhone) && match(amazonPhone)) ||\n        (!match(windowsPhone) && match(androidPhone)),\n      tablet:\n        !match(windowsPhone) &&\n        !match(amazonPhone) &&\n        !match(androidPhone) &&\n        (match(amazonTablet) || match(androidTablet)),\n      device:\n        (!match(windowsPhone) &&\n          (match(amazonPhone) ||\n            match(amazonTablet) ||\n            match(androidPhone) ||\n            match(androidTablet))) ||\n        match(/\\bokhttp\\b/i),\n    },\n    windows: {\n      phone: match(windowsPhone),\n      tablet: match(windowsTablet),\n      device: match(windowsPhone) || match(windowsTablet),\n    },\n    other: {\n      blackberry: match(otherBlackBerry),\n      blackberry10: match(otherBlackBerry10),\n      opera: match(otherOpera),\n      firefox: match(otherFirefox),\n      chrome: match(otherChrome),\n      device:\n        match(otherBlackBerry) ||\n        match(otherBlackBerry10) ||\n        match(otherOpera) ||\n        match(otherFirefox) ||\n        match(otherChrome),\n    },\n    any: false,\n    phone: false,\n    tablet: false,\n  };\n\n  result.any =\n    result.apple.device ||\n    result.android.device ||\n    result.windows.device ||\n    result.other.device;\n  // excludes 'other' devices and ipods, targeting touchscreen phones\n  result.phone =\n    result.apple.phone || result.android.phone || result.windows.phone;\n  result.tablet =\n    result.apple.tablet || result.android.tablet || result.windows.tablet;\n\n  return result;\n}\n","export * from './isMobile';\nexport { default } from './isMobile';\n","// The ESM/CJS versions of ismobilejs only\n// exports the function for executing\n// designed for Node-only environments\nimport isMobileCall from 'ismobilejs';\n\nconst isMobile = isMobileCall(window.navigator);\n\nexport { isMobile };\n","import { isMobile } from './isMobile';\n\n/**\n * The maximum recommended texture units to use.\n * In theory the bigger the better, and for desktop we'll use as many as we can.\n * But some mobile devices slow down if there is to many branches in the shader.\n * So in practice there seems to be a sweet spot size that varies depending on the device.\n *\n * In v4, all mobile devices were limited to 4 texture units because for this.\n * In v5, we allow all texture units to be used on modern Apple or Android devices.\n *\n * @private\n * @param {number} max\n * @returns {number}\n */\nexport function maxRecommendedTextures(max: number): number\n{\n    let allowMax = true;\n\n    if (isMobile.tablet || isMobile.phone)\n    {\n        if (isMobile.apple.device)\n        {\n            const match = (navigator.userAgent).match(/OS (\\d+)_(\\d+)?/);\n\n            if (match)\n            {\n                const majorVersion = parseInt(match[1], 10);\n\n                // Limit texture units on devices below iOS 11, which will be older hardware\n                if (majorVersion < 11)\n                {\n                    allowMax = false;\n                }\n            }\n        }\n        if (isMobile.android.device)\n        {\n            const match = (navigator.userAgent).match(/Android\\s([0-9.]*)/);\n\n            if (match)\n            {\n                const majorVersion = parseInt(match[1], 10);\n\n                // Limit texture units on devices below Android 7 (Nougat), which will be older hardware\n                if (majorVersion < 7)\n                {\n                    allowMax = false;\n                }\n            }\n        }\n    }\n\n    return allowMax ? max : 4;\n}\n","import { isMobile } from './isMobile';\n\n/**\n * Uploading the same buffer multiple times in a single frame can cause performance issues.\n * Apparent on iOS so only check for that at the moment\n * This check may become more complex if this issue pops up elsewhere.\n *\n * @private\n * @returns {boolean}\n */\nexport function canUploadSameBuffer(): boolean\n{\n    return !isMobile.apple.device;\n}\n","import { isMobile } from './utils/isMobile';\nimport { maxRecommendedTextures } from './utils/maxRecommendedTextures';\nimport { canUploadSameBuffer } from './utils/canUploadSameBuffer';\n\nexport interface IRenderOptions {\n    view: HTMLCanvasElement;\n    antialias: boolean;\n    autoDensity: boolean;\n    transparent: boolean;\n    backgroundColor: number;\n    clearBeforeRender: boolean;\n    preserveDrawingBuffer: boolean;\n    width: number;\n    height: number;\n    legacy: boolean;\n}\n\nexport interface ISettings {\n    MIPMAP_TEXTURES: number;\n    ANISOTROPIC_LEVEL: number;\n    RESOLUTION: number;\n    FILTER_RESOLUTION: number;\n    SPRITE_MAX_TEXTURES: number;\n    SPRITE_BATCH_SIZE: number;\n    RENDER_OPTIONS: IRenderOptions;\n    GC_MODE: number;\n    GC_MAX_IDLE: number;\n    GC_MAX_CHECK_COUNT: number;\n    WRAP_MODE: number;\n    SCALE_MODE: number;\n    PRECISION_VERTEX: string;\n    PRECISION_FRAGMENT: string;\n    CAN_UPLOAD_SAME_BUFFER: boolean;\n    CREATE_IMAGE_BITMAP: boolean;\n    ROUND_PIXELS: boolean;\n    RETINA_PREFIX?: RegExp;\n    FAIL_IF_MAJOR_PERFORMANCE_CAVEAT?: boolean;\n    UPLOADS_PER_FRAME?: number;\n    SORTABLE_CHILDREN?: boolean;\n    PREFER_ENV?: number;\n    STRICT_TEXTURE_CACHE?: boolean;\n    MESH_CANVAS_PADDING?: number;\n    TARGET_FPMS?: number;\n}\n\n/**\n * User's customizable globals for overriding the default PIXI settings, such\n * as a renderer's default resolution, framerate, float precision, etc.\n * @example\n * // Use the native window resolution as the default resolution\n * // will support high-density displays when rendering\n * PIXI.settings.RESOLUTION = window.devicePixelRatio;\n *\n * // Disable interpolation when scaling, will make texture be pixelated\n * PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\n * @namespace PIXI.settings\n */\nexport const settings: ISettings = {\n\n    /**\n     * If set to true WebGL will attempt make textures mimpaped by default.\n     * Mipmapping will only succeed if the base texture uploaded has power of two dimensions.\n     *\n     * @static\n     * @name MIPMAP_TEXTURES\n     * @memberof PIXI.settings\n     * @type {PIXI.MIPMAP_MODES}\n     * @default PIXI.MIPMAP_MODES.POW2\n     */\n    MIPMAP_TEXTURES: 1,\n\n    /**\n     * Default anisotropic filtering level of textures.\n     * Usually from 0 to 16\n     *\n     * @static\n     * @name ANISOTROPIC_LEVEL\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 0\n     */\n    ANISOTROPIC_LEVEL: 0,\n\n    /**\n     * Default resolution / device pixel ratio of the renderer.\n     *\n     * @static\n     * @name RESOLUTION\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 1\n     */\n    RESOLUTION: 1,\n\n    /**\n     * Default filter resolution.\n     *\n     * @static\n     * @name FILTER_RESOLUTION\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 1\n     */\n    FILTER_RESOLUTION: 1,\n\n    /**\n     * The maximum textures that this device supports.\n     *\n     * @static\n     * @name SPRITE_MAX_TEXTURES\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 32\n     */\n    SPRITE_MAX_TEXTURES: maxRecommendedTextures(32),\n\n    // TODO: maybe change to SPRITE.BATCH_SIZE: 2000\n    // TODO: maybe add PARTICLE.BATCH_SIZE: 15000\n\n    /**\n     * The default sprite batch size.\n     *\n     * The default aims to balance desktop and mobile devices.\n     *\n     * @static\n     * @name SPRITE_BATCH_SIZE\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 4096\n     */\n    SPRITE_BATCH_SIZE: 4096,\n\n    /**\n     * The default render options if none are supplied to {@link PIXI.Renderer}\n     * or {@link PIXI.CanvasRenderer}.\n     *\n     * @static\n     * @name RENDER_OPTIONS\n     * @memberof PIXI.settings\n     * @type {object}\n     * @property {HTMLCanvasElement} view=null\n     * @property {number} resolution=1\n     * @property {boolean} antialias=false\n     * @property {boolean} autoDensity=false\n     * @property {boolean} transparent=false\n     * @property {number} backgroundColor=0x000000\n     * @property {boolean} clearBeforeRender=true\n     * @property {boolean} preserveDrawingBuffer=false\n     * @property {number} width=800\n     * @property {number} height=600\n     * @property {boolean} legacy=false\n     */\n    RENDER_OPTIONS: {\n        view: null,\n        antialias: false,\n        autoDensity: false,\n        transparent: false,\n        backgroundColor: 0x000000,\n        clearBeforeRender: true,\n        preserveDrawingBuffer: false,\n        width: 800,\n        height: 600,\n        legacy: false,\n    },\n\n    /**\n     * Default Garbage Collection mode.\n     *\n     * @static\n     * @name GC_MODE\n     * @memberof PIXI.settings\n     * @type {PIXI.GC_MODES}\n     * @default PIXI.GC_MODES.AUTO\n     */\n    GC_MODE: 0,\n\n    /**\n     * Default Garbage Collection max idle.\n     *\n     * @static\n     * @name GC_MAX_IDLE\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 3600\n     */\n    GC_MAX_IDLE: 60 * 60,\n\n    /**\n     * Default Garbage Collection maximum check count.\n     *\n     * @static\n     * @name GC_MAX_CHECK_COUNT\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 600\n     */\n    GC_MAX_CHECK_COUNT: 60 * 10,\n\n    /**\n     * Default wrap modes that are supported by pixi.\n     *\n     * @static\n     * @name WRAP_MODE\n     * @memberof PIXI.settings\n     * @type {PIXI.WRAP_MODES}\n     * @default PIXI.WRAP_MODES.CLAMP\n     */\n    WRAP_MODE: 33071,\n\n    /**\n     * Default scale mode for textures.\n     *\n     * @static\n     * @name SCALE_MODE\n     * @memberof PIXI.settings\n     * @type {PIXI.SCALE_MODES}\n     * @default PIXI.SCALE_MODES.LINEAR\n     */\n    SCALE_MODE: 1,\n\n    /**\n     * Default specify float precision in vertex shader.\n     *\n     * @static\n     * @name PRECISION_VERTEX\n     * @memberof PIXI.settings\n     * @type {PIXI.PRECISION}\n     * @default PIXI.PRECISION.HIGH\n     */\n    PRECISION_VERTEX: 'highp',\n\n    /**\n     * Default specify float precision in fragment shader.\n     * iOS is best set at highp due to https://github.com/pixijs/pixi.js/issues/3742\n     *\n     * @static\n     * @name PRECISION_FRAGMENT\n     * @memberof PIXI.settings\n     * @type {PIXI.PRECISION}\n     * @default PIXI.PRECISION.MEDIUM\n     */\n    PRECISION_FRAGMENT: isMobile.apple.device ? 'highp' : 'mediump',\n\n    /**\n     * Can we upload the same buffer in a single frame?\n     *\n     * @static\n     * @name CAN_UPLOAD_SAME_BUFFER\n     * @memberof PIXI.settings\n     * @type {boolean}\n     */\n    CAN_UPLOAD_SAME_BUFFER: canUploadSameBuffer(),\n\n    /**\n     * Enables bitmap creation before image load. This feature is experimental.\n     *\n     * @static\n     * @name CREATE_IMAGE_BITMAP\n     * @memberof PIXI.settings\n     * @type {boolean}\n     * @default false\n     */\n    CREATE_IMAGE_BITMAP: false,\n\n    /**\n     * If true PixiJS will Math.floor() x/y values when rendering, stopping pixel interpolation.\n     * Advantages can include sharper image quality (like text) and faster rendering on canvas.\n     * The main disadvantage is movement of objects may appear less smooth.\n     *\n     * @static\n     * @constant\n     * @memberof PIXI.settings\n     * @type {boolean}\n     * @default false\n     */\n    ROUND_PIXELS: false,\n};\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 1 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize);\n                earcutLinked(c, triangles, dim, minX, minY, invSize);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n    if (outerNode) {\n        var b = splitPolygon(outerNode, hole);\n\n        // filter collinear points around the cuts\n        filterPoints(outerNode, outerNode.next);\n        filterPoints(b, b.next);\n    }\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) * invSize;\n    y = 32767 * (y - minY) * invSize;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n           (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n           (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","let saidHello = false;\nconst VERSION = '__VERSION__';\n\n/**\n * Skips the hello message of renderers that are created after this is run.\n *\n * @function skipHello\n * @memberof PIXI.utils\n */\nexport function skipHello(): void\n{\n    saidHello = true;\n}\n\n/**\n * Logs out the version and renderer information for this running instance of PIXI.\n * If you don't want to see this message you can run `PIXI.utils.skipHello()` before\n * creating your renderer. Keep in mind that doing that will forever make you a jerk face.\n *\n * @static\n * @function sayHello\n * @memberof PIXI.utils\n * @param {string} type - The string renderer type to log.\n */\nexport function sayHello(type: string): void\n{\n    if (saidHello)\n    {\n        return;\n    }\n\n    if (navigator.userAgent.toLowerCase().indexOf('chrome') > -1)\n    {\n        const args = [\n            `\\n %c %c %c PixiJS ${VERSION} - ✰ ${type} ✰  %c  %c  http://www.pixijs.com/  %c %c ♥%c♥%c♥ \\n\\n`,\n            'background: #ff66a5; padding:5px 0;',\n            'background: #ff66a5; padding:5px 0;',\n            'color: #ff66a5; background: #030307; padding:5px 0;',\n            'background: #ff66a5; padding:5px 0;',\n            'background: #ffc3dc; padding:5px 0;',\n            'background: #ff66a5; padding:5px 0;',\n            'color: #ff2424; background: #fff; padding:5px 0;',\n            'color: #ff2424; background: #fff; padding:5px 0;',\n            'color: #ff2424; background: #fff; padding:5px 0;',\n        ];\n\n        window.console.log(...args);\n    }\n    else if (window.console)\n    {\n        window.console.log(`PixiJS ${VERSION} - ${type} - http://www.pixijs.com/`);\n    }\n\n    saidHello = true;\n}\n","import { settings } from '../settings';\n\nlet supported: boolean|undefined;\n\n/**\n * Helper for checking for WebGL support.\n *\n * @memberof PIXI.utils\n * @function isWebGLSupported\n * @return {boolean} Is WebGL supported.\n */\nexport function isWebGLSupported(): boolean\n{\n    if (typeof supported === 'undefined')\n    {\n        supported = (function supported(): boolean\n        {\n            const contextOptions = {\n                stencil: true,\n                failIfMajorPerformanceCaveat: settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT,\n            };\n\n            try\n            {\n                if (!window.WebGLRenderingContext)\n                {\n                    return false;\n                }\n\n                const canvas = document.createElement('canvas');\n                let gl = (\n                    canvas.getContext('webgl', contextOptions)\n                    || canvas.getContext('experimental-webgl', contextOptions)\n                ) as WebGLRenderingContext;\n\n                const success = !!(gl && gl.getContextAttributes().stencil);\n\n                if (gl)\n                {\n                    const loseContext = gl.getExtension('WEBGL_lose_context');\n\n                    if (loseContext)\n                    {\n                        loseContext.loseContext();\n                    }\n                }\n\n                gl = null;\n\n                return success;\n            }\n            catch (e)\n            {\n                return false;\n            }\n        })();\n    }\n\n    return supported;\n}\n","/**\n * Converts a hexadecimal color number to an [R, G, B] array of normalized floats (numbers from 0.0 to 1.0).\n *\n * @example\n * PIXI.utils.hex2rgb(0xffffff); // returns [1, 1, 1]\n * @memberof PIXI.utils\n * @function hex2rgb\n * @param {number} hex - The hexadecimal number to convert\n * @param  {number[]} [out=[]] - If supplied, this array will be used rather than returning a new one\n * @return {number[]} An array representing the [R, G, B] of the color where all values are floats.\n */\nexport function hex2rgb(hex: number, out: Array<number> | Float32Array = []): Array<number> | Float32Array\n{\n    out[0] = ((hex >> 16) & 0xFF) / 255;\n    out[1] = ((hex >> 8) & 0xFF) / 255;\n    out[2] = (hex & 0xFF) / 255;\n\n    return out;\n}\n\n/**\n * Converts a hexadecimal color number to a string.\n *\n * @example\n * PIXI.utils.hex2string(0xffffff); // returns \"#ffffff\"\n * @memberof PIXI.utils\n * @function hex2string\n * @param {number} hex - Number in hex (e.g., `0xffffff`)\n * @return {string} The string color (e.g., `\"#ffffff\"`).\n */\nexport function hex2string(hex: number): string\n{\n    let hexString = hex.toString(16);\n\n    hexString = '000000'.substr(0, 6 - hexString.length) + hexString;\n\n    return `#${hexString}`;\n}\n\n/**\n * Converts a hexadecimal string to a hexadecimal color number.\n *\n * @example\n * PIXI.utils.string2hex(\"#ffffff\"); // returns 0xffffff\n * @memberof PIXI.utils\n * @function string2hex\n * @param {string} string - The string color (e.g., `\"#ffffff\"`)\n * @return {number} Number in hexadecimal.\n */\nexport function string2hex(string: string): number\n{\n    if (typeof string === 'string' && string[0] === '#')\n    {\n        string = string.substr(1);\n    }\n\n    return parseInt(string, 16);\n}\n\n/**\n * Converts a color as an [R, G, B] array of normalized floats to a hexadecimal number.\n *\n * @example\n * PIXI.utils.rgb2hex([1, 1, 1]); // returns 0xffffff\n * @memberof PIXI.utils\n * @function rgb2hex\n * @param {number[]} rgb - Array of numbers where all values are normalized floats from 0.0 to 1.0.\n * @return {number} Number in hexadecimal.\n */\nexport function rgb2hex(rgb: number[] | Float32Array): number\n{\n    return (((rgb[0] * 255) << 16) + ((rgb[1] * 255) << 8) + (rgb[2] * 255 | 0));\n}\n","import { BLEND_MODES } from '@pixi/constants';\n\n/**\n * Corrects PixiJS blend, takes premultiplied alpha into account\n *\n * @memberof PIXI.utils\n * @function mapPremultipliedBlendModes\n * @private\n * @return {Array<number[]>} Mapped modes.\n */\nfunction mapPremultipliedBlendModes(): number[][]\n{\n    const pm = [];\n    const npm = [];\n\n    for (let i = 0; i < 32; i++)\n    {\n        pm[i] = i;\n        npm[i] = i;\n    }\n\n    pm[BLEND_MODES.NORMAL_NPM] = BLEND_MODES.NORMAL;\n    pm[BLEND_MODES.ADD_NPM] = BLEND_MODES.ADD;\n    pm[BLEND_MODES.SCREEN_NPM] = BLEND_MODES.SCREEN;\n\n    npm[BLEND_MODES.NORMAL] = BLEND_MODES.NORMAL_NPM;\n    npm[BLEND_MODES.ADD] = BLEND_MODES.ADD_NPM;\n    npm[BLEND_MODES.SCREEN] = BLEND_MODES.SCREEN_NPM;\n\n    const array: number[][] = [];\n\n    array.push(npm);\n    array.push(pm);\n\n    return array;\n}\n\n/**\n * maps premultiply flag and blendMode to adjusted blendMode\n * @memberof PIXI.utils\n * @const premultiplyBlendMode\n * @type {Array<number[]>}\n */\nexport const premultiplyBlendMode = mapPremultipliedBlendModes();\n\n/**\n * changes blendMode according to texture format\n *\n * @memberof PIXI.utils\n * @function correctBlendMode\n * @param {number} blendMode - supposed blend mode\n * @param {boolean} premultiplied - whether source is premultiplied\n * @returns {number} true blend mode for this texture\n */\nexport function correctBlendMode(blendMode: number, premultiplied: boolean): number\n{\n    return premultiplyBlendMode[premultiplied ? 1 : 0][blendMode];\n}\n\n/**\n * combines rgb and alpha to out array\n *\n * @memberof PIXI.utils\n * @function premultiplyRgba\n * @param {Float32Array|number[]} rgb - input rgb\n * @param {number} alpha - alpha param\n * @param {Float32Array} [out] - output\n * @param {boolean} [premultiply=true] - do premultiply it\n * @returns {Float32Array} vec4 rgba\n */\nexport function premultiplyRgba(\n    rgb: Float32Array|number[],\n    alpha: number,\n    out: Float32Array,\n    premultiply: boolean\n): Float32Array\n{\n    out = out || new Float32Array(4);\n    if (premultiply || premultiply === undefined)\n    {\n        out[0] = rgb[0] * alpha;\n        out[1] = rgb[1] * alpha;\n        out[2] = rgb[2] * alpha;\n    }\n    else\n    {\n        out[0] = rgb[0];\n        out[1] = rgb[1];\n        out[2] = rgb[2];\n    }\n    out[3] = alpha;\n\n    return out;\n}\n\n/**\n * premultiplies tint\n *\n * @memberof PIXI.utils\n * @function premultiplyTint\n * @param {number} tint - integer RGB\n * @param {number} alpha - floating point alpha (0.0-1.0)\n * @returns {number} tint multiplied by alpha\n */\nexport function premultiplyTint(tint: number, alpha: number): number\n{\n    if (alpha === 1.0)\n    {\n        return (alpha * 255 << 24) + tint;\n    }\n    if (alpha === 0.0)\n    {\n        return 0;\n    }\n    let R = ((tint >> 16) & 0xFF);\n    let G = ((tint >> 8) & 0xFF);\n    let B = (tint & 0xFF);\n\n    R = ((R * alpha) + 0.5) | 0;\n    G = ((G * alpha) + 0.5) | 0;\n    B = ((B * alpha) + 0.5) | 0;\n\n    return (alpha * 255 << 24) + (R << 16) + (G << 8) + B;\n}\n\n/**\n * converts integer tint and float alpha to vec4 form, premultiplies by default\n *\n * @memberof PIXI.utils\n * @function premultiplyTintToRgba\n * @param {number} tint - input tint\n * @param {number} alpha - alpha param\n * @param {Float32Array} [out] output\n * @param {boolean} [premultiply=true] - do premultiply it\n * @returns {Float32Array} vec4 rgba\n */\nexport function premultiplyTintToRgba(tint: number, alpha: number, out: Float32Array, premultiply: boolean): Float32Array\n{\n    out = out || new Float32Array(4);\n    out[0] = ((tint >> 16) & 0xFF) / 255.0;\n    out[1] = ((tint >> 8) & 0xFF) / 255.0;\n    out[2] = (tint & 0xFF) / 255.0;\n    if (premultiply || premultiply === undefined)\n    {\n        out[0] *= alpha;\n        out[1] *= alpha;\n        out[2] *= alpha;\n    }\n    out[3] = alpha;\n\n    return out;\n}\n","/**\n * Generic Mask Stack data structure\n *\n * @memberof PIXI.utils\n * @function createIndicesForQuads\n * @param {number} size - Number of quads\n * @param {Uint16Array|Uint32Array} [outBuffer] - Buffer for output, length has to be `6 * size`\n * @return {Uint16Array|Uint32Array} - Resulting index buffer\n */\nexport function createIndicesForQuads(size: number, outBuffer: Uint16Array|Uint32Array = null): Uint16Array|Uint32Array\n{\n    // the total number of indices in our array, there are 6 points per quad.\n    const totalIndices = size * 6;\n\n    outBuffer = outBuffer || new Uint16Array(totalIndices);\n\n    if (outBuffer.length !== totalIndices)\n    {\n        throw new Error(`Out buffer length is incorrect, got ${outBuffer.length} and expected ${totalIndices}`);\n    }\n\n    // fill the indices with the quads to draw\n    for (let i = 0, j = 0; i < totalIndices; i += 6, j += 4)\n    {\n        outBuffer[i + 0] = j + 0;\n        outBuffer[i + 1] = j + 1;\n        outBuffer[i + 2] = j + 2;\n        outBuffer[i + 3] = j + 0;\n        outBuffer[i + 4] = j + 2;\n        outBuffer[i + 5] = j + 3;\n    }\n\n    return outBuffer;\n}\n","import type { ITypedArray } from '@pixi/core';\n\nexport function getBufferType(array: ITypedArray): 'Float32Array'|'Uint32Array'|'Int32Array'|'Uint16Array'|'Uint8Array'|null\n{\n    if (array.BYTES_PER_ELEMENT === 4)\n    {\n        if (array instanceof Float32Array)\n        {\n            return 'Float32Array';\n        }\n        else if (array instanceof Uint32Array)\n        {\n            return 'Uint32Array';\n        }\n\n        return 'Int32Array';\n    }\n    else if (array.BYTES_PER_ELEMENT === 2)\n    {\n        if (array instanceof Uint16Array)\n        {\n            return 'Uint16Array';\n        }\n    }\n    else if (array.BYTES_PER_ELEMENT === 1)\n    {\n        if (array instanceof Uint8Array)\n        {\n            return 'Uint8Array';\n        }\n    }\n\n    // TODO map out the rest of the array elements!\n    return null;\n}\n","import { getBufferType } from './getBufferType';\n\n/* eslint-disable object-shorthand */\nconst map = { Float32Array: Float32Array, Uint32Array: Uint32Array, Int32Array: Int32Array, Uint8Array: Uint8Array };\n\ntype PackedArray = Float32Array|Uint32Array|Int32Array|Uint8Array;\n\nexport function interleaveTypedArrays(arrays: PackedArray[], sizes: number[]): Float32Array\n{\n    let outSize = 0;\n    let stride = 0;\n    const views: {[key: string]: PackedArray} = {};\n\n    for (let i = 0; i < arrays.length; i++)\n    {\n        stride += sizes[i];\n        outSize += arrays[i].length;\n    }\n\n    const buffer = new ArrayBuffer(outSize * 4);\n\n    let out = null;\n    let littleOffset = 0;\n\n    for (let i = 0; i < arrays.length; i++)\n    {\n        const size = sizes[i];\n        const array = arrays[i];\n\n        /*\n        @todo This is unsafe casting but consistent with how the code worked previously. Should it stay this way\n              or should and `getBufferTypeUnsafe` function be exposed that throws an Error if unsupported type is passed?\n         */\n        const type = getBufferType(array) as keyof typeof map;\n\n        if (!views[type])\n        {\n            views[type] = new map[type](buffer);\n        }\n\n        out = views[type];\n\n        for (let j = 0; j < array.length; j++)\n        {\n            const indexStart = ((j / size | 0) * stride) + littleOffset;\n            const index = j % size;\n\n            out[indexStart + index] = array[j];\n        }\n\n        littleOffset += size;\n    }\n\n    return new Float32Array(buffer);\n}\n","// Taken from the bit-twiddle package\n\n/**\n * Rounds to next power of two.\n *\n * @function nextPow2\n * @memberof PIXI.utils\n * @param {number} v - input value\n * @return {number}\n */\nexport function nextPow2(v: number): number\n{\n    v += v === 0 ? 1 : 0;\n    --v;\n    v |= v >>> 1;\n    v |= v >>> 2;\n    v |= v >>> 4;\n    v |= v >>> 8;\n    v |= v >>> 16;\n\n    return v + 1;\n}\n\n/**\n * Checks if a number is a power of two.\n *\n * @function isPow2\n * @memberof PIXI.utils\n * @param {number} v - input value\n * @return {boolean} `true` if value is power of two\n */\nexport function isPow2(v: number): boolean\n{\n    return !(v & (v - 1)) && (!!v);\n}\n\n/**\n * Computes ceil of log base 2\n *\n * @function log2\n * @memberof PIXI.utils\n * @param {number} v - input value\n * @return {number} logarithm base 2\n */\nexport function log2(v: number): number\n{\n    let r = (v > 0xFFFF ? 1 : 0) << 4;\n\n    v >>>= r;\n\n    let shift = (v > 0xFF ? 1 : 0) << 3;\n\n    v >>>= shift; r |= shift;\n    shift = (v > 0xF ? 1 : 0) << 2;\n    v >>>= shift; r |= shift;\n    shift = (v > 0x3 ? 1 : 0) << 1;\n    v >>>= shift; r |= shift;\n\n    return r | (v >> 1);\n}\n","/**\n * Remove items from a javascript array without generating garbage\n *\n * @function removeItems\n * @memberof PIXI.utils\n * @param {Array<any>} arr - Array to remove elements from\n * @param {number} startIdx - starting index\n * @param {number} removeCount - how many to remove\n */\nexport function removeItems(arr: any[], startIdx: number, removeCount: number): void\n{\n    const length = arr.length;\n    let i;\n\n    if (startIdx >= length || removeCount === 0)\n    {\n        return;\n    }\n\n    removeCount = (startIdx + removeCount > length ? length - startIdx : removeCount);\n\n    const len = length - removeCount;\n\n    for (i = startIdx; i < len; ++i)\n    {\n        arr[i] = arr[i + removeCount];\n    }\n\n    arr.length = len;\n}\n","/**\n * Returns sign of number\n *\n * @memberof PIXI.utils\n * @function sign\n * @param {number} n - the number to check the sign of\n * @returns {number} 0 if `n` is 0, -1 if `n` is negative, 1 if `n` is positive\n */\nexport function sign(n: number): -1|0|1\n{\n    if (n === 0) return 0;\n\n    return n < 0 ? -1 : 1;\n}\n","let nextUid = 0;\n\n/**\n * Gets the next unique identifier\n *\n * @memberof PIXI.utils\n * @function uid\n * @return {number} The next unique identifier to use.\n */\nexport function uid(): number\n{\n    return ++nextUid;\n}\n","import type { Dict } from '../types';\n\n// A map of warning messages already fired\nconst warnings: Dict<boolean> = {};\n\n/**\n * Helper for warning developers about deprecated features & settings.\n * A stack track for warnings is given; useful for tracking-down where\n * deprecated methods/properties/classes are being used within the code.\n *\n * @memberof PIXI.utils\n * @function deprecation\n * @param {string} version - The version where the feature became deprecated\n * @param {string} message - Message should include what is deprecated, where, and the new solution\n * @param {number} [ignoreDepth=3] - The number of steps to ignore at the top of the error stack\n *        this is mostly to ignore internal deprecation calls.\n */\nexport function deprecation(version: string, message: string, ignoreDepth = 3): void\n{\n    // Ignore duplicat\n    if (warnings[message])\n    {\n        return;\n    }\n\n    /* eslint-disable no-console */\n    let stack = new Error().stack;\n\n    // Handle IE < 10 and Safari < 6\n    if (typeof stack === 'undefined')\n    {\n        console.warn('PixiJS Deprecation Warning: ', `${message}\\nDeprecated since v${version}`);\n    }\n    else\n    {\n        // chop off the stack trace which includes PixiJS internal calls\n        stack = stack.split('\\n').splice(ignoreDepth).join('\\n');\n\n        if (console.groupCollapsed)\n        {\n            console.groupCollapsed(\n                '%cPixiJS Deprecation Warning: %c%s',\n                'color:#614108;background:#fffbe6',\n                'font-weight:normal;color:#614108;background:#fffbe6',\n                `${message}\\nDeprecated since v${version}`\n            );\n            console.warn(stack);\n            console.groupEnd();\n        }\n        else\n        {\n            console.warn('PixiJS Deprecation Warning: ', `${message}\\nDeprecated since v${version}`);\n            console.warn(stack);\n        }\n    }\n    /* eslint-enable no-console */\n\n    warnings[message] = true;\n}\n","import type { Program, Texture, BaseTexture } from '@pixi/core';\n\n/**\n * @todo Describe property usage\n *\n * @static\n * @name ProgramCache\n * @memberof PIXI.utils\n * @type {Object}\n */\nexport const ProgramCache: {[key: string]: Program} = {};\n\n/**\n * @todo Describe property usage\n *\n * @static\n * @name TextureCache\n * @memberof PIXI.utils\n * @type {Object}\n */\nexport const TextureCache: {[key: string]: Texture} = Object.create(null);\n\n/**\n * @todo Describe property usage\n *\n * @static\n * @name BaseTextureCache\n * @memberof PIXI.utils\n * @type {Object}\n */\nexport const BaseTextureCache: {[key: string]: BaseTexture} = Object.create(null);\n\n/**\n * Destroys all texture in the cache\n *\n * @memberof PIXI.utils\n * @function destroyTextureCache\n */\nexport function destroyTextureCache(): void\n{\n    let key;\n\n    for (key in TextureCache)\n    {\n        TextureCache[key].destroy();\n    }\n    for (key in BaseTextureCache)\n    {\n        BaseTextureCache[key].destroy();\n    }\n}\n\n/**\n * Removes all textures from cache, but does not destroy them\n *\n * @memberof PIXI.utils\n * @function clearTextureCache\n */\nexport function clearTextureCache(): void\n{\n    let key;\n\n    for (key in TextureCache)\n    {\n        delete TextureCache[key];\n    }\n    for (key in BaseTextureCache)\n    {\n        delete BaseTextureCache[key];\n    }\n}\n","import { settings } from '@pixi/settings';\n\n/**\n * Creates a Canvas element of the given size to be used as a target for rendering to.\n *\n * @class\n * @memberof PIXI.utils\n */\nexport class CanvasRenderTarget\n{\n    public canvas: HTMLCanvasElement;\n\n    public context: CanvasRenderingContext2D;\n\n    public resolution: number;\n\n    /**\n     * @param {number} width - the width for the newly created canvas\n     * @param {number} height - the height for the newly created canvas\n     * @param {number} [resolution=1] - The resolution / device pixel ratio of the canvas\n     */\n    constructor(width: number, height: number, resolution: number)\n    {\n        /**\n         * The Canvas object that belongs to this CanvasRenderTarget.\n         *\n         * @member {HTMLCanvasElement}\n         */\n        this.canvas = document.createElement('canvas');\n\n        /**\n         * A CanvasRenderingContext2D object representing a two-dimensional rendering context.\n         *\n         * @member {CanvasRenderingContext2D}\n         */\n        this.context = this.canvas.getContext('2d');\n\n        this.resolution = resolution || settings.RESOLUTION;\n\n        this.resize(width, height);\n    }\n\n    /**\n     * Clears the canvas that was created by the CanvasRenderTarget class.\n     *\n     * @private\n     */\n    clear(): void\n    {\n        this.context.setTransform(1, 0, 0, 1, 0, 0);\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    /**\n     * Resizes the canvas to the specified width and height.\n     *\n     * @param {number} width - the new width of the canvas\n     * @param {number} height - the new height of the canvas\n     */\n    resize(width: number, height: number): void\n    {\n        this.canvas.width = width * this.resolution;\n        this.canvas.height = height * this.resolution;\n    }\n\n    /**\n     * Destroys this canvas.\n     *\n     */\n    destroy(): void\n    {\n        this.context = null;\n        this.canvas = null;\n    }\n\n    /**\n     * The width of the canvas buffer in pixels.\n     *\n     * @member {number}\n     */\n    get width(): number\n    {\n        return this.canvas.width;\n    }\n\n    set width(val: number)\n    {\n        this.canvas.width = val;\n    }\n\n    /**\n     * The height of the canvas buffer in pixels.\n     *\n     * @member {number}\n     */\n    get height(): number\n    {\n        return this.canvas.height;\n    }\n\n    set height(val: number)\n    {\n        this.canvas.height = val;\n    }\n}\n","interface Inset {\n    top?: number;\n    left?: number;\n    right?: number;\n    bottom?: number;\n}\n\n/**\n * Trim transparent borders from a canvas\n *\n * @memberof PIXI.utils\n * @function trimCanvas\n * @param {HTMLCanvasElement} canvas - the canvas to trim\n * @returns {object} Trim data\n */\nexport function trimCanvas(canvas: HTMLCanvasElement): {width: number; height: number; data?: ImageData}\n{\n    // https://gist.github.com/remy/784508\n\n    let width = canvas.width;\n    let height = canvas.height;\n\n    const context = canvas.getContext('2d');\n    const imageData = context.getImageData(0, 0, width, height);\n    const pixels = imageData.data;\n    const len = pixels.length;\n\n    const bound: Inset = {\n        top: null,\n        left: null,\n        right: null,\n        bottom: null,\n    };\n    let data = null;\n    let i;\n    let x;\n    let y;\n\n    for (i = 0; i < len; i += 4)\n    {\n        if (pixels[i + 3] !== 0)\n        {\n            x = (i / 4) % width;\n            y = ~~((i / 4) / width);\n\n            if (bound.top === null)\n            {\n                bound.top = y;\n            }\n\n            if (bound.left === null)\n            {\n                bound.left = x;\n            }\n            else if (x < bound.left)\n            {\n                bound.left = x;\n            }\n\n            if (bound.right === null)\n            {\n                bound.right = x + 1;\n            }\n            else if (bound.right < x)\n            {\n                bound.right = x + 1;\n            }\n\n            if (bound.bottom === null)\n            {\n                bound.bottom = y;\n            }\n            else if (bound.bottom < y)\n            {\n                bound.bottom = y;\n            }\n        }\n    }\n\n    if (bound.top !== null)\n    {\n        width = bound.right - bound.left;\n        height = bound.bottom - bound.top + 1;\n        data = context.getImageData(bound.left, bound.top, width, height);\n    }\n\n    return {\n        height,\n        width,\n        data,\n    };\n}\n","/**\n * Regexp for data URI.\n * Based on: {@link https://github.com/ragingwind/data-uri-regex}\n *\n * @static\n * @constant {RegExp|string} DATA_URI\n * @memberof PIXI\n * @example data:image/png;base64\n */\nexport const DATA_URI = /^\\s*data:(?:([\\w-]+)\\/([\\w+.-]+))?(?:;charset=([\\w-]+))?(?:;(base64))?,(.*)/i;\n","import { DATA_URI } from '../const';\n\nexport interface DecomposedDataUri {\n    mediaType: string;\n    subType: string;\n    charset: string;\n    encoding: string;\n    data: string;\n}\n\n/**\n * @memberof PIXI.utils\n * @interface DecomposedDataUri\n */\n\n/**\n * type, eg. `image`\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} mediaType\n */\n\n/**\n * Sub type, eg. `png`\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} subType\n */\n\n/**\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} charset\n */\n\n/**\n * Data encoding, eg. `base64`\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} encoding\n */\n\n/**\n * The actual data\n * @memberof PIXI.utils.DecomposedDataUri#\n * @member {string} data\n */\n\n/**\n * Split a data URI into components. Returns undefined if\n * parameter `dataUri` is not a valid data URI.\n *\n * @memberof PIXI.utils\n * @function decomposeDataUri\n * @param {string} dataUri - the data URI to check\n * @return {PIXI.utils.DecomposedDataUri|undefined} The decomposed data uri or undefined\n */\nexport function decomposeDataUri(dataUri: string): DecomposedDataUri\n{\n    const dataUriMatch = DATA_URI.exec(dataUri);\n\n    if (dataUriMatch)\n    {\n        return {\n            mediaType: dataUriMatch[1] ? dataUriMatch[1].toLowerCase() : undefined,\n            subType: dataUriMatch[2] ? dataUriMatch[2].toLowerCase() : undefined,\n            charset: dataUriMatch[3] ? dataUriMatch[3].toLowerCase() : undefined,\n            encoding: dataUriMatch[4] ? dataUriMatch[4].toLowerCase() : undefined,\n            data: dataUriMatch[5],\n        };\n    }\n\n    return undefined;\n}\n","import * as _url from 'url';\n\nlet tempAnchor: HTMLAnchorElement|undefined;\n\n/**\n * Sets the `crossOrigin` property for this resource based on if the url\n * for this resource is cross-origin. If crossOrigin was manually set, this\n * function does nothing.\n * Nipped from the resource loader!\n *\n * @ignore\n * @param {string} url - The url to test.\n * @param {object} [loc=window.location] - The location object to test against.\n * @return {string} The crossOrigin value to use (or empty string for none).\n */\nexport function determineCrossOrigin(url: string, loc: Location = window.location): string\n{\n    // data: and javascript: urls are considered same-origin\n    if (url.indexOf('data:') === 0)\n    {\n        return '';\n    }\n\n    // default is window.location\n    loc = loc || window.location;\n\n    if (!tempAnchor)\n    {\n        tempAnchor = document.createElement('a');\n    }\n\n    // let the browser determine the full href for the url of this resource and then\n    // parse with the node url lib, we can't use the properties of the anchor element\n    // because they don't work in IE9 :(\n    tempAnchor.href = url;\n    const parsedUrl = _url.parse(tempAnchor.href);\n\n    const samePort = (!parsedUrl.port && loc.port === '') || (parsedUrl.port === loc.port);\n\n    // if cross origin\n    if (parsedUrl.hostname !== loc.hostname || !samePort || parsedUrl.protocol !== loc.protocol)\n    {\n        return 'anonymous';\n    }\n\n    return '';\n}\n","import { settings } from '../settings';\n\n/**\n * get the resolution / device pixel ratio of an asset by looking for the prefix\n * used by spritesheets and image urls\n *\n * @memberof PIXI.utils\n * @function getResolutionOfUrl\n * @param {string} url - the image path\n * @param {number} [defaultValue=1] - the defaultValue if no filename prefix is set.\n * @return {number} resolution / device pixel ratio of an asset\n */\nexport function getResolutionOfUrl(url: string, defaultValue?: number): number\n{\n    const resolution = settings.RETINA_PREFIX.exec(url);\n\n    if (resolution)\n    {\n        return parseFloat(resolution[1]);\n    }\n\n    return defaultValue !== undefined ? defaultValue : 1;\n}\n","/**\n * A Runner is a highly performant and simple alternative to signals. Best used in situations\n * where events are dispatched to many objects at high frequency (say every frame!)\n *\n *\n * like a signal..\n * ```\n * import { Runner } from '@pixi/runner';\n *\n * const myObject = {\n *     loaded: new Runner('loaded')\n * }\n *\n * const listener = {\n *     loaded: function(){\n *         // thin\n *     }\n * }\n *\n * myObject.update.add(listener);\n *\n * myObject.loaded.emit();\n * ```\n *\n * Or for handling calling the same function on many items\n * ```\n * import { Runner } from '@pixi/runner';\n *\n * const myGame = {\n *     update: new Runner('update')\n * }\n *\n * const gameObject = {\n *     update: function(time){\n *         // update my gamey state\n *     }\n * }\n *\n * myGame.update.add(gameObject1);\n *\n * myGame.update.emit(time);\n * ```\n * @class\n * @memberof PIXI\n */\nexport class Runner\n{\n    public items: any[];\n    private _name: string;\n    private _aliasCount: number;\n\n    /**\n     *  @param {string} name - the function name that will be executed on the listeners added to this Runner.\n     */\n    constructor(name: string)\n    {\n        this.items = [];\n        this._name = name;\n        this._aliasCount = 0;\n    }\n\n    /**\n     * Dispatch/Broadcast Runner to all listeners added to the queue.\n     * @param {...any} params - optional parameters to pass to each listener\n     * @return {PIXI.Runner}\n     */\n    public emit(a0?: unknown, a1?: unknown, a2?: unknown, a3?: unknown,\n        a4?: unknown, a5?: unknown, a6?: unknown, a7?: unknown): this\n    {\n        if (arguments.length > 8)\n        {\n            throw new Error('max arguments reached');\n        }\n\n        const { name, items } = this;\n\n        this._aliasCount++;\n\n        for (let i = 0, len = items.length; i < len; i++)\n        {\n            items[i][name](a0, a1, a2, a3, a4, a5, a6, a7);\n        }\n\n        if (items === this.items)\n        {\n            this._aliasCount--;\n        }\n\n        return this;\n    }\n\n    private ensureNonAliasedItems(): void\n    {\n        if (this._aliasCount > 0 && this.items.length > 1)\n        {\n            this._aliasCount = 0;\n            this.items = this.items.slice(0);\n        }\n    }\n\n    /**\n     * Add a listener to the Runner\n     *\n     * Runners do not need to have scope or functions passed to them.\n     * All that is required is to pass the listening object and ensure that it has contains a function that has the same name\n     * as the name provided to the Runner when it was created.\n     *\n     * Eg A listener passed to this Runner will require a 'complete' function.\n     *\n     * ```\n     * import { Runner } from '@pixi/runner';\n     *\n     * const complete = new Runner('complete');\n     * ```\n     *\n     * The scope used will be the object itself.\n     *\n     * @param {any} item - The object that will be listening.\n     * @return {PIXI.Runner}\n     */\n    public add(item: unknown): this\n    {\n        if ((item as any)[this._name])\n        {\n            this.ensureNonAliasedItems();\n            this.remove(item);\n            this.items.push(item);\n        }\n\n        return this;\n    }\n\n    /**\n     * Remove a single listener from the dispatch queue.\n     * @param {any} item - The listenr that you would like to remove.\n     * @return {PIXI.Runner}\n     */\n    public remove(item: unknown): this\n    {\n        const index = this.items.indexOf(item);\n\n        if (index !== -1)\n        {\n            this.ensureNonAliasedItems();\n            this.items.splice(index, 1);\n        }\n\n        return this;\n    }\n\n    /**\n     * Check to see if the listener is already in the Runner\n     * @param {any} item - The listener that you would like to check.\n     */\n    public contains(item: unknown): boolean\n    {\n        return this.items.indexOf(item) !== -1;\n    }\n\n    /**\n     * Remove all listeners from the Runner\n     * @return {PIXI.Runner}\n     */\n    public removeAll(): this\n    {\n        this.ensureNonAliasedItems();\n        this.items.length = 0;\n\n        return this;\n    }\n\n    /**\n     * Remove all references, don't use after this.\n     */\n    public destroy(): void\n    {\n        this.removeAll();\n        this.items = null;\n        this._name = null;\n    }\n\n    /**\n     * `true` if there are no this Runner contains no listeners\n     *\n     * @member {boolean}\n     * @readonly\n     */\n    public get empty(): boolean\n    {\n        return this.items.length === 0;\n    }\n\n    /**\n     * The name of the runner.\n     *\n     * @member {string}\n     * @readonly\n     */\n    public get name(): string\n    {\n        return this._name;\n    }\n}\n\nObject.defineProperties(Runner.prototype, {\n    /**\n     * Alias for `emit`\n     * @memberof PIXI.Runner#\n     * @method dispatch\n     * @see PIXI.Runner#emit\n     */\n    dispatch: { value: Runner.prototype.emit },\n    /**\n     * Alias for `emit`\n     * @memberof PIXI.Runner#\n     * @method run\n     * @see PIXI.Runner#emit\n     */\n    run: { value: Runner.prototype.emit },\n});\n","import { TickerCallback } from './Ticker';\n\n/**\n * Internal class for handling the priority sorting of ticker handlers.\n *\n * @private\n * @class\n * @memberof PIXI\n */\nexport class TickerListener<T = any>\n{\n    public priority: number;\n    public next: TickerListener;\n    public previous: TickerListener;\n\n    private fn: TickerCallback<T>;\n    private context: T;\n    private once: boolean;\n    private _destroyed: boolean;\n\n    /**\n     * Constructor\n     * @private\n     * @param {Function} fn - The listener function to be added for one update\n     * @param {*} [context=null] - The listener context\n     * @param {number} [priority=0] - The priority for emitting\n     * @param {boolean} [once=false] - If the handler should fire once\n     */\n    constructor(fn: TickerCallback<T>, context: T = null, priority = 0, once = false)\n    {\n        /**\n         * The handler function to execute.\n         * @private\n         * @member {Function}\n         */\n        this.fn = fn;\n\n        /**\n         * The calling to execute.\n         * @private\n         * @member {*}\n         */\n        this.context = context;\n\n        /**\n         * The current priority.\n         * @private\n         * @member {number}\n         */\n        this.priority = priority;\n\n        /**\n         * If this should only execute once.\n         * @private\n         * @member {boolean}\n         */\n        this.once = once;\n\n        /**\n         * The next item in chain.\n         * @private\n         * @member {TickerListener}\n         */\n        this.next = null;\n\n        /**\n         * The previous item in chain.\n         * @private\n         * @member {TickerListener}\n         */\n        this.previous = null;\n\n        /**\n         * `true` if this listener has been destroyed already.\n         * @member {boolean}\n         * @private\n         */\n        this._destroyed = false;\n    }\n\n    /**\n     * Simple compare function to figure out if a function and context match.\n     * @private\n     * @param {Function} fn - The listener function to be added for one update\n     * @param {any} [context] - The listener context\n     * @return {boolean} `true` if the listener match the arguments\n     */\n    match(fn: TickerCallback<T>, context: any = null): boolean\n    {\n        return this.fn === fn && this.context === context;\n    }\n\n    /**\n     * Emit by calling the current function.\n     * @private\n     * @param {number} deltaTime - time since the last emit.\n     * @return {TickerListener} Next ticker\n     */\n    emit(deltaTime: number): TickerListener\n    {\n        if (this.fn)\n        {\n            if (this.context)\n            {\n                this.fn.call(this.context, deltaTime);\n            }\n            else\n            {\n                (this as TickerListener<any>).fn(deltaTime);\n            }\n        }\n\n        const redirect = this.next;\n\n        if (this.once)\n        {\n            this.destroy(true);\n        }\n\n        // Soft-destroying should remove\n        // the next reference\n        if (this._destroyed)\n        {\n            this.next = null;\n        }\n\n        return redirect;\n    }\n\n    /**\n     * Connect to the list.\n     * @private\n     * @param {TickerListener} previous - Input node, previous listener\n     */\n    connect(previous: TickerListener): void\n    {\n        this.previous = previous;\n        if (previous.next)\n        {\n            previous.next.previous = this;\n        }\n        this.next = previous.next;\n        previous.next = this;\n    }\n\n    /**\n     * Destroy and don't use after this.\n     * @private\n     * @param {boolean} [hard = false] `true` to remove the `next` reference, this\n     *        is considered a hard destroy. Soft destroy maintains the next reference.\n     * @return {TickerListener} The listener to redirect while emitting or removing.\n     */\n    destroy(hard = false): TickerListener\n    {\n        this._destroyed = true;\n        this.fn = null;\n        this.context = null;\n\n        // Disconnect, hook up next and previous\n        if (this.previous)\n        {\n            this.previous.next = this.next;\n        }\n\n        if (this.next)\n        {\n            this.next.previous = this.previous;\n        }\n\n        // Redirect to the next item\n        const redirect = this.next;\n\n        // Remove references\n        this.next = hard ? null : redirect;\n        this.previous = null;\n\n        return redirect;\n    }\n}\n","import { settings } from './settings';\nimport { UPDATE_PRIORITY } from './const';\nimport { TickerListener } from './TickerListener';\n\nexport type TickerCallback<T> = (this: T, dt: number) => any;\n\n/**\n * A Ticker class that runs an update loop that other objects listen to.\n *\n * This class is composed around listeners meant for execution on the next requested animation frame.\n * Animation frames are requested only when necessary, e.g. When the ticker is started and the emitter has listeners.\n *\n * @class\n * @memberof PIXI\n */\nexport class Ticker\n{\n    static _shared: Ticker;\n    static _system: Ticker;\n\n    public autoStart: boolean;\n    public deltaTime: number;\n    public deltaMS: number;\n    public elapsedMS: number;\n    public lastTime: number;\n    public speed: number;\n    public started: boolean;\n\n    private _head: TickerListener;\n    private _requestId: number;\n    private _maxElapsedMS: number;\n    private _minElapsedMS: number;\n    private _protected: boolean;\n    private _lastFrame: number;\n    private _tick: (time: number) => any;\n\n    constructor()\n    {\n        /**\n         * The first listener. All new listeners added are chained on this.\n         * @private\n         * @type {TickerListener}\n         */\n        this._head = new TickerListener(null, null, Infinity);\n\n        /**\n         * Internal current frame request ID\n         * @type {?number}\n         * @private\n         */\n        this._requestId = null;\n\n        /**\n         * Internal value managed by minFPS property setter and getter.\n         * This is the maximum allowed milliseconds between updates.\n         * @type {number}\n         * @private\n         */\n        this._maxElapsedMS = 100;\n\n        /**\n         * Internal value managed by maxFPS property setter and getter.\n         * This is the minimum allowed milliseconds between updates.\n         * @type {number}\n         * @private\n         */\n        this._minElapsedMS = 0;\n\n        /**\n         * Whether or not this ticker should invoke the method\n         * {@link PIXI.Ticker#start} automatically\n         * when a listener is added.\n         *\n         * @member {boolean}\n         * @default false\n         */\n        this.autoStart = false;\n\n        /**\n         * Scalar time value from last frame to this frame.\n         * This value is capped by setting {@link PIXI.Ticker#minFPS}\n         * and is scaled with {@link PIXI.Ticker#speed}.\n         * **Note:** The cap may be exceeded by scaling.\n         *\n         * @member {number}\n         * @default 1\n         */\n        this.deltaTime = 1;\n\n        /**\n         * Scaler time elapsed in milliseconds from last frame to this frame.\n         * This value is capped by setting {@link PIXI.Ticker#minFPS}\n         * and is scaled with {@link PIXI.Ticker#speed}.\n         * **Note:** The cap may be exceeded by scaling.\n         * If the platform supports DOMHighResTimeStamp,\n         * this value will have a precision of 1 µs.\n         * Defaults to target frame time\n         *\n         * @member {number}\n         * @default 16.66\n         */\n        this.deltaMS = 1 / settings.TARGET_FPMS;\n\n        /**\n         * Time elapsed in milliseconds from last frame to this frame.\n         * Opposed to what the scalar {@link PIXI.Ticker#deltaTime}\n         * is based, this value is neither capped nor scaled.\n         * If the platform supports DOMHighResTimeStamp,\n         * this value will have a precision of 1 µs.\n         * Defaults to target frame time\n         *\n         * @member {number}\n         * @default 16.66\n         */\n        this.elapsedMS = 1 / settings.TARGET_FPMS;\n\n        /**\n         * The last time {@link PIXI.Ticker#update} was invoked.\n         * This value is also reset internally outside of invoking\n         * update, but only when a new animation frame is requested.\n         * If the platform supports DOMHighResTimeStamp,\n         * this value will have a precision of 1 µs.\n         *\n         * @member {number}\n         * @default -1\n         */\n        this.lastTime = -1;\n\n        /**\n         * Factor of current {@link PIXI.Ticker#deltaTime}.\n         * @example\n         * // Scales ticker.deltaTime to what would be\n         * // the equivalent of approximately 120 FPS\n         * ticker.speed = 2;\n         *\n         * @member {number}\n         * @default 1\n         */\n        this.speed = 1;\n\n        /**\n         * Whether or not this ticker has been started.\n         * `true` if {@link PIXI.Ticker#start} has been called.\n         * `false` if {@link PIXI.Ticker#stop} has been called.\n         * While `false`, this value may change to `true` in the\n         * event of {@link PIXI.Ticker#autoStart} being `true`\n         * and a listener is added.\n         *\n         * @member {boolean}\n         * @default false\n         */\n        this.started = false;\n\n        /**\n         * If enabled, deleting is disabled.\n         * @member {boolean}\n         * @default false\n         * @private\n         */\n        this._protected = false;\n\n        /**\n         * The last time keyframe was executed.\n         * Maintains a relatively fixed interval with the previous value.\n         * @member {number}\n         * @default -1\n         * @private\n         */\n        this._lastFrame = -1;\n\n        /**\n         * Internal tick method bound to ticker instance.\n         * This is because in early 2015, Function.bind\n         * is still 60% slower in high performance scenarios.\n         * Also separating frame requests from update method\n         * so listeners may be called at any time and with\n         * any animation API, just invoke ticker.update(time).\n         *\n         * @private\n         * @param {number} time - Time since last tick.\n         */\n        this._tick = (time: number): void =>\n        {\n            this._requestId = null;\n\n            if (this.started)\n            {\n                // Invoke listeners now\n                this.update(time);\n                // Listener side effects may have modified ticker state.\n                if (this.started && this._requestId === null && this._head.next)\n                {\n                    this._requestId = requestAnimationFrame(this._tick);\n                }\n            }\n        };\n    }\n\n    /**\n     * Conditionally requests a new animation frame.\n     * If a frame has not already been requested, and if the internal\n     * emitter has listeners, a new frame is requested.\n     *\n     * @private\n     */\n    private _requestIfNeeded(): void\n    {\n        if (this._requestId === null && this._head.next)\n        {\n            // ensure callbacks get correct delta\n            this.lastTime = performance.now();\n            this._lastFrame = this.lastTime;\n            this._requestId = requestAnimationFrame(this._tick);\n        }\n    }\n\n    /**\n     * Conditionally cancels a pending animation frame.\n     *\n     * @private\n     */\n    private _cancelIfNeeded(): void\n    {\n        if (this._requestId !== null)\n        {\n            cancelAnimationFrame(this._requestId);\n            this._requestId = null;\n        }\n    }\n\n    /**\n     * Conditionally requests a new animation frame.\n     * If the ticker has been started it checks if a frame has not already\n     * been requested, and if the internal emitter has listeners. If these\n     * conditions are met, a new frame is requested. If the ticker has not\n     * been started, but autoStart is `true`, then the ticker starts now,\n     * and continues with the previous conditions to request a new frame.\n     *\n     * @private\n     */\n    private _startIfPossible(): void\n    {\n        if (this.started)\n        {\n            this._requestIfNeeded();\n        }\n        else if (this.autoStart)\n        {\n            this.start();\n        }\n    }\n\n    /**\n     * Register a handler for tick events. Calls continuously unless\n     * it is removed or the ticker is stopped.\n     *\n     * @param {Function} fn - The listener function to be added for updates\n     * @param {*} [context] - The listener context\n     * @param {number} [priority=PIXI.UPDATE_PRIORITY.NORMAL] - The priority for emitting\n     * @returns {PIXI.Ticker} This instance of a ticker\n     */\n    add<T = any>(fn: TickerCallback<T>, context: T, priority = UPDATE_PRIORITY.NORMAL): this\n    {\n        return this._addListener(new TickerListener(fn, context, priority));\n    }\n\n    /**\n     * Add a handler for the tick event which is only execute once.\n     *\n     * @param {Function} fn - The listener function to be added for one update\n     * @param {*} [context] - The listener context\n     * @param {number} [priority=PIXI.UPDATE_PRIORITY.NORMAL] - The priority for emitting\n     * @returns {PIXI.Ticker} This instance of a ticker\n     */\n    addOnce<T = any>(fn: TickerCallback<T>, context: T, priority = UPDATE_PRIORITY.NORMAL): this\n    {\n        return this._addListener(new TickerListener(fn, context, priority, true));\n    }\n\n    /**\n     * Internally adds the event handler so that it can be sorted by priority.\n     * Priority allows certain handler (user, AnimatedSprite, Interaction) to be run\n     * before the rendering.\n     *\n     * @private\n     * @param {TickerListener} listener - Current listener being added.\n     * @returns {PIXI.Ticker} This instance of a ticker\n     */\n    private _addListener(listener: TickerListener): this\n    {\n        // For attaching to head\n        let current = this._head.next;\n        let previous = this._head;\n\n        // Add the first item\n        if (!current)\n        {\n            listener.connect(previous);\n        }\n        else\n        {\n            // Go from highest to lowest priority\n            while (current)\n            {\n                if (listener.priority > current.priority)\n                {\n                    listener.connect(previous);\n                    break;\n                }\n                previous = current;\n                current = current.next;\n            }\n\n            // Not yet connected\n            if (!listener.previous)\n            {\n                listener.connect(previous);\n            }\n        }\n\n        this._startIfPossible();\n\n        return this;\n    }\n\n    /**\n     * Removes any handlers matching the function and context parameters.\n     * If no handlers are left after removing, then it cancels the animation frame.\n     *\n     * @param {Function} fn - The listener function to be removed\n     * @param {*} [context] - The listener context to be removed\n     * @returns {PIXI.Ticker} This instance of a ticker\n     */\n    remove<T = any>(fn: TickerCallback<T>, context: T): this\n    {\n        let listener = this._head.next;\n\n        while (listener)\n        {\n            // We found a match, lets remove it\n            // no break to delete all possible matches\n            // incase a listener was added 2+ times\n            if (listener.match(fn, context))\n            {\n                listener = listener.destroy();\n            }\n            else\n            {\n                listener = listener.next;\n            }\n        }\n\n        if (!this._head.next)\n        {\n            this._cancelIfNeeded();\n        }\n\n        return this;\n    }\n\n    /**\n     * The number of listeners on this ticker, calculated by walking through linked list\n     *\n     * @readonly\n     * @member {number}\n     */\n    get count(): number\n    {\n        if (!this._head)\n        {\n            return 0;\n        }\n\n        let count = 0;\n        let current = this._head;\n\n        while ((current = current.next))\n        {\n            count++;\n        }\n\n        return count;\n    }\n\n    /**\n     * Starts the ticker. If the ticker has listeners\n     * a new animation frame is requested at this point.\n     */\n    start(): void\n    {\n        if (!this.started)\n        {\n            this.started = true;\n            this._requestIfNeeded();\n        }\n    }\n\n    /**\n     * Stops the ticker. If the ticker has requested\n     * an animation frame it is canceled at this point.\n     */\n    stop(): void\n    {\n        if (this.started)\n        {\n            this.started = false;\n            this._cancelIfNeeded();\n        }\n    }\n\n    /**\n     * Destroy the ticker and don't use after this. Calling\n     * this method removes all references to internal events.\n     */\n    destroy(): void\n    {\n        if (!this._protected)\n        {\n            this.stop();\n\n            let listener = this._head.next;\n\n            while (listener)\n            {\n                listener = listener.destroy(true);\n            }\n\n            this._head.destroy();\n            this._head = null;\n        }\n    }\n\n    /**\n     * Triggers an update. An update entails setting the\n     * current {@link PIXI.Ticker#elapsedMS},\n     * the current {@link PIXI.Ticker#deltaTime},\n     * invoking all listeners with current deltaTime,\n     * and then finally setting {@link PIXI.Ticker#lastTime}\n     * with the value of currentTime that was provided.\n     * This method will be called automatically by animation\n     * frame callbacks if the ticker instance has been started\n     * and listeners are added.\n     *\n     * @param {number} [currentTime=performance.now()] - the current time of execution\n     */\n    update(currentTime = performance.now()): void\n    {\n        let elapsedMS;\n\n        // If the difference in time is zero or negative, we ignore most of the work done here.\n        // If there is no valid difference, then should be no reason to let anyone know about it.\n        // A zero delta, is exactly that, nothing should update.\n        //\n        // The difference in time can be negative, and no this does not mean time traveling.\n        // This can be the result of a race condition between when an animation frame is requested\n        // on the current JavaScript engine event loop, and when the ticker's start method is invoked\n        // (which invokes the internal _requestIfNeeded method). If a frame is requested before\n        // _requestIfNeeded is invoked, then the callback for the animation frame the ticker requests,\n        // can receive a time argument that can be less than the lastTime value that was set within\n        // _requestIfNeeded. This difference is in microseconds, but this is enough to cause problems.\n        //\n        // This check covers this browser engine timing issue, as well as if consumers pass an invalid\n        // currentTime value. This may happen if consumers opt-out of the autoStart, and update themselves.\n\n        if (currentTime > this.lastTime)\n        {\n            // Save uncapped elapsedMS for measurement\n            elapsedMS = this.elapsedMS = currentTime - this.lastTime;\n\n            // cap the milliseconds elapsed used for deltaTime\n            if (elapsedMS > this._maxElapsedMS)\n            {\n                elapsedMS = this._maxElapsedMS;\n            }\n\n            elapsedMS *= this.speed;\n\n            // If not enough time has passed, exit the function.\n            // Get ready for next frame by setting _lastFrame, but based on _minElapsedMS\n            // adjustment to ensure a relatively stable interval.\n            if (this._minElapsedMS)\n            {\n                const delta = currentTime - this._lastFrame | 0;\n\n                if (delta < this._minElapsedMS)\n                {\n                    return;\n                }\n\n                this._lastFrame = currentTime - (delta % this._minElapsedMS);\n            }\n\n            this.deltaMS = elapsedMS;\n            this.deltaTime = this.deltaMS * settings.TARGET_FPMS;\n\n            // Cache a local reference, in-case ticker is destroyed\n            // during the emit, we can still check for head.next\n            const head = this._head;\n\n            // Invoke listeners added to internal emitter\n            let listener = head.next;\n\n            while (listener)\n            {\n                listener = listener.emit(this.deltaTime);\n            }\n\n            if (!head.next)\n            {\n                this._cancelIfNeeded();\n            }\n        }\n        else\n        {\n            this.deltaTime = this.deltaMS = this.elapsedMS = 0;\n        }\n\n        this.lastTime = currentTime;\n    }\n\n    /**\n     * The frames per second at which this ticker is running.\n     * The default is approximately 60 in most modern browsers.\n     * **Note:** This does not factor in the value of\n     * {@link PIXI.Ticker#speed}, which is specific\n     * to scaling {@link PIXI.Ticker#deltaTime}.\n     *\n     * @member {number}\n     * @readonly\n     */\n    get FPS(): number\n    {\n        return 1000 / this.elapsedMS;\n    }\n\n    /**\n     * Manages the maximum amount of milliseconds allowed to\n     * elapse between invoking {@link PIXI.Ticker#update}.\n     * This value is used to cap {@link PIXI.Ticker#deltaTime},\n     * but does not effect the measured value of {@link PIXI.Ticker#FPS}.\n     * When setting this property it is clamped to a value between\n     * `0` and `PIXI.settings.TARGET_FPMS * 1000`.\n     *\n     * @member {number}\n     * @default 10\n     */\n    get minFPS(): number\n    {\n        return 1000 / this._maxElapsedMS;\n    }\n\n    set minFPS(fps: number)\n    {\n        // Minimum must be below the maxFPS\n        const minFPS = Math.min(this.maxFPS, fps);\n\n        // Must be at least 0, but below 1 / settings.TARGET_FPMS\n        const minFPMS = Math.min(Math.max(0, minFPS) / 1000, settings.TARGET_FPMS);\n\n        this._maxElapsedMS = 1 / minFPMS;\n    }\n\n    /**\n     * Manages the minimum amount of milliseconds required to\n     * elapse between invoking {@link PIXI.Ticker#update}.\n     * This will effect the measured value of {@link PIXI.Ticker#FPS}.\n     * If it is set to `0`, then there is no limit; PixiJS will render as many frames as it can.\n     * Otherwise it will be at least `minFPS`\n     *\n     * @member {number}\n     * @default 0\n     */\n    get maxFPS(): number\n    {\n        if (this._minElapsedMS)\n        {\n            return Math.round(1000 / this._minElapsedMS);\n        }\n\n        return 0;\n    }\n\n    set maxFPS(fps: number)\n    {\n        if (fps === 0)\n        {\n            this._minElapsedMS = 0;\n        }\n        else\n        {\n            // Max must be at least the minFPS\n            const maxFPS = Math.max(this.minFPS, fps);\n\n            this._minElapsedMS = 1 / (maxFPS / 1000);\n        }\n    }\n\n    /**\n     * The shared ticker instance used by {@link PIXI.AnimatedSprite} and by\n     * {@link PIXI.VideoResource} to update animation frames / video textures.\n     *\n     * It may also be used by {@link PIXI.Application} if created with the `sharedTicker` option property set to true.\n     *\n     * The property {@link PIXI.Ticker#autoStart} is set to `true` for this instance.\n     * Please follow the examples for usage, including how to opt-out of auto-starting the shared ticker.\n     *\n     * @example\n     * let ticker = PIXI.Ticker.shared;\n     * // Set this to prevent starting this ticker when listeners are added.\n     * // By default this is true only for the PIXI.Ticker.shared instance.\n     * ticker.autoStart = false;\n     * // FYI, call this to ensure the ticker is stopped. It should be stopped\n     * // if you have not attempted to render anything yet.\n     * ticker.stop();\n     * // Call this when you are ready for a running shared ticker.\n     * ticker.start();\n     *\n     * @example\n     * // You may use the shared ticker to render...\n     * let renderer = PIXI.autoDetectRenderer();\n     * let stage = new PIXI.Container();\n     * document.body.appendChild(renderer.view);\n     * ticker.add(function (time) {\n     *     renderer.render(stage);\n     * });\n     *\n     * @example\n     * // Or you can just update it manually.\n     * ticker.autoStart = false;\n     * ticker.stop();\n     * function animate(time) {\n     *     ticker.update(time);\n     *     renderer.render(stage);\n     *     requestAnimationFrame(animate);\n     * }\n     * animate(performance.now());\n     *\n     * @member {PIXI.Ticker}\n     * @static\n     */\n    static get shared(): Ticker\n    {\n        if (!Ticker._shared)\n        {\n            const shared = Ticker._shared = new Ticker();\n\n            shared.autoStart = true;\n            shared._protected = true;\n        }\n\n        return Ticker._shared;\n    }\n\n    /**\n     * The system ticker instance used by {@link PIXI.InteractionManager} and by\n     * {@link PIXI.BasePrepare} for core timing functionality that shouldn't usually need to be paused,\n     * unlike the `shared` ticker which drives visual animations and rendering which may want to be paused.\n     *\n     * The property {@link PIXI.Ticker#autoStart} is set to `true` for this instance.\n     *\n     * @member {PIXI.Ticker}\n     * @static\n     */\n    static get system(): Ticker\n    {\n        if (!Ticker._system)\n        {\n            const system = Ticker._system = new Ticker();\n\n            system.autoStart = true;\n            system._protected = true;\n        }\n\n        return Ticker._system;\n    }\n}\n","import { UPDATE_PRIORITY } from './const';\nimport { Ticker } from './Ticker';\n\nimport type { IApplicationOptions } from '@pixi/app';\n\n/**\n * Middleware for for Application Ticker.\n *\n * @example\n * import {TickerPlugin} from '@pixi/ticker';\n * import {Application} from '@pixi/app';\n * Application.registerPlugin(TickerPlugin);\n *\n * @class\n * @memberof PIXI\n */\nexport class TickerPlugin\n{\n    static start: () => void;\n    static stop: () => void;\n    static _ticker: Ticker;\n    static ticker: Ticker;\n\n    /**\n     * Initialize the plugin with scope of application instance\n     *\n     * @static\n     * @private\n     * @param {object} [options] - See application options\n     */\n    static init(options?: IApplicationOptions): void\n    {\n        // Set default\n        options = Object.assign({\n            autoStart: true,\n            sharedTicker: false,\n        }, options);\n\n        // Create ticker setter\n        Object.defineProperty(this, 'ticker',\n            {\n                set(ticker)\n                {\n                    if (this._ticker)\n                    {\n                        this._ticker.remove(this.render, this);\n                    }\n                    this._ticker = ticker;\n                    if (ticker)\n                    {\n                        ticker.add(this.render, this, UPDATE_PRIORITY.LOW);\n                    }\n                },\n                get()\n                {\n                    return this._ticker;\n                },\n            });\n\n        /**\n         * Convenience method for stopping the render.\n         *\n         * @method PIXI.Application#stop\n         */\n        this.stop = (): void =>\n        {\n            this._ticker.stop();\n        };\n\n        /**\n         * Convenience method for starting the render.\n         *\n         * @method PIXI.Application#start\n         */\n        this.start = (): void =>\n        {\n            this._ticker.start();\n        };\n\n        /**\n         * Internal reference to the ticker.\n         *\n         * @type {PIXI.Ticker}\n         * @name _ticker\n         * @memberof PIXI.Application#\n         * @private\n         */\n        this._ticker = null;\n\n        /**\n         * Ticker for doing render updates.\n         *\n         * @type {PIXI.Ticker}\n         * @name ticker\n         * @memberof PIXI.Application#\n         * @default PIXI.Ticker.shared\n         */\n        this.ticker = options.sharedTicker ? Ticker.shared : new Ticker();\n\n        // Start the rendering\n        if (options.autoStart)\n        {\n            this.start();\n        }\n    }\n\n    /**\n     * Clean up the ticker, scoped to application.\n     *\n     * @static\n     * @private\n     */\n    static destroy(): void\n    {\n        if (this._ticker)\n        {\n            const oldTicker = this._ticker;\n\n            this.ticker = null;\n            oldTicker.destroy();\n        }\n    }\n}\n","import { SHAPES } from '../const';\n\n/**\n * Size object, contains width and height\n *\n * @memberof PIXI\n * @typedef {object} ISize\n * @property {number} width - Width component\n * @property {number} height - Height component\n */\n\n/**\n * Rectangle object is an area defined by its position, as indicated by its top-left corner\n * point (x, y) and by its width and its height.\n *\n * @class\n * @memberof PIXI\n */\nexport class Rectangle\n{\n    public x: number;\n    public y: number;\n    public width: number;\n    public height: number;\n    public readonly type: SHAPES.RECT;\n\n    /**\n     * @param {number} [x=0] - The X coordinate of the upper-left corner of the rectangle\n     * @param {number} [y=0] - The Y coordinate of the upper-left corner of the rectangle\n     * @param {number} [width=0] - The overall width of this rectangle\n     * @param {number} [height=0] - The overall height of this rectangle\n     */\n    constructor(x = 0, y = 0, width = 0, height = 0)\n    {\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.x = Number(x);\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.y = Number(y);\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.width = Number(width);\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.height = Number(height);\n\n        /**\n         * The type of the object, mainly used to avoid `instanceof` checks\n         *\n         * @member {number}\n         * @readOnly\n         * @default PIXI.SHAPES.RECT\n         * @see PIXI.SHAPES\n         */\n        this.type = SHAPES.RECT;\n    }\n\n    /**\n     * returns the left edge of the rectangle\n     *\n     * @member {number}\n     */\n    get left(): number\n    {\n        return this.x;\n    }\n\n    /**\n     * returns the right edge of the rectangle\n     *\n     * @member {number}\n     */\n    get right(): number\n    {\n        return this.x + this.width;\n    }\n\n    /**\n     * returns the top edge of the rectangle\n     *\n     * @member {number}\n     */\n    get top(): number\n    {\n        return this.y;\n    }\n\n    /**\n     * returns the bottom edge of the rectangle\n     *\n     * @member {number}\n     */\n    get bottom(): number\n    {\n        return this.y + this.height;\n    }\n\n    /**\n     * A constant empty rectangle.\n     *\n     * @static\n     * @constant\n     * @member {PIXI.Rectangle}\n     * @return {PIXI.Rectangle} An empty rectangle\n     */\n    static get EMPTY(): Rectangle\n    {\n        return new Rectangle(0, 0, 0, 0);\n    }\n\n    /**\n     * Creates a clone of this Rectangle\n     *\n     * @return {PIXI.Rectangle} a copy of the rectangle\n     */\n    clone(): Rectangle\n    {\n        return new Rectangle(this.x, this.y, this.width, this.height);\n    }\n\n    /**\n     * Copies another rectangle to this one.\n     *\n     * @param {PIXI.Rectangle} rectangle - The rectangle to copy from.\n     * @return {PIXI.Rectangle} Returns itself.\n     */\n    copyFrom(rectangle: Rectangle): Rectangle\n    {\n        this.x = rectangle.x;\n        this.y = rectangle.y;\n        this.width = rectangle.width;\n        this.height = rectangle.height;\n\n        return this;\n    }\n\n    /**\n     * Copies this rectangle to another one.\n     *\n     * @param {PIXI.Rectangle} rectangle - The rectangle to copy to.\n     * @return {PIXI.Rectangle} Returns given parameter.\n     */\n    copyTo(rectangle: Rectangle): Rectangle\n    {\n        rectangle.x = this.x;\n        rectangle.y = this.y;\n        rectangle.width = this.width;\n        rectangle.height = this.height;\n\n        return rectangle;\n    }\n\n    /**\n     * Checks whether the x and y coordinates given are contained within this Rectangle\n     *\n     * @param {number} x - The X coordinate of the point to test\n     * @param {number} y - The Y coordinate of the point to test\n     * @return {boolean} Whether the x/y coordinates are within this Rectangle\n     */\n    contains(x: number, y: number): boolean\n    {\n        if (this.width <= 0 || this.height <= 0)\n        {\n            return false;\n        }\n\n        if (x >= this.x && x < this.x + this.width)\n        {\n            if (y >= this.y && y < this.y + this.height)\n            {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Pads the rectangle making it grow in all directions.\n     * If paddingY is omitted, both paddingX and paddingY will be set to paddingX.\n     *\n     * @param {number} [paddingX=0] - The horizontal padding amount.\n     * @param {number} [paddingY=0] - The vertical padding amount.\n     * @return {PIXI.Rectangle} Returns itself.\n     */\n    pad(paddingX = 0, paddingY = paddingX): this\n    {\n        this.x -= paddingX;\n        this.y -= paddingY;\n\n        this.width += paddingX * 2;\n        this.height += paddingY * 2;\n\n        return this;\n    }\n\n    /**\n     * Fits this rectangle around the passed one.\n     *\n     * @param {PIXI.Rectangle} rectangle - The rectangle to fit.\n     * @return {PIXI.Rectangle} Returns itself.\n     */\n    fit(rectangle: Rectangle): this\n    {\n        const x1 = Math.max(this.x, rectangle.x);\n        const x2 = Math.min(this.x + this.width, rectangle.x + rectangle.width);\n        const y1 = Math.max(this.y, rectangle.y);\n        const y2 = Math.min(this.y + this.height, rectangle.y + rectangle.height);\n\n        this.x = x1;\n        this.width = Math.max(x2 - x1, 0);\n        this.y = y1;\n        this.height = Math.max(y2 - y1, 0);\n\n        return this;\n    }\n\n    /**\n     * Enlarges rectangle that way its corners lie on grid\n     *\n     * @param {number} [resolution=1] resolution\n     * @param {number} [eps=0.001] precision\n     * @return {PIXI.Rectangle} Returns itself.\n     */\n    ceil(resolution = 1, eps = 0.001): this\n    {\n        const x2 = Math.ceil((this.x + this.width - eps) * resolution) / resolution;\n        const y2 = Math.ceil((this.y + this.height - eps) * resolution) / resolution;\n\n        this.x = Math.floor((this.x + eps) * resolution) / resolution;\n        this.y = Math.floor((this.y + eps) * resolution) / resolution;\n\n        this.width = x2 - this.x;\n        this.height = y2 - this.y;\n\n        return this;\n    }\n\n    /**\n     * Enlarges this rectangle to include the passed rectangle.\n     *\n     * @param {PIXI.Rectangle} rectangle - The rectangle to include.\n     * @return {PIXI.Rectangle} Returns itself.\n     */\n    enlarge(rectangle: Rectangle): this\n    {\n        const x1 = Math.min(this.x, rectangle.x);\n        const x2 = Math.max(this.x + this.width, rectangle.x + rectangle.width);\n        const y1 = Math.min(this.y, rectangle.y);\n        const y2 = Math.max(this.y + this.height, rectangle.y + rectangle.height);\n\n        this.x = x1;\n        this.width = x2 - x1;\n        this.y = y1;\n        this.height = y2 - y1;\n\n        return this;\n    }\n}\n","import { SHAPES } from './../const';\nimport { Rectangle } from './Rectangle';\n\n/**\n * The Circle object is used to help draw graphics and can also be used to specify a hit area for displayObjects.\n *\n * @class\n * @memberof PIXI\n */\nexport class Circle\n{\n    public x: number;\n    public y: number;\n    public radius: number;\n    public readonly type: SHAPES.CIRC;\n\n    /**\n     * @param {number} [x=0] - The X coordinate of the center of this circle\n     * @param {number} [y=0] - The Y coordinate of the center of this circle\n     * @param {number} [radius=0] - The radius of the circle\n     */\n    constructor(x = 0, y = 0, radius = 0)\n    {\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.x = x;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.y = y;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.radius = radius;\n\n        /**\n         * The type of the object, mainly used to avoid `instanceof` checks\n         *\n         * @member {number}\n         * @readOnly\n         * @default PIXI.SHAPES.CIRC\n         * @see PIXI.SHAPES\n         */\n        this.type = SHAPES.CIRC;\n    }\n\n    /**\n     * Creates a clone of this Circle instance\n     *\n     * @return {PIXI.Circle} a copy of the Circle\n     */\n    clone(): Circle\n    {\n        return new Circle(this.x, this.y, this.radius);\n    }\n\n    /**\n     * Checks whether the x and y coordinates given are contained within this circle\n     *\n     * @param {number} x - The X coordinate of the point to test\n     * @param {number} y - The Y coordinate of the point to test\n     * @return {boolean} Whether the x/y coordinates are within this Circle\n     */\n    contains(x: number, y: number): boolean\n    {\n        if (this.radius <= 0)\n        {\n            return false;\n        }\n\n        const r2 = this.radius * this.radius;\n        let dx = (this.x - x);\n        let dy = (this.y - y);\n\n        dx *= dx;\n        dy *= dy;\n\n        return (dx + dy <= r2);\n    }\n\n    /**\n    * Returns the framing rectangle of the circle as a Rectangle object\n    *\n    * @return {PIXI.Rectangle} the framing rectangle\n    */\n    getBounds(): Rectangle\n    {\n        return new Rectangle(this.x - this.radius, this.y - this.radius, this.radius * 2, this.radius * 2);\n    }\n}\n","import { Rectangle } from './Rectangle';\nimport { SHAPES } from '../const';\n\n/**\n * The Ellipse object is used to help draw graphics and can also be used to specify a hit area for displayObjects.\n *\n * @class\n * @memberof PIXI\n */\nexport class Ellipse\n{\n    public x: number;\n    public y: number;\n    public width: number;\n    public height: number;\n    public readonly type: SHAPES.ELIP;\n\n    /**\n     * @param {number} [x=0] - The X coordinate of the center of this ellipse\n     * @param {number} [y=0] - The Y coordinate of the center of this ellipse\n     * @param {number} [halfWidth=0] - The half width of this ellipse\n     * @param {number} [halfHeight=0] - The half height of this ellipse\n     */\n    constructor(x = 0, y = 0, halfWidth = 0, halfHeight = 0)\n    {\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.x = x;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.y = y;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.width = halfWidth;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.height = halfHeight;\n\n        /**\n         * The type of the object, mainly used to avoid `instanceof` checks\n         *\n         * @member {number}\n         * @readOnly\n         * @default PIXI.SHAPES.ELIP\n         * @see PIXI.SHAPES\n         */\n        this.type = SHAPES.ELIP;\n    }\n\n    /**\n     * Creates a clone of this Ellipse instance\n     *\n     * @return {PIXI.Ellipse} a copy of the ellipse\n     */\n    clone(): Ellipse\n    {\n        return new Ellipse(this.x, this.y, this.width, this.height);\n    }\n\n    /**\n     * Checks whether the x and y coordinates given are contained within this ellipse\n     *\n     * @param {number} x - The X coordinate of the point to test\n     * @param {number} y - The Y coordinate of the point to test\n     * @return {boolean} Whether the x/y coords are within this ellipse\n     */\n    contains(x: number, y: number): boolean\n    {\n        if (this.width <= 0 || this.height <= 0)\n        {\n            return false;\n        }\n\n        // normalize the coords to an ellipse with center 0,0\n        let normx = ((x - this.x) / this.width);\n        let normy = ((y - this.y) / this.height);\n\n        normx *= normx;\n        normy *= normy;\n\n        return (normx + normy <= 1);\n    }\n\n    /**\n     * Returns the framing rectangle of the ellipse as a Rectangle object\n     *\n     * @return {PIXI.Rectangle} the framing rectangle\n     */\n    getBounds(): Rectangle\n    {\n        return new Rectangle(this.x - this.width, this.y - this.height, this.width, this.height);\n    }\n}\n","import { SHAPES } from '../const';\nimport type { IPoint } from '../IPoint';\n\n/**\n * A class to define a shape via user defined co-orinates.\n *\n * @class\n * @memberof PIXI\n */\nexport class Polygon\n{\n    public points: number[];\n    public closeStroke: boolean;\n    public readonly type: SHAPES.POLY;\n\n    constructor(points: IPoint[]|number[]);\n    constructor(...points: IPoint[]|number[]);\n    /**\n     * @param {PIXI.IPoint[]|number[]} points - This can be an array of Points\n     *  that form the polygon, a flat array of numbers that will be interpreted as [x,y, x,y, ...], or\n     *  the arguments passed can be all the points of the polygon e.g.\n     *  `new PIXI.Polygon(new PIXI.Point(), new PIXI.Point(), ...)`, or the arguments passed can be flat\n     *  x,y values e.g. `new Polygon(x,y, x,y, x,y, ...)` where `x` and `y` are Numbers.\n     */\n    constructor(...points: any[])\n    {\n        let flat: IPoint[]|number[] = Array.isArray(points[0]) ? points[0] : points;\n\n        // if this is an array of points, convert it to a flat array of numbers\n        if (typeof flat[0] !== 'number')\n        {\n            const p: number[] = [];\n\n            for (let i = 0, il = flat.length; i < il; i++)\n            {\n                p.push((flat[i] as IPoint).x, (flat[i] as IPoint).y);\n            }\n\n            flat = p;\n        }\n\n        /**\n         * An array of the points of this polygon\n         *\n         * @member {number[]}\n         */\n        this.points = flat as number[];\n\n        /**\n         * The type of the object, mainly used to avoid `instanceof` checks\n         *\n         * @member {number}\n         * @readOnly\n         * @default PIXI.SHAPES.POLY\n         * @see PIXI.SHAPES\n         */\n        this.type = SHAPES.POLY;\n\n        /**\n         * `false` after moveTo, `true` after `closePath`. In all other cases it is `true`.\n         * @member {boolean}\n         * @default true\n         */\n        this.closeStroke = true;\n    }\n\n    /**\n     * Creates a clone of this polygon\n     *\n     * @return {PIXI.Polygon} a copy of the polygon\n     */\n    clone(): Polygon\n    {\n        const points = this.points.slice();\n        const polygon = new Polygon(points);\n\n        polygon.closeStroke = this.closeStroke;\n\n        return polygon;\n    }\n\n    /**\n     * Checks whether the x and y coordinates passed to this function are contained within this polygon\n     *\n     * @param {number} x - The X coordinate of the point to test\n     * @param {number} y - The Y coordinate of the point to test\n     * @return {boolean} Whether the x/y coordinates are within this polygon\n     */\n    contains(x: number, y: number): boolean\n    {\n        let inside = false;\n\n        // use some raycasting to test hits\n        // https://github.com/substack/point-in-polygon/blob/master/index.js\n        const length = this.points.length / 2;\n\n        for (let i = 0, j = length - 1; i < length; j = i++)\n        {\n            const xi = this.points[i * 2];\n            const yi = this.points[(i * 2) + 1];\n            const xj = this.points[j * 2];\n            const yj = this.points[(j * 2) + 1];\n            const intersect = ((yi > y) !== (yj > y)) && (x < ((xj - xi) * ((y - yi) / (yj - yi))) + xi);\n\n            if (intersect)\n            {\n                inside = !inside;\n            }\n        }\n\n        return inside;\n    }\n}\n","import { SHAPES } from '../const';\n\n/**\n * The Rounded Rectangle object is an area that has nice rounded corners, as indicated by its\n * top-left corner point (x, y) and by its width and its height and its radius.\n *\n * @class\n * @memberof PIXI\n */\nexport class RoundedRectangle\n{\n    public x: number;\n    public y: number;\n    public width: number;\n    public height: number;\n    public radius: number;\n    public readonly type: SHAPES.RREC;\n\n    /**\n     * @param {number} [x=0] - The X coordinate of the upper-left corner of the rounded rectangle\n     * @param {number} [y=0] - The Y coordinate of the upper-left corner of the rounded rectangle\n     * @param {number} [width=0] - The overall width of this rounded rectangle\n     * @param {number} [height=0] - The overall height of this rounded rectangle\n     * @param {number} [radius=20] - Controls the radius of the rounded corners\n     */\n    constructor(x = 0, y = 0, width = 0, height = 0, radius = 20)\n    {\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.x = x;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.y = y;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.width = width;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.height = height;\n\n        /**\n         * @member {number}\n         * @default 20\n         */\n        this.radius = radius;\n\n        /**\n         * The type of the object, mainly used to avoid `instanceof` checks\n         *\n         * @member {number}\n         * @readonly\n         * @default PIXI.SHAPES.RREC\n         * @see PIXI.SHAPES\n         */\n        this.type = SHAPES.RREC;\n    }\n\n    /**\n     * Creates a clone of this Rounded Rectangle\n     *\n     * @return {PIXI.RoundedRectangle} a copy of the rounded rectangle\n     */\n    clone(): RoundedRectangle\n    {\n        return new RoundedRectangle(this.x, this.y, this.width, this.height, this.radius);\n    }\n\n    /**\n     * Checks whether the x and y coordinates given are contained within this Rounded Rectangle\n     *\n     * @param {number} x - The X coordinate of the point to test\n     * @param {number} y - The Y coordinate of the point to test\n     * @return {boolean} Whether the x/y coordinates are within this Rounded Rectangle\n     */\n    contains(x: number, y: number): boolean\n    {\n        if (this.width <= 0 || this.height <= 0)\n        {\n            return false;\n        }\n        if (x >= this.x && x <= this.x + this.width)\n        {\n            if (y >= this.y && y <= this.y + this.height)\n            {\n                if ((y >= this.y + this.radius && y <= this.y + this.height - this.radius)\n                || (x >= this.x + this.radius && x <= this.x + this.width - this.radius))\n                {\n                    return true;\n                }\n                let dx = x - (this.x + this.radius);\n                let dy = y - (this.y + this.radius);\n                const radius2 = this.radius * this.radius;\n\n                if ((dx * dx) + (dy * dy) <= radius2)\n                {\n                    return true;\n                }\n                dx = x - (this.x + this.width - this.radius);\n                if ((dx * dx) + (dy * dy) <= radius2)\n                {\n                    return true;\n                }\n                dy = y - (this.y + this.height - this.radius);\n                if ((dx * dx) + (dy * dy) <= radius2)\n                {\n                    return true;\n                }\n                dx = x - (this.x + this.radius);\n                if ((dx * dx) + (dy * dy) <= radius2)\n                {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n}\n","export interface IPointData\n{\n    x: number;\n    y: number;\n}\n\n/**\n * Common interface for points. Both Point and ObservablePoint implement it\n * @memberof PIXI\n * @interface IPointData\n */\n\n/**\n * X coord\n * @memberof PIXI.IPointData#\n * @member {number} x\n */\n\n/**\n * Y coord\n * @memberof PIXI.IPointData#\n * @member {number} y\n */\n","import { IPointData } from './IPointData';\n\nexport interface IPoint extends IPointData\n{\n    copyFrom(p: IPointData): this;\n    copyTo<T extends IPoint>(p: T): T;\n    equals(p: IPointData): boolean;\n    set(x?: number, y?: number): void;\n}\n/**\n * Common interface for points. Both Point and ObservablePoint implement it\n * @memberof PIXI\n * @interface IPoint\n * @extends PIXI.IPointData\n */\n\n/**\n * Sets the point to a new x and y position.\n * If y is omitted, both x and y will be set to x.\n *\n * @method set\n * @memberof PIXI.IPoint#\n * @param {number} [x=0] - position of the point on the x axis\n * @param {number} [y=x] - position of the point on the y axis\n */\n\n/**\n * Copies x and y from the given point\n * @method copyFrom\n * @memberof PIXI.IPoint#\n * @param {PIXI.IPointData} p - The point to copy from\n * @returns {this} Returns itself.\n */\n\n/**\n * Copies x and y into the given point\n * @method copyTo\n * @memberof PIXI.IPoint#\n * @param {PIXI.IPoint} p - The point to copy.\n * @returns {PIXI.IPoint} Given point with values updated\n */\n\n/**\n * Returns true if the given point is equal to this point\n *\n * @method equals\n * @memberof PIXI.IPoint#\n * @param {PIXI.IPointData} p - The point to check\n * @returns {boolean} Whether the given point equal to this point\n */\n\n","import type { IPoint } from './IPoint';\nimport type { IPointData } from './IPointData';\n\n/**\n * The Point object represents a location in a two-dimensional coordinate system, where x represents\n * the horizontal axis and y represents the vertical axis.\n *\n * @class\n * @memberof PIXI\n * @implements IPoint\n */\nexport class Point implements IPoint\n{\n    public x: number;\n    public y: number;\n\n    /**\n     * @param {number} [x=0] - position of the point on the x axis\n     * @param {number} [y=0] - position of the point on the y axis\n     */\n    constructor(x = 0, y = 0)\n    {\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.x = x;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.y = y;\n    }\n\n    /**\n     * Creates a clone of this point\n     *\n     * @return {PIXI.Point} a copy of the point\n     */\n    clone(): Point\n    {\n        return new Point(this.x, this.y);\n    }\n\n    /**\n     * Copies x and y from the given point\n     *\n     * @param {PIXI.IPointData} p - The point to copy from\n     * @returns {this} Returns itself.\n     */\n    copyFrom(p: IPointData): this\n    {\n        this.set(p.x, p.y);\n\n        return this;\n    }\n\n    /**\n     * Copies x and y into the given point\n     *\n     * @param {PIXI.IPoint} p - The point to copy.\n     * @returns {PIXI.IPoint} Given point with values updated\n     */\n    copyTo<T extends IPoint>(p: T): T\n    {\n        p.set(this.x, this.y);\n\n        return p;\n    }\n\n    /**\n     * Returns true if the given point is equal to this point\n     *\n     * @param {PIXI.IPointData} p - The point to check\n     * @returns {boolean} Whether the given point equal to this point\n     */\n    equals(p: IPointData): boolean\n    {\n        return (p.x === this.x) && (p.y === this.y);\n    }\n\n    /**\n     * Sets the point to a new x and y position.\n     * If y is omitted, both x and y will be set to x.\n     *\n     * @param {number} [x=0] - position of the point on the x axis\n     * @param {number} [y=x] - position of the point on the y axis\n     * @returns {this} Returns itself.\n     */\n    set(x = 0, y = x): this\n    {\n        this.x = x;\n        this.y = y;\n\n        return this;\n    }\n}\n","import type { IPointData } from './IPointData';\nimport type { IPoint } from './IPoint';\n\n/**\n * The Point object represents a location in a two-dimensional coordinate system, where x represents\n * the horizontal axis and y represents the vertical axis.\n *\n * An ObservablePoint is a point that triggers a callback when the point's position is changed.\n *\n * @class\n * @memberof PIXI\n * @implements IPoint\n */\nexport class ObservablePoint<T = any> implements IPoint\n{\n    public cb: (this: T) => any;\n    public scope: any;\n    _x: number;\n    _y: number;\n\n    /**\n     * @param {Function} cb - callback when changed\n     * @param {object} scope - owner of callback\n     * @param {number} [x=0] - position of the point on the x axis\n     * @param {number} [y=0] - position of the point on the y axis\n     */\n    constructor(cb: (this: T) => any, scope: T, x = 0, y = 0)\n    {\n        this._x = x;\n        this._y = y;\n\n        this.cb = cb;\n        this.scope = scope;\n    }\n\n    /**\n     * Creates a clone of this point.\n     * The callback and scope params can be overidden otherwise they will default\n     * to the clone object's values.\n     *\n     * @override\n     * @param {Function} [cb=null] - callback when changed\n     * @param {object} [scope=null] - owner of callback\n     * @return {PIXI.ObservablePoint} a copy of the point\n     */\n    clone(cb = this.cb, scope = this.scope): ObservablePoint\n    {\n        return new ObservablePoint(cb, scope, this._x, this._y);\n    }\n\n    /**\n     * Sets the point to a new x and y position.\n     * If y is omitted, both x and y will be set to x.\n     *\n     * @param {number} [x=0] - position of the point on the x axis\n     * @param {number} [y=x] - position of the point on the y axis\n     * @returns {this} Returns itself.\n     */\n    set(x = 0, y = x): this\n    {\n        if (this._x !== x || this._y !== y)\n        {\n            this._x = x;\n            this._y = y;\n            this.cb.call(this.scope);\n        }\n\n        return this;\n    }\n\n    /**\n     * Copies x and y from the given point\n     *\n     * @param {PIXI.IPointData} p - The point to copy from.\n     * @returns {this} Returns itself.\n     */\n    copyFrom(p: IPointData): this\n    {\n        if (this._x !== p.x || this._y !== p.y)\n        {\n            this._x = p.x;\n            this._y = p.y;\n            this.cb.call(this.scope);\n        }\n\n        return this;\n    }\n\n    /**\n     * Copies x and y into the given point\n     *\n     * @param {PIXI.IPoint} p - The point to copy.\n     * @returns {PIXI.IPoint} Given point with values updated\n     */\n    copyTo<T extends IPoint>(p: T): T\n    {\n        p.set(this._x, this._y);\n\n        return p;\n    }\n\n    /**\n     * Returns true if the given point is equal to this point\n     *\n     * @param {PIXI.IPointData} p - The point to check\n     * @returns {boolean} Whether the given point equal to this point\n     */\n    equals(p: IPointData): boolean\n    {\n        return (p.x === this._x) && (p.y === this._y);\n    }\n\n    /**\n     * The position of the displayObject on the x axis relative to the local coordinates of the parent.\n     *\n     * @member {number}\n     */\n    get x(): number\n    {\n        return this._x;\n    }\n\n    set x(value: number)\n    {\n        if (this._x !== value)\n        {\n            this._x = value;\n            this.cb.call(this.scope);\n        }\n    }\n\n    /**\n     * The position of the displayObject on the x axis relative to the local coordinates of the parent.\n     *\n     * @member {number}\n     */\n    get y(): number\n    {\n        return this._y;\n    }\n\n    set y(value: number)\n    {\n        if (this._y !== value)\n        {\n            this._y = value;\n            this.cb.call(this.scope);\n        }\n    }\n}\n","import { Point } from './Point';\nimport { PI_2 } from './const';\n\nimport type { Transform } from './Transform';\nimport type { IPointData } from './IPointData';\n\n/**\n * The PixiJS Matrix as a class makes it a lot faster.\n *\n * Here is a representation of it:\n * ```js\n * | a | c | tx|\n * | b | d | ty|\n * | 0 | 0 | 1 |\n * ```\n * @class\n * @memberof PIXI\n */\nexport class Matrix\n{\n    public a: number;\n    public b: number;\n    public c: number;\n    public d: number;\n    public tx: number;\n    public ty: number;\n\n    public array: Float32Array|null = null;\n\n    /**\n     * @param {number} [a=1] - x scale\n     * @param {number} [b=0] - x skew\n     * @param {number} [c=0] - y skew\n     * @param {number} [d=1] - y scale\n     * @param {number} [tx=0] - x translation\n     * @param {number} [ty=0] - y translation\n     */\n    constructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0)\n    {\n        /**\n         * @member {number}\n         * @default 1\n         */\n        this.a = a;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.b = b;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.c = c;\n\n        /**\n         * @member {number}\n         * @default 1\n         */\n        this.d = d;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.tx = tx;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.ty = ty;\n    }\n\n    /**\n     * Creates a Matrix object based on the given array. The Element to Matrix mapping order is as follows:\n     *\n     * a = array[0]\n     * b = array[1]\n     * c = array[3]\n     * d = array[4]\n     * tx = array[2]\n     * ty = array[5]\n     *\n     * @param {number[]} array - The array that the matrix will be populated from.\n     */\n    fromArray(array: number[]): void\n    {\n        this.a = array[0];\n        this.b = array[1];\n        this.c = array[3];\n        this.d = array[4];\n        this.tx = array[2];\n        this.ty = array[5];\n    }\n\n    /**\n     * sets the matrix properties\n     *\n     * @param {number} a - Matrix component\n     * @param {number} b - Matrix component\n     * @param {number} c - Matrix component\n     * @param {number} d - Matrix component\n     * @param {number} tx - Matrix component\n     * @param {number} ty - Matrix component\n     *\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n    set(a: number, b: number, c: number, d: number, tx: number, ty: number): this\n    {\n        this.a = a;\n        this.b = b;\n        this.c = c;\n        this.d = d;\n        this.tx = tx;\n        this.ty = ty;\n\n        return this;\n    }\n\n    /**\n     * Creates an array from the current Matrix object.\n     *\n     * @param {boolean} transpose - Whether we need to transpose the matrix or not\n     * @param {Float32Array} [out=new Float32Array(9)] - If provided the array will be assigned to out\n     * @return {number[]} the newly created array which contains the matrix\n     */\n    toArray(transpose: boolean, out?: Float32Array): Float32Array\n    {\n        if (!this.array)\n        {\n            this.array = new Float32Array(9);\n        }\n\n        const array = out || this.array;\n\n        if (transpose)\n        {\n            array[0] = this.a;\n            array[1] = this.b;\n            array[2] = 0;\n            array[3] = this.c;\n            array[4] = this.d;\n            array[5] = 0;\n            array[6] = this.tx;\n            array[7] = this.ty;\n            array[8] = 1;\n        }\n        else\n        {\n            array[0] = this.a;\n            array[1] = this.c;\n            array[2] = this.tx;\n            array[3] = this.b;\n            array[4] = this.d;\n            array[5] = this.ty;\n            array[6] = 0;\n            array[7] = 0;\n            array[8] = 1;\n        }\n\n        return array;\n    }\n\n    /**\n     * Get a new position with the current transformation applied.\n     * Can be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)\n     *\n     * @param {PIXI.IPointData} pos - The origin\n     * @param {PIXI.Point} [newPos] - The point that the new position is assigned to (allowed to be same as input)\n     * @return {PIXI.Point} The new point, transformed through this matrix\n     */\n    apply<P extends IPointData = Point>(pos: IPointData, newPos?: P): P\n    {\n        newPos = (newPos || new Point()) as P;\n\n        const x = pos.x;\n        const y = pos.y;\n\n        newPos.x = (this.a * x) + (this.c * y) + this.tx;\n        newPos.y = (this.b * x) + (this.d * y) + this.ty;\n\n        return newPos;\n    }\n\n    /**\n     * Get a new position with the inverse of the current transformation applied.\n     * Can be used to go from the world coordinate space to a child's coordinate space. (e.g. input)\n     *\n     * @param {PIXI.IPointData} pos - The origin\n     * @param {PIXI.Point} [newPos] - The point that the new position is assigned to (allowed to be same as input)\n     * @return {PIXI.Point} The new point, inverse-transformed through this matrix\n     */\n    applyInverse<P extends IPointData = Point>(pos: IPointData, newPos?: P): P\n    {\n        newPos = (newPos || new Point()) as P;\n\n        const id = 1 / ((this.a * this.d) + (this.c * -this.b));\n\n        const x = pos.x;\n        const y = pos.y;\n\n        newPos.x = (this.d * id * x) + (-this.c * id * y) + (((this.ty * this.c) - (this.tx * this.d)) * id);\n        newPos.y = (this.a * id * y) + (-this.b * id * x) + (((-this.ty * this.a) + (this.tx * this.b)) * id);\n\n        return newPos;\n    }\n\n    /**\n     * Translates the matrix on the x and y.\n     *\n     * @param {number} x - How much to translate x by\n     * @param {number} y - How much to translate y by\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n    translate(x: number, y: number): this\n    {\n        this.tx += x;\n        this.ty += y;\n\n        return this;\n    }\n\n    /**\n     * Applies a scale transformation to the matrix.\n     *\n     * @param {number} x - The amount to scale horizontally\n     * @param {number} y - The amount to scale vertically\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n    scale(x: number, y: number): this\n    {\n        this.a *= x;\n        this.d *= y;\n        this.c *= x;\n        this.b *= y;\n        this.tx *= x;\n        this.ty *= y;\n\n        return this;\n    }\n\n    /**\n     * Applies a rotation transformation to the matrix.\n     *\n     * @param {number} angle - The angle in radians.\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n    rotate(angle: number): this\n    {\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n\n        const a1 = this.a;\n        const c1 = this.c;\n        const tx1 = this.tx;\n\n        this.a = (a1 * cos) - (this.b * sin);\n        this.b = (a1 * sin) + (this.b * cos);\n        this.c = (c1 * cos) - (this.d * sin);\n        this.d = (c1 * sin) + (this.d * cos);\n        this.tx = (tx1 * cos) - (this.ty * sin);\n        this.ty = (tx1 * sin) + (this.ty * cos);\n\n        return this;\n    }\n\n    /**\n     * Appends the given Matrix to this Matrix.\n     *\n     * @param {PIXI.Matrix} matrix - The matrix to append.\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n    append(matrix: Matrix): this\n    {\n        const a1 = this.a;\n        const b1 = this.b;\n        const c1 = this.c;\n        const d1 = this.d;\n\n        this.a = (matrix.a * a1) + (matrix.b * c1);\n        this.b = (matrix.a * b1) + (matrix.b * d1);\n        this.c = (matrix.c * a1) + (matrix.d * c1);\n        this.d = (matrix.c * b1) + (matrix.d * d1);\n\n        this.tx = (matrix.tx * a1) + (matrix.ty * c1) + this.tx;\n        this.ty = (matrix.tx * b1) + (matrix.ty * d1) + this.ty;\n\n        return this;\n    }\n\n    /**\n     * Sets the matrix based on all the available properties\n     *\n     * @param {number} x - Position on the x axis\n     * @param {number} y - Position on the y axis\n     * @param {number} pivotX - Pivot on the x axis\n     * @param {number} pivotY - Pivot on the y axis\n     * @param {number} scaleX - Scale on the x axis\n     * @param {number} scaleY - Scale on the y axis\n     * @param {number} rotation - Rotation in radians\n     * @param {number} skewX - Skew on the x axis\n     * @param {number} skewY - Skew on the y axis\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n    setTransform(x: number, y: number, pivotX: number, pivotY: number, scaleX: number,\n        scaleY: number, rotation: number, skewX: number, skewY: number): this\n    {\n        this.a = Math.cos(rotation + skewY) * scaleX;\n        this.b = Math.sin(rotation + skewY) * scaleX;\n        this.c = -Math.sin(rotation - skewX) * scaleY;\n        this.d = Math.cos(rotation - skewX) * scaleY;\n\n        this.tx = x - ((pivotX * this.a) + (pivotY * this.c));\n        this.ty = y - ((pivotX * this.b) + (pivotY * this.d));\n\n        return this;\n    }\n\n    /**\n     * Prepends the given Matrix to this Matrix.\n     *\n     * @param {PIXI.Matrix} matrix - The matrix to prepend\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n    prepend(matrix: Matrix): this\n    {\n        const tx1 = this.tx;\n\n        if (matrix.a !== 1 || matrix.b !== 0 || matrix.c !== 0 || matrix.d !== 1)\n        {\n            const a1 = this.a;\n            const c1 = this.c;\n\n            this.a = (a1 * matrix.a) + (this.b * matrix.c);\n            this.b = (a1 * matrix.b) + (this.b * matrix.d);\n            this.c = (c1 * matrix.a) + (this.d * matrix.c);\n            this.d = (c1 * matrix.b) + (this.d * matrix.d);\n        }\n\n        this.tx = (tx1 * matrix.a) + (this.ty * matrix.c) + matrix.tx;\n        this.ty = (tx1 * matrix.b) + (this.ty * matrix.d) + matrix.ty;\n\n        return this;\n    }\n\n    /**\n     * Decomposes the matrix (x, y, scaleX, scaleY, and rotation) and sets the properties on to a transform.\n     *\n     * @param {PIXI.Transform} transform - The transform to apply the properties to.\n     * @return {PIXI.Transform} The transform with the newly applied properties\n     */\n    decompose(transform: Transform): Transform\n    {\n        // sort out rotation / skew..\n        const a = this.a;\n        const b = this.b;\n        const c = this.c;\n        const d = this.d;\n\n        const skewX = -Math.atan2(-c, d);\n        const skewY = Math.atan2(b, a);\n\n        const delta = Math.abs(skewX + skewY);\n\n        if (delta < 0.00001 || Math.abs(PI_2 - delta) < 0.00001)\n        {\n            transform.rotation = skewY;\n            transform.skew.x = transform.skew.y = 0;\n        }\n        else\n        {\n            transform.rotation = 0;\n            transform.skew.x = skewX;\n            transform.skew.y = skewY;\n        }\n\n        // next set scale\n        transform.scale.x = Math.sqrt((a * a) + (b * b));\n        transform.scale.y = Math.sqrt((c * c) + (d * d));\n\n        // next set position\n        transform.position.x = this.tx;\n        transform.position.y = this.ty;\n\n        return transform;\n    }\n\n    /**\n     * Inverts this matrix\n     *\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n    invert(): this\n    {\n        const a1 = this.a;\n        const b1 = this.b;\n        const c1 = this.c;\n        const d1 = this.d;\n        const tx1 = this.tx;\n        const n = (a1 * d1) - (b1 * c1);\n\n        this.a = d1 / n;\n        this.b = -b1 / n;\n        this.c = -c1 / n;\n        this.d = a1 / n;\n        this.tx = ((c1 * this.ty) - (d1 * tx1)) / n;\n        this.ty = -((a1 * this.ty) - (b1 * tx1)) / n;\n\n        return this;\n    }\n\n    /**\n     * Resets this Matrix to an identity (default) matrix.\n     *\n     * @return {PIXI.Matrix} This matrix. Good for chaining method calls.\n     */\n    identity(): this\n    {\n        this.a = 1;\n        this.b = 0;\n        this.c = 0;\n        this.d = 1;\n        this.tx = 0;\n        this.ty = 0;\n\n        return this;\n    }\n\n    /**\n     * Creates a new Matrix object with the same values as this one.\n     *\n     * @return {PIXI.Matrix} A copy of this matrix. Good for chaining method calls.\n     */\n    clone(): Matrix\n    {\n        const matrix = new Matrix();\n\n        matrix.a = this.a;\n        matrix.b = this.b;\n        matrix.c = this.c;\n        matrix.d = this.d;\n        matrix.tx = this.tx;\n        matrix.ty = this.ty;\n\n        return matrix;\n    }\n\n    /**\n     * Changes the values of the given matrix to be the same as the ones in this matrix\n     *\n     * @param {PIXI.Matrix} matrix - The matrix to copy to.\n     * @return {PIXI.Matrix} The matrix given in parameter with its values updated.\n     */\n    copyTo(matrix: Matrix): Matrix\n    {\n        matrix.a = this.a;\n        matrix.b = this.b;\n        matrix.c = this.c;\n        matrix.d = this.d;\n        matrix.tx = this.tx;\n        matrix.ty = this.ty;\n\n        return matrix;\n    }\n\n    /**\n     * Changes the values of the matrix to be the same as the ones in given matrix\n     *\n     * @param {PIXI.Matrix} matrix - The matrix to copy from.\n     * @return {PIXI.Matrix} this\n     */\n    copyFrom(matrix: Matrix): this\n    {\n        this.a = matrix.a;\n        this.b = matrix.b;\n        this.c = matrix.c;\n        this.d = matrix.d;\n        this.tx = matrix.tx;\n        this.ty = matrix.ty;\n\n        return this;\n    }\n\n    /**\n     * A default (identity) matrix\n     *\n     * @static\n     * @const\n     * @member {PIXI.Matrix}\n     */\n    static get IDENTITY(): Matrix\n    {\n        return new Matrix();\n    }\n\n    /**\n     * A temp matrix\n     *\n     * @static\n     * @const\n     * @member {PIXI.Matrix}\n     */\n    static get TEMP_MATRIX(): Matrix\n    {\n        return new Matrix();\n    }\n}\n","// Your friendly neighbour https://en.wikipedia.org/wiki/Dihedral_group\n//\n// This file implements the dihedral group of order 16, also called\n// of degree 8. That's why its called groupD8.\n\nimport { Matrix } from './Matrix';\n\n/*\n * Transform matrix for operation n is:\n * | ux | vx |\n * | uy | vy |\n */\n\nconst ux = [1, 1, 0, -1, -1, -1, 0, 1, 1, 1, 0, -1, -1, -1, 0, 1];\nconst uy = [0, 1, 1, 1, 0, -1, -1, -1, 0, 1, 1, 1, 0, -1, -1, -1];\nconst vx = [0, -1, -1, -1, 0, 1, 1, 1, 0, 1, 1, 1, 0, -1, -1, -1];\nconst vy = [1, 1, 0, -1, -1, -1, 0, 1, -1, -1, 0, 1, 1, 1, 0, -1];\n\n/**\n * [Cayley Table]{@link https://en.wikipedia.org/wiki/Cayley_table}\n * for the composition of each rotation in the dihederal group D8.\n *\n * @type number[][]\n * @private\n */\nconst rotationCayley: number[][] = [];\n\n/**\n * Matrices for each `GD8Symmetry` rotation.\n *\n * @type Matrix[]\n * @private\n */\nconst rotationMatrices: Matrix[] = [];\n\n/*\n * Alias for {@code Math.sign}.\n */\nconst signum = Math.sign;\n\n/*\n * Initializes `rotationCayley` and `rotationMatrices`. It is called\n * only once below.\n */\nfunction init(): void\n{\n    for (let i = 0; i < 16; i++)\n    {\n        const row: number[] = [];\n\n        rotationCayley.push(row);\n\n        for (let j = 0; j < 16; j++)\n        {\n            /* Multiplies rotation matrices i and j. */\n            const _ux = signum((ux[i] * ux[j]) + (vx[i] * uy[j]));\n            const _uy = signum((uy[i] * ux[j]) + (vy[i] * uy[j]));\n            const _vx = signum((ux[i] * vx[j]) + (vx[i] * vy[j]));\n            const _vy = signum((uy[i] * vx[j]) + (vy[i] * vy[j]));\n\n            /* Finds rotation matrix matching the product and pushes it. */\n            for (let k = 0; k < 16; k++)\n            {\n                if (ux[k] === _ux && uy[k] === _uy\n                      && vx[k] === _vx && vy[k] === _vy)\n                {\n                    row.push(k);\n                    break;\n                }\n            }\n        }\n    }\n\n    for (let i = 0; i < 16; i++)\n    {\n        const mat = new Matrix();\n\n        mat.set(ux[i], uy[i], vx[i], vy[i], 0, 0);\n        rotationMatrices.push(mat);\n    }\n}\n\ninit();\n\ntype GD8Symmetry = number;\n/**\n * @memberof PIXI\n * @typedef {number} GD8Symmetry\n * @see PIXI.groupD8\n */\n\n/**\n * Implements the dihedral group D8, which is similar to\n * [group D4]{@link http://mathworld.wolfram.com/DihedralGroupD4.html};\n * D8 is the same but with diagonals, and it is used for texture\n * rotations.\n *\n * The directions the U- and V- axes after rotation\n * of an angle of `a: GD8Constant` are the vectors `(uX(a), uY(a))`\n * and `(vX(a), vY(a))`. These aren't necessarily unit vectors.\n *\n * **Origin:**<br>\n *  This is the small part of gameofbombs.com portal system. It works.\n *\n * @see PIXI.groupD8.E\n * @see PIXI.groupD8.SE\n * @see PIXI.groupD8.S\n * @see PIXI.groupD8.SW\n * @see PIXI.groupD8.W\n * @see PIXI.groupD8.NW\n * @see PIXI.groupD8.N\n * @see PIXI.groupD8.NE\n * @author Ivan @ivanpopelyshev\n * @namespace PIXI.groupD8\n * @memberof PIXI\n */\nexport const groupD8 = {\n    /**\n     * | Rotation | Direction |\n     * |----------|-----------|\n     * | 0°       | East      |\n     *\n     * @memberof PIXI.groupD8\n     * @constant {PIXI.GD8Symmetry}\n     */\n    E: 0,\n\n    /**\n     * | Rotation | Direction |\n     * |----------|-----------|\n     * | 45°↻     | Southeast |\n     *\n     * @memberof PIXI.groupD8\n     * @constant {PIXI.GD8Symmetry}\n     */\n    SE: 1,\n\n    /**\n     * | Rotation | Direction |\n     * |----------|-----------|\n     * | 90°↻     | South     |\n     *\n     * @memberof PIXI.groupD8\n     * @constant {PIXI.GD8Symmetry}\n     */\n    S: 2,\n\n    /**\n     * | Rotation | Direction |\n     * |----------|-----------|\n     * | 135°↻    | Southwest |\n     *\n     * @memberof PIXI.groupD8\n     * @constant {PIXI.GD8Symmetry}\n     */\n    SW: 3,\n\n    /**\n     * | Rotation | Direction |\n     * |----------|-----------|\n     * | 180°     | West      |\n     *\n     * @memberof PIXI.groupD8\n     * @constant {PIXI.GD8Symmetry}\n     */\n    W: 4,\n\n    /**\n     * | Rotation    | Direction    |\n     * |-------------|--------------|\n     * | -135°/225°↻ | Northwest    |\n     *\n     * @memberof PIXI.groupD8\n     * @constant {PIXI.GD8Symmetry}\n     */\n    NW: 5,\n\n    /**\n     * | Rotation    | Direction    |\n     * |-------------|--------------|\n     * | -90°/270°↻  | North        |\n     *\n     * @memberof PIXI.groupD8\n     * @constant {PIXI.GD8Symmetry}\n     */\n    N: 6,\n\n    /**\n     * | Rotation    | Direction    |\n     * |-------------|--------------|\n     * | -45°/315°↻  | Northeast    |\n     *\n     * @memberof PIXI.groupD8\n     * @constant {PIXI.GD8Symmetry}\n     */\n    NE: 7,\n\n    /**\n     * Reflection about Y-axis.\n     *\n     * @memberof PIXI.groupD8\n     * @constant {PIXI.GD8Symmetry}\n     */\n    MIRROR_VERTICAL: 8,\n\n    /**\n     * Reflection about the main diagonal.\n     *\n     * @memberof PIXI.groupD8\n     * @constant {PIXI.GD8Symmetry}\n     */\n    MAIN_DIAGONAL: 10,\n\n    /**\n     * Reflection about X-axis.\n     *\n     * @memberof PIXI.groupD8\n     * @constant {PIXI.GD8Symmetry}\n     */\n    MIRROR_HORIZONTAL: 12,\n\n    /**\n     * Reflection about reverse diagonal.\n     *\n     * @memberof PIXI.groupD8\n     * @constant {PIXI.GD8Symmetry}\n     */\n    REVERSE_DIAGONAL: 14,\n\n    /**\n     * @memberof PIXI.groupD8\n     * @param {PIXI.GD8Symmetry} ind - sprite rotation angle.\n     * @return {PIXI.GD8Symmetry} The X-component of the U-axis\n     *    after rotating the axes.\n     */\n    uX: (ind: GD8Symmetry): GD8Symmetry => ux[ind],\n\n    /**\n     * @memberof PIXI.groupD8\n     * @param {PIXI.GD8Symmetry} ind - sprite rotation angle.\n     * @return {PIXI.GD8Symmetry} The Y-component of the U-axis\n     *    after rotating the axes.\n     */\n    uY: (ind: GD8Symmetry): GD8Symmetry => uy[ind],\n\n    /**\n     * @memberof PIXI.groupD8\n     * @param {PIXI.GD8Symmetry} ind - sprite rotation angle.\n     * @return {PIXI.GD8Symmetry} The X-component of the V-axis\n     *    after rotating the axes.\n     */\n    vX: (ind: GD8Symmetry): GD8Symmetry => vx[ind],\n\n    /**\n     * @memberof PIXI.groupD8\n     * @param {PIXI.GD8Symmetry} ind - sprite rotation angle.\n     * @return {PIXI.GD8Symmetry} The Y-component of the V-axis\n     *    after rotating the axes.\n     */\n    vY: (ind: GD8Symmetry): GD8Symmetry => vy[ind],\n\n    /**\n     * @memberof PIXI.groupD8\n     * @param {PIXI.GD8Symmetry} rotation - symmetry whose opposite\n     *   is needed. Only rotations have opposite symmetries while\n     *   reflections don't.\n     * @return {PIXI.GD8Symmetry} The opposite symmetry of `rotation`\n     */\n    inv: (rotation: GD8Symmetry): GD8Symmetry =>\n    {\n        if (rotation & 8)// true only if between 8 & 15 (reflections)\n        {\n            return rotation & 15;// or rotation % 16\n        }\n\n        return (-rotation) & 7;// or (8 - rotation) % 8\n    },\n\n    /**\n     * Composes the two D8 operations.\n     *\n     * Taking `^` as reflection:\n     *\n     * |       | E=0 | S=2 | W=4 | N=6 | E^=8 | S^=10 | W^=12 | N^=14 |\n     * |-------|-----|-----|-----|-----|------|-------|-------|-------|\n     * | E=0   | E   | S   | W   | N   | E^   | S^    | W^    | N^    |\n     * | S=2   | S   | W   | N   | E   | S^   | W^    | N^    | E^    |\n     * | W=4   | W   | N   | E   | S   | W^   | N^    | E^    | S^    |\n     * | N=6   | N   | E   | S   | W   | N^   | E^    | S^    | W^    |\n     * | E^=8  | E^  | N^  | W^  | S^  | E    | N     | W     | S     |\n     * | S^=10 | S^  | E^  | N^  | W^  | S    | E     | N     | W     |\n     * | W^=12 | W^  | S^  | E^  | N^  | W    | S     | E     | N     |\n     * | N^=14 | N^  | W^  | S^  | E^  | N    | W     | S     | E     |\n     *\n     * [This is a Cayley table]{@link https://en.wikipedia.org/wiki/Cayley_table}\n     * @memberof PIXI.groupD8\n     * @param {PIXI.GD8Symmetry} rotationSecond - Second operation, which\n     *   is the row in the above cayley table.\n     * @param {PIXI.GD8Symmetry} rotationFirst - First operation, which\n     *   is the column in the above cayley table.\n     * @return {PIXI.GD8Symmetry} Composed operation\n     */\n    add: (rotationSecond: GD8Symmetry, rotationFirst: GD8Symmetry): GD8Symmetry => (\n        rotationCayley[rotationSecond][rotationFirst]\n    ),\n\n    /**\n     * Reverse of `add`.\n     *\n     * @memberof PIXI.groupD8\n     * @param {PIXI.GD8Symmetry} rotationSecond - Second operation\n     * @param {PIXI.GD8Symmetry} rotationFirst - First operation\n     * @return {PIXI.GD8Symmetry} Result\n     */\n    sub: (rotationSecond: GD8Symmetry, rotationFirst: GD8Symmetry): GD8Symmetry => (\n        rotationCayley[rotationSecond][groupD8.inv(rotationFirst)]\n    ),\n\n    /**\n     * Adds 180 degrees to rotation, which is a commutative\n     * operation.\n     *\n     * @memberof PIXI.groupD8\n     * @param {number} rotation - The number to rotate.\n     * @returns {number} Rotated number\n     */\n    rotate180: (rotation: number): number => rotation ^ 4,\n\n    /**\n     * Checks if the rotation angle is vertical, i.e. south\n     * or north. It doesn't work for reflections.\n     *\n     * @memberof PIXI.groupD8\n     * @param {PIXI.GD8Symmetry} rotation - The number to check.\n     * @returns {boolean} Whether or not the direction is vertical\n     */\n    isVertical: (rotation: GD8Symmetry): boolean => (rotation & 3) === 2, // rotation % 4 === 2\n\n    /**\n     * Approximates the vector `V(dx,dy)` into one of the\n     * eight directions provided by `groupD8`.\n     *\n     * @memberof PIXI.groupD8\n     * @param {number} dx - X-component of the vector\n     * @param {number} dy - Y-component of the vector\n     * @return {PIXI.GD8Symmetry} Approximation of the vector into\n     *  one of the eight symmetries.\n     */\n    byDirection: (dx: number, dy: number): GD8Symmetry =>\n    {\n        if (Math.abs(dx) * 2 <= Math.abs(dy))\n        {\n            if (dy >= 0)\n            {\n                return groupD8.S;\n            }\n\n            return groupD8.N;\n        }\n        else if (Math.abs(dy) * 2 <= Math.abs(dx))\n        {\n            if (dx > 0)\n            {\n                return groupD8.E;\n            }\n\n            return groupD8.W;\n        }\n        else if (dy > 0)\n        {\n            if (dx > 0)\n            {\n                return groupD8.SE;\n            }\n\n            return groupD8.SW;\n        }\n        else if (dx > 0)\n        {\n            return groupD8.NE;\n        }\n\n        return groupD8.NW;\n    },\n\n    /**\n     * Helps sprite to compensate texture packer rotation.\n     *\n     * @memberof PIXI.groupD8\n     * @param {PIXI.Matrix} matrix - sprite world matrix\n     * @param {PIXI.GD8Symmetry} rotation - The rotation factor to use.\n     * @param {number} tx - sprite anchoring\n     * @param {number} ty - sprite anchoring\n     */\n    matrixAppendRotationInv: (matrix: Matrix, rotation: GD8Symmetry, tx = 0, ty = 0): void =>\n    {\n        // Packer used \"rotation\", we use \"inv(rotation)\"\n        const mat: Matrix = rotationMatrices[groupD8.inv(rotation)];\n\n        mat.tx = tx;\n        mat.ty = ty;\n        matrix.append(mat);\n    },\n};\n","import { ObservablePoint } from './ObservablePoint';\nimport { Matrix } from './Matrix';\n\n/**\n * Transform that takes care about its versions\n *\n * @class\n * @memberof PIXI\n */\nexport class Transform\n{\n    /**\n     * A default (identity) transform\n     *\n     * @static\n     * @constant\n     * @member {PIXI.Transform}\n     */\n    public static readonly IDENTITY = new Transform();\n\n    public worldTransform: Matrix;\n    public localTransform: Matrix;\n    public position: ObservablePoint;\n    public scale: ObservablePoint;\n    public pivot: ObservablePoint;\n    public skew: ObservablePoint;\n    public _parentID: number;\n    _worldID: number;\n\n    protected _rotation: number;\n    protected _cx: number;\n    protected _sx: number;\n    protected _cy: number;\n    protected _sy: number;\n    protected _localID: number;\n    protected _currentLocalID: number;\n\n    constructor()\n    {\n        /**\n         * The world transformation matrix.\n         *\n         * @member {PIXI.Matrix}\n         */\n        this.worldTransform = new Matrix();\n\n        /**\n         * The local transformation matrix.\n         *\n         * @member {PIXI.Matrix}\n         */\n        this.localTransform = new Matrix();\n\n        /**\n         * The coordinate of the object relative to the local coordinates of the parent.\n         *\n         * @member {PIXI.ObservablePoint}\n         */\n        this.position = new ObservablePoint(this.onChange, this, 0, 0);\n\n        /**\n         * The scale factor of the object.\n         *\n         * @member {PIXI.ObservablePoint}\n         */\n        this.scale = new ObservablePoint(this.onChange, this, 1, 1);\n\n        /**\n         * The pivot point of the displayObject that it rotates around.\n         *\n         * @member {PIXI.ObservablePoint}\n         */\n        this.pivot = new ObservablePoint(this.onChange, this, 0, 0);\n\n        /**\n         * The skew amount, on the x and y axis.\n         *\n         * @member {PIXI.ObservablePoint}\n         */\n        this.skew = new ObservablePoint(this.updateSkew, this, 0, 0);\n\n        /**\n         * The rotation amount.\n         *\n         * @protected\n         * @member {number}\n         */\n        this._rotation = 0;\n\n        /**\n         * The X-coordinate value of the normalized local X axis,\n         * the first column of the local transformation matrix without a scale.\n         *\n         * @protected\n         * @member {number}\n         */\n        this._cx = 1;\n\n        /**\n         * The Y-coordinate value of the normalized local X axis,\n         * the first column of the local transformation matrix without a scale.\n         *\n         * @protected\n         * @member {number}\n         */\n        this._sx = 0;\n\n        /**\n         * The X-coordinate value of the normalized local Y axis,\n         * the second column of the local transformation matrix without a scale.\n         *\n         * @protected\n         * @member {number}\n         */\n        this._cy = 0;\n\n        /**\n         * The Y-coordinate value of the normalized local Y axis,\n         * the second column of the local transformation matrix without a scale.\n         *\n         * @protected\n         * @member {number}\n         */\n        this._sy = 1;\n\n        /**\n         * The locally unique ID of the local transform.\n         *\n         * @protected\n         * @member {number}\n         */\n        this._localID = 0;\n\n        /**\n         * The locally unique ID of the local transform\n         * used to calculate the current local transformation matrix.\n         *\n         * @protected\n         * @member {number}\n         */\n        this._currentLocalID = 0;\n\n        /**\n         * The locally unique ID of the world transform.\n         *\n         * @protected\n         * @member {number}\n         */\n        this._worldID = 0;\n\n        /**\n         * The locally unique ID of the parent's world transform\n         * used to calculate the current world transformation matrix.\n         *\n         * @protected\n         * @member {number}\n         */\n        this._parentID = 0;\n    }\n\n    /**\n     * Called when a value changes.\n     *\n     * @protected\n     */\n    protected onChange(): void\n    {\n        this._localID++;\n    }\n\n    /**\n     * Called when the skew or the rotation changes.\n     *\n     * @protected\n     */\n    protected updateSkew(): void\n    {\n        this._cx = Math.cos(this._rotation + this.skew.y);\n        this._sx = Math.sin(this._rotation + this.skew.y);\n        this._cy = -Math.sin(this._rotation - this.skew.x); // cos, added PI/2\n        this._sy = Math.cos(this._rotation - this.skew.x); // sin, added PI/2\n\n        this._localID++;\n    }\n\n    /**\n     * Updates the local transformation matrix.\n     */\n    updateLocalTransform(): void\n    {\n        const lt = this.localTransform;\n\n        if (this._localID !== this._currentLocalID)\n        {\n            // get the matrix values of the displayobject based on its transform properties..\n            lt.a = this._cx * this.scale.x;\n            lt.b = this._sx * this.scale.x;\n            lt.c = this._cy * this.scale.y;\n            lt.d = this._sy * this.scale.y;\n\n            lt.tx = this.position.x - ((this.pivot.x * lt.a) + (this.pivot.y * lt.c));\n            lt.ty = this.position.y - ((this.pivot.x * lt.b) + (this.pivot.y * lt.d));\n            this._currentLocalID = this._localID;\n\n            // force an update..\n            this._parentID = -1;\n        }\n    }\n\n    /**\n     * Updates the local and the world transformation matrices.\n     *\n     * @param {PIXI.Transform} parentTransform - The parent transform\n     */\n    updateTransform(parentTransform: Transform): void\n    {\n        const lt = this.localTransform;\n\n        if (this._localID !== this._currentLocalID)\n        {\n            // get the matrix values of the displayobject based on its transform properties..\n            lt.a = this._cx * this.scale.x;\n            lt.b = this._sx * this.scale.x;\n            lt.c = this._cy * this.scale.y;\n            lt.d = this._sy * this.scale.y;\n\n            lt.tx = this.position.x - ((this.pivot.x * lt.a) + (this.pivot.y * lt.c));\n            lt.ty = this.position.y - ((this.pivot.x * lt.b) + (this.pivot.y * lt.d));\n            this._currentLocalID = this._localID;\n\n            // force an update..\n            this._parentID = -1;\n        }\n\n        if (this._parentID !== parentTransform._worldID)\n        {\n            // concat the parent matrix with the objects transform.\n            const pt = parentTransform.worldTransform;\n            const wt = this.worldTransform;\n\n            wt.a = (lt.a * pt.a) + (lt.b * pt.c);\n            wt.b = (lt.a * pt.b) + (lt.b * pt.d);\n            wt.c = (lt.c * pt.a) + (lt.d * pt.c);\n            wt.d = (lt.c * pt.b) + (lt.d * pt.d);\n            wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\n            wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\n\n            this._parentID = parentTransform._worldID;\n\n            // update the id of the transform..\n            this._worldID++;\n        }\n    }\n\n    /**\n     * Decomposes a matrix and sets the transforms properties based on it.\n     *\n     * @param {PIXI.Matrix} matrix - The matrix to decompose\n     */\n    setFromMatrix(matrix: Matrix): void\n    {\n        matrix.decompose(this);\n        this._localID++;\n    }\n\n    /**\n     * The rotation of the object in radians.\n     *\n     * @member {number}\n     */\n    get rotation(): number\n    {\n        return this._rotation;\n    }\n\n    set rotation(value: number)\n    {\n        if (this._rotation !== value)\n        {\n            this._rotation = value;\n            this.updateSkew();\n        }\n    }\n}\n","import { Resource } from './Resource';\n\nimport type { IImageResourceOptions } from './ImageResource';\nimport type{ ISize } from '@pixi/math';\nimport type{ ICubeResourceOptions } from './CubeResource';\nimport type{ ISVGResourceOptions } from './SVGResource';\nimport type{ IVideoResourceOptions } from './VideoResource';\n\n/**\n * Allow flexible options for resource plugins\n */\nexport type IResourcePluginOptions = { [key: string]: any };\n\n/**\n * All allowable options for autoDetectResource\n */\nexport type IAutoDetectOptions = ISize\n    | ICubeResourceOptions\n    | IImageResourceOptions\n    | ISVGResourceOptions\n    | IVideoResourceOptions\n    | IResourcePluginOptions;\n\n/**\n * Shape of supported resource plugins\n */\nexport interface IResourcePlugin\n{\n    test(source: unknown, extension: string): boolean;\n    new (source: any, options?: any): Resource;\n}\n\n/**\n * Collection of installed resource types, class must extend {@link PIXI.resources.Resource}.\n * @example\n * class CustomResource extends PIXI.resources.Resource {\n *   // MUST have source, options constructor signature\n *   // for auto-detected resources to be created.\n *   constructor(source, options) {\n *     super();\n *   }\n *   upload(renderer, baseTexture, glTexture) {\n *     // upload with GL\n *     return true;\n *   }\n *   // used to auto-detect resource\n *   static test(source, extension) {\n *     return extension === 'xyz'|| source instanceof SomeClass;\n *   }\n * }\n * // Install the new resource type\n * PIXI.resources.INSTALLED.push(CustomResource);\n *\n * @name PIXI.resources.INSTALLED\n * @type {Array<*>}\n * @static\n * @readonly\n */\nexport const INSTALLED: Array<IResourcePlugin> = [];\n\n/**\n * Create a resource element from a single source element. This\n * auto-detects which type of resource to create. All resources that\n * are auto-detectable must have a static `test` method and a constructor\n * with the arguments `(source, options?)`. Currently, the supported\n * resources for auto-detection include:\n *  - {@link PIXI.resources.ImageResource}\n *  - {@link PIXI.resources.CanvasResource}\n *  - {@link PIXI.resources.VideoResource}\n *  - {@link PIXI.resources.SVGResource}\n *  - {@link PIXI.resources.BufferResource}\n * @static\n * @function PIXI.resources.autoDetectResource\n * @param {string|*} source - Resource source, this can be the URL to the resource,\n *        a typed-array (for BufferResource), HTMLVideoElement, SVG data-uri\n *        or any other resource that can be auto-detected. If not resource is\n *        detected, it's assumed to be an ImageResource.\n * @param {object} [options] - Pass-through options to use for Resource\n * @param {number} [options.width] - Width of BufferResource or SVG rasterization\n * @param {number} [options.height] - Height of BufferResource or SVG rasterization\n * @param {boolean} [options.autoLoad=true] - Image, SVG and Video flag to start loading\n * @param {number} [options.scale=1] - SVG source scale. Overridden by width, height\n * @param {boolean} [options.createBitmap=PIXI.settings.CREATE_IMAGE_BITMAP] - Image option to create Bitmap object\n * @param {boolean} [options.crossorigin=true] - Image and Video option to set crossOrigin\n * @param {boolean} [options.autoPlay=true] - Video option to start playing video immediately\n * @param {number} [options.updateFPS=0] - Video option to update how many times a second the\n *        texture should be updated from the video. Leave at 0 to update at every render\n * @return {PIXI.resources.Resource} The created resource.\n */\nexport function autoDetectResource(source: unknown, options?: IAutoDetectOptions): Resource\n{\n    if (!source)\n    {\n        return null;\n    }\n\n    let extension = '';\n\n    if (typeof source === 'string')\n    {\n        // search for file extension: period, 3-4 chars, then ?, # or EOL\n        const result = (/\\.(\\w{3,4})(?:$|\\?|#)/i).exec(source);\n\n        if (result)\n        {\n            extension = result[1].toLowerCase();\n        }\n    }\n\n    for (let i = INSTALLED.length - 1; i >= 0; --i)\n    {\n        const ResourcePlugin = INSTALLED[i];\n\n        if (ResourcePlugin.test && ResourcePlugin.test(source, extension))\n        {\n            return new ResourcePlugin(source, options);\n        }\n    }\n\n    throw new Error('Unrecognized source type to auto-detect Resource');\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Runner } from '@pixi/runner';\n\nimport type { BaseTexture } from '../BaseTexture';\nimport type { Renderer } from '../../Renderer';\nimport type { GLTexture } from '../GLTexture';\n\n/**\n * Base resource class for textures that manages validation and uploading, depending on its type.\n *\n * Uploading of a base texture to the GPU is required.\n *\n * @class\n * @memberof PIXI.resources\n */\nexport abstract class Resource\n{\n    public destroyed: boolean;\n    public internal: boolean;\n    protected _width: number;\n    protected _height: number;\n    protected onResize: Runner;\n    protected onUpdate: Runner;\n    protected onError: Runner;\n    /**\n     * @param {number} [width=0] - Width of the resource\n     * @param {number} [height=0] - Height of the resource\n     */\n    constructor(width = 0, height = 0)\n    {\n        /**\n         * Internal width of the resource\n         * @member {number}\n         * @protected\n         */\n        this._width = width;\n\n        /**\n         * Internal height of the resource\n         * @member {number}\n         * @protected\n         */\n        this._height = height;\n\n        /**\n         * If resource has been destroyed\n         * @member {boolean}\n         * @readonly\n         * @default false\n         */\n        this.destroyed = false;\n\n        /**\n         * `true` if resource is created by BaseTexture\n         * useful for doing cleanup with BaseTexture destroy\n         * and not cleaning up resources that were created\n         * externally.\n         * @member {boolean}\n         * @protected\n         */\n        this.internal = false;\n\n        /**\n         * Mini-runner for handling resize events\n         * accepts 2 parameters: width, height\n         *\n         * @member {Runner}\n         * @private\n         */\n        this.onResize = new Runner('setRealSize');\n\n        /**\n         * Mini-runner for handling update events\n         *\n         * @member {Runner}\n         * @private\n         */\n        this.onUpdate = new Runner('update');\n\n        /**\n         * Handle internal errors, such as loading errors\n         * accepts 1 param: error\n         *\n         * @member {Runner}\n         * @private\n         */\n        this.onError = new Runner('onError');\n    }\n\n    /**\n     * Bind to a parent BaseTexture\n     *\n     * @param {PIXI.BaseTexture} baseTexture - Parent texture\n     */\n    bind(baseTexture: BaseTexture): void\n    {\n        this.onResize.add(baseTexture);\n        this.onUpdate.add(baseTexture);\n        this.onError.add(baseTexture);\n\n        // Call a resize immediate if we already\n        // have the width and height of the resource\n        if (this._width || this._height)\n        {\n            this.onResize.emit(this._width, this._height);\n        }\n    }\n\n    /**\n     * Unbind to a parent BaseTexture\n     *\n     * @param {PIXI.BaseTexture} baseTexture - Parent texture\n     */\n    unbind(baseTexture: BaseTexture): void\n    {\n        this.onResize.remove(baseTexture);\n        this.onUpdate.remove(baseTexture);\n        this.onError.remove(baseTexture);\n    }\n\n    /**\n     * Trigger a resize event\n     * @param {number} width - X dimension\n     * @param {number} height - Y dimension\n     */\n    resize(width: number, height: number): void\n    {\n        if (width !== this._width || height !== this._height)\n        {\n            this._width = width;\n            this._height = height;\n            this.onResize.emit(width, height);\n        }\n    }\n\n    /**\n     * Has been validated\n     * @readonly\n     * @member {boolean}\n     */\n    get valid(): boolean\n    {\n        return !!this._width && !!this._height;\n    }\n\n    /**\n     * Has been updated trigger event\n     */\n    update(): void\n    {\n        if (!this.destroyed)\n        {\n            this.onUpdate.emit();\n        }\n    }\n\n    /**\n     * This can be overridden to start preloading a resource\n     * or do any other prepare step.\n     * @protected\n     * @return {Promise<void>} Handle the validate event\n     */\n    load(): Promise<Resource>\n    {\n        return Promise.resolve(this);\n    }\n\n    /**\n     * The width of the resource.\n     *\n     * @member {number}\n     * @readonly\n     */\n    get width(): number\n    {\n        return this._width;\n    }\n\n    /**\n     * The height of the resource.\n     *\n     * @member {number}\n     * @readonly\n     */\n    get height(): number\n    {\n        return this._height;\n    }\n\n    /**\n     * Uploads the texture or returns false if it cant for some reason. Override this.\n     *\n     * @param {PIXI.Renderer} renderer - yeah, renderer!\n     * @param {PIXI.BaseTexture} baseTexture - the texture\n     * @param {PIXI.GLTexture} glTexture - texture instance for this webgl context\n     * @returns {boolean} true is success\n     */\n    abstract upload(renderer: Renderer, baseTexture: BaseTexture, glTexture: GLTexture): boolean;\n\n    /**\n     * Set the style, optional to override\n     *\n     * @param {PIXI.Renderer} renderer - yeah, renderer!\n     * @param {PIXI.BaseTexture} baseTexture - the texture\n     * @param {PIXI.GLTexture} glTexture - texture instance for this webgl context\n     * @returns {boolean} `true` is success\n     */\n    style(_renderer: Renderer, _baseTexture: BaseTexture, _glTexture: GLTexture): boolean\n    {\n        return false;\n    }\n\n    /**\n     * Clean up anything, this happens when destroying is ready.\n     *\n     * @protected\n     */\n    dispose(): void\n    {\n        // override\n    }\n\n    /**\n     * Call when destroying resource, unbind any BaseTexture object\n     * before calling this method, as reference counts are maintained\n     * internally.\n     */\n    destroy(): void\n    {\n        if (!this.destroyed)\n        {\n            this.destroyed = true;\n            this.dispose();\n            this.onError.removeAll();\n            this.onError = null;\n            this.onResize.removeAll();\n            this.onResize = null;\n            this.onUpdate.removeAll();\n            this.onUpdate = null;\n        }\n    }\n\n    /**\n     * Abstract, used to auto-detect resource type\n     *\n     * @static\n     * @param {*} source - The source object\n     * @param {string} extension - The extension of source, if set\n     */\n    static test(_source: unknown, _extension?: string): boolean\n    {\n        return false;\n    }\n}\n","import { Resource } from './Resource';\nimport { ALPHA_MODES } from '@pixi/constants';\n\nimport type { ISize } from '@pixi/math';\nimport type { BaseTexture } from '../BaseTexture';\nimport type { Renderer } from '../../Renderer';\nimport type { GLTexture } from '../GLTexture';\n/**\n * @interface SharedArrayBuffer\n */\n\n/**\n * Buffer resource with data of typed array.\n * @class\n * @extends PIXI.resources.Resource\n * @memberof PIXI.resources\n */\nexport class BufferResource extends Resource\n{\n    data: Float32Array|Uint8Array|Uint32Array;\n\n    /**\n     * @param {Float32Array|Uint8Array|Uint32Array} source - Source buffer\n     * @param {object} options - Options\n     * @param {number} options.width - Width of the texture\n     * @param {number} options.height - Height of the texture\n     */\n    constructor(source: Float32Array|Uint8Array|Uint32Array, options: ISize)\n    {\n        const { width, height } = options || {};\n\n        if (!width || !height)\n        {\n            throw new Error('BufferResource width or height invalid');\n        }\n\n        super(width, height);\n\n        /**\n         * Source array\n         * Cannot be ClampedUint8Array because it cant be uploaded to WebGL\n         *\n         * @member {Float32Array|Uint8Array|Uint32Array}\n         */\n        this.data = source;\n    }\n\n    /**\n     * Upload the texture to the GPU.\n     * @param {PIXI.Renderer} renderer - Upload to the renderer\n     * @param {PIXI.BaseTexture} baseTexture - Reference to parent texture\n     * @param {PIXI.GLTexture} glTexture - glTexture\n     * @returns {boolean} true is success\n     */\n    upload(renderer: Renderer, baseTexture: BaseTexture, glTexture: GLTexture): boolean\n    {\n        const gl = renderer.gl;\n\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, baseTexture.alphaMode === ALPHA_MODES.UNPACK);\n\n        if (glTexture.width === baseTexture.width && glTexture.height === baseTexture.height)\n        {\n            gl.texSubImage2D(\n                baseTexture.target,\n                0,\n                0,\n                0,\n                baseTexture.width,\n                baseTexture.height,\n                baseTexture.format,\n                baseTexture.type,\n                this.data\n            );\n        }\n        else\n        {\n            glTexture.width = baseTexture.width;\n            glTexture.height = baseTexture.height;\n\n            gl.texImage2D(\n                baseTexture.target,\n                0,\n                glTexture.internalFormat,\n                baseTexture.width,\n                baseTexture.height,\n                0,\n                baseTexture.format,\n                glTexture.type,\n                this.data\n            );\n        }\n\n        return true;\n    }\n\n    /**\n     * Destroy and don't use after this\n     * @override\n     */\n    dispose(): void\n    {\n        this.data = null;\n    }\n\n    /**\n     * Used to auto-detect the type of resource.\n     *\n     * @static\n     * @param {*} source - The source object\n     * @return {boolean} `true` if <canvas>\n     */\n    static test(source: unknown): source is Float32Array|Uint8Array|Uint32Array\n    {\n        return source instanceof Float32Array\n            || source instanceof Uint8Array\n            || source instanceof Uint32Array;\n    }\n}\n","import { BaseTextureCache, EventEmitter, isPow2, TextureCache, uid } from '@pixi/utils';\nimport { FORMATS, SCALE_MODES, TARGETS, TYPES, ALPHA_MODES, MIPMAP_MODES, WRAP_MODES } from '@pixi/constants';\nimport { Resource } from './resources/Resource';\nimport { BufferResource } from './resources/BufferResource';\nimport { autoDetectResource } from './resources/autoDetectResource';\nimport { settings } from '@pixi/settings';\n\nimport type { GLTexture } from './GLTexture';\n\nconst defaultBufferOptions = {\n    scaleMode: SCALE_MODES.NEAREST,\n    format: FORMATS.RGBA,\n    alphaMode: ALPHA_MODES.NPM,\n};\n\nexport type ImageSource = HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap;\n\nexport interface IBaseTextureOptions {\n    alphaMode?: ALPHA_MODES;\n    mipmap?: MIPMAP_MODES;\n    anisotropicLevel?: number;\n    scaleMode?: SCALE_MODES;\n    width?: number;\n    height?: number;\n    wrapMode?: WRAP_MODES;\n    format?: FORMATS;\n    type?: TYPES;\n    target?: TARGETS;\n    resolution?: number;\n    resourceOptions?: any;\n}\n\nexport interface BaseTexture extends GlobalMixins.BaseTexture, EventEmitter {}\n\n/**\n * A Texture stores the information that represents an image.\n * All textures have a base texture, which contains information about the source.\n * Therefore you can have many textures all using a single BaseTexture\n *\n * @class\n * @extends PIXI.utils.EventEmitter\n * @memberof PIXI\n * @param {PIXI.resources.Resource|string|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} [resource=null]\n *        The current resource to use, for things that aren't Resource objects, will be converted\n *        into a Resource.\n * @param {Object} [options] - Collection of options\n * @param {PIXI.MIPMAP_MODES} [options.mipmap=PIXI.settings.MIPMAP_TEXTURES] - If mipmapping is enabled for texture\n * @param {number} [options.anisotropicLevel=PIXI.settings.ANISOTROPIC_LEVEL] - Anisotropic filtering level of texture\n * @param {PIXI.WRAP_MODES} [options.wrapMode=PIXI.settings.WRAP_MODE] - Wrap mode for textures\n * @param {PIXI.SCALE_MODES} [options.scaleMode=PIXI.settings.SCALE_MODE] - Default scale mode, linear, nearest\n * @param {PIXI.FORMATS} [options.format=PIXI.FORMATS.RGBA] - GL format type\n * @param {PIXI.TYPES} [options.type=PIXI.TYPES.UNSIGNED_BYTE] - GL data type\n * @param {PIXI.TARGETS} [options.target=PIXI.TARGETS.TEXTURE_2D] - GL texture target\n * @param {PIXI.ALPHA_MODES} [options.alphaMode=PIXI.ALPHA_MODES.UNPACK] - Pre multiply the image alpha\n * @param {number} [options.width=0] - Width of the texture\n * @param {number} [options.height=0] - Height of the texture\n * @param {number} [options.resolution] - Resolution of the base texture\n * @param {object} [options.resourceOptions] - Optional resource options,\n *        see {@link PIXI.resources.autoDetectResource autoDetectResource}\n */\nexport class BaseTexture extends EventEmitter\n{\n    public width: number;\n    public height: number;\n    public resolution: number;\n    public alphaMode?: ALPHA_MODES;\n    public mipmap?: MIPMAP_MODES;\n    public anisotropicLevel?: number;\n    public scaleMode?: SCALE_MODES;\n    public wrapMode?: WRAP_MODES;\n    public format?: FORMATS;\n    public type?: TYPES;\n    public target?: TARGETS;\n\n    public readonly uid: number;\n    touched: number;\n    isPowerOfTwo: boolean;\n\n    _glTextures: { [key: number]: GLTexture };\n    dirtyId: number;\n    dirtyStyleId: number;\n    public cacheId: string;\n    public valid: boolean;\n    textureCacheIds: Array<string>;\n    public destroyed: boolean;\n    public resource: Resource;\n    _batchEnabled: number;\n    _batchLocation: number;\n    parentTextureArray: BaseTexture;\n\n    constructor(resource: Resource | ImageSource | string | any = null, options: IBaseTextureOptions = null)\n    {\n        super();\n\n        options = options || {};\n\n        const { alphaMode, mipmap, anisotropicLevel, scaleMode, width, height,\n            wrapMode, format, type, target, resolution, resourceOptions } = options;\n\n        // Convert the resource to a Resource object\n        if (resource && !(resource instanceof Resource))\n        {\n            resource = autoDetectResource(resource, resourceOptions);\n            resource.internal = true;\n        }\n\n        /**\n         * The width of the base texture set when the image has loaded\n         *\n         * @readonly\n         * @member {number}\n         */\n        this.width = width || 0;\n\n        /**\n         * The height of the base texture set when the image has loaded\n         *\n         * @readonly\n         * @member {number}\n         */\n        this.height = height || 0;\n\n        /**\n         * The resolution / device pixel ratio of the texture\n         *\n         * @member {number}\n         * @default PIXI.settings.RESOLUTION\n         */\n        this.resolution = resolution || settings.RESOLUTION;\n\n        /**\n         * Mipmap mode of the texture, affects downscaled images\n         *\n         * @member {PIXI.MIPMAP_MODES}\n         * @default PIXI.settings.MIPMAP_TEXTURES\n         */\n        this.mipmap = mipmap !== undefined ? mipmap : settings.MIPMAP_TEXTURES;\n\n        /**\n         * Anisotropic filtering level of texture\n         *\n         * @member {number}\n         * @default PIXI.settings.ANISOTROPIC_LEVEL\n         */\n        this.anisotropicLevel = anisotropicLevel !== undefined ? anisotropicLevel : settings.ANISOTROPIC_LEVEL;\n\n        /**\n         * How the texture wraps\n         * @member {number}\n         */\n        this.wrapMode = wrapMode || settings.WRAP_MODE;\n\n        /**\n         * The scale mode to apply when scaling this texture\n         *\n         * @member {PIXI.SCALE_MODES}\n         * @default PIXI.settings.SCALE_MODE\n         */\n        this.scaleMode = scaleMode !== undefined ? scaleMode : settings.SCALE_MODE;\n\n        /**\n         * The pixel format of the texture\n         *\n         * @member {PIXI.FORMATS}\n         * @default PIXI.FORMATS.RGBA\n         */\n        this.format = format || FORMATS.RGBA;\n\n        /**\n         * The type of resource data\n         *\n         * @member {PIXI.TYPES}\n         * @default PIXI.TYPES.UNSIGNED_BYTE\n         */\n        this.type = type || TYPES.UNSIGNED_BYTE;\n\n        /**\n         * The target type\n         *\n         * @member {PIXI.TARGETS}\n         * @default PIXI.TARGETS.TEXTURE_2D\n         */\n        this.target = target || TARGETS.TEXTURE_2D;\n\n        /**\n         * How to treat premultiplied alpha, see {@link PIXI.ALPHA_MODES}.\n         *\n         * @member {PIXI.ALPHA_MODES}\n         * @default PIXI.ALPHA_MODES.UNPACK\n         */\n        this.alphaMode = alphaMode !== undefined ? alphaMode : ALPHA_MODES.UNPACK;\n\n        if ((options as any).premultiplyAlpha !== undefined)\n        {\n            // triggers deprecation\n            (this as any).premultiplyAlpha = (options as any).premultiplyAlpha;\n        }\n\n        /**\n         * Global unique identifier for this BaseTexture\n         *\n         * @member {number}\n         * @protected\n         */\n        this.uid = uid();\n\n        /**\n         * Used by automatic texture Garbage Collection, stores last GC tick when it was bound\n         *\n         * @member {number}\n         * @protected\n         */\n        this.touched = 0;\n\n        /**\n         * Whether or not the texture is a power of two, try to use power of two textures as much\n         * as you can\n         *\n         * @readonly\n         * @member {boolean}\n         * @default false\n         */\n        this.isPowerOfTwo = false;\n        this._refreshPOT();\n\n        /**\n         * The map of render context textures where this is bound\n         *\n         * @member {Object}\n         * @private\n         */\n        this._glTextures = {};\n\n        /**\n         * Used by TextureSystem to only update texture to the GPU when needed.\n         * Please call `update()` to increment it.\n         *\n         * @readonly\n         * @member {number}\n         */\n        this.dirtyId = 0;\n\n        /**\n         * Used by TextureSystem to only update texture style when needed.\n         *\n         * @protected\n         * @member {number}\n         */\n        this.dirtyStyleId = 0;\n\n        /**\n         * Currently default cache ID.\n         *\n         * @member {string}\n         */\n        this.cacheId = null;\n\n        /**\n         * Generally speaking means when resource is loaded.\n         * @readonly\n         * @member {boolean}\n         */\n        this.valid = width > 0 && height > 0;\n\n        /**\n         * The collection of alternative cache ids, since some BaseTextures\n         * can have more than one ID, short name and longer full URL\n         *\n         * @member {Array<string>}\n         * @readonly\n         */\n        this.textureCacheIds = [];\n\n        /**\n         * Flag if BaseTexture has been destroyed.\n         *\n         * @member {boolean}\n         * @readonly\n         */\n        this.destroyed = false;\n\n        /**\n         * The resource used by this BaseTexture, there can only\n         * be one resource per BaseTexture, but textures can share\n         * resources.\n         *\n         * @member {PIXI.resources.Resource}\n         * @readonly\n         */\n        this.resource = null;\n\n        /**\n         * Number of the texture batch, used by multi-texture renderers\n         *\n         * @member {number}\n         */\n        this._batchEnabled = 0;\n\n        /**\n         * Location inside texture batch, used by multi-texture renderers\n         *\n         * @member {number}\n         */\n        this._batchLocation = 0;\n\n        /**\n         * Whether its a part of another texture, handled by ArrayResource or CubeResource\n         *\n         * @member {PIXI.BaseTexture}\n         */\n        this.parentTextureArray = null;\n\n        /**\n         * Fired when a not-immediately-available source finishes loading.\n         *\n         * @protected\n         * @event PIXI.BaseTexture#loaded\n         * @param {PIXI.BaseTexture} baseTexture - Resource loaded.\n         */\n\n        /**\n         * Fired when a not-immediately-available source fails to load.\n         *\n         * @protected\n         * @event PIXI.BaseTexture#error\n         * @param {PIXI.BaseTexture} baseTexture - Resource errored.\n         * @param {ErrorEvent} event - Load error event.\n         */\n\n        /**\n         * Fired when BaseTexture is updated.\n         *\n         * @protected\n         * @event PIXI.BaseTexture#loaded\n         * @param {PIXI.BaseTexture} baseTexture - Resource loaded.\n         */\n\n        /**\n         * Fired when BaseTexture is updated.\n         *\n         * @protected\n         * @event PIXI.BaseTexture#update\n         * @param {PIXI.BaseTexture} baseTexture - Instance of texture being updated.\n         */\n\n        /**\n         * Fired when BaseTexture is destroyed.\n         *\n         * @protected\n         * @event PIXI.BaseTexture#dispose\n         * @param {PIXI.BaseTexture} baseTexture - Instance of texture being destroyed.\n         */\n\n        // Set the resource\n        this.setResource(resource);\n    }\n\n    /**\n     * Pixel width of the source of this texture\n     *\n     * @readonly\n     * @member {number}\n     */\n    get realWidth(): number\n    {\n        return Math.ceil((this.width * this.resolution) - 1e-4);\n    }\n\n    /**\n     * Pixel height of the source of this texture\n     *\n     * @readonly\n     * @member {number}\n     */\n    get realHeight(): number\n    {\n        return Math.ceil((this.height * this.resolution) - 1e-4);\n    }\n\n    /**\n     * Changes style options of BaseTexture\n     *\n     * @param {PIXI.SCALE_MODES} [scaleMode] - Pixi scalemode\n     * @param {PIXI.MIPMAP_MODES} [mipmap] - enable mipmaps\n     * @returns {PIXI.BaseTexture} this\n     */\n    setStyle(scaleMode?: SCALE_MODES, mipmap?: MIPMAP_MODES): this\n    {\n        let dirty;\n\n        if (scaleMode !== undefined && scaleMode !== this.scaleMode)\n        {\n            this.scaleMode = scaleMode;\n            dirty = true;\n        }\n\n        if (mipmap !== undefined && mipmap !== this.mipmap)\n        {\n            this.mipmap = mipmap;\n            dirty = true;\n        }\n\n        if (dirty)\n        {\n            this.dirtyStyleId++;\n        }\n\n        return this;\n    }\n\n    /**\n     * Changes w/h/resolution. Texture becomes valid if width and height are greater than zero.\n     *\n     * @param {number} width - Visual width\n     * @param {number} height - Visual height\n     * @param {number} [resolution] - Optionally set resolution\n     * @returns {PIXI.BaseTexture} this\n     */\n    setSize(width: number, height: number, resolution?: number): this\n    {\n        this.resolution = resolution || this.resolution;\n        this.width = width;\n        this.height = height;\n        this._refreshPOT();\n        this.update();\n\n        return this;\n    }\n\n    /**\n     * Sets real size of baseTexture, preserves current resolution.\n     *\n     * @param {number} realWidth - Full rendered width\n     * @param {number} realHeight - Full rendered height\n     * @param {number} [resolution] - Optionally set resolution\n     * @returns {PIXI.BaseTexture} this\n     */\n    setRealSize(realWidth: number, realHeight: number, resolution?: number): this\n    {\n        this.resolution = resolution || this.resolution;\n        this.width = realWidth / this.resolution;\n        this.height = realHeight / this.resolution;\n        this._refreshPOT();\n        this.update();\n\n        return this;\n    }\n\n    /**\n     * Refresh check for isPowerOfTwo texture based on size\n     *\n     * @private\n     */\n    protected _refreshPOT(): void\n    {\n        this.isPowerOfTwo = isPow2(this.realWidth) && isPow2(this.realHeight);\n    }\n\n    /**\n     * Changes resolution\n     *\n     * @param {number} resolution - res\n     * @returns {PIXI.BaseTexture} this\n     */\n    setResolution(resolution: number): this\n    {\n        const oldResolution = this.resolution;\n\n        if (oldResolution === resolution)\n        {\n            return this;\n        }\n\n        this.resolution = resolution;\n\n        if (this.valid)\n        {\n            this.width = this.width * oldResolution / resolution;\n            this.height = this.height * oldResolution / resolution;\n            this.emit('update', this);\n        }\n\n        this._refreshPOT();\n\n        return this;\n    }\n\n    /**\n     * Sets the resource if it wasn't set. Throws error if resource already present\n     *\n     * @param {PIXI.resources.Resource} resource - that is managing this BaseTexture\n     * @returns {PIXI.BaseTexture} this\n     */\n    setResource(resource: Resource): this\n    {\n        if (this.resource === resource)\n        {\n            return this;\n        }\n\n        if (this.resource)\n        {\n            throw new Error('Resource can be set only once');\n        }\n\n        resource.bind(this);\n\n        this.resource = resource;\n\n        return this;\n    }\n\n    /**\n     * Invalidates the object. Texture becomes valid if width and height are greater than zero.\n     */\n    update(): void\n    {\n        if (!this.valid)\n        {\n            if (this.width > 0 && this.height > 0)\n            {\n                this.valid = true;\n                this.emit('loaded', this);\n                this.emit('update', this);\n            }\n        }\n        else\n        {\n            this.dirtyId++;\n            this.dirtyStyleId++;\n            this.emit('update', this);\n        }\n    }\n\n    /**\n     * Handle errors with resources.\n     * @private\n     * @param {ErrorEvent} event - Error event emitted.\n     */\n    onError(event: ErrorEvent): void\n    {\n        this.emit('error', this, event);\n    }\n\n    /**\n     * Destroys this base texture.\n     * The method stops if resource doesn't want this texture to be destroyed.\n     * Removes texture from all caches.\n     */\n    destroy(): void\n    {\n        // remove and destroy the resource\n        if (this.resource)\n        {\n            this.resource.unbind(this);\n            // only destroy resourced created internally\n            if (this.resource.internal)\n            {\n                this.resource.destroy();\n            }\n            this.resource = null;\n        }\n\n        if (this.cacheId)\n        {\n            delete BaseTextureCache[this.cacheId];\n            delete TextureCache[this.cacheId];\n\n            this.cacheId = null;\n        }\n\n        // finally let the WebGL renderer know..\n        this.dispose();\n\n        BaseTexture.removeFromCache(this);\n        this.textureCacheIds = null;\n\n        this.destroyed = true;\n    }\n\n    /**\n     * Frees the texture from WebGL memory without destroying this texture object.\n     * This means you can still use the texture later which will upload it to GPU\n     * memory again.\n     *\n     * @fires PIXI.BaseTexture#dispose\n     */\n    dispose(): void\n    {\n        this.emit('dispose', this);\n    }\n\n    /**\n     * Utility function for BaseTexture|Texture cast\n     */\n    castToBaseTexture(): BaseTexture\n    {\n        return this;\n    }\n\n    /**\n     * Helper function that creates a base texture based on the source you provide.\n     * The source can be - image url, image element, canvas element. If the\n     * source is an image url or an image element and not in the base texture\n     * cache, it will be created and loaded.\n     *\n     * @static\n     * @param {string|HTMLImageElement|HTMLCanvasElement|SVGElement|HTMLVideoElement} source - The\n     *        source to create base texture from.\n     * @param {object} [options] See {@link PIXI.BaseTexture}'s constructor for options.\n     * @param {boolean} [strict] - Enforce strict-mode, see {@link PIXI.settings.STRICT_TEXTURE_CACHE}.\n     * @returns {PIXI.BaseTexture} The new base texture.\n     */\n    static from(source: ImageSource|string, options: IBaseTextureOptions,\n        strict = settings.STRICT_TEXTURE_CACHE): BaseTexture\n    {\n        const isFrame = typeof source === 'string';\n        let cacheId = null;\n\n        if (isFrame)\n        {\n            cacheId = source;\n        }\n        else\n        {\n            if (!(source as any)._pixiId)\n            {\n                (source as any)._pixiId = `pixiid_${uid()}`;\n            }\n\n            cacheId = (source as any)._pixiId;\n        }\n\n        let baseTexture = BaseTextureCache[cacheId];\n\n        // Strict-mode rejects invalid cacheIds\n        if (isFrame && strict && !baseTexture)\n        {\n            throw new Error(`The cacheId \"${cacheId}\" does not exist in BaseTextureCache.`);\n        }\n\n        if (!baseTexture)\n        {\n            baseTexture = new BaseTexture(source, options);\n            baseTexture.cacheId = cacheId;\n            BaseTexture.addToCache(baseTexture, cacheId);\n        }\n\n        return baseTexture;\n    }\n\n    /**\n     * Create a new BaseTexture with a BufferResource from a Float32Array.\n     * RGBA values are floats from 0 to 1.\n     * @static\n     * @param {Float32Array|Uint8Array} buffer - The optional array to use, if no data\n     *        is provided, a new Float32Array is created.\n     * @param {number} width - Width of the resource\n     * @param {number} height - Height of the resource\n     * @param {object} [options] See {@link PIXI.BaseTexture}'s constructor for options.\n     * @return {PIXI.BaseTexture} The resulting new BaseTexture\n     */\n    static fromBuffer(buffer: Float32Array|Uint8Array,\n        width: number, height: number, options: IBaseTextureOptions): BaseTexture\n    {\n        buffer = buffer || new Float32Array(width * height * 4);\n\n        const resource = new BufferResource(buffer, { width, height });\n        const type = buffer instanceof Float32Array ? TYPES.FLOAT : TYPES.UNSIGNED_BYTE;\n\n        return new BaseTexture(resource, Object.assign(defaultBufferOptions, options || { width, height, type }));\n    }\n\n    /**\n     * Adds a BaseTexture to the global BaseTextureCache. This cache is shared across the whole PIXI object.\n     *\n     * @static\n     * @param {PIXI.BaseTexture} baseTexture - The BaseTexture to add to the cache.\n     * @param {string} id - The id that the BaseTexture will be stored against.\n     */\n    static addToCache(baseTexture: BaseTexture, id: string): void\n    {\n        if (id)\n        {\n            if (baseTexture.textureCacheIds.indexOf(id) === -1)\n            {\n                baseTexture.textureCacheIds.push(id);\n            }\n\n            if (BaseTextureCache[id])\n            {\n                // eslint-disable-next-line no-console\n                console.warn(`BaseTexture added to the cache with an id [${id}] that already had an entry`);\n            }\n\n            BaseTextureCache[id] = baseTexture;\n        }\n    }\n\n    /**\n     * Remove a BaseTexture from the global BaseTextureCache.\n     *\n     * @static\n     * @param {string|PIXI.BaseTexture} baseTexture - id of a BaseTexture to be removed, or a BaseTexture instance itself.\n     * @return {PIXI.BaseTexture|null} The BaseTexture that was removed.\n     */\n    static removeFromCache(baseTexture: string | BaseTexture): BaseTexture|null\n    {\n        if (typeof baseTexture === 'string')\n        {\n            const baseTextureFromCache = BaseTextureCache[baseTexture];\n\n            if (baseTextureFromCache)\n            {\n                const index = baseTextureFromCache.textureCacheIds.indexOf(baseTexture);\n\n                if (index > -1)\n                {\n                    baseTextureFromCache.textureCacheIds.splice(index, 1);\n                }\n\n                delete BaseTextureCache[baseTexture];\n\n                return baseTextureFromCache;\n            }\n        }\n        else if (baseTexture && baseTexture.textureCacheIds)\n        {\n            for (let i = 0; i < baseTexture.textureCacheIds.length; ++i)\n            {\n                delete BaseTextureCache[baseTexture.textureCacheIds[i]];\n            }\n\n            baseTexture.textureCacheIds.length = 0;\n\n            return baseTexture;\n        }\n\n        return null;\n    }\n\n    /**\n     * Global number of the texture batch, used by multi-texture renderers\n     *\n     * @static\n     * @member {number}\n     */\n    static _globalBatch = 0;\n}\n","import { Resource } from './Resource';\nimport { BaseTexture } from '../BaseTexture';\nimport { ISize } from '@pixi/math';\nimport { autoDetectResource, IAutoDetectOptions } from './autoDetectResource';\n\n/**\n * Resource that can manage several resource (items) inside.\n * All resources need to have the same pixel size.\n * Parent class for CubeResource and ArrayResource\n *\n * @class\n * @extends PIXI.resources.Resource\n * @memberof PIXI.resources\n * @param {object} [options] Options to for Resource constructor\n * @param {number} [options.width] - Width of the resource\n * @param {number} [options.height] - Height of the resource\n */\nexport abstract class AbstractMultiResource extends Resource\n{\n    readonly length: number;\n    items: Array<BaseTexture>;\n    itemDirtyIds: Array<number>;\n    private _load: Promise<this>;\n\n    baseTexture: BaseTexture;\n\n    constructor(length: number, options?: ISize)\n    {\n        const { width, height } = options || {};\n\n        super(width, height);\n        /**\n         * Collection of partial baseTextures that correspond to resources\n         * @member {Array<PIXI.BaseTexture>}\n         * @readonly\n         */\n        this.items = [];\n\n        /**\n         * Dirty IDs for each part\n         * @member {Array<number>}\n         * @readonly\n         */\n        this.itemDirtyIds = [];\n\n        for (let i = 0; i < length; i++)\n        {\n            const partTexture = new BaseTexture();\n\n            this.items.push(partTexture);\n            // -2 - first run of texture array upload\n            // -1 - texture item was allocated\n            // >=0 - texture item uploaded , in sync with items[i].dirtyId\n            this.itemDirtyIds.push(-2);\n        }\n\n        /**\n         * Number of elements in array\n         *\n         * @member {number}\n         * @readonly\n         */\n        this.length = length;\n\n        /**\n         * Promise when loading\n         * @member {Promise}\n         * @private\n         * @default null\n         */\n        this._load = null;\n\n        /**\n         * Bound baseTexture, there can only be one\n         * @member {PIXI.BaseTexture}\n         */\n        this.baseTexture = null;\n    }\n\n    /**\n     * used from ArrayResource and CubeResource constructors\n     * @param {Array<*>} resources - Can be resources, image elements, canvas, etc. ,\n     *  length should be same as constructor length\n     * @param {object} [options] - detect options for resources\n     * @protected\n     */\n    protected initFromArray(resources: Array<any>, options?: IAutoDetectOptions): void\n    {\n        for (let i = 0; i < this.length; i++)\n        {\n            if (!resources[i])\n            {\n                continue;\n            }\n            if (resources[i].castToBaseTexture)\n            {\n                this.addBaseTextureAt(resources[i].castToBaseTexture(), i);\n            }\n            else if (resources[i] instanceof Resource)\n            {\n                this.addResourceAt(resources[i], i);\n            }\n            else\n            {\n                this.addResourceAt(autoDetectResource(resources[i], options), i);\n            }\n        }\n    }\n\n    /**\n     * Destroy this BaseImageResource\n     * @override\n     */\n    dispose(): void\n    {\n        for (let i = 0, len = this.length; i < len; i++)\n        {\n            this.items[i].destroy();\n        }\n        this.items = null;\n        this.itemDirtyIds = null;\n        this._load = null;\n    }\n\n    /**\n     * Set a baseTexture by ID\n     *\n     * @param {PIXI.BaseTexture} baseTexture\n     * @param {number} index - Zero-based index of resource to set\n     * @return {PIXI.resources.AbstractMultiResource} Instance for chaining\n     */\n    abstract addBaseTextureAt(baseTexture: BaseTexture, index: number): this;\n\n    /**\n     * Set a resource by ID\n     *\n     * @param {PIXI.resources.Resource} resource\n     * @param {number} index - Zero-based index of resource to set\n     * @return {PIXI.resources.ArrayResource} Instance for chaining\n     */\n    addResourceAt(resource: Resource, index: number): this\n    {\n        if (!this.items[index])\n        {\n            throw new Error(`Index ${index} is out of bounds`);\n        }\n\n        // Inherit the first resource dimensions\n        if (resource.valid && !this.valid)\n        {\n            this.resize(resource.width, resource.height);\n        }\n\n        this.items[index].setResource(resource);\n\n        return this;\n    }\n\n    /**\n     * Set the parent base texture\n     * @member {PIXI.BaseTexture}\n     * @override\n     */\n    bind(baseTexture: BaseTexture): void\n    {\n        if (this.baseTexture !== null)\n        {\n            throw new Error('Only one base texture per TextureArray is allowed');\n        }\n        super.bind(baseTexture);\n\n        for (let i = 0; i < this.length; i++)\n        {\n            this.items[i].parentTextureArray = baseTexture;\n            this.items[i].on('update', baseTexture.update, baseTexture);\n        }\n    }\n\n    /**\n     * Unset the parent base texture\n     * @member {PIXI.BaseTexture}\n     * @override\n     */\n    unbind(baseTexture: BaseTexture): void\n    {\n        super.unbind(baseTexture);\n\n        for (let i = 0; i < this.length; i++)\n        {\n            this.items[i].parentTextureArray = null;\n            this.items[i].off('update', baseTexture.update, baseTexture);\n        }\n    }\n\n    /**\n     * Load all the resources simultaneously\n     * @override\n     * @return {Promise<void>} When load is resolved\n     */\n    load(): Promise<this>\n    {\n        if (this._load)\n        {\n            return this._load;\n        }\n\n        const resources = this.items.map((item) => item.resource).filter((item) => item);\n\n        // TODO: also implement load part-by-part strategy\n        const promises = resources.map((item) => item.load());\n\n        this._load = Promise.all(promises)\n            .then(() =>\n            {\n                const { realWidth, realHeight } = this.items[0];\n\n                this.resize(realWidth, realHeight);\n\n                return Promise.resolve(this);\n            }\n            );\n\n        return this._load;\n    }\n}\n","import { AbstractMultiResource } from './AbstractMultiResource';\nimport { TARGETS } from '@pixi/constants';\nimport { BaseTexture } from '../BaseTexture';\n\nimport type { BaseImageResource } from './BaseImageResource';\nimport type { Renderer } from '../../Renderer';\nimport type { GLTexture } from '../GLTexture';\nimport type { ISize } from '@pixi/math';\n\n/**\n * A resource that contains a number of sources.\n *\n * @class\n * @extends PIXI.resources.Resource\n * @memberof PIXI.resources\n * @param {number|Array<*>} source - Number of items in array or the collection\n *        of image URLs to use. Can also be resources, image elements, canvas, etc.\n * @param {object} [options] - Options to apply to {@link PIXI.resources.autoDetectResource}\n * @param {number} [options.width] - Width of the resource\n * @param {number} [options.height] - Height of the resource\n */\nexport class ArrayResource extends AbstractMultiResource\n{\n    constructor(source: number|Array<any>, options?: ISize)\n    {\n        const { width, height } = options || {};\n\n        let urls;\n        let length: number;\n\n        if (Array.isArray(source))\n        {\n            urls = source;\n            length = source.length;\n        }\n        else\n        {\n            length = source;\n        }\n\n        super(length, { width, height });\n\n        if (urls)\n        {\n            this.initFromArray(urls, options);\n        }\n    }\n    /**\n     * Set a baseTexture by ID,\n     * ArrayResource just takes resource from it, nothing more\n     *\n     * @param {PIXI.BaseTexture} baseTexture\n     * @param {number} index - Zero-based index of resource to set\n     * @return {PIXI.resources.ArrayResource} Instance for chaining\n     */\n    addBaseTextureAt(baseTexture: BaseTexture, index: number): this\n    {\n        if (baseTexture.resource)\n        {\n            this.addResourceAt(baseTexture.resource, index);\n        }\n        else\n        {\n            throw new Error('ArrayResource does not support RenderTexture');\n        }\n\n        return this;\n    }\n\n    /**\n     * Add binding\n     * @member {PIXI.BaseTexture}\n     * @override\n     */\n    bind(baseTexture: BaseTexture): void\n    {\n        super.bind(baseTexture);\n\n        baseTexture.target = TARGETS.TEXTURE_2D_ARRAY;\n    }\n\n    /**\n     * Upload the resources to the GPU.\n     * @param {PIXI.Renderer} renderer\n     * @param {PIXI.BaseTexture} texture\n     * @param {PIXI.GLTexture} glTexture\n     * @returns {boolean} whether texture was uploaded\n     */\n    upload(renderer: Renderer, texture: BaseTexture, glTexture: GLTexture): boolean\n    {\n        const { length, itemDirtyIds, items } = this;\n        const { gl } = renderer;\n\n        if (glTexture.dirtyId < 0)\n        {\n            gl.texImage3D(\n                gl.TEXTURE_2D_ARRAY,\n                0,\n                texture.format,\n                this._width,\n                this._height,\n                length,\n                0,\n                texture.format,\n                texture.type,\n                null\n            );\n        }\n\n        for (let i = 0; i < length; i++)\n        {\n            const item = items[i];\n\n            if (itemDirtyIds[i] < item.dirtyId)\n            {\n                itemDirtyIds[i] = item.dirtyId;\n                if (item.valid)\n                {\n                    gl.texSubImage3D(\n                        gl.TEXTURE_2D_ARRAY,\n                        0,\n                        0, // xoffset\n                        0, // yoffset\n                        i, // zoffset\n                        item.resource.width,\n                        item.resource.height,\n                        1,\n                        texture.format,\n                        texture.type,\n                        (item.resource as BaseImageResource).source\n                    );\n                }\n            }\n        }\n\n        return true;\n    }\n}\n","import { Resource } from './Resource';\nimport { determineCrossOrigin } from '@pixi/utils';\nimport { ALPHA_MODES } from '@pixi/constants';\n\nimport type { BaseTexture, ImageSource } from '../BaseTexture';\nimport type { Renderer } from '../../Renderer';\nimport type { GLTexture } from '../GLTexture';\n/**\n * Base for all the image/canvas resources\n * @class\n * @extends PIXI.resources.Resource\n * @memberof PIXI.resources\n */\nexport class BaseImageResource extends Resource\n{\n    public source: ImageSource;\n    public noSubImage: boolean;\n\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|SVGElement} source\n     */\n    constructor(source: ImageSource)\n    {\n        const sourceAny = source as any;\n        const width = sourceAny.naturalWidth || sourceAny.videoWidth || sourceAny.width;\n        const height = sourceAny.naturalHeight || sourceAny.videoHeight || sourceAny.height;\n\n        super(width, height);\n\n        /**\n         * The source element\n         * @member {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|SVGElement}\n         * @readonly\n         */\n        this.source = source;\n\n        /**\n         * If set to `true`, will force `texImage2D` over `texSubImage2D` for uploading.\n         * Certain types of media (e.g. video) using `texImage2D` is more performant.\n         * @member {boolean}\n         * @default false\n         * @private\n         */\n        this.noSubImage = false;\n    }\n\n    /**\n     * Set cross origin based detecting the url and the crossorigin\n     * @protected\n     * @param {HTMLElement} element - Element to apply crossOrigin\n     * @param {string} url - URL to check\n     * @param {boolean|string} [crossorigin=true] - Cross origin value to use\n     */\n    static crossOrigin(element: HTMLImageElement|HTMLVideoElement, url: string, crossorigin: boolean|string): void\n    {\n        if (crossorigin === undefined && url.indexOf('data:') !== 0)\n        {\n            element.crossOrigin = determineCrossOrigin(url);\n        }\n        else if (crossorigin !== false)\n        {\n            element.crossOrigin = typeof crossorigin === 'string' ? crossorigin : 'anonymous';\n        }\n    }\n\n    /**\n     * Upload the texture to the GPU.\n     * @param {PIXI.Renderer} renderer - Upload to the renderer\n     * @param {PIXI.BaseTexture} baseTexture - Reference to parent texture\n     * @param {PIXI.GLTexture} glTexture\n     * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|SVGElement} [source] (optional)\n     * @returns {boolean} true is success\n     */\n    upload(renderer: Renderer, baseTexture: BaseTexture, glTexture: GLTexture, source?: ImageSource): boolean\n    {\n        const gl = renderer.gl;\n        const width = baseTexture.realWidth;\n        const height = baseTexture.realHeight;\n\n        source = source || this.source;\n\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, baseTexture.alphaMode === ALPHA_MODES.UNPACK);\n\n        if (!this.noSubImage\n            && baseTexture.target === gl.TEXTURE_2D\n            && glTexture.width === width\n            && glTexture.height === height)\n        {\n            gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, baseTexture.format, baseTexture.type, source);\n        }\n        else\n        {\n            glTexture.width = width;\n            glTexture.height = height;\n\n            gl.texImage2D(baseTexture.target, 0, baseTexture.format, baseTexture.format, baseTexture.type, source);\n        }\n\n        return true;\n    }\n\n    /**\n     * Checks if source width/height was changed, resize can cause extra baseTexture update.\n     * Triggers one update in any case.\n     */\n    update(): void\n    {\n        if (this.destroyed)\n        {\n            return;\n        }\n\n        const source = this.source as any;\n\n        const width = source.naturalWidth || source.videoWidth || source.width;\n        const height = source.naturalHeight || source.videoHeight || source.height;\n\n        this.resize(width, height);\n\n        super.update();\n    }\n\n    /**\n     * Destroy this BaseImageResource\n     * @override\n     */\n    dispose(): void\n    {\n        this.source = null;\n    }\n}\n","import { BaseImageResource } from './BaseImageResource';\n\n/**\n * @interface OffscreenCanvas\n */\n\n/**\n * Resource type for HTMLCanvasElement.\n * @class\n * @extends PIXI.resources.BaseImageResource\n * @memberof PIXI.resources\n * @param {HTMLCanvasElement} source - Canvas element to use\n */\nexport class CanvasResource extends BaseImageResource\n{\n    /**\n     * Used to auto-detect the type of resource.\n     *\n     * @static\n     * @param {HTMLCanvasElement|OffscreenCanvas} source - The source object\n     * @return {boolean} `true` if source is HTMLCanvasElement or OffscreenCanvas\n     */\n    static test(source: unknown): source is OffscreenCanvas|HTMLCanvasElement\n    {\n        const { OffscreenCanvas } = window;\n\n        // Check for browsers that don't yet support OffscreenCanvas\n        if (OffscreenCanvas && source instanceof OffscreenCanvas)\n        {\n            return true;\n        }\n\n        return source instanceof HTMLCanvasElement;\n    }\n}\n","import { AbstractMultiResource } from './AbstractMultiResource';\nimport { TARGETS } from '@pixi/constants';\n\nimport type { Resource } from './Resource';\nimport type { ISize } from '@pixi/math';\nimport type { ArrayFixed } from '@pixi/utils';\nimport type { BaseTexture } from '../BaseTexture';\nimport type { Renderer } from '../../Renderer';\nimport type { GLTexture } from '../GLTexture';\n\n/**\n * Constructor options for CubeResource\n */\nexport interface ICubeResourceOptions extends ISize\n{\n    autoLoad?: boolean;\n    linkBaseTexture?: boolean;\n}\n\n/**\n * Resource for a CubeTexture which contains six resources.\n *\n * @class\n * @extends PIXI.resources.ArrayResource\n * @memberof PIXI.resources\n * @param {Array<string|PIXI.resources.Resource>} [source] - Collection of URLs or resources\n *        to use as the sides of the cube.\n * @param {object} [options] - ImageResource options\n * @param {number} [options.width] - Width of resource\n * @param {number} [options.height] - Height of resource\n * @param {number} [options.autoLoad=true] - Whether to auto-load resources\n * @param {number} [options.linkBaseTexture=true] - In case BaseTextures are supplied,\n *   whether to copy them or use\n */\nexport class CubeResource extends AbstractMultiResource\n{\n    items: ArrayFixed<BaseTexture, 6>;\n\n    linkBaseTexture: boolean;\n\n    constructor(source?: ArrayFixed<string|Resource, 6>, options?: ICubeResourceOptions)\n    {\n        const { width, height, autoLoad, linkBaseTexture } = options || {};\n\n        if (source && source.length !== CubeResource.SIDES)\n        {\n            throw new Error(`Invalid length. Got ${source.length}, expected 6`);\n        }\n\n        super(6, { width, height });\n\n        for (let i = 0; i < CubeResource.SIDES; i++)\n        {\n            this.items[i].target = TARGETS.TEXTURE_CUBE_MAP_POSITIVE_X + i;\n        }\n\n        /**\n         * In case BaseTextures are supplied, whether to use same resource or bind baseTexture itself\n         * @member {boolean}\n         * @protected\n         */\n        this.linkBaseTexture = linkBaseTexture !== false;\n\n        if (source)\n        {\n            this.initFromArray(source, options);\n        }\n\n        if (autoLoad !== false)\n        {\n            this.load();\n        }\n    }\n\n    /**\n     * Add binding\n     *\n     * @override\n     * @param {PIXI.BaseTexture} baseTexture - parent base texture\n     */\n    bind(baseTexture: BaseTexture): void\n    {\n        super.bind(baseTexture);\n\n        baseTexture.target = TARGETS.TEXTURE_CUBE_MAP;\n    }\n\n    addBaseTextureAt(baseTexture: BaseTexture, index: number, linkBaseTexture?: boolean): this\n    {\n        if (linkBaseTexture === undefined)\n        {\n            linkBaseTexture = this.linkBaseTexture;\n        }\n\n        if (!this.items[index])\n        {\n            throw new Error(`Index ${index} is out of bounds`);\n        }\n\n        if (!this.linkBaseTexture\n            || baseTexture.parentTextureArray\n            || Object.keys(baseTexture._glTextures).length > 0)\n        {\n            // copy mode\n            if (baseTexture.resource)\n            {\n                this.addResourceAt(baseTexture.resource, index);\n            }\n            else\n            {\n                throw new Error(`CubeResource does not support copying of renderTexture.`);\n            }\n        }\n        else\n        {\n            // link mode, the difficult one!\n            baseTexture.target = TARGETS.TEXTURE_CUBE_MAP_POSITIVE_X + index;\n            baseTexture.parentTextureArray = this.baseTexture;\n\n            this.items[index] = baseTexture;\n        }\n\n        if (baseTexture.valid && !this.valid)\n        {\n            this.resize(baseTexture.realWidth, baseTexture.realHeight);\n        }\n\n        this.items[index] = baseTexture;\n\n        return this;\n    }\n\n    /**\n     * Upload the resource\n     *\n     * @returns {boolean} true is success\n     */\n    upload(renderer: Renderer, _baseTexture: BaseTexture, glTexture: GLTexture): boolean\n    {\n        const dirty = this.itemDirtyIds;\n\n        for (let i = 0; i < CubeResource.SIDES; i++)\n        {\n            const side = this.items[i];\n\n            if (dirty[i] < side.dirtyId)\n            {\n                if (side.valid && side.resource)\n                {\n                    side.resource.upload(renderer, side, glTexture);\n                    dirty[i] = side.dirtyId;\n                }\n                else if (dirty[i] < -1)\n                {\n                    // either item is not valid yet, either its a renderTexture\n                    // allocate the memory\n                    renderer.gl.texImage2D(side.target, 0,\n                        glTexture.internalFormat,\n                        _baseTexture.realWidth,\n                        _baseTexture.realHeight,\n                        0,\n                        _baseTexture.format,\n                        glTexture.type,\n                        null);\n                    dirty[i] = -1;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * Number of texture sides to store for CubeResources\n     *\n     * @name PIXI.resources.CubeResource.SIDES\n     * @static\n     * @member {number}\n     * @default 6\n     */\n    static SIDES = 6;\n\n    /**\n     * Used to auto-detect the type of resource.\n     *\n     * @static\n     * @param {object} source - The source object\n     * @return {boolean} `true` if source is an array of 6 elements\n     */\n    static test(source: unknown): source is ArrayFixed<string|Resource, 6>\n    {\n        return Array.isArray(source) && source.length === CubeResource.SIDES;\n    }\n}\n","import { BaseImageResource } from './BaseImageResource';\nimport { settings } from '@pixi/settings';\nimport { ALPHA_MODES } from '@pixi/constants';\n\nimport type { BaseTexture } from '../BaseTexture';\nimport type { Renderer } from '../../Renderer';\nimport type { GLTexture } from '../GLTexture';\n\nexport interface IImageResourceOptions\n{\n    autoLoad?: boolean;\n    createBitmap?: boolean;\n    crossorigin?: boolean|string;\n    alphaMode?: ALPHA_MODES;\n}\n\n/**\n * Resource type for HTMLImageElement.\n * @class\n * @extends PIXI.resources.BaseImageResource\n * @memberof PIXI.resources\n */\nexport class ImageResource extends BaseImageResource\n{\n    url: string;\n    private _load: Promise<ImageResource>;\n    private _process: Promise<ImageResource>;\n    preserveBitmap: boolean;\n    createBitmap: boolean;\n    alphaMode: ALPHA_MODES;\n    bitmap: ImageBitmap;\n    /**\n     * @param {HTMLImageElement|string} source - image source or URL\n     * @param {object} [options]\n     * @param {boolean} [options.autoLoad=true] - start loading process\n     * @param {boolean} [options.createBitmap=PIXI.settings.CREATE_IMAGE_BITMAP] - whether its required to create\n     *        a bitmap before upload\n     * @param {boolean} [options.crossorigin=true] - Load image using cross origin\n     * @param {PIXI.ALPHA_MODES} [options.alphaMode=PIXI.ALPHA_MODES.UNPACK] - Premultiply image alpha in bitmap\n     */\n    constructor(source: HTMLImageElement|string, options?: IImageResourceOptions)\n    {\n        options = options || {};\n\n        if (!(source instanceof HTMLImageElement))\n        {\n            const imageElement = new Image();\n\n            BaseImageResource.crossOrigin(imageElement, source, options.crossorigin);\n\n            imageElement.src = source;\n            source = imageElement;\n        }\n\n        super(source);\n\n        // FireFox 68, and possibly other versions, seems like setting the HTMLImageElement#width and #height\n        // to non-zero values before its loading completes if images are in a cache.\n        // Because of this, need to set the `_width` and the `_height` to zero to avoid uploading incomplete images.\n        // Please refer to the issue #5968 (https://github.com/pixijs/pixi.js/issues/5968).\n        if (!source.complete && !!this._width && !!this._height)\n        {\n            this._width = 0;\n            this._height = 0;\n        }\n\n        /**\n         * URL of the image source\n         * @member {string}\n         */\n        this.url = source.src;\n\n        /**\n         * When process is completed\n         * @member {Promise<void>}\n         * @private\n         */\n        this._process = null;\n\n        /**\n         * If the image should be disposed after upload\n         * @member {boolean}\n         * @default false\n         */\n        this.preserveBitmap = false;\n\n        /**\n         * If capable, convert the image using createImageBitmap API\n         * @member {boolean}\n         * @default PIXI.settings.CREATE_IMAGE_BITMAP\n         */\n        this.createBitmap = (options.createBitmap !== undefined\n            ? options.createBitmap : settings.CREATE_IMAGE_BITMAP) && !!window.createImageBitmap;\n\n        /**\n         * Controls texture alphaMode field\n         * Copies from options\n         * Default is `null`, copies option from baseTexture\n         *\n         * @member {PIXI.ALPHA_MODES|null}\n         * @readonly\n         */\n        this.alphaMode = typeof options.alphaMode === 'number' ? options.alphaMode : null;\n\n        if ((options as any).premultiplyAlpha !== undefined)\n        {\n            // triggers deprecation\n            (this as any).premultiplyAlpha = (options as any).premultiplyAlpha;\n        }\n\n        /**\n         * The ImageBitmap element created for HTMLImageElement\n         * @member {ImageBitmap}\n         * @default null\n         */\n        this.bitmap = null;\n\n        /**\n         * Promise when loading\n         * @member {Promise<void>}\n         * @private\n         * @default null\n         */\n        this._load = null;\n\n        if (options.autoLoad !== false)\n        {\n            this.load();\n        }\n    }\n\n    /**\n     * returns a promise when image will be loaded and processed\n     *\n     * @param {boolean} [createBitmap] - whether process image into bitmap\n     * @returns {Promise<void>}\n     */\n    load(createBitmap?: boolean): Promise<ImageResource>\n    {\n        if (this._load)\n        {\n            return this._load;\n        }\n\n        if (createBitmap !== undefined)\n        {\n            this.createBitmap = createBitmap;\n        }\n\n        this._load = new Promise((resolve, reject): void =>\n        {\n            const source = this.source as HTMLImageElement;\n\n            this.url = source.src;\n\n            const completed = (): void =>\n            {\n                if (this.destroyed)\n                {\n                    return;\n                }\n                source.onload = null;\n                source.onerror = null;\n\n                this.resize(source.width, source.height);\n                this._load = null;\n\n                if (this.createBitmap)\n                {\n                    resolve(this.process());\n                }\n                else\n                {\n                    resolve(this);\n                }\n            };\n\n            if (source.complete && source.src)\n            {\n                completed();\n            }\n            else\n            {\n                source.onload = completed;\n                source.onerror = (event): void =>\n                {\n                    // Avoids Promise freezing when resource broken\n                    reject(event);\n                    this.onError.emit(event);\n                };\n            }\n        });\n\n        return this._load;\n    }\n\n    /**\n     * Called when we need to convert image into BitmapImage.\n     * Can be called multiple times, real promise is cached inside.\n     *\n     * @returns {Promise<void>} cached promise to fill that bitmap\n     */\n    process(): Promise<ImageResource>\n    {\n        const source = this.source as HTMLImageElement;\n\n        if (this._process !== null)\n        {\n            return this._process;\n        }\n        if (this.bitmap !== null || !window.createImageBitmap)\n        {\n            return Promise.resolve(this);\n        }\n\n        this._process = (window.createImageBitmap as any)(source,\n            0, 0, source.width, source.height,\n            {\n                premultiplyAlpha: this.alphaMode === ALPHA_MODES.UNPACK ? 'premultiply' : 'none',\n            })\n            .then((bitmap: ImageBitmap) =>\n            {\n                if (this.destroyed)\n                {\n                    return Promise.reject();\n                }\n                this.bitmap = bitmap;\n                this.update();\n                this._process = null;\n\n                return Promise.resolve(this);\n            });\n\n        return this._process;\n    }\n\n    /**\n     * Upload the image resource to GPU.\n     *\n     * @param {PIXI.Renderer} renderer - Renderer to upload to\n     * @param {PIXI.BaseTexture} baseTexture - BaseTexture for this resource\n     * @param {PIXI.GLTexture} glTexture - GLTexture to use\n     * @returns {boolean} true is success\n     */\n    upload(renderer: Renderer, baseTexture: BaseTexture, glTexture: GLTexture): boolean\n    {\n        if (typeof this.alphaMode === 'number')\n        {\n            // bitmap stores unpack premultiply flag, we dont have to notify texImage2D about it\n\n            baseTexture.alphaMode = this.alphaMode;\n        }\n\n        if (!this.createBitmap)\n        {\n            return super.upload(renderer, baseTexture, glTexture);\n        }\n        if (!this.bitmap)\n        {\n            // yeah, ignore the output\n            this.process();\n            if (!this.bitmap)\n            {\n                return false;\n            }\n        }\n\n        super.upload(renderer, baseTexture, glTexture, this.bitmap);\n\n        if (!this.preserveBitmap)\n        {\n            // checks if there are other renderers that possibly need this bitmap\n\n            let flag = true;\n\n            const glTextures = baseTexture._glTextures;\n\n            for (const key in glTextures)\n            {\n                const otherTex = glTextures[key];\n\n                if (otherTex !== glTexture && otherTex.dirtyId !== baseTexture.dirtyId)\n                {\n                    flag = false;\n                    break;\n                }\n            }\n\n            if (flag)\n            {\n                if (this.bitmap.close)\n                {\n                    this.bitmap.close();\n                }\n\n                this.bitmap = null;\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * Destroys this texture\n     * @override\n     */\n    dispose(): void\n    {\n        (this.source as HTMLImageElement).onload = null;\n        (this.source as HTMLImageElement).onerror = null;\n\n        super.dispose();\n\n        if (this.bitmap)\n        {\n            this.bitmap.close();\n            this.bitmap = null;\n        }\n        this._process = null;\n        this._load = null;\n    }\n\n    /**\n     * Used to auto-detect the type of resource.\n     *\n     * @static\n     * @param {string|HTMLImageElement} source - The source object\n     * @return {boolean} `true` if source is string or HTMLImageElement\n     */\n    static test(source: unknown): source is string|HTMLImageElement\n    {\n        return typeof source === 'string' || source instanceof HTMLImageElement;\n    }\n}\n","import { uid } from '@pixi/utils';\nimport { BaseImageResource } from './BaseImageResource';\n\nimport type { ISize } from '@pixi/math';\n\nexport interface ISVGResourceOptions\n{\n    source?: string;\n    scale?: number;\n    width?: number;\n    height?: number;\n    autoLoad?: boolean;\n    crossorigin?: boolean|string;\n}\n/**\n * Resource type for SVG elements and graphics.\n * @class\n * @extends PIXI.resources.BaseImageResource\n * @memberof PIXI.resources\n * @param {string} source - Base64 encoded SVG element or URL for SVG file.\n * @param {object} [options] - Options to use\n * @param {number} [options.scale=1] - Scale to apply to SVG. Overridden by...\n * @param {number} [options.width] - Rasterize SVG this wide. Aspect ratio preserved if height not specified.\n * @param {number} [options.height] - Rasterize SVG this high. Aspect ratio preserved if width not specified.\n * @param {boolean} [options.autoLoad=true] - Start loading right away.\n */\nexport class SVGResource extends BaseImageResource\n{\n    public readonly svg: string;\n    public readonly scale: number;\n    readonly _overrideWidth: number;\n    readonly _overrideHeight: number;\n    private _resolve: () => void;\n    private _load: Promise<SVGResource>;\n    private _crossorigin?: boolean|string;\n\n    constructor(sourceBase64: string, options: ISVGResourceOptions)\n    {\n        options = options || {};\n\n        super(document.createElement('canvas'));\n        this._width = 0;\n        this._height = 0;\n\n        /**\n         * Base64 encoded SVG element or URL for SVG file\n         * @readonly\n         * @member {string}\n         */\n        this.svg = sourceBase64;\n\n        /**\n         * The source scale to apply when rasterizing on load\n         * @readonly\n         * @member {number}\n         */\n        this.scale = options.scale || 1;\n\n        /**\n         * A width override for rasterization on load\n         * @readonly\n         * @member {number}\n         */\n        this._overrideWidth = options.width;\n\n        /**\n         * A height override for rasterization on load\n         * @readonly\n         * @member {number}\n         */\n        this._overrideHeight = options.height;\n\n        /**\n         * Call when completely loaded\n         * @private\n         * @member {function}\n         */\n        this._resolve = null;\n\n        /**\n         * Cross origin value to use\n         * @private\n         * @member {boolean|string}\n         */\n        this._crossorigin = options.crossorigin;\n\n        /**\n         * Promise when loading\n         * @member {Promise<void>}\n         * @private\n         * @default null\n         */\n        this._load = null;\n\n        if (options.autoLoad !== false)\n        {\n            this.load();\n        }\n    }\n\n    load(): Promise<SVGResource>\n    {\n        if (this._load)\n        {\n            return this._load;\n        }\n\n        this._load = new Promise((resolve): void =>\n        {\n            // Save this until after load is finished\n            this._resolve = (): void =>\n            {\n                this.resize(this.source.width, this.source.height);\n                resolve(this);\n            };\n\n            // Convert SVG inline string to data-uri\n            if ((/^\\<svg/).test(this.svg.trim()))\n            {\n                if (!btoa)\n                {\n                    throw new Error('Your browser doesn\\'t support base64 conversions.');\n                }\n                (this as any).svg = `data:image/svg+xml;base64,${btoa(unescape(encodeURIComponent(this.svg)))}`;\n            }\n\n            this._loadSvg();\n        });\n\n        return this._load;\n    }\n\n    /**\n     * Loads an SVG image from `imageUrl` or `data URL`.\n     *\n     * @private\n     */\n    private _loadSvg(): void\n    {\n        const tempImage = new Image();\n\n        BaseImageResource.crossOrigin(tempImage, this.svg, this._crossorigin);\n        tempImage.src = this.svg;\n\n        tempImage.onerror = (event): void =>\n        {\n            if (!this._resolve)\n            {\n                return;\n            }\n\n            tempImage.onerror = null;\n            this.onError.emit(event);\n        };\n\n        tempImage.onload = (): void =>\n        {\n            if (!this._resolve)\n            {\n                return;\n            }\n\n            const svgWidth = tempImage.width;\n            const svgHeight = tempImage.height;\n\n            if (!svgWidth || !svgHeight)\n            {\n                throw new Error('The SVG image must have width and height defined (in pixels), canvas API needs them.');\n            }\n\n            // Set render size\n            let width = svgWidth * this.scale;\n            let height = svgHeight * this.scale;\n\n            if (this._overrideWidth || this._overrideHeight)\n            {\n                width = this._overrideWidth || this._overrideHeight / svgHeight * svgWidth;\n                height = this._overrideHeight || this._overrideWidth / svgWidth * svgHeight;\n            }\n            width = Math.round(width);\n            height = Math.round(height);\n\n            // Create a canvas element\n            const canvas = this.source as HTMLCanvasElement;\n\n            canvas.width = width;\n            canvas.height = height;\n            (canvas as any)._pixiId = `canvas_${uid()}`;\n\n            // Draw the Svg to the canvas\n            canvas\n                .getContext('2d')\n                .drawImage(tempImage, 0, 0, svgWidth, svgHeight, 0, 0, width, height);\n\n            this._resolve();\n            this._resolve = null;\n        };\n    }\n\n    /**\n     * Get size from an svg string using regexp.\n     *\n     * @method\n     * @param {string} svgString - a serialized svg element\n     * @return {PIXI.ISize} image extension\n     */\n    static getSize(svgString?: string): ISize\n    {\n        const sizeMatch = SVGResource.SVG_SIZE.exec(svgString);\n        const size: any = {};\n\n        if (sizeMatch)\n        {\n            size[sizeMatch[1]] = Math.round(parseFloat(sizeMatch[3]));\n            size[sizeMatch[5]] = Math.round(parseFloat(sizeMatch[7]));\n        }\n\n        return size;\n    }\n\n    /**\n     * Destroys this texture\n     * @override\n     */\n    dispose(): void\n    {\n        super.dispose();\n        this._resolve = null;\n        this._crossorigin = null;\n    }\n\n    /**\n     * Used to auto-detect the type of resource.\n     *\n     * @static\n     * @param {*} source - The source object\n     * @param {string} extension - The extension of source, if set\n     */\n    static test(source: unknown, extension?: string): boolean\n    {\n        // url file extension is SVG\n        return extension === 'svg'\n            // source is SVG data-uri\n            || (typeof source === 'string' && (/^data:image\\/svg\\+xml(;(charset=utf8|utf8))?;base64/).test(source))\n            // source is SVG inline\n            || (typeof source === 'string' && source.indexOf('<svg') === 0);\n    }\n\n    /**\n     * RegExp for SVG size.\n     *\n     * @static\n     * @constant {RegExp|string} SVG_SIZE\n     * @memberof PIXI.resources.SVGResource\n     * @example &lt;svg width=\"100\" height=\"100\"&gt;&lt;/svg&gt;\n     */\n    static SVG_SIZE = /<svg[^>]*(?:\\s(width|height)=('|\")(\\d*(?:\\.\\d+)?)(?:px)?('|\"))[^>]*(?:\\s(width|height)=('|\")(\\d*(?:\\.\\d+)?)(?:px)?('|\"))[^>]*>/i; // eslint-disable-line max-len\n}\n","import { BaseImageResource } from './BaseImageResource';\nimport { Ticker } from '@pixi/ticker';\n\nimport type { Dict } from '@pixi/utils';\n\nexport interface IVideoResourceOptions\n{\n    autoLoad?: boolean;\n    autoPlay?: boolean;\n    updateFPS?: number;\n    crossorigin?: boolean|string;\n}\n\nexport interface IVideoResourceOptionsElement\n{\n    src: string;\n    mime: string;\n}\n\n/**\n * Resource type for HTMLVideoElement.\n * @class\n * @extends PIXI.resources.BaseImageResource\n * @memberof PIXI.resources\n * @param {HTMLVideoElement|object|string|Array<string|object>} source - Video element to use.\n * @param {object} [options] - Options to use\n * @param {boolean} [options.autoLoad=true] - Start loading the video immediately\n * @param {boolean} [options.autoPlay=true] - Start playing video immediately\n * @param {number} [options.updateFPS=0] - How many times a second to update the texture from the video.\n * Leave at 0 to update at every render.\n * @param {boolean} [options.crossorigin=true] - Load image using cross origin\n */\nexport class VideoResource extends BaseImageResource\n{\n    protected _autoUpdate: boolean;\n    protected _isConnectedToTicker: boolean;\n    protected _updateFPS: number;\n    protected _msToNextUpdate: number;\n    protected autoPlay: boolean;\n    private _load: Promise<VideoResource>;\n    private _resolve: (value?: VideoResource | PromiseLike<VideoResource>) => void;\n\n    constructor(source?: HTMLVideoElement|Array<string|IVideoResourceOptionsElement>|string, options?: IVideoResourceOptions)\n    {\n        options = options || {};\n\n        if (!(source instanceof HTMLVideoElement))\n        {\n            const videoElement = document.createElement('video');\n\n            // workaround for https://github.com/pixijs/pixi.js/issues/5996\n            videoElement.setAttribute('preload', 'auto');\n            videoElement.setAttribute('webkit-playsinline', '');\n            videoElement.setAttribute('playsinline', '');\n\n            if (typeof source === 'string')\n            {\n                source = [source];\n            }\n\n            const firstSrc = (source[0] as IVideoResourceOptionsElement).src || source[0] as string;\n\n            BaseImageResource.crossOrigin(videoElement, firstSrc, options.crossorigin);\n\n            // array of objects or strings\n            for (let i = 0; i < source.length; ++i)\n            {\n                const sourceElement = document.createElement('source');\n\n                let { src, mime } = source[i] as IVideoResourceOptionsElement;\n\n                src = src || source[i] as string;\n\n                const baseSrc = src.split('?').shift().toLowerCase();\n                const ext = baseSrc.substr(baseSrc.lastIndexOf('.') + 1);\n\n                mime = mime || VideoResource.MIME_TYPES[ext] || `video/${ext}`;\n\n                sourceElement.src = src;\n                sourceElement.type = mime;\n\n                videoElement.appendChild(sourceElement);\n            }\n\n            // Override the source\n            source = videoElement;\n        }\n\n        super(source);\n\n        this.noSubImage = true;\n\n        /**\n         * `true` to use PIXI.Ticker.shared to auto update the base texture.\n         *\n         * @type {boolean}\n         * @default true\n         * @private\n         */\n        this._autoUpdate = true;\n\n        /**\n         * `true` if the instance is currently connected to PIXI.Ticker.shared to auto update the base texture.\n         *\n         * @type {boolean}\n         * @default false\n         * @private\n         */\n        this._isConnectedToTicker = false;\n\n        this._updateFPS = options.updateFPS || 0;\n        this._msToNextUpdate = 0;\n\n        /**\n         * When set to true will automatically play videos used by this texture once\n         * they are loaded. If false, it will not modify the playing state.\n         *\n         * @member {boolean}\n         * @default true\n         */\n        this.autoPlay = options.autoPlay !== false;\n\n        /**\n         * Promise when loading\n         * @member {Promise<void>}\n         * @private\n         * @default null\n         */\n        this._load = null;\n\n        /**\n         * Callback when completed with load.\n         * @member {function}\n         * @private\n         */\n        this._resolve = null;\n\n        // Bind for listeners\n        this._onCanPlay = this._onCanPlay.bind(this);\n        this._onError = this._onError.bind(this);\n\n        if (options.autoLoad !== false)\n        {\n            this.load();\n        }\n    }\n\n    /**\n     * Trigger updating of the texture\n     *\n     * @param {number} [deltaTime=0] - time delta since last tick\n     */\n    update(_deltaTime = 0): void\n    {\n        if (!this.destroyed)\n        {\n            // account for if video has had its playbackRate changed\n            const elapsedMS = Ticker.shared.elapsedMS * (this.source as HTMLVideoElement).playbackRate;\n\n            this._msToNextUpdate = Math.floor(this._msToNextUpdate - elapsedMS);\n            if (!this._updateFPS || this._msToNextUpdate <= 0)\n            {\n                super.update(/* deltaTime*/);\n                this._msToNextUpdate = this._updateFPS ? Math.floor(1000 / this._updateFPS) : 0;\n            }\n        }\n    }\n\n    /**\n     * Start preloading the video resource.\n     *\n     * @protected\n     * @return {Promise<void>} Handle the validate event\n     */\n    load(): Promise<VideoResource>\n    {\n        if (this._load)\n        {\n            return this._load;\n        }\n\n        const source = this.source as HTMLVideoElement;\n\n        if ((source.readyState === source.HAVE_ENOUGH_DATA || source.readyState === source.HAVE_FUTURE_DATA)\n            && source.width && source.height)\n        {\n            (source as any).complete = true;\n        }\n\n        source.addEventListener('play', this._onPlayStart.bind(this));\n        source.addEventListener('pause', this._onPlayStop.bind(this));\n\n        if (!this._isSourceReady())\n        {\n            source.addEventListener('canplay', this._onCanPlay);\n            source.addEventListener('canplaythrough', this._onCanPlay);\n            source.addEventListener('error', this._onError, true);\n        }\n        else\n        {\n            this._onCanPlay();\n        }\n\n        this._load = new Promise((resolve): void =>\n        {\n            if (this.valid)\n            {\n                resolve(this);\n            }\n            else\n            {\n                this._resolve = resolve;\n\n                source.load();\n            }\n        });\n\n        return this._load;\n    }\n\n    /**\n     * Handle video error events.\n     *\n     * @private\n     */\n    private _onError(event: ErrorEvent): void\n    {\n        (this.source as HTMLVideoElement).removeEventListener('error', this._onError, true);\n        this.onError.emit(event);\n    }\n\n    /**\n     * Returns true if the underlying source is playing.\n     *\n     * @private\n     * @return {boolean} True if playing.\n     */\n    private _isSourcePlaying(): boolean\n    {\n        const source = this.source as HTMLVideoElement;\n\n        return (source.currentTime > 0 && source.paused === false && source.ended === false && source.readyState > 2);\n    }\n\n    /**\n     * Returns true if the underlying source is ready for playing.\n     *\n     * @private\n     * @return {boolean} True if ready.\n     */\n    private _isSourceReady(): boolean\n    {\n        const source = this.source as HTMLVideoElement;\n\n        return source.readyState === 3 || source.readyState === 4;\n    }\n\n    /**\n     * Runs the update loop when the video is ready to play\n     *\n     * @private\n     */\n    private _onPlayStart(): void\n    {\n        // Just in case the video has not received its can play even yet..\n        if (!this.valid)\n        {\n            this._onCanPlay();\n        }\n\n        if (this.autoUpdate && !this._isConnectedToTicker)\n        {\n            Ticker.shared.add(this.update, this);\n            this._isConnectedToTicker = true;\n        }\n    }\n\n    /**\n     * Fired when a pause event is triggered, stops the update loop\n     *\n     * @private\n     */\n    private _onPlayStop(): void\n    {\n        if (this._isConnectedToTicker)\n        {\n            Ticker.shared.remove(this.update, this);\n            this._isConnectedToTicker = false;\n        }\n    }\n\n    /**\n     * Fired when the video is loaded and ready to play\n     *\n     * @private\n     */\n    private _onCanPlay(): void\n    {\n        const source = this.source as HTMLVideoElement;\n\n        source.removeEventListener('canplay', this._onCanPlay);\n        source.removeEventListener('canplaythrough', this._onCanPlay);\n\n        const valid = this.valid;\n\n        this.resize(source.videoWidth, source.videoHeight);\n\n        // prevent multiple loaded dispatches..\n        if (!valid && this._resolve)\n        {\n            this._resolve(this);\n            this._resolve = null;\n        }\n\n        if (this._isSourcePlaying())\n        {\n            this._onPlayStart();\n        }\n        else if (this.autoPlay)\n        {\n            source.play();\n        }\n    }\n\n    /**\n     * Destroys this texture\n     * @override\n     */\n    dispose(): void\n    {\n        if (this._isConnectedToTicker)\n        {\n            Ticker.shared.remove(this.update, this);\n        }\n\n        const source = this.source as HTMLVideoElement;\n\n        if (source)\n        {\n            source.removeEventListener('error', this._onError, true);\n            source.pause();\n            source.src = '';\n            source.load();\n        }\n        super.dispose();\n    }\n\n    /**\n     * Should the base texture automatically update itself, set to true by default\n     *\n     * @member {boolean}\n     */\n    get autoUpdate(): boolean\n    {\n        return this._autoUpdate;\n    }\n\n    set autoUpdate(value: boolean)\n    {\n        if (value !== this._autoUpdate)\n        {\n            this._autoUpdate = value;\n\n            if (!this._autoUpdate && this._isConnectedToTicker)\n            {\n                Ticker.shared.remove(this.update, this);\n                this._isConnectedToTicker = false;\n            }\n            else if (this._autoUpdate && !this._isConnectedToTicker && this._isSourcePlaying())\n            {\n                Ticker.shared.add(this.update, this);\n                this._isConnectedToTicker = true;\n            }\n        }\n    }\n\n    /**\n     * How many times a second to update the texture from the video. Leave at 0 to update at every render.\n     * A lower fps can help performance, as updating the texture at 60fps on a 30ps video may not be efficient.\n     *\n     * @member {number}\n     */\n    get updateFPS(): number\n    {\n        return this._updateFPS;\n    }\n\n    set updateFPS(value: number)\n    {\n        if (value !== this._updateFPS)\n        {\n            this._updateFPS = value;\n        }\n    }\n\n    /**\n     * Used to auto-detect the type of resource.\n     *\n     * @static\n     * @param {*} source - The source object\n     * @param {string} extension - The extension of source, if set\n     * @return {boolean} `true` if video source\n     */\n    static test(source: unknown, extension?: string): source is HTMLVideoElement\n    {\n        return (source instanceof HTMLVideoElement)\n            || VideoResource.TYPES.indexOf(extension) > -1;\n    }\n\n    /**\n     * List of common video file extensions supported by VideoResource.\n     * @constant\n     * @member {Array<string>}\n     * @static\n     * @readonly\n     */\n    static TYPES = ['mp4', 'm4v', 'webm', 'ogg', 'ogv', 'h264', 'avi', 'mov'];\n\n    /**\n     * Map of video MIME types that can't be directly derived from file extensions.\n     * @constant\n     * @member {object}\n     * @static\n     * @readonly\n     */\n    static MIME_TYPES: Dict<string> = {\n        ogv: 'video/ogg',\n        mov: 'video/quicktime',\n        m4v: 'video/mp4',\n    };\n}\n","import { BaseImageResource } from './BaseImageResource';\n\n/**\n * Resource type for ImageBitmap.\n * @class\n * @extends PIXI.resources.BaseImageResource\n * @memberof PIXI.resources\n * @param {ImageBitmap} source - Image element to use\n */\nexport class ImageBitmapResource extends BaseImageResource\n{\n    /**\n     * Used to auto-detect the type of resource.\n     *\n     * @static\n     * @param {ImageBitmap} source - The source object\n     * @return {boolean} `true` if source is an ImageBitmap\n     */\n    static test(source: unknown): source is ImageBitmap\n    {\n        return !!window.createImageBitmap && source instanceof ImageBitmap;\n    }\n}\n","import { INSTALLED } from './autoDetectResource';\nimport { ArrayResource } from './ArrayResource';\nimport { BufferResource } from './BufferResource';\nimport { CanvasResource } from './CanvasResource';\nimport { CubeResource } from './CubeResource';\nimport { ImageResource } from './ImageResource';\nimport { SVGResource } from './SVGResource';\nimport { VideoResource } from './VideoResource';\nimport { ImageBitmapResource } from './ImageBitmapResource';\n\n/**\n * Collection of base resource types supported by PixiJS.\n *\n * Resources are used by {@link PIXI.BaseTexture} to handle different media types\n * such as images, video, SVG graphics, etc. In most use-cases, you should not\n * instantiate the resources directly. The easy thing is to use\n * {@link PIXI.BaseTexture.from}.\n * @example\n * const baseTexture = PIXI.BaseTexture.from('path/to/image.jpg');\n * @namespace PIXI.resources\n */\nexport * from './Resource';\nexport * from './BaseImageResource';\n\nINSTALLED.push(\n    ImageResource,\n    ImageBitmapResource,\n    CanvasResource,\n    VideoResource,\n    SVGResource,\n    BufferResource,\n    CubeResource,\n    ArrayResource\n);\n\nexport * from './autoDetectResource';\nexport * from './AbstractMultiResource';\nexport * from './ArrayResource';\nexport * from './BufferResource';\nexport * from './CanvasResource';\nexport * from './CubeResource';\nexport * from './ImageResource';\nexport * from './SVGResource';\nexport * from './VideoResource';\nexport * from './ImageBitmapResource';\n","import type { Renderer } from './Renderer';\n\n/**\n * System is a base class used for extending systems used by the {@link PIXI.Renderer}\n *\n * @see PIXI.Renderer#addSystem\n * @class\n * @memberof PIXI\n */\nexport class System\n{\n    // public because of Filter usage,\n    // protected because usually renderer it already known by those who use the system\n    renderer: Renderer;\n    /**\n     * @param {PIXI.Renderer} renderer - The renderer this manager works for.\n     */\n    constructor(renderer: Renderer)\n    {\n        /**\n         * The renderer this manager works for.\n         *\n         * @member {PIXI.Renderer}\n         */\n        this.renderer = renderer;\n    }\n\n    /**\n     * Generic destroy methods to be overridden by the subclass\n     */\n    destroy(): void\n    {\n        (this as any).renderer = null;\n    }\n}\n","import { ALPHA_MODES } from '@pixi/constants';\nimport { BufferResource } from './BufferResource';\n\nimport type { BaseTexture } from '../BaseTexture';\nimport type { Renderer } from '../../Renderer';\nimport type { GLTexture } from '../GLTexture';\n/**\n * Resource type for DepthTexture.\n * @class\n * @extends PIXI.resources.BufferResource\n * @memberof PIXI.resources\n */\nexport class DepthResource extends BufferResource\n{\n    /**\n     * Upload the texture to the GPU.\n     * @param {PIXI.Renderer} renderer - Upload to the renderer\n     * @param {PIXI.BaseTexture} baseTexture - Reference to parent texture\n     * @param {PIXI.GLTexture} glTexture - glTexture\n     * @returns {boolean} true is success\n     */\n    upload(renderer: Renderer, baseTexture: BaseTexture, glTexture: GLTexture): boolean\n    {\n        const gl = renderer.gl;\n\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, baseTexture.alphaMode === ALPHA_MODES.UNPACK);\n\n        if (glTexture.width === baseTexture.width && glTexture.height === baseTexture.height)\n        {\n            gl.texSubImage2D(\n                baseTexture.target,\n                0,\n                0,\n                0,\n                baseTexture.width,\n                baseTexture.height,\n                baseTexture.format,\n                baseTexture.type,\n                this.data,\n            );\n        }\n        else\n        {\n            glTexture.width = baseTexture.width;\n            glTexture.height = baseTexture.height;\n\n            gl.texImage2D(\n                baseTexture.target,\n                0,\n                //  gl.DEPTH_COMPONENT16 Needed for depth to render properly in webgl2.0\n                renderer.context.webGLVersion === 1 ? gl.DEPTH_COMPONENT : gl.DEPTH_COMPONENT16,\n                baseTexture.width,\n                baseTexture.height,\n                0,\n                baseTexture.format,\n                baseTexture.type,\n                this.data,\n            );\n        }\n\n        return true;\n    }\n}\n","import { Runner } from '@pixi/runner';\nimport { BaseTexture } from '../textures/BaseTexture';\nimport { DepthResource } from '../textures/resources/DepthResource';\nimport { FORMATS, MIPMAP_MODES, SCALE_MODES, TYPES, MSAA_QUALITY } from '@pixi/constants';\n\nimport type { GLFramebuffer } from './GLFramebuffer';\n\n/**\n * Frame buffer used by the BaseRenderTexture\n *\n * @class\n * @memberof PIXI\n */\nexport class Framebuffer\n{\n    public width: number;\n    public height: number;\n    public multisample: MSAA_QUALITY;\n    stencil: boolean;\n    depth: boolean;\n    dirtyId: number;\n    dirtyFormat: number;\n    dirtySize: number;\n    depthTexture: BaseTexture;\n    colorTextures: Array<BaseTexture>;\n    glFramebuffers: {[key: string]: GLFramebuffer};\n    disposeRunner: Runner;\n    /**\n     * @param {number} width - Width of the frame buffer\n     * @param {number} height - Height of the frame buffer\n     */\n    constructor(width: number, height: number)\n    {\n        /**\n         * Width of framebuffer in pixels\n         * @member {number}\n         */\n        this.width = Math.ceil(width || 100);\n        /**\n         * Height of framebuffer in pixels\n         * @member {number}\n         */\n        this.height = Math.ceil(height || 100);\n\n        this.stencil = false;\n        this.depth = false;\n\n        this.dirtyId = 0;\n        this.dirtyFormat = 0;\n        this.dirtySize = 0;\n\n        this.depthTexture = null;\n        this.colorTextures = [];\n\n        this.glFramebuffers = {};\n\n        this.disposeRunner = new Runner('disposeFramebuffer');\n\n        /**\n         * Desired number of samples for antialiasing. 0 means AA should not be used.\n         *\n         * Experimental WebGL2 feature, allows to use antialiasing in individual renderTextures.\n         * Antialiasing is the same as for main buffer with renderer `antialias:true` options.\n         * Seriously affects GPU memory consumption and GPU performance.\n         *\n         *```js\n         * renderTexture.framebuffer.multisample = PIXI.MSAA_QUALITY.HIGH;\n         * //...\n         * renderer.render(renderTexture, myContainer);\n         * renderer.framebuffer.blit(); // copies data from MSAA framebuffer to texture\n         *  ```\n         *\n         * @member {PIXI.MSAA_QUALITY}\n         * @default PIXI.MSAA_QUALITY.NONE\n         */\n        this.multisample = MSAA_QUALITY.NONE;\n    }\n\n    /**\n     * Reference to the colorTexture.\n     *\n     * @member {PIXI.BaseTexture[]}\n     * @readonly\n     */\n    get colorTexture(): BaseTexture\n    {\n        return this.colorTextures[0];\n    }\n\n    /**\n     * Add texture to the colorTexture array\n     *\n     * @param {number} [index=0] - Index of the array to add the texture to\n     * @param {PIXI.BaseTexture} [texture] - Texture to add to the array\n     */\n    addColorTexture(index = 0, texture?: BaseTexture): this\n    {\n        // TODO add some validation to the texture - same width / height etc?\n        this.colorTextures[index] = texture || new BaseTexture(null, {\n            scaleMode: SCALE_MODES.NEAREST,\n            resolution: 1,\n            mipmap: MIPMAP_MODES.OFF,\n            width: this.width,\n            height: this.height,\n        });\n\n        this.dirtyId++;\n        this.dirtyFormat++;\n\n        return this;\n    }\n\n    /**\n     * Add a depth texture to the frame buffer\n     *\n     * @param {PIXI.BaseTexture} [texture] - Texture to add\n     */\n    addDepthTexture(texture?: BaseTexture): this\n    {\n        /* eslint-disable max-len */\n        this.depthTexture = texture || new BaseTexture(new DepthResource(null, { width: this.width, height: this.height }), {\n            scaleMode: SCALE_MODES.NEAREST,\n            resolution: 1,\n            width: this.width,\n            height: this.height,\n            mipmap: MIPMAP_MODES.OFF,\n            format: FORMATS.DEPTH_COMPONENT,\n            type: TYPES.UNSIGNED_SHORT,\n        });\n\n        this.dirtyId++;\n        this.dirtyFormat++;\n\n        return this;\n    }\n\n    /**\n     * Enable depth on the frame buffer\n     */\n    enableDepth(): this\n    {\n        this.depth = true;\n\n        this.dirtyId++;\n        this.dirtyFormat++;\n\n        return this;\n    }\n\n    /**\n     * Enable stencil on the frame buffer\n     */\n    enableStencil(): this\n    {\n        this.stencil = true;\n\n        this.dirtyId++;\n        this.dirtyFormat++;\n\n        return this;\n    }\n\n    /**\n     * Resize the frame buffer\n     *\n     * @param {number} width - Width of the frame buffer to resize to\n     * @param {number} height - Height of the frame buffer to resize to\n     */\n    resize(width: number, height: number): void\n    {\n        width = Math.ceil(width);\n        height = Math.ceil(height);\n\n        if (width === this.width && height === this.height) return;\n\n        this.width = width;\n        this.height = height;\n\n        this.dirtyId++;\n        this.dirtySize++;\n\n        for (let i = 0; i < this.colorTextures.length; i++)\n        {\n            const texture = this.colorTextures[i];\n            const resolution = texture.resolution;\n\n            // take into acount the fact the texture may have a different resolution..\n            texture.setSize(width / resolution, height / resolution);\n        }\n\n        if (this.depthTexture)\n        {\n            const resolution = this.depthTexture.resolution;\n\n            this.depthTexture.setSize(width / resolution, height / resolution);\n        }\n    }\n\n    /**\n     * Disposes WebGL resources that are connected to this geometry\n     */\n    dispose(): void\n    {\n        this.disposeRunner.emit(this, false);\n    }\n\n    /**\n     * Destroys and removes the depth texture added to this framebuffer.\n     */\n    destroyDepthTexture(): void\n    {\n        if (this.depthTexture)\n        {\n            this.depthTexture.destroy();\n            this.depthTexture = null;\n\n            ++this.dirtyId;\n            ++this.dirtyFormat;\n        }\n    }\n}\n","import { BaseTexture } from '../textures/BaseTexture';\nimport { Framebuffer } from '../framebuffer/Framebuffer';\n\nimport type { IBaseTextureOptions } from '../textures/BaseTexture';\nimport type { MaskData } from '../mask/MaskData';\n\nexport interface BaseRenderTexture extends GlobalMixins.BaseRenderTexture, BaseTexture {}\n\n/**\n * A BaseRenderTexture is a special texture that allows any PixiJS display object to be rendered to it.\n *\n * __Hint__: All DisplayObjects (i.e. Sprites) that render to a BaseRenderTexture should be preloaded\n * otherwise black rectangles will be drawn instead.\n *\n * A BaseRenderTexture takes a snapshot of any Display Object given to its render method. The position\n * and rotation of the given Display Objects is ignored. For example:\n *\n * ```js\n * let renderer = PIXI.autoDetectRenderer();\n * let baseRenderTexture = new PIXI.BaseRenderTexture({ width: 800, height: 600 });\n * let renderTexture = new PIXI.RenderTexture(baseRenderTexture);\n * let sprite = PIXI.Sprite.from(\"spinObj_01.png\");\n *\n * sprite.position.x = 800/2;\n * sprite.position.y = 600/2;\n * sprite.anchor.x = 0.5;\n * sprite.anchor.y = 0.5;\n *\n * renderer.render(sprite, renderTexture);\n * ```\n *\n * The Sprite in this case will be rendered using its local transform. To render this sprite at 0,0\n * you can clear the transform\n *\n * ```js\n *\n * sprite.setTransform()\n *\n * let baseRenderTexture = new PIXI.BaseRenderTexture({ width: 100, height: 100 });\n * let renderTexture = new PIXI.RenderTexture(baseRenderTexture);\n *\n * renderer.render(sprite, renderTexture);  // Renders to center of RenderTexture\n * ```\n *\n * @class\n * @extends PIXI.BaseTexture\n * @memberof PIXI\n */\nexport class BaseRenderTexture extends BaseTexture\n{\n    public clearColor: number[];\n    public framebuffer: Framebuffer;\n    maskStack: Array<MaskData>;\n    filterStack: Array<any>;\n    /**\n     * @param {object} [options]\n     * @param {number} [options.width=100] - The width of the base render texture.\n     * @param {number} [options.height=100] - The height of the base render texture.\n     * @param {PIXI.SCALE_MODES} [options.scaleMode] - See {@link PIXI.SCALE_MODES} for possible values.\n     * @param {number} [options.resolution=1] - The resolution / device pixel ratio of the texture being generated.\n     */\n    constructor(options: IBaseTextureOptions)\n    {\n        if (typeof options === 'number')\n        {\n            /* eslint-disable prefer-rest-params */\n            // Backward compatibility of signature\n            const width = arguments[0];\n            const height = arguments[1];\n            const scaleMode = arguments[2];\n            const resolution = arguments[3];\n\n            options = { width, height, scaleMode, resolution };\n            /* eslint-enable prefer-rest-params */\n        }\n\n        super(null, options);\n\n        const { width, height } = options || {};\n\n        // Set defaults\n        this.mipmap = 0;\n        this.width = Math.ceil(width) || 100;\n        this.height = Math.ceil(height) || 100;\n        this.valid = true;\n\n        this.clearColor = [0, 0, 0, 0];\n\n        this.framebuffer = new Framebuffer(this.width * this.resolution, this.height * this.resolution)\n            .addColorTexture(0, this);\n\n        // TODO - could this be added the systems?\n\n        /**\n         * The data structure for the stencil masks.\n         *\n         * @member {PIXI.MaskData[]}\n         */\n        this.maskStack = [];\n\n        /**\n         * The data structure for the filters.\n         *\n         * @member {Object[]}\n         */\n        this.filterStack = [{}];\n    }\n\n    /**\n     * Resizes the BaseRenderTexture.\n     *\n     * @param {number} width - The width to resize to.\n     * @param {number} height - The height to resize to.\n     */\n    resize(width: number, height: number): void\n    {\n        width = Math.ceil(width);\n        height = Math.ceil(height);\n        this.framebuffer.resize(width * this.resolution, height * this.resolution);\n    }\n\n    /**\n     * Frees the texture and framebuffer from WebGL memory without destroying this texture object.\n     * This means you can still use the texture later which will upload it to GPU\n     * memory again.\n     *\n     * @fires PIXI.BaseTexture#dispose\n     */\n    dispose(): void\n    {\n        this.framebuffer.dispose();\n\n        super.dispose();\n    }\n\n    /**\n     * Destroys this texture.\n     */\n    destroy(): void\n    {\n        super.destroy();\n\n        this.framebuffer.destroyDepthTexture();\n        this.framebuffer = null;\n    }\n}\n","import { groupD8 } from '@pixi/math';\n\nimport type { Rectangle, ISize } from '@pixi/math';\n\n/**\n * Stores a texture's frame in UV coordinates, in\n * which everything lies in the rectangle `[(0,0), (1,0),\n * (1,1), (0,1)]`.\n *\n * | Corner       | Coordinates |\n * |--------------|-------------|\n * | Top-Left     | `(x0,y0)`   |\n * | Top-Right    | `(x1,y1)`   |\n * | Bottom-Right | `(x2,y2)`   |\n * | Bottom-Left  | `(x3,y3)`   |\n *\n * @class\n * @protected\n * @memberof PIXI\n */\nexport class TextureUvs\n{\n    public x0: number;\n    public y0: number;\n    public x1: number;\n    public y1: number;\n    public x2: number;\n    public y2: number;\n    public x3: number;\n    public y3: number;\n    public uvsFloat32: Float32Array;\n\n    constructor()\n    {\n        /**\n         * X-component of top-left corner `(x0,y0)`.\n         *\n         * @member {number}\n         */\n        this.x0 = 0;\n\n        /**\n         * Y-component of top-left corner `(x0,y0)`.\n         *\n         * @member {number}\n         */\n        this.y0 = 0;\n\n        /**\n         * X-component of top-right corner `(x1,y1)`.\n         *\n         * @member {number}\n         */\n        this.x1 = 1;\n\n        /**\n         * Y-component of top-right corner `(x1,y1)`.\n         *\n         * @member {number}\n         */\n        this.y1 = 0;\n\n        /**\n         * X-component of bottom-right corner `(x2,y2)`.\n         *\n         * @member {number}\n         */\n        this.x2 = 1;\n\n        /**\n         * Y-component of bottom-right corner `(x2,y2)`.\n         *\n         * @member {number}\n         */\n        this.y2 = 1;\n\n        /**\n         * X-component of bottom-left corner `(x3,y3)`.\n         *\n         * @member {number}\n         */\n        this.x3 = 0;\n\n        /**\n         * Y-component of bottom-right corner `(x3,y3)`.\n         *\n         * @member {number}\n         */\n        this.y3 = 1;\n\n        this.uvsFloat32 = new Float32Array(8);\n    }\n\n    /**\n     * Sets the texture Uvs based on the given frame information.\n     *\n     * @protected\n     * @param {PIXI.Rectangle} frame - The frame of the texture\n     * @param {PIXI.Rectangle} baseFrame - The base frame of the texture\n     * @param {number} rotate - Rotation of frame, see {@link PIXI.groupD8}\n     */\n    set(frame: Rectangle, baseFrame: ISize, rotate: number): void\n    {\n        const tw = baseFrame.width;\n        const th = baseFrame.height;\n\n        if (rotate)\n        {\n            // width and height div 2 div baseFrame size\n            const w2 = frame.width / 2 / tw;\n            const h2 = frame.height / 2 / th;\n\n            // coordinates of center\n            const cX = (frame.x / tw) + w2;\n            const cY = (frame.y / th) + h2;\n\n            rotate = groupD8.add(rotate, groupD8.NW); // NW is top-left corner\n            this.x0 = cX + (w2 * groupD8.uX(rotate));\n            this.y0 = cY + (h2 * groupD8.uY(rotate));\n\n            rotate = groupD8.add(rotate, 2); // rotate 90 degrees clockwise\n            this.x1 = cX + (w2 * groupD8.uX(rotate));\n            this.y1 = cY + (h2 * groupD8.uY(rotate));\n\n            rotate = groupD8.add(rotate, 2);\n            this.x2 = cX + (w2 * groupD8.uX(rotate));\n            this.y2 = cY + (h2 * groupD8.uY(rotate));\n\n            rotate = groupD8.add(rotate, 2);\n            this.x3 = cX + (w2 * groupD8.uX(rotate));\n            this.y3 = cY + (h2 * groupD8.uY(rotate));\n        }\n        else\n        {\n            this.x0 = frame.x / tw;\n            this.y0 = frame.y / th;\n\n            this.x1 = (frame.x + frame.width) / tw;\n            this.y1 = frame.y / th;\n\n            this.x2 = (frame.x + frame.width) / tw;\n            this.y2 = (frame.y + frame.height) / th;\n\n            this.x3 = frame.x / tw;\n            this.y3 = (frame.y + frame.height) / th;\n        }\n\n        this.uvsFloat32[0] = this.x0;\n        this.uvsFloat32[1] = this.y0;\n        this.uvsFloat32[2] = this.x1;\n        this.uvsFloat32[3] = this.y1;\n        this.uvsFloat32[4] = this.x2;\n        this.uvsFloat32[5] = this.y2;\n        this.uvsFloat32[6] = this.x3;\n        this.uvsFloat32[7] = this.y3;\n    }\n}\n","import { BaseTexture } from './BaseTexture';\nimport { ImageResource } from './resources/ImageResource';\nimport { CanvasResource } from './resources/CanvasResource';\nimport { TextureUvs } from './TextureUvs';\nimport { settings } from '@pixi/settings';\nimport { Rectangle, Point } from '@pixi/math';\nimport { uid, TextureCache, getResolutionOfUrl, EventEmitter } from '@pixi/utils';\n\nimport type { IPointData } from '@pixi/math';\nimport type { IBaseTextureOptions, ImageSource } from './BaseTexture';\nimport type { TextureMatrix } from './TextureMatrix';\n\nconst DEFAULT_UVS = new TextureUvs();\n\nexport type TextureSource = string|BaseTexture|ImageSource;\n\nexport interface Texture extends GlobalMixins.Texture, EventEmitter {}\n\n/**\n * A texture stores the information that represents an image or part of an image.\n *\n * It cannot be added to the display list directly; instead use it as the texture for a Sprite.\n * If no frame is provided for a texture, then the whole image is used.\n *\n * You can directly create a texture from an image and then reuse it multiple times like this :\n *\n * ```js\n * let texture = PIXI.Texture.from('assets/image.png');\n * let sprite1 = new PIXI.Sprite(texture);\n * let sprite2 = new PIXI.Sprite(texture);\n * ```\n *\n * If you didnt pass the texture frame to constructor, it enables `noFrame` mode:\n * it subscribes on baseTexture events, it automatically resizes at the same time as baseTexture.\n *\n * Textures made from SVGs, loaded or not, cannot be used before the file finishes processing.\n * You can check for this by checking the sprite's _textureID property.\n * ```js\n * var texture = PIXI.Texture.from('assets/image.svg');\n * var sprite1 = new PIXI.Sprite(texture);\n * //sprite1._textureID should not be undefined if the texture has finished processing the SVG file\n * ```\n * You can use a ticker or rAF to ensure your sprites load the finished textures after processing. See issue #3068.\n *\n * @class\n * @extends PIXI.utils.EventEmitter\n * @memberof PIXI\n */\nexport class Texture extends EventEmitter\n{\n    public baseTexture: BaseTexture;\n    public orig: Rectangle;\n    public trim: Rectangle;\n    public valid: boolean;\n    public noFrame: boolean;\n    public defaultAnchor: Point;\n    public uvMatrix: TextureMatrix;\n    protected _rotate: number;\n    _updateID: number;\n    _frame: Rectangle;\n    _uvs: TextureUvs;\n    textureCacheIds: Array<string>;\n\n    /**\n     * @param {PIXI.BaseTexture} baseTexture - The base texture source to create the texture from\n     * @param {PIXI.Rectangle} [frame] - The rectangle frame of the texture to show\n     * @param {PIXI.Rectangle} [orig] - The area of original texture\n     * @param {PIXI.Rectangle} [trim] - Trimmed rectangle of original texture\n     * @param {number} [rotate] - indicates how the texture was rotated by texture packer. See {@link PIXI.groupD8}\n     * @param {PIXI.IPointData} [anchor] - Default anchor point used for sprite placement / rotation\n     */\n    constructor(baseTexture: BaseTexture, frame?: Rectangle,\n        orig?: Rectangle, trim?: Rectangle, rotate?: number, anchor?: IPointData)\n    {\n        super();\n\n        /**\n         * Does this Texture have any frame data assigned to it?\n         *\n         * This mode is enabled automatically if no frame was passed inside constructor.\n         *\n         * In this mode texture is subscribed to baseTexture events, and fires `update` on any change.\n         *\n         * Beware, after loading or resize of baseTexture event can fired two times!\n         * If you want more control, subscribe on baseTexture itself.\n         *\n         * ```js\n         * texture.on('update', () => {});\n         * ```\n         *\n         * Any assignment of `frame` switches off `noFrame` mode.\n         *\n         * @member {boolean}\n         */\n        this.noFrame = false;\n\n        if (!frame)\n        {\n            this.noFrame = true;\n            frame = new Rectangle(0, 0, 1, 1);\n        }\n\n        if (baseTexture instanceof Texture)\n        {\n            baseTexture = baseTexture.baseTexture;\n        }\n\n        /**\n         * The base texture that this texture uses.\n         *\n         * @member {PIXI.BaseTexture}\n         */\n        this.baseTexture = baseTexture;\n\n        /**\n         * This is the area of the BaseTexture image to actually copy to the Canvas / WebGL when rendering,\n         * irrespective of the actual frame size or placement (which can be influenced by trimmed texture atlases)\n         *\n         * @member {PIXI.Rectangle}\n         */\n        this._frame = frame;\n\n        /**\n         * This is the trimmed area of original texture, before it was put in atlas\n         * Please call `updateUvs()` after you change coordinates of `trim` manually.\n         *\n         * @member {PIXI.Rectangle}\n         */\n        this.trim = trim;\n\n        /**\n         * This will let the renderer know if the texture is valid. If it's not then it cannot be rendered.\n         *\n         * @member {boolean}\n         */\n        this.valid = false;\n\n        /**\n         * The WebGL UV data cache. Can be used as quad UV\n         *\n         * @member {PIXI.TextureUvs}\n         * @protected\n         */\n        this._uvs = DEFAULT_UVS;\n\n        /**\n         * Default TextureMatrix instance for this texture\n         * By default that object is not created because its heavy\n         *\n         * @member {PIXI.TextureMatrix}\n         */\n        this.uvMatrix = null;\n\n        /**\n         * This is the area of original texture, before it was put in atlas\n         *\n         * @member {PIXI.Rectangle}\n         */\n        this.orig = orig || frame;// new Rectangle(0, 0, 1, 1);\n\n        this._rotate = Number(rotate || 0);\n\n        if (rotate as any === true)\n        {\n            // this is old texturepacker legacy, some games/libraries are passing \"true\" for rotated textures\n            this._rotate = 2;\n        }\n        else if (this._rotate % 2 !== 0)\n        {\n            throw new Error('attempt to use diamond-shaped UVs. If you are sure, set rotation manually');\n        }\n\n        /**\n         * Anchor point that is used as default if sprite is created with this texture.\n         * Changing the `defaultAnchor` at a later point of time will not update Sprite's anchor point.\n         * @member {PIXI.Point}\n         * @default {0,0}\n         */\n        this.defaultAnchor = anchor ? new Point(anchor.x, anchor.y) : new Point(0, 0);\n\n        /**\n         * Update ID is observed by sprites and TextureMatrix instances.\n         * Call updateUvs() to increment it.\n         *\n         * @member {number}\n         * @protected\n         */\n\n        this._updateID = 0;\n\n        /**\n         * The ids under which this Texture has been added to the texture cache. This is\n         * automatically set as long as Texture.addToCache is used, but may not be set if a\n         * Texture is added directly to the TextureCache array.\n         *\n         * @member {string[]}\n         */\n        this.textureCacheIds = [];\n\n        if (!baseTexture.valid)\n        {\n            baseTexture.once('loaded', this.onBaseTextureUpdated, this);\n        }\n        else if (this.noFrame)\n        {\n            // if there is no frame we should monitor for any base texture changes..\n            if (baseTexture.valid)\n            {\n                this.onBaseTextureUpdated(baseTexture);\n            }\n        }\n        else\n        {\n            this.frame = frame;\n        }\n\n        if (this.noFrame)\n        {\n            baseTexture.on('update', this.onBaseTextureUpdated, this);\n        }\n    }\n\n    /**\n     * Updates this texture on the gpu.\n     *\n     * Calls the TextureResource update.\n     *\n     * If you adjusted `frame` manually, please call `updateUvs()` instead.\n     *\n     */\n    update(): void\n    {\n        if (this.baseTexture.resource)\n        {\n            this.baseTexture.resource.update();\n        }\n    }\n\n    /**\n     * Called when the base texture is updated\n     *\n     * @protected\n     * @param {PIXI.BaseTexture} baseTexture - The base texture.\n     */\n    onBaseTextureUpdated(baseTexture: BaseTexture): void\n    {\n        if (this.noFrame)\n        {\n            if (!this.baseTexture.valid)\n            {\n                return;\n            }\n\n            this._frame.width = baseTexture.width;\n            this._frame.height = baseTexture.height;\n            this.valid = true;\n            this.updateUvs();\n        }\n        else\n        {\n            // TODO this code looks confusing.. boo to abusing getters and setters!\n            // if user gave us frame that has bigger size than resized texture it can be a problem\n            this.frame = this._frame;\n        }\n\n        this.emit('update', this);\n    }\n\n    /**\n     * Destroys this texture\n     *\n     * @param {boolean} [destroyBase=false] - Whether to destroy the base texture as well\n     */\n    destroy(destroyBase?: boolean): void\n    {\n        if (this.baseTexture)\n        {\n            if (destroyBase)\n            {\n                const resource = this.baseTexture as any;\n\n                // delete the texture if it exists in the texture cache..\n                // this only needs to be removed if the base texture is actually destroyed too..\n                if (resource && resource.url && TextureCache[resource.url])\n                {\n                    Texture.removeFromCache(resource.url);\n                }\n\n                this.baseTexture.destroy();\n            }\n\n            this.baseTexture.off('loaded', this.onBaseTextureUpdated, this);\n            this.baseTexture.off('update', this.onBaseTextureUpdated, this);\n\n            this.baseTexture = null;\n        }\n\n        this._frame = null;\n        this._uvs = null;\n        this.trim = null;\n        this.orig = null;\n\n        this.valid = false;\n\n        Texture.removeFromCache(this);\n        this.textureCacheIds = null;\n    }\n\n    /**\n     * Creates a new texture object that acts the same as this one.\n     *\n     * @return {PIXI.Texture} The new texture\n     */\n    clone(): Texture\n    {\n        return new Texture(this.baseTexture,\n            this.frame.clone(),\n            this.orig.clone(),\n            this.trim && this.trim.clone(),\n            this.rotate,\n            this.defaultAnchor\n        );\n    }\n\n    /**\n     * Updates the internal WebGL UV cache. Use it after you change `frame` or `trim` of the texture.\n     * Call it after changing the frame\n     */\n    updateUvs(): void\n    {\n        if (this._uvs === DEFAULT_UVS)\n        {\n            this._uvs = new TextureUvs();\n        }\n\n        this._uvs.set(this._frame, this.baseTexture, this.rotate);\n\n        this._updateID++;\n    }\n\n    /**\n     * Helper function that creates a new Texture based on the source you provide.\n     * The source can be - frame id, image url, video url, canvas element, video element, base texture\n     *\n     * @static\n     * @param {string|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|PIXI.BaseTexture} source\n     *        Source to create texture from\n     * @param {object} [options] See {@link PIXI.BaseTexture}'s constructor for options.\n     * @param {boolean} [strict] - Enforce strict-mode, see {@link PIXI.settings.STRICT_TEXTURE_CACHE}.\n     * @return {PIXI.Texture} The newly created texture\n     */\n    static from(source: TextureSource, options: IBaseTextureOptions = {},\n        strict = settings.STRICT_TEXTURE_CACHE): Texture\n    {\n        const isFrame = typeof source === 'string';\n        let cacheId = null;\n\n        if (isFrame)\n        {\n            cacheId = source;\n        }\n        else\n        {\n            if (!(source as any)._pixiId)\n            {\n                (source as any)._pixiId = `pixiid_${uid()}`;\n            }\n\n            cacheId = (source as any)._pixiId;\n        }\n\n        let texture = TextureCache[cacheId];\n\n        // Strict-mode rejects invalid cacheIds\n        if (isFrame && strict && !texture)\n        {\n            throw new Error(`The cacheId \"${cacheId}\" does not exist in TextureCache.`);\n        }\n\n        if (!texture)\n        {\n            if (!options.resolution)\n            {\n                options.resolution = getResolutionOfUrl(source as string);\n            }\n\n            texture = new Texture(new BaseTexture(source, options));\n            texture.baseTexture.cacheId = cacheId;\n\n            BaseTexture.addToCache(texture.baseTexture, cacheId);\n            Texture.addToCache(texture, cacheId);\n        }\n\n        // lets assume its a base texture!\n        return texture;\n    }\n\n    /**\n     * Useful for loading textures via URLs. Use instead of `Texture.from` because\n     * it does a better job of handling failed URLs more effectively. This also ignores\n     * `PIXI.settings.STRICT_TEXTURE_CACHE`. Works for Videos, SVGs, Images.\n     * @param {string} url The remote URL to load.\n     * @param {object} [options] Optional options to include\n     * @return {Promise<PIXI.Texture>} A Promise that resolves to a Texture.\n     */\n    static fromURL(url: string, options?: IBaseTextureOptions): Promise<Texture>\n    {\n        const resourceOptions = Object.assign({ autoLoad: false }, options?.resourceOptions);\n        const texture = Texture.from(url, Object.assign({ resourceOptions }, options), false);\n        const resource = texture.baseTexture.resource as ImageResource;\n\n        // The texture was already loaded\n        if (texture.baseTexture.valid)\n        {\n            return Promise.resolve(texture);\n        }\n\n        // Manually load the texture, this should allow users to handle load errors\n        return resource.load().then(() => Promise.resolve(texture));\n    }\n\n    /**\n     * Create a new Texture with a BufferResource from a Float32Array.\n     * RGBA values are floats from 0 to 1.\n     * @static\n     * @param {Float32Array|Uint8Array} buffer - The optional array to use, if no data\n     *        is provided, a new Float32Array is created.\n     * @param {number} width - Width of the resource\n     * @param {number} height - Height of the resource\n     * @param {object} [options] See {@link PIXI.BaseTexture}'s constructor for options.\n     * @return {PIXI.Texture} The resulting new BaseTexture\n     */\n    static fromBuffer(buffer: Float32Array|Uint8Array,\n        width: number, height: number, options: IBaseTextureOptions): Texture\n    {\n        return new Texture(BaseTexture.fromBuffer(buffer, width, height, options));\n    }\n\n    /**\n     * Create a texture from a source and add to the cache.\n     *\n     * @static\n     * @param {HTMLImageElement|HTMLCanvasElement} source - The input source.\n     * @param {String} imageUrl - File name of texture, for cache and resolving resolution.\n     * @param {String} [name] - Human readable name for the texture cache. If no name is\n     *        specified, only `imageUrl` will be used as the cache ID.\n     * @return {PIXI.Texture} Output texture\n     */\n    static fromLoader(source: HTMLImageElement|HTMLCanvasElement, imageUrl: string, name: string): Texture\n    {\n        const resource = new ImageResource(source as any);\n\n        resource.url = imageUrl;\n\n        const baseTexture = new BaseTexture(resource, {\n            scaleMode: settings.SCALE_MODE,\n            resolution: getResolutionOfUrl(imageUrl),\n        });\n\n        const texture = new Texture(baseTexture);\n\n        // No name, use imageUrl instead\n        if (!name)\n        {\n            name = imageUrl;\n        }\n\n        // lets also add the frame to pixi's global cache for 'fromLoader' function\n        BaseTexture.addToCache(texture.baseTexture, name);\n        Texture.addToCache(texture, name);\n\n        // also add references by url if they are different.\n        if (name !== imageUrl)\n        {\n            BaseTexture.addToCache(texture.baseTexture, imageUrl);\n            Texture.addToCache(texture, imageUrl);\n        }\n\n        return texture;\n    }\n\n    /**\n     * Adds a Texture to the global TextureCache. This cache is shared across the whole PIXI object.\n     *\n     * @static\n     * @param {PIXI.Texture} texture - The Texture to add to the cache.\n     * @param {string} id - The id that the Texture will be stored against.\n     */\n    static addToCache(texture: Texture, id: string): void\n    {\n        if (id)\n        {\n            if (texture.textureCacheIds.indexOf(id) === -1)\n            {\n                texture.textureCacheIds.push(id);\n            }\n\n            if (TextureCache[id])\n            {\n                // eslint-disable-next-line no-console\n                console.warn(`Texture added to the cache with an id [${id}] that already had an entry`);\n            }\n\n            TextureCache[id] = texture;\n        }\n    }\n\n    /**\n     * Remove a Texture from the global TextureCache.\n     *\n     * @static\n     * @param {string|PIXI.Texture} texture - id of a Texture to be removed, or a Texture instance itself\n     * @return {PIXI.Texture|null} The Texture that was removed\n     */\n    static removeFromCache(texture: string|Texture): Texture|null\n    {\n        if (typeof texture === 'string')\n        {\n            const textureFromCache = TextureCache[texture];\n\n            if (textureFromCache)\n            {\n                const index = textureFromCache.textureCacheIds.indexOf(texture);\n\n                if (index > -1)\n                {\n                    textureFromCache.textureCacheIds.splice(index, 1);\n                }\n\n                delete TextureCache[texture];\n\n                return textureFromCache;\n            }\n        }\n        else if (texture && texture.textureCacheIds)\n        {\n            for (let i = 0; i < texture.textureCacheIds.length; ++i)\n            {\n                // Check that texture matches the one being passed in before deleting it from the cache.\n                if (TextureCache[texture.textureCacheIds[i]] === texture)\n                {\n                    delete TextureCache[texture.textureCacheIds[i]];\n                }\n            }\n\n            texture.textureCacheIds.length = 0;\n\n            return texture;\n        }\n\n        return null;\n    }\n\n    /**\n     * Returns resolution of baseTexture\n     *\n     * @member {number}\n     * @readonly\n     */\n    get resolution(): number\n    {\n        return this.baseTexture.resolution;\n    }\n\n    /**\n     * The frame specifies the region of the base texture that this texture uses.\n     * Please call `updateUvs()` after you change coordinates of `frame` manually.\n     *\n     * @member {PIXI.Rectangle}\n     */\n    get frame(): Rectangle\n    {\n        return this._frame;\n    }\n\n    set frame(frame: Rectangle)\n    {\n        this._frame = frame;\n\n        this.noFrame = false;\n\n        const { x, y, width, height } = frame;\n        const xNotFit = x + width > this.baseTexture.width;\n        const yNotFit = y + height > this.baseTexture.height;\n\n        if (xNotFit || yNotFit)\n        {\n            const relationship = xNotFit && yNotFit ? 'and' : 'or';\n            const errorX = `X: ${x} + ${width} = ${x + width} > ${this.baseTexture.width}`;\n            const errorY = `Y: ${y} + ${height} = ${y + height} > ${this.baseTexture.height}`;\n\n            throw new Error('Texture Error: frame does not fit inside the base Texture dimensions: '\n                + `${errorX} ${relationship} ${errorY}`);\n        }\n\n        this.valid = width && height && this.baseTexture.valid;\n\n        if (!this.trim && !this.rotate)\n        {\n            this.orig = frame;\n        }\n\n        if (this.valid)\n        {\n            this.updateUvs();\n        }\n    }\n\n    /**\n     * Indicates whether the texture is rotated inside the atlas\n     * set to 2 to compensate for texture packer rotation\n     * set to 6 to compensate for spine packer rotation\n     * can be used to rotate or mirror sprites\n     * See {@link PIXI.groupD8} for explanation\n     *\n     * @member {number}\n     */\n    get rotate(): number\n    {\n        return this._rotate;\n    }\n\n    set rotate(rotate: number)\n    {\n        this._rotate = rotate;\n        if (this.valid)\n        {\n            this.updateUvs();\n        }\n    }\n\n    /**\n     * The width of the Texture in pixels.\n     *\n     * @member {number}\n     */\n    get width(): number\n    {\n        return this.orig.width;\n    }\n\n    /**\n     * The height of the Texture in pixels.\n     *\n     * @member {number}\n     */\n    get height(): number\n    {\n        return this.orig.height;\n    }\n\n    /**\n     * Utility function for BaseTexture|Texture cast\n     */\n    castToBaseTexture(): BaseTexture\n    {\n        return this.baseTexture;\n    }\n\n    static readonly EMPTY: Texture;\n    static readonly WHITE: Texture;\n}\n\nfunction createWhiteTexture(): Texture\n{\n    const canvas = document.createElement('canvas');\n\n    canvas.width = 16;\n    canvas.height = 16;\n\n    const context = canvas.getContext('2d');\n\n    context.fillStyle = 'white';\n    context.fillRect(0, 0, 16, 16);\n\n    return new Texture(new BaseTexture(new CanvasResource(canvas)));\n}\n\nfunction removeAllHandlers(tex: any): void\n{\n    tex.destroy = function _emptyDestroy(): void { /* empty */ };\n    tex.on = function _emptyOn(): void { /* empty */ };\n    tex.once = function _emptyOnce(): void { /* empty */ };\n    tex.emit = function _emptyEmit(): void { /* empty */ };\n}\n\n/**\n * An empty texture, used often to not have to create multiple empty textures.\n * Can not be destroyed.\n *\n * @static\n * @constant\n * @member {PIXI.Texture}\n */\n(Texture as any).EMPTY = new Texture(new BaseTexture());\nremoveAllHandlers(Texture.EMPTY);\nremoveAllHandlers(Texture.EMPTY.baseTexture);\n\n/**\n * A white texture of 16x16 size, used for graphics and other things\n * Can not be destroyed.\n *\n * @static\n * @constant\n * @member {PIXI.Texture}\n */\n(Texture as any).WHITE = createWhiteTexture();\nremoveAllHandlers(Texture.WHITE);\nremoveAllHandlers(Texture.WHITE.baseTexture);\n","import { BaseRenderTexture } from './BaseRenderTexture';\nimport { Texture } from '../textures/Texture';\n\nimport type { Rectangle } from '@pixi/math';\nimport type { Framebuffer } from '../framebuffer/Framebuffer';\nimport type { IBaseTextureOptions } from '../textures/BaseTexture';\n/**\n * A RenderTexture is a special texture that allows any PixiJS display object to be rendered to it.\n *\n * __Hint__: All DisplayObjects (i.e. Sprites) that render to a RenderTexture should be preloaded\n * otherwise black rectangles will be drawn instead.\n *\n * __Hint-2__: The actual memory allocation will happen on first render.\n * You shouldn't create renderTextures each frame just to delete them after, try to reuse them.\n *\n * A RenderTexture takes a snapshot of any Display Object given to its render method. For example:\n *\n * ```js\n * let renderer = PIXI.autoDetectRenderer();\n * let renderTexture = PIXI.RenderTexture.create({ width: 800, height: 600 });\n * let sprite = PIXI.Sprite.from(\"spinObj_01.png\");\n *\n * sprite.position.x = 800/2;\n * sprite.position.y = 600/2;\n * sprite.anchor.x = 0.5;\n * sprite.anchor.y = 0.5;\n *\n * renderer.render(sprite, renderTexture);\n * ```\n *\n * The Sprite in this case will be rendered using its local transform. To render this sprite at 0,0\n * you can clear the transform\n *\n * ```js\n *\n * sprite.setTransform()\n *\n * let renderTexture = new PIXI.RenderTexture.create(100, 100);\n *\n * renderer.render(sprite, renderTexture);  // Renders to center of RenderTexture\n * ```\n *\n * @class\n * @extends PIXI.Texture\n * @memberof PIXI\n */\nexport class RenderTexture extends Texture\n{\n    public filterFrame: Rectangle|null;\n    public filterPoolKey: string|number|null;\n    legacyRenderer: any;\n    /**\n     * @param {PIXI.BaseRenderTexture} baseRenderTexture - The base texture object that this texture uses\n     * @param {PIXI.Rectangle} [frame] - The rectangle frame of the texture to show\n     */\n    constructor(baseRenderTexture: BaseRenderTexture, frame?: Rectangle)\n    {\n        // support for legacy..\n        let _legacyRenderer = null;\n\n        if (!(baseRenderTexture instanceof BaseRenderTexture))\n        {\n            /* eslint-disable prefer-rest-params, no-console */\n            const width = arguments[1];\n            const height = arguments[2];\n            const scaleMode = arguments[3];\n            const resolution = arguments[4];\n\n            // we have an old render texture..\n            console.warn(`Please use RenderTexture.create(${width}, ${height}) instead of the ctor directly.`);\n            _legacyRenderer = arguments[0];\n            /* eslint-enable prefer-rest-params, no-console */\n\n            frame = null;\n            baseRenderTexture = new BaseRenderTexture({\n                width,\n                height,\n                scaleMode,\n                resolution,\n            });\n        }\n\n        /**\n         * The base texture object that this texture uses\n         *\n         * @member {PIXI.BaseTexture}\n         */\n        super(baseRenderTexture, frame);\n\n        this.legacyRenderer = _legacyRenderer;\n\n        /**\n         * This will let the renderer know if the texture is valid. If it's not then it cannot be rendered.\n         *\n         * @member {boolean}\n         */\n        this.valid = true;\n\n        /**\n         * Stores `sourceFrame` when this texture is inside current filter stack.\n         * You can read it inside filters.\n         *\n         * @readonly\n         * @member {PIXI.Rectangle}\n         */\n        this.filterFrame = null;\n\n        /**\n         * The key for pooled texture of FilterSystem\n         * @protected\n         * @member {string}\n         */\n        this.filterPoolKey = null;\n\n        this.updateUvs();\n    }\n\n    /**\n     * Shortcut to `this.baseTexture.framebuffer`, saves baseTexture cast.\n     * @member {PIXI.Framebuffer}\n     * @readonly\n     */\n    get framebuffer(): Framebuffer\n    {\n        return (this.baseTexture as BaseRenderTexture).framebuffer;\n    }\n\n    /**\n     * Resizes the RenderTexture.\n     *\n     * @param {number} width - The width to resize to.\n     * @param {number} height - The height to resize to.\n     * @param {boolean} [resizeBaseTexture=true] - Should the baseTexture.width and height values be resized as well?\n     */\n    resize(width: number, height: number, resizeBaseTexture = true): void\n    {\n        width = Math.ceil(width);\n        height = Math.ceil(height);\n\n        // TODO - could be not required..\n        this.valid = (width > 0 && height > 0);\n\n        this._frame.width = this.orig.width = width;\n        this._frame.height = this.orig.height = height;\n\n        if (resizeBaseTexture)\n        {\n            (this.baseTexture as BaseRenderTexture).resize(width, height);\n        }\n\n        this.updateUvs();\n    }\n\n    /**\n     * Changes the resolution of baseTexture, but does not change framebuffer size.\n     *\n     * @param {number} resolution - The new resolution to apply to RenderTexture\n     */\n    setResolution(resolution: number): void\n    {\n        const { baseTexture } = this;\n\n        if (baseTexture.resolution === resolution)\n        {\n            return;\n        }\n\n        baseTexture.setResolution(resolution);\n        this.resize(baseTexture.width, baseTexture.height, false);\n    }\n\n    /**\n     * A short hand way of creating a render texture.\n     *\n     * @param {object} [options] - Options\n     * @param {number} [options.width=100] - The width of the render texture\n     * @param {number} [options.height=100] - The height of the render texture\n     * @param {number} [options.scaleMode=PIXI.settings.SCALE_MODE] - See {@link PIXI.SCALE_MODES} for possible values\n     * @param {number} [options.resolution=1] - The resolution / device pixel ratio of the texture being generated\n     * @return {PIXI.RenderTexture} The new render texture\n     */\n    static create(options: IBaseTextureOptions): RenderTexture\n    {\n        // fallback, old-style: create(width, height, scaleMode, resolution)\n        if (typeof options === 'number')\n        {\n            /* eslint-disable prefer-rest-params */\n            options = {\n                width: options,\n                height: arguments[1],\n                scaleMode: arguments[2],\n                resolution: arguments[3],\n            };\n            /* eslint-enable prefer-rest-params */\n        }\n\n        return new RenderTexture(new BaseRenderTexture(options));\n    }\n}\n","import { RenderTexture } from './RenderTexture';\nimport { BaseRenderTexture } from './BaseRenderTexture';\nimport { nextPow2 } from '@pixi/utils';\n\nimport type { IBaseTextureOptions } from '../textures/BaseTexture';\nimport type { ISize } from '@pixi/math';\n\n/**\n * Experimental!\n *\n * Texture pool, used by FilterSystem and plugins\n * Stores collection of temporary pow2 or screen-sized renderTextures\n *\n * If you use custom RenderTexturePool for your filters, you can use methods\n * `getFilterTexture` and `returnFilterTexture` same as in\n *\n * @class\n * @memberof PIXI\n */\nexport class RenderTexturePool\n{\n    public textureOptions: IBaseTextureOptions;\n    public enableFullScreen: boolean;\n    texturePool: {[x in string|number]: RenderTexture[]};\n    private _pixelsWidth: number;\n    private _pixelsHeight: number;\n    /**\n     * @param {object} [textureOptions] - options that will be passed to BaseRenderTexture constructor\n     * @param {PIXI.SCALE_MODES} [textureOptions.scaleMode] - See {@link PIXI.SCALE_MODES} for possible values.\n     */\n    constructor(textureOptions?: IBaseTextureOptions)\n    {\n        this.texturePool = {};\n        this.textureOptions = textureOptions || {};\n        /**\n         * Allow renderTextures of the same size as screen, not just pow2\n         *\n         * Automatically sets to true after `setScreenSize`\n         *\n         * @member {boolean}\n         * @default false\n         */\n        this.enableFullScreen = false;\n\n        this._pixelsWidth = 0;\n        this._pixelsHeight = 0;\n    }\n\n    /**\n     * creates of texture with params that were specified in pool constructor\n     *\n     * @param {number} realWidth - width of texture in pixels\n     * @param {number} realHeight - height of texture in pixels\n     * @returns {RenderTexture}\n     */\n    createTexture(realWidth: number, realHeight: number): RenderTexture\n    {\n        const baseRenderTexture = new BaseRenderTexture(Object.assign({\n            width: realWidth,\n            height: realHeight,\n            resolution: 1,\n        }, this.textureOptions));\n\n        return new RenderTexture(baseRenderTexture);\n    }\n\n    /**\n     * Gets a Power-of-Two render texture or fullScreen texture\n     *\n     * @protected\n     * @param {number} minWidth - The minimum width of the render texture in real pixels.\n     * @param {number} minHeight - The minimum height of the render texture in real pixels.\n     * @param {number} [resolution=1] - The resolution of the render texture.\n     * @return {PIXI.RenderTexture} The new render texture.\n     */\n    getOptimalTexture(minWidth: number, minHeight: number, resolution = 1): RenderTexture\n    {\n        let key: number|string = RenderTexturePool.SCREEN_KEY;\n\n        minWidth *= resolution;\n        minHeight *= resolution;\n\n        if (!this.enableFullScreen || minWidth !== this._pixelsWidth || minHeight !== this._pixelsHeight)\n        {\n            minWidth = nextPow2(minWidth);\n            minHeight = nextPow2(minHeight);\n            key = ((minWidth & 0xFFFF) << 16) | (minHeight & 0xFFFF);\n        }\n\n        if (!this.texturePool[key])\n        {\n            this.texturePool[key] = [];\n        }\n\n        let renderTexture = this.texturePool[key].pop();\n\n        if (!renderTexture)\n        {\n            renderTexture = this.createTexture(minWidth, minHeight);\n        }\n\n        renderTexture.filterPoolKey = key;\n        renderTexture.setResolution(resolution);\n\n        return renderTexture;\n    }\n\n    /**\n     * Gets extra texture of the same size as input renderTexture\n     *\n     * `getFilterTexture(input, 0.5)` or `getFilterTexture(0.5, input)`\n     *\n     * @param {PIXI.RenderTexture} input - renderTexture from which size and resolution will be copied\n     * @param {number} [resolution] - override resolution of the renderTexture\n     *  It overrides, it does not multiply\n     * @returns {PIXI.RenderTexture}\n     */\n    getFilterTexture(input: RenderTexture, resolution: number): RenderTexture\n    {\n        const filterTexture = this.getOptimalTexture(input.width, input.height, resolution || input.resolution);\n\n        filterTexture.filterFrame = input.filterFrame;\n\n        return filterTexture;\n    }\n\n    /**\n     * Place a render texture back into the pool.\n     * @param {PIXI.RenderTexture} renderTexture - The renderTexture to free\n     */\n    returnTexture(renderTexture: RenderTexture): void\n    {\n        const key = renderTexture.filterPoolKey;\n\n        renderTexture.filterFrame = null;\n        this.texturePool[key].push(renderTexture);\n    }\n\n    /**\n     * Alias for returnTexture, to be compliant with FilterSystem interface\n     * @param {PIXI.RenderTexture} renderTexture - The renderTexture to free\n     */\n    returnFilterTexture(renderTexture: RenderTexture): void\n    {\n        this.returnTexture(renderTexture);\n    }\n\n    /**\n     * Clears the pool\n     *\n     * @param {boolean} [destroyTextures=true] - destroy all stored textures\n     */\n    clear(destroyTextures: boolean): void\n    {\n        destroyTextures = destroyTextures !== false;\n        if (destroyTextures)\n        {\n            for (const i in this.texturePool)\n            {\n                const textures = this.texturePool[i];\n\n                if (textures)\n                {\n                    for (let j = 0; j < textures.length; j++)\n                    {\n                        textures[j].destroy(true);\n                    }\n                }\n            }\n        }\n\n        this.texturePool = {};\n    }\n\n    /**\n     * If screen size was changed, drops all screen-sized textures,\n     * sets new screen size, sets `enableFullScreen` to true\n     *\n     * Size is measured in pixels, `renderer.view` can be passed here, not `renderer.screen`\n     *\n     * @param {PIXI.ISize} size - Initial size of screen\n     */\n    setScreenSize(size: ISize): void\n    {\n        if (size.width === this._pixelsWidth\n            && size.height === this._pixelsHeight)\n        {\n            return;\n        }\n\n        const screenKey = RenderTexturePool.SCREEN_KEY;\n        const textures = this.texturePool[screenKey];\n\n        this.enableFullScreen = size.width > 0 && size.height > 0;\n\n        if (textures)\n        {\n            for (let j = 0; j < textures.length; j++)\n            {\n                textures[j].destroy(true);\n            }\n        }\n        this.texturePool[screenKey] = [];\n\n        this._pixelsWidth = size.width;\n        this._pixelsHeight = size.height;\n    }\n\n    /**\n     * Key that is used to store fullscreen renderTextures in a pool\n     *\n     * @static\n     * @const {string}\n     */\n    static SCREEN_KEY = 'screen';\n}\n","import type { TYPES } from '@pixi/constants';\n\n/* eslint-disable max-len */\n\n/**\n * Holds the information for a single attribute structure required to render geometry.\n *\n * This does not contain the actual data, but instead has a buffer id that maps to a {@link PIXI.Buffer}\n * This can include anything from positions, uvs, normals, colors etc.\n *\n * @class\n * @memberof PIXI\n */\nexport class Attribute\n{\n    public buffer: number;\n    public size: number;\n    public normalized: boolean;\n    public type: TYPES;\n    public stride: number;\n    public start: number;\n    public instance: boolean;\n    /**\n     * @param {string} buffer - the id of the buffer that this attribute will look for\n     * @param {Number} [size=0] - the size of the attribute. If you have 2 floats per vertex (eg position x and y) this would be 2.\n     * @param {Boolean} [normalized=false] - should the data be normalized.\n     * @param {Number} [type=PIXI.TYPES.FLOAT] - what type of number is the attribute. Check {@link PIXI.TYPES} to see the ones available\n     * @param {Number} [stride=0] - How far apart (in floats) the start of each value is. (used for interleaving data)\n     * @param {Number} [start=0] - How far into the array to start reading values (used for interleaving data)\n     */\n    constructor(buffer: number, size = 0, normalized = false, type = 5126, stride?: number, start?: number, instance?: boolean)\n    {\n        this.buffer = buffer;\n        this.size = size;\n        this.normalized = normalized;\n        this.type = type;\n        this.stride = stride;\n        this.start = start;\n        this.instance = instance;\n    }\n\n    /**\n     * Destroys the Attribute.\n     */\n    destroy(): void\n    {\n        this.buffer = null;\n    }\n\n    /**\n     * Helper function that creates an Attribute based on the information provided\n     *\n     * @static\n     * @param {string} buffer - the id of the buffer that this attribute will look for\n     * @param {Number} [size=0] - the size of the attribute. If you have 2 floats per vertex (eg position x and y) this would be 2\n     * @param {Boolean} [normalized=false] - should the data be normalized.\n     * @param {Number} [type=PIXI.TYPES.FLOAT] - what type of number is the attribute. Check {@link PIXI.TYPES} to see the ones available\n     * @param {Number} [stride=0] - How far apart (in floats) the start of each value is. (used for interleaving data)\n     *\n     * @returns {PIXI.Attribute} A new {@link PIXI.Attribute} based on the information provided\n     */\n    static from(buffer: number, size?: number, normalized?: boolean, type?: TYPES, stride?: number): Attribute\n    {\n        return new Attribute(buffer, size, normalized, type, stride);\n    }\n}\n","import { Runner } from '@pixi/runner';\n\nimport type { GLBuffer } from './GLBuffer';\n\nlet UID = 0;\n/* eslint-disable max-len */\n\n/**\n * Marks places in PixiJS where you can pass Float32Array, UInt32Array, any typed arrays, and ArrayBuffer\n *\n * Same as ArrayBuffer in typescript lib, defined here just for documentation\n */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface IArrayBuffer extends ArrayBuffer\n{\n}\n\n/**\n * PixiJS classes use this type instead of ArrayBuffer and typed arrays\n * to support expressions like `geometry.buffers[0].data[0] = position.x`.\n *\n * Gives access to indexing and `length` field\n *\n * @popelyshev: If data is actually ArrayBuffer and throws Exception on indexing - its user problem :)\n */\nexport interface ITypedArray extends IArrayBuffer\n{\n    readonly length: number;\n    [index: number]: number;\n    readonly BYTES_PER_ELEMENT: number;\n}\n\n/**\n * A wrapper for data so that it can be used and uploaded by WebGL\n *\n * @class\n * @memberof PIXI\n */\nexport class Buffer\n{\n    public data: ITypedArray;\n    public index: boolean;\n    public static: boolean;\n    public id: number;\n     disposeRunner: Runner;\n    _glBuffers: {[key: number]: GLBuffer};\n    _updateID: number;\n    /**\n     * @param {ArrayBuffer| SharedArrayBuffer|ArrayBufferView} data - the data to store in the buffer.\n     * @param {boolean} [_static=true] - `true` for static buffer\n     * @param {boolean} [index=false] - `true` for index buffer\n     */\n    constructor(data?: IArrayBuffer, _static = true, index = false)\n    {\n        /**\n         * The data in the buffer, as a typed array\n         *\n         * @member {ArrayBuffer| SharedArrayBuffer | ArrayBufferView}\n         */\n        this.data = (data || new Float32Array(1)) as ITypedArray;\n\n        /**\n         * A map of renderer IDs to webgl buffer\n         *\n         * @private\n         * @member {object<number, GLBuffer>}\n         */\n        this._glBuffers = {};\n\n        this._updateID = 0;\n\n        this.index = index;\n\n        this.static = _static;\n\n        this.id = UID++;\n\n        this.disposeRunner = new Runner('disposeBuffer');\n    }\n\n    // TODO could explore flagging only a partial upload?\n    /**\n     * flags this buffer as requiring an upload to the GPU\n     * @param {ArrayBuffer|SharedArrayBuffer|ArrayBufferView} [data] - the data to update in the buffer.\n     */\n    update(data?: IArrayBuffer): void\n    {\n        this.data = (data as ITypedArray) || this.data;\n        this._updateID++;\n    }\n\n    /**\n     * disposes WebGL resources that are connected to this geometry\n     */\n    dispose(): void\n    {\n        this.disposeRunner.emit(this, false);\n    }\n\n    /**\n     * Destroys the buffer\n     */\n    destroy(): void\n    {\n        this.dispose();\n\n        this.data = null;\n    }\n\n    /**\n     * Helper function that creates a buffer based on an array or TypedArray\n     *\n     * @static\n     * @param {ArrayBufferView | number[]} data - the TypedArray that the buffer will store. If this is a regular Array it will be converted to a Float32Array.\n     * @return {PIXI.Buffer} A new Buffer based on the data provided.\n     */\n    static from(data: IArrayBuffer | number[]): Buffer\n    {\n        if (data instanceof Array)\n        {\n            data = new Float32Array(data);\n        }\n\n        return new Buffer(data);\n    }\n}\n","import type { ITypedArray } from '../Buffer';\n\nexport function getBufferType(array: ITypedArray): string|null\n{\n    if (array.BYTES_PER_ELEMENT === 4)\n    {\n        if (array instanceof Float32Array)\n        {\n            return 'Float32Array';\n        }\n        else if (array instanceof Uint32Array)\n        {\n            return 'Uint32Array';\n        }\n\n        return 'Int32Array';\n    }\n    else if (array.BYTES_PER_ELEMENT === 2)\n    {\n        if (array instanceof Uint16Array)\n        {\n            return 'Uint16Array';\n        }\n    }\n    else if (array.BYTES_PER_ELEMENT === 1)\n    {\n        if (array instanceof Uint8Array)\n        {\n            return 'Uint8Array';\n        }\n    }\n\n    // TODO map out the rest of the array elements!\n    return null;\n}\n","import { getBufferType } from './getBufferType';\n\nimport type { ITypedArray } from '../Buffer';\nimport type { Dict } from '@pixi/utils';\n\n/* eslint-disable object-shorthand */\nconst map: Dict<any> = {\n    Float32Array: Float32Array,\n    Uint32Array: Uint32Array,\n    Int32Array: Int32Array,\n    Uint8Array: Uint8Array,\n};\n\nexport function interleaveTypedArrays(arrays: Array<ITypedArray>, sizes: Array<number>): Float32Array\n{\n    let outSize = 0;\n    let stride = 0;\n    const views: Dict<any> = {};\n\n    for (let i = 0; i < arrays.length; i++)\n    {\n        stride += sizes[i];\n        outSize += arrays[i].length;\n    }\n\n    const buffer = new ArrayBuffer(outSize * 4);\n\n    let out = null;\n    let littleOffset = 0;\n\n    for (let i = 0; i < arrays.length; i++)\n    {\n        const size = sizes[i];\n        const array = arrays[i];\n\n        const type = getBufferType(array);\n\n        if (!views[type])\n        {\n            views[type] = new map[type](buffer);\n        }\n\n        out = views[type];\n\n        for (let j = 0; j < array.length; j++)\n        {\n            const indexStart = ((j / size | 0) * stride) + littleOffset;\n            const index = j % size;\n\n            out[indexStart + index] = array[j];\n        }\n\n        littleOffset += size;\n    }\n\n    return new Float32Array(buffer);\n}\n","import { Attribute } from './Attribute';\nimport { Buffer } from './Buffer';\nimport { interleaveTypedArrays } from './utils/interleaveTypedArrays';\nimport { getBufferType } from './utils/getBufferType';\nimport { Runner } from '@pixi/runner';\n\nimport type { TYPES } from '@pixi/constants';\nimport type { IArrayBuffer } from './Buffer';\nimport type { Dict } from '@pixi/utils';\n\nconst byteSizeMap: {[key: number]: number} = { 5126: 4, 5123: 2, 5121: 1 };\nlet UID = 0;\n\n/* eslint-disable object-shorthand */\nconst map: Dict<any> = {\n    Float32Array: Float32Array,\n    Uint32Array: Uint32Array,\n    Int32Array: Int32Array,\n    Uint8Array: Uint8Array,\n    Uint16Array: Uint16Array,\n};\n\n/* eslint-disable max-len */\n\n/**\n * The Geometry represents a model. It consists of two components:\n * - GeometryStyle - The structure of the model such as the attributes layout\n * - GeometryData - the data of the model - this consists of buffers.\n * This can include anything from positions, uvs, normals, colors etc.\n *\n * Geometry can be defined without passing in a style or data if required (thats how I prefer!)\n *\n * ```js\n * let geometry = new PIXI.Geometry();\n *\n * geometry.addAttribute('positions', [0, 0, 100, 0, 100, 100, 0, 100], 2);\n * geometry.addAttribute('uvs', [0,0,1,0,1,1,0,1],2)\n * geometry.addIndex([0,1,2,1,3,2])\n *\n * ```\n * @class\n * @memberof PIXI\n */\nexport class Geometry\n{\n    public buffers: Array<Buffer>;\n    public indexBuffer: Buffer;\n    public attributes: {[key: string]: Attribute};\n    public id: number;\n    public instanced: boolean;\n    public instanceCount: number;\n    glVertexArrayObjects: {[key: number]: {[key: string]: WebGLVertexArrayObject}};\n    disposeRunner: Runner;\n    refCount: number;\n    /**\n     * @param {PIXI.Buffer[]} [buffers] - an array of buffers. optional.\n     * @param {object} [attributes] - of the geometry, optional structure of the attributes layout\n     */\n    constructor(buffers: Array<Buffer> = [], attributes: {[key: string]: Attribute} = {})\n    {\n        this.buffers = buffers;\n\n        this.indexBuffer = null;\n\n        this.attributes = attributes;\n\n        /**\n         * A map of renderer IDs to webgl VAOs\n         *\n         * @protected\n         * @type {object}\n         */\n        this.glVertexArrayObjects = {};\n\n        this.id = UID++;\n\n        this.instanced = false;\n\n        /**\n         * Number of instances in this geometry, pass it to `GeometrySystem.draw()`\n         * @member {number}\n         * @default 1\n         */\n        this.instanceCount = 1;\n\n        this.disposeRunner = new Runner('disposeGeometry');\n\n        /**\n         * Count of existing (not destroyed) meshes that reference this geometry\n         * @member {number}\n         */\n        this.refCount = 0;\n    }\n\n    /**\n    *\n    * Adds an attribute to the geometry\n    * Note: `stride` and `start` should be `undefined` if you dont know them, not 0!\n    *\n    * @param {String} id - the name of the attribute (matching up to a shader)\n    * @param {PIXI.Buffer|number[]} [buffer] - the buffer that holds the data of the attribute . You can also provide an Array and a buffer will be created from it.\n    * @param {Number} [size=0] - the size of the attribute. If you have 2 floats per vertex (eg position x and y) this would be 2\n    * @param {Boolean} [normalized=false] - should the data be normalized.\n    * @param {Number} [type=PIXI.TYPES.FLOAT] - what type of number is the attribute. Check {PIXI.TYPES} to see the ones available\n    * @param {Number} [stride] - How far apart (in floats) the start of each value is. (used for interleaving data)\n    * @param {Number} [start] - How far into the array to start reading values (used for interleaving data)\n    * @param {boolean} [instance=false] - Instancing flag\n    *\n    * @return {PIXI.Geometry} returns self, useful for chaining.\n    */\n    addAttribute(id: string, buffer: Buffer|Float32Array|Uint32Array|Array<number>, size = 0, normalized = false,\n        type?: TYPES, stride?: number, start?: number, instance = false): this\n    {\n        if (!buffer)\n        {\n            throw new Error('You must pass a buffer when creating an attribute');\n        }\n\n        // check if this is a buffer!\n        if (!(buffer instanceof Buffer))\n        {\n            // its an array!\n            if (buffer instanceof Array)\n            {\n                buffer = new Float32Array(buffer);\n            }\n\n            buffer = new Buffer(buffer);\n        }\n\n        const ids = id.split('|');\n\n        if (ids.length > 1)\n        {\n            for (let i = 0; i < ids.length; i++)\n            {\n                this.addAttribute(ids[i], buffer, size, normalized, type);\n            }\n\n            return this;\n        }\n\n        let bufferIndex = this.buffers.indexOf(buffer);\n\n        if (bufferIndex === -1)\n        {\n            this.buffers.push(buffer);\n            bufferIndex = this.buffers.length - 1;\n        }\n\n        this.attributes[id] = new Attribute(bufferIndex, size, normalized, type, stride, start, instance);\n\n        // assuming that if there is instanced data then this will be drawn with instancing!\n        this.instanced = this.instanced || instance;\n\n        return this;\n    }\n\n    /**\n     * returns the requested attribute\n     *\n     * @param {String} id - the name of the attribute required\n     * @return {PIXI.Attribute} the attribute requested.\n     */\n    getAttribute(id: string): Attribute\n    {\n        return this.attributes[id];\n    }\n\n    /**\n     * returns the requested buffer\n     *\n     * @param {String} id - the name of the buffer required\n     * @return {PIXI.Buffer} the buffer requested.\n     */\n    getBuffer(id: string): Buffer\n    {\n        return this.buffers[this.getAttribute(id).buffer];\n    }\n\n    /**\n    *\n    * Adds an index buffer to the geometry\n    * The index buffer contains integers, three for each triangle in the geometry, which reference the various attribute buffers (position, colour, UV coordinates, other UV coordinates, normal, …). There is only ONE index buffer.\n    *\n    * @param {PIXI.Buffer|number[]} [buffer] - the buffer that holds the data of the index buffer. You can also provide an Array and a buffer will be created from it.\n    * @return {PIXI.Geometry} returns self, useful for chaining.\n    */\n    addIndex(buffer?: Buffer | IArrayBuffer | number[]): Geometry\n    {\n        if (!(buffer instanceof Buffer))\n        {\n            // its an array!\n            if (buffer instanceof Array)\n            {\n                buffer = new Uint16Array(buffer);\n            }\n\n            buffer = new Buffer(buffer);\n        }\n\n        buffer.index = true;\n        this.indexBuffer = buffer;\n\n        if (this.buffers.indexOf(buffer) === -1)\n        {\n            this.buffers.push(buffer);\n        }\n\n        return this;\n    }\n\n    /**\n     * returns the index buffer\n     *\n     * @return {PIXI.Buffer} the index buffer.\n     */\n    getIndex(): Buffer\n    {\n        return this.indexBuffer;\n    }\n\n    /**\n     * this function modifies the structure so that all current attributes become interleaved into a single buffer\n     * This can be useful if your model remains static as it offers a little performance boost\n     *\n     * @return {PIXI.Geometry} returns self, useful for chaining.\n     */\n    interleave(): Geometry\n    {\n        // a simple check to see if buffers are already interleaved..\n        if (this.buffers.length === 1 || (this.buffers.length === 2 && this.indexBuffer)) return this;\n\n        // assume already that no buffers are interleaved\n        const arrays = [];\n        const sizes = [];\n        const interleavedBuffer = new Buffer();\n        let i;\n\n        for (i in this.attributes)\n        {\n            const attribute = this.attributes[i];\n\n            const buffer = this.buffers[attribute.buffer];\n\n            arrays.push(buffer.data);\n\n            sizes.push((attribute.size * byteSizeMap[attribute.type]) / 4);\n\n            attribute.buffer = 0;\n        }\n\n        interleavedBuffer.data = interleaveTypedArrays(arrays, sizes);\n\n        for (i = 0; i < this.buffers.length; i++)\n        {\n            if (this.buffers[i] !== this.indexBuffer)\n            {\n                this.buffers[i].destroy();\n            }\n        }\n\n        this.buffers = [interleavedBuffer];\n\n        if (this.indexBuffer)\n        {\n            this.buffers.push(this.indexBuffer);\n        }\n\n        return this;\n    }\n\n    getSize(): number\n    {\n        for (const i in this.attributes)\n        {\n            const attribute = this.attributes[i];\n            const buffer = this.buffers[attribute.buffer];\n\n            return (buffer.data as any).length / ((attribute.stride / 4) || attribute.size);\n        }\n\n        return 0;\n    }\n\n    /**\n     * disposes WebGL resources that are connected to this geometry\n     */\n    dispose(): void\n    {\n        this.disposeRunner.emit(this, false);\n    }\n\n    /**\n     * Destroys the geometry.\n     */\n    destroy(): void\n    {\n        this.dispose();\n\n        this.buffers = null;\n        this.indexBuffer = null;\n        this.attributes = null;\n    }\n\n    /**\n     * returns a clone of the geometry\n     *\n     * @returns {PIXI.Geometry} a new clone of this geometry\n     */\n    clone(): Geometry\n    {\n        const geometry = new Geometry();\n\n        for (let i = 0; i < this.buffers.length; i++)\n        {\n            geometry.buffers[i] = new Buffer(this.buffers[i].data.slice(0));\n        }\n\n        for (const i in this.attributes)\n        {\n            const attrib = this.attributes[i];\n\n            geometry.attributes[i] = new Attribute(\n                attrib.buffer,\n                attrib.size,\n                attrib.normalized,\n                attrib.type,\n                attrib.stride,\n                attrib.start,\n                attrib.instance\n            );\n        }\n\n        if (this.indexBuffer)\n        {\n            geometry.indexBuffer = geometry.buffers[this.buffers.indexOf(this.indexBuffer)];\n            geometry.indexBuffer.index = true;\n        }\n\n        return geometry;\n    }\n\n    /**\n     * merges an array of geometries into a new single one\n     * geometry attribute styles must match for this operation to work\n     *\n     * @param {PIXI.Geometry[]} geometries - array of geometries to merge\n     * @returns {PIXI.Geometry} shiny new geometry!\n     */\n    static merge(geometries: Array<Geometry>): Geometry\n    {\n        // todo add a geometry check!\n        // also a size check.. cant be too big!]\n\n        const geometryOut = new Geometry();\n\n        const arrays = [];\n        const sizes: Array<number> = [];\n        const offsets = [];\n\n        let geometry;\n\n        // pass one.. get sizes..\n        for (let i = 0; i < geometries.length; i++)\n        {\n            geometry = geometries[i];\n\n            for (let j = 0; j < geometry.buffers.length; j++)\n            {\n                sizes[j] = sizes[j] || 0;\n                sizes[j] += geometry.buffers[j].data.length;\n                offsets[j] = 0;\n            }\n        }\n\n        // build the correct size arrays..\n        for (let i = 0; i < geometry.buffers.length; i++)\n        {\n            // TODO types!\n            arrays[i] = new map[getBufferType(geometry.buffers[i].data)](sizes[i]);\n            geometryOut.buffers[i] = new Buffer(arrays[i]);\n        }\n\n        // pass to set data..\n        for (let i = 0; i < geometries.length; i++)\n        {\n            geometry = geometries[i];\n\n            for (let j = 0; j < geometry.buffers.length; j++)\n            {\n                arrays[j].set(geometry.buffers[j].data, offsets[j]);\n                offsets[j] += geometry.buffers[j].data.length;\n            }\n        }\n\n        geometryOut.attributes = geometry.attributes;\n\n        if (geometry.indexBuffer)\n        {\n            geometryOut.indexBuffer = geometryOut.buffers[geometry.buffers.indexOf(geometry.indexBuffer)];\n            geometryOut.indexBuffer.index = true;\n\n            let offset = 0;\n            let stride = 0;\n            let offset2 = 0;\n            let bufferIndexToCount = 0;\n\n            // get a buffer\n            for (let i = 0; i < geometry.buffers.length; i++)\n            {\n                if (geometry.buffers[i] !== geometry.indexBuffer)\n                {\n                    bufferIndexToCount = i;\n                    break;\n                }\n            }\n\n            // figure out the stride of one buffer..\n            for (const i in geometry.attributes)\n            {\n                const attribute = geometry.attributes[i];\n\n                if ((attribute.buffer | 0) === bufferIndexToCount)\n                {\n                    stride += ((attribute.size * byteSizeMap[attribute.type]) / 4);\n                }\n            }\n\n            // time to off set all indexes..\n            for (let i = 0; i < geometries.length; i++)\n            {\n                const indexBufferData = geometries[i].indexBuffer.data;\n\n                for (let j = 0; j < indexBufferData.length; j++)\n                {\n                    geometryOut.indexBuffer.data[j + offset2] += offset;\n                }\n\n                offset += geometry.buffers[bufferIndexToCount].data.length / (stride);\n                offset2 += indexBufferData.length;\n            }\n        }\n\n        return geometryOut;\n    }\n}\n","import { Geometry } from '../geometry/Geometry';\n\n/**\n * Helper class to create a quad\n *\n * @class\n * @memberof PIXI\n */\nexport class Quad extends Geometry\n{\n    constructor()\n    {\n        super();\n\n        this.addAttribute('aVertexPosition', new Float32Array([\n            0, 0,\n            1, 0,\n            1, 1,\n            0, 1,\n        ]))\n            .addIndex([0, 1, 3, 2]);\n    }\n}\n","import { Geometry } from '../geometry/Geometry';\nimport { Buffer } from '../geometry/Buffer';\n\nimport type { Rectangle } from '@pixi/math';\n\n/**\n * Helper class to create a quad with uvs like in v4\n *\n * @class\n * @memberof PIXI\n * @extends PIXI.Geometry\n */\nexport class QuadUv extends Geometry\n{\n    vertexBuffer: Buffer;\n    uvBuffer: Buffer;\n    vertices: Float32Array;\n    uvs: Float32Array;\n\n    constructor()\n    {\n        super();\n\n        /**\n         * An array of vertices\n         *\n         * @member {Float32Array}\n         */\n        this.vertices = new Float32Array([\n            -1, -1,\n            1, -1,\n            1, 1,\n            -1, 1,\n        ]);\n\n        /**\n         * The Uvs of the quad\n         *\n         * @member {Float32Array}\n         */\n        this.uvs = new Float32Array([\n            0, 0,\n            1, 0,\n            1, 1,\n            0, 1,\n        ]);\n\n        this.vertexBuffer = new Buffer(this.vertices);\n        this.uvBuffer = new Buffer(this.uvs);\n\n        this.addAttribute('aVertexPosition', this.vertexBuffer)\n            .addAttribute('aTextureCoord', this.uvBuffer)\n            .addIndex([0, 1, 2, 0, 2, 3]);\n    }\n\n    /**\n     * Maps two Rectangle to the quad.\n     *\n     * @param {PIXI.Rectangle} targetTextureFrame - the first rectangle\n     * @param {PIXI.Rectangle} destinationFrame - the second rectangle\n     * @return {PIXI.Quad} Returns itself.\n     */\n    map(targetTextureFrame: Rectangle, destinationFrame: Rectangle): this\n    {\n        let x = 0; // destinationFrame.x / targetTextureFrame.width;\n        let y = 0; // destinationFrame.y / targetTextureFrame.height;\n\n        this.uvs[0] = x;\n        this.uvs[1] = y;\n\n        this.uvs[2] = x + (destinationFrame.width / targetTextureFrame.width);\n        this.uvs[3] = y;\n\n        this.uvs[4] = x + (destinationFrame.width / targetTextureFrame.width);\n        this.uvs[5] = y + (destinationFrame.height / targetTextureFrame.height);\n\n        this.uvs[6] = x;\n        this.uvs[7] = y + (destinationFrame.height / targetTextureFrame.height);\n\n        x = destinationFrame.x;\n        y = destinationFrame.y;\n\n        this.vertices[0] = x;\n        this.vertices[1] = y;\n\n        this.vertices[2] = x + destinationFrame.width;\n        this.vertices[3] = y;\n\n        this.vertices[4] = x + destinationFrame.width;\n        this.vertices[5] = y + destinationFrame.height;\n\n        this.vertices[6] = x;\n        this.vertices[7] = y + destinationFrame.height;\n\n        this.invalidate();\n\n        return this;\n    }\n\n    /**\n     * legacy upload method, just marks buffers dirty\n     * @returns {PIXI.QuadUv} Returns itself.\n     */\n    invalidate(): this\n    {\n        this.vertexBuffer._updateID++;\n        this.uvBuffer._updateID++;\n\n        return this;\n    }\n}\n","import type { Dict } from '@pixi/utils';\nimport type { UniformsSyncCallback } from './utils';\n\nlet UID = 0;\n\n/**\n * Uniform group holds uniform map and some ID's for work\n *\n * @class\n * @memberof PIXI\n */\nexport class UniformGroup\n{\n    public readonly uniforms: Dict<any>;\n    public readonly group: boolean;\n    public id: number;\n    syncUniforms: Dict<UniformsSyncCallback>;\n    dirtyId: number;\n    static: boolean;\n\n    /**\n     * @param {object} [uniforms] - Custom uniforms to use to augment the built-in ones.\n     * @param {boolean} [_static] - Uniforms wont be changed after creation\n     */\n    constructor(uniforms: Dict<any>, _static?: boolean)\n    {\n        /**\n         * uniform values\n         * @member {object}\n         * @readonly\n         */\n        this.uniforms = uniforms;\n\n        /**\n         * Its a group and not a single uniforms\n         * @member {boolean}\n         * @readonly\n         * @default true\n         */\n        this.group = true;\n\n        // lets generate this when the shader ?\n        this.syncUniforms = {};\n\n        /**\n         * dirty version\n         * @protected\n         * @member {number}\n         */\n        this.dirtyId = 0;\n\n        /**\n         * unique id\n         * @protected\n         * @member {number}\n         */\n        this.id = UID++;\n\n        /**\n         * Uniforms wont be changed after creation\n         * @member {boolean}\n         */\n        this.static = !!_static;\n    }\n\n    update(): void\n    {\n        this.dirtyId++;\n    }\n\n    add(name: string, uniforms: Dict<any>, _static: boolean): void\n    {\n        this.uniforms[name] = new UniformGroup(uniforms, _static);\n    }\n\n    static from(uniforms: Dict<any>, _static: boolean): UniformGroup\n    {\n        return new UniformGroup(uniforms, _static);\n    }\n}\n","import { Rectangle } from '@pixi/math';\n\nimport type { Filter } from './Filter';\nimport type { IFilterTarget } from './IFilterTarget';\nimport type { RenderTexture } from '../renderTexture/RenderTexture';\n\n/**\n * System plugin to the renderer to manage filter states.\n *\n * @class\n * @private\n */\nexport class FilterState\n{\n    renderTexture: RenderTexture;\n    target: IFilterTarget;\n    legacy: boolean;\n    resolution: number;\n    sourceFrame: Rectangle;\n    destinationFrame: Rectangle;\n    filters: Array<Filter>;\n\n    constructor()\n    {\n        this.renderTexture = null;\n\n        /**\n         * Target of the filters\n         * We store for case when custom filter wants to know the element it was applied on\n         * @member {PIXI.DisplayObject}\n         * @private\n         */\n        this.target = null;\n\n        /**\n         * Compatibility with PixiJS v4 filters\n         * @member {boolean}\n         * @default false\n         * @private\n         */\n        this.legacy = false;\n\n        /**\n         * Resolution of filters\n         * @member {number}\n         * @default 1\n         * @private\n         */\n        this.resolution = 1;\n\n        // next three fields are created only for root\n        // re-assigned for everything else\n\n        /**\n         * Source frame\n         * @member {PIXI.Rectangle}\n         * @private\n         */\n        this.sourceFrame = new Rectangle();\n\n        /**\n         * Destination frame\n         * @member {PIXI.Rectangle}\n         * @private\n         */\n        this.destinationFrame = new Rectangle();\n\n        /**\n         * Collection of filters\n         * @member {PIXI.Filter[]}\n         * @private\n         */\n        this.filters = [];\n    }\n\n    /**\n     * clears the state\n     * @private\n     */\n    clear(): void\n    {\n        this.target = null;\n        this.filters = null;\n        this.renderTexture = null;\n    }\n}\n","import { System } from '../System';\nimport { RenderTexturePool } from '../renderTexture/RenderTexturePool';\nimport { Quad } from '../utils/Quad';\nimport { QuadUv } from '../utils/QuadUv';\nimport { Rectangle, Matrix } from '@pixi/math';\nimport { UniformGroup } from '../shader/UniformGroup';\nimport { DRAW_MODES, CLEAR_MODES } from '@pixi/constants';\nimport { deprecation } from '@pixi/utils';\nimport { FilterState } from './FilterState';\n\nimport type { Filter } from './Filter';\nimport type { IFilterTarget } from './IFilterTarget';\nimport type { ISpriteMaskTarget } from './spriteMask/SpriteMaskFilter';\nimport type { RenderTexture } from '../renderTexture/RenderTexture';\nimport type { Renderer } from '../Renderer';\n/**\n * System plugin to the renderer to manage the filters.\n *\n * @class\n * @memberof PIXI.systems\n * @extends PIXI.System\n */\nexport class FilterSystem extends System\n{\n    public readonly defaultFilterStack: Array<FilterState>;\n    public statePool: Array<FilterState>;\n    public texturePool: RenderTexturePool;\n    public forceClear: boolean;\n    public useMaxPadding: boolean;\n    protected quad: Quad;\n    protected quadUv: QuadUv;\n    protected activeState: FilterState;\n    protected globalUniforms: UniformGroup;\n    private tempRect: Rectangle;\n\n    /**\n     * @param {PIXI.Renderer} renderer - The renderer this System works for.\n     */\n    constructor(renderer: Renderer)\n    {\n        super(renderer);\n\n        /**\n         * List of filters for the FilterSystem\n         * @member {Object[]}\n         * @readonly\n         */\n        this.defaultFilterStack = [{}] as any;\n\n        /**\n         * stores a bunch of PO2 textures used for filtering\n         * @member {Object}\n         */\n        this.texturePool = new RenderTexturePool();\n\n        this.texturePool.setScreenSize(renderer.view);\n\n        /**\n         * a pool for storing filter states, save us creating new ones each tick\n         * @member {Object[]}\n         */\n        this.statePool = [];\n\n        /**\n         * A very simple geometry used when drawing a filter effect to the screen\n         * @member {PIXI.Quad}\n         */\n        this.quad = new Quad();\n\n        /**\n         * Quad UVs\n         * @member {PIXI.QuadUv}\n         */\n        this.quadUv = new QuadUv();\n\n        /**\n         * Temporary rect for maths\n         * @type {PIXI.Rectangle}\n         */\n        this.tempRect = new Rectangle();\n\n        /**\n         * Active state\n         * @member {object}\n         */\n        this.activeState = {} as any;\n\n        /**\n         * This uniform group is attached to filter uniforms when used\n         * @member {PIXI.UniformGroup}\n         * @property {PIXI.Rectangle} outputFrame\n         * @property {Float32Array} inputSize\n         * @property {Float32Array} inputPixel\n         * @property {Float32Array} inputClamp\n         * @property {Number} resolution\n         * @property {Float32Array} filterArea\n         * @property {Fload32Array} filterClamp\n         */\n        this.globalUniforms = new UniformGroup({\n            outputFrame: this.tempRect,\n            inputSize: new Float32Array(4),\n            inputPixel: new Float32Array(4),\n            inputClamp: new Float32Array(4),\n            resolution: 1,\n\n            // legacy variables\n            filterArea: new Float32Array(4),\n            filterClamp: new Float32Array(4),\n        }, true);\n\n        /**\n         * Whether to clear output renderTexture in AUTO/BLIT mode. See {@link PIXI.CLEAR_MODES}\n         * @member {boolean}\n         */\n        this.forceClear = false;\n\n        /**\n         * Old padding behavior is to use the max amount instead of sum padding.\n         * Use this flag if you need the old behavior.\n         * @member {boolean}\n         * @default false\n         */\n        this.useMaxPadding = false;\n    }\n\n    /**\n     * Adds a new filter to the System.\n     *\n     * @param {PIXI.DisplayObject} target - The target of the filter to render.\n     * @param {PIXI.Filter[]} filters - The filters to apply.\n     */\n    push(target: IFilterTarget, filters: Array<Filter>): void\n    {\n        const renderer = this.renderer;\n        const filterStack = this.defaultFilterStack;\n        const state = this.statePool.pop() || new FilterState();\n\n        let resolution = filters[0].resolution;\n        let padding = filters[0].padding;\n        let autoFit = filters[0].autoFit;\n        let legacy = filters[0].legacy;\n\n        for (let i = 1; i < filters.length; i++)\n        {\n            const filter =  filters[i];\n\n            // lets use the lowest resolution..\n            resolution = Math.min(resolution, filter.resolution);\n            // figure out the padding required for filters\n            padding = this.useMaxPadding\n                // old behavior: use largest amount of padding!\n                ? Math.max(padding, filter.padding)\n                // new behavior: sum the padding\n                : padding + filter.padding;\n            // only auto fit if all filters are autofit\n            autoFit = autoFit && filter.autoFit;\n\n            legacy = legacy || filter.legacy;\n        }\n\n        if (filterStack.length === 1)\n        {\n            this.defaultFilterStack[0].renderTexture = renderer.renderTexture.current;\n        }\n\n        filterStack.push(state);\n\n        state.resolution = resolution;\n\n        state.legacy = legacy;\n\n        state.target = target;\n\n        state.sourceFrame.copyFrom(target.filterArea || target.getBounds(true));\n\n        state.sourceFrame.pad(padding);\n        if (autoFit)\n        {\n            state.sourceFrame.fit(this.renderer.renderTexture.sourceFrame);\n        }\n\n        // round to whole number based on resolution\n        state.sourceFrame.ceil(resolution);\n\n        state.renderTexture = this.getOptimalFilterTexture(state.sourceFrame.width, state.sourceFrame.height, resolution);\n        state.filters = filters;\n\n        state.destinationFrame.width = state.renderTexture.width;\n        state.destinationFrame.height = state.renderTexture.height;\n\n        const destinationFrame = this.tempRect;\n\n        destinationFrame.width = state.sourceFrame.width;\n        destinationFrame.height = state.sourceFrame.height;\n\n        state.renderTexture.filterFrame = state.sourceFrame;\n\n        renderer.renderTexture.bind(state.renderTexture, state.sourceFrame, destinationFrame);\n        renderer.renderTexture.clear();\n    }\n\n    /**\n     * Pops off the filter and applies it.\n     *\n     */\n    pop(): void\n    {\n        const filterStack = this.defaultFilterStack;\n        const state = filterStack.pop();\n        const filters = state.filters;\n\n        this.activeState = state;\n\n        const globalUniforms = this.globalUniforms.uniforms;\n\n        globalUniforms.outputFrame = state.sourceFrame;\n        globalUniforms.resolution = state.resolution;\n\n        const inputSize = globalUniforms.inputSize;\n        const inputPixel = globalUniforms.inputPixel;\n        const inputClamp = globalUniforms.inputClamp;\n\n        inputSize[0] = state.destinationFrame.width;\n        inputSize[1] = state.destinationFrame.height;\n        inputSize[2] = 1.0 / inputSize[0];\n        inputSize[3] = 1.0 / inputSize[1];\n\n        inputPixel[0] = inputSize[0] * state.resolution;\n        inputPixel[1] = inputSize[1] * state.resolution;\n        inputPixel[2] = 1.0 / inputPixel[0];\n        inputPixel[3] = 1.0 / inputPixel[1];\n\n        inputClamp[0] = 0.5 * inputPixel[2];\n        inputClamp[1] = 0.5 * inputPixel[3];\n        inputClamp[2] = (state.sourceFrame.width * inputSize[2]) - (0.5 * inputPixel[2]);\n        inputClamp[3] = (state.sourceFrame.height * inputSize[3]) - (0.5 * inputPixel[3]);\n\n        // only update the rect if its legacy..\n        if (state.legacy)\n        {\n            const filterArea = globalUniforms.filterArea;\n\n            filterArea[0] = state.destinationFrame.width;\n            filterArea[1] = state.destinationFrame.height;\n            filterArea[2] = state.sourceFrame.x;\n            filterArea[3] = state.sourceFrame.y;\n\n            globalUniforms.filterClamp = globalUniforms.inputClamp;\n        }\n\n        this.globalUniforms.update();\n\n        const lastState = filterStack[filterStack.length - 1];\n\n        if (state.renderTexture.framebuffer.multisample > 1)\n        {\n            this.renderer.framebuffer.blit();\n        }\n\n        if (filters.length === 1)\n        {\n            filters[0].apply(this, state.renderTexture, lastState.renderTexture, CLEAR_MODES.BLEND, state);\n\n            this.returnFilterTexture(state.renderTexture);\n        }\n        else\n        {\n            let flip = state.renderTexture;\n            let flop = this.getOptimalFilterTexture(\n                flip.width,\n                flip.height,\n                state.resolution\n            );\n\n            flop.filterFrame = flip.filterFrame;\n\n            let i = 0;\n\n            for (i = 0; i < filters.length - 1; ++i)\n            {\n                filters[i].apply(this, flip, flop, CLEAR_MODES.CLEAR, state);\n\n                const t = flip;\n\n                flip = flop;\n                flop = t;\n            }\n\n            filters[i].apply(this, flip, lastState.renderTexture, CLEAR_MODES.BLEND, state);\n\n            this.returnFilterTexture(flip);\n            this.returnFilterTexture(flop);\n        }\n\n        state.clear();\n        this.statePool.push(state);\n    }\n\n    /**\n     * Binds a renderTexture with corresponding `filterFrame`, clears it if mode corresponds.\n     * @param {PIXI.RenderTexture} filterTexture - renderTexture to bind, should belong to filter pool or filter stack\n     * @param {PIXI.CLEAR_MODES} [clearMode] - clearMode, by default its CLEAR/YES. See {@link PIXI.CLEAR_MODES}\n     */\n    bindAndClear(filterTexture: RenderTexture, clearMode = CLEAR_MODES.CLEAR): void\n    {\n        if (filterTexture && filterTexture.filterFrame)\n        {\n            const destinationFrame = this.tempRect;\n\n            destinationFrame.width = filterTexture.filterFrame.width;\n            destinationFrame.height = filterTexture.filterFrame.height;\n\n            this.renderer.renderTexture.bind(filterTexture, filterTexture.filterFrame, destinationFrame);\n        }\n        else\n        {\n            this.renderer.renderTexture.bind(filterTexture);\n        }\n\n        // TODO: remove in next major version\n        if (typeof clearMode === 'boolean')\n        {\n            clearMode = clearMode ? CLEAR_MODES.CLEAR : CLEAR_MODES.BLEND;\n            // get deprecation function from utils\n            deprecation('5.2.1', 'Use CLEAR_MODES when using clear applyFilter option');\n        }\n        if (clearMode === CLEAR_MODES.CLEAR\n            || (clearMode === CLEAR_MODES.BLIT && this.forceClear))\n        {\n            this.renderer.renderTexture.clear();\n        }\n    }\n\n    /**\n     * Draws a filter.\n     *\n     * @param {PIXI.Filter} filter - The filter to draw.\n     * @param {PIXI.RenderTexture} input - The input render target.\n     * @param {PIXI.RenderTexture} output - The target to output to.\n     * @param {PIXI.CLEAR_MODES} [clearMode] - Should the output be cleared before rendering to it\n     */\n    applyFilter(filter: Filter, input: RenderTexture, output: RenderTexture, clearMode: CLEAR_MODES): void\n    {\n        const renderer = this.renderer;\n\n        this.bindAndClear(output, clearMode);\n\n        // set the uniforms..\n        filter.uniforms.uSampler = input;\n        filter.uniforms.filterGlobals = this.globalUniforms;\n\n        // TODO make it so that the order of this does not matter..\n        // because it does at the moment cos of global uniforms.\n        // they need to get resynced\n\n        renderer.state.set(filter.state);\n        renderer.shader.bind(filter);\n\n        if (filter.legacy)\n        {\n            this.quadUv.map(input._frame, input.filterFrame);\n\n            renderer.geometry.bind(this.quadUv);\n            renderer.geometry.draw(DRAW_MODES.TRIANGLES);\n        }\n        else\n        {\n            renderer.geometry.bind(this.quad);\n            renderer.geometry.draw(DRAW_MODES.TRIANGLE_STRIP);\n        }\n    }\n\n    /**\n     * Multiply _input normalized coordinates_ to this matrix to get _sprite texture normalized coordinates_.\n     *\n     * Use `outputMatrix * vTextureCoord` in the shader.\n     *\n     * @param {PIXI.Matrix} outputMatrix - The matrix to output to.\n     * @param {PIXI.Sprite} sprite - The sprite to map to.\n     * @return {PIXI.Matrix} The mapped matrix.\n     */\n    calculateSpriteMatrix(outputMatrix: Matrix, sprite: ISpriteMaskTarget): Matrix\n    {\n        const { sourceFrame, destinationFrame } = this.activeState;\n        const { orig } = sprite._texture;\n        const mappedMatrix = outputMatrix.set(destinationFrame.width, 0, 0,\n            destinationFrame.height, sourceFrame.x, sourceFrame.y);\n        const worldTransform = sprite.worldTransform.copyTo(Matrix.TEMP_MATRIX);\n\n        worldTransform.invert();\n        mappedMatrix.prepend(worldTransform);\n        mappedMatrix.scale(1.0 / orig.width, 1.0 / orig.height);\n        mappedMatrix.translate(sprite.anchor.x, sprite.anchor.y);\n\n        return mappedMatrix;\n    }\n\n    /**\n     * Destroys this Filter System.\n     */\n    destroy(): void\n    {\n        // Those textures has to be destroyed by RenderTextureSystem or FramebufferSystem\n        this.texturePool.clear(false);\n    }\n\n    /**\n     * Gets a Power-of-Two render texture or fullScreen texture\n     *\n     * @protected\n     * @param {number} minWidth - The minimum width of the render texture in real pixels.\n     * @param {number} minHeight - The minimum height of the render texture in real pixels.\n     * @param {number} [resolution=1] - The resolution of the render texture.\n     * @return {PIXI.RenderTexture} The new render texture.\n     */\n    protected getOptimalFilterTexture(minWidth: number, minHeight: number, resolution = 1): RenderTexture\n    {\n        return this.texturePool.getOptimalTexture(minWidth, minHeight, resolution);\n    }\n\n    /**\n     * Gets extra render texture to use inside current filter\n     * To be compliant with older filters, you can use params in any order\n     *\n     * @param {PIXI.RenderTexture} [input] - renderTexture from which size and resolution will be copied\n     * @param {number} [resolution] - override resolution of the renderTexture\n     * @returns {PIXI.RenderTexture}\n     */\n    getFilterTexture(input?: RenderTexture, resolution?: number): RenderTexture\n    {\n        if (typeof input === 'number')\n        {\n            const swap = input;\n\n            input = resolution as any;\n            resolution = swap;\n        }\n\n        input = input || this.activeState.renderTexture;\n\n        const filterTexture = this.texturePool.getOptimalTexture(input.width, input.height, resolution || input.resolution);\n\n        filterTexture.filterFrame = input.filterFrame;\n\n        return filterTexture;\n    }\n\n    /**\n     * Frees a render texture back into the pool.\n     *\n     * @param {PIXI.RenderTexture} renderTexture - The renderTarget to free\n     */\n    returnFilterTexture(renderTexture: RenderTexture): void\n    {\n        this.texturePool.returnTexture(renderTexture);\n    }\n\n    /**\n     * Empties the texture pool.\n     */\n    emptyPool(): void\n    {\n        this.texturePool.clear(true);\n    }\n\n    /**\n     * calls `texturePool.resize()`, affects fullScreen renderTextures\n     */\n    resize(): void\n    {\n        this.texturePool.setScreenSize(this.renderer.view);\n    }\n}\n","import type { Renderer } from '../Renderer';\n\n/**\n * Base for a common object renderer that can be used as a\n * system renderer plugin.\n *\n * @class\n * @extends PIXI.System\n * @memberof PIXI\n */\nexport class ObjectRenderer\n{\n    protected renderer: Renderer;\n    /**\n     * @param {PIXI.Renderer} renderer - The renderer this manager works for.\n     */\n    constructor(renderer: Renderer)\n    {\n        /**\n         * The renderer this manager works for.\n         *\n         * @member {PIXI.Renderer}\n         */\n        this.renderer = renderer;\n    }\n\n    /**\n     * Stub method that should be used to empty the current\n     * batch by rendering objects now.\n     */\n    flush(): void\n    {\n        // flush!\n    }\n\n    /**\n     * Generic destruction method that frees all resources. This\n     * should be called by subclasses.\n     */\n    destroy(): void\n    {\n        this.renderer = null;\n    }\n\n    /**\n     * Stub method that initializes any state required before\n     * rendering starts. It is different from the `prerender`\n     * signal, which occurs every frame, in that it is called\n     * whenever an object requests _this_ renderer specifically.\n     */\n    start(): void\n    {\n        // set the shader..\n    }\n\n    /**\n     * Stops the renderer. It should free up any state and\n     * become dormant.\n     */\n    stop(): void\n    {\n        this.flush();\n    }\n\n    /**\n     * Keeps the object to render. It doesn't have to be\n     * rendered immediately.\n     *\n     * @param {PIXI.DisplayObject} object - The object to render.\n     */\n    render(_object: any): void // eslint-disable-line @typescript-eslint/explicit-module-boundary-types\n    {\n        // render the object\n    }\n}\n","import { System } from '../System';\nimport { ObjectRenderer } from './ObjectRenderer';\n\nimport type { Renderer } from '../Renderer';\nimport type { BaseTexture } from '../textures/BaseTexture';\nimport type { BatchTextureArray } from './BatchTextureArray';\n/**\n * System plugin to the renderer to manage batching.\n *\n * @class\n * @extends PIXI.System\n * @memberof PIXI.systems\n */\nexport class BatchSystem extends System\n{\n    public readonly emptyRenderer: ObjectRenderer;\n    public currentRenderer: ObjectRenderer;\n\n    /**\n     * @param {PIXI.Renderer} renderer - The renderer this System works for.\n     */\n    constructor(renderer: Renderer)\n    {\n        super(renderer);\n\n        /**\n         * An empty renderer.\n         *\n         * @member {PIXI.ObjectRenderer}\n         */\n        this.emptyRenderer = new ObjectRenderer(renderer);\n\n        /**\n         * The currently active ObjectRenderer.\n         *\n         * @member {PIXI.ObjectRenderer}\n         */\n        this.currentRenderer = this.emptyRenderer;\n    }\n\n    /**\n     * Changes the current renderer to the one given in parameter\n     *\n     * @param {PIXI.ObjectRenderer} objectRenderer - The object renderer to use.\n     */\n    setObjectRenderer(objectRenderer: ObjectRenderer): void\n    {\n        if (this.currentRenderer === objectRenderer)\n        {\n            return;\n        }\n\n        this.currentRenderer.stop();\n        this.currentRenderer = objectRenderer;\n\n        this.currentRenderer.start();\n    }\n\n    /**\n     * This should be called if you wish to do some custom rendering\n     * It will basically render anything that may be batched up such as sprites\n     */\n    flush(): void\n    {\n        this.setObjectRenderer(this.emptyRenderer);\n    }\n\n    /**\n     * Reset the system to an empty renderer\n     */\n    reset(): void\n    {\n        this.setObjectRenderer(this.emptyRenderer);\n    }\n\n    /**\n     * Handy function for batch renderers: copies bound textures in first maxTextures locations to array\n     * sets actual _batchLocation for them\n     *\n     * @param {PIXI.BaseTexture[]} - arr copy destination\n     * @param {number} maxTextures - number of copied elements\n     */\n    copyBoundTextures(arr: BaseTexture[], maxTextures: number): void\n    {\n        const { boundTextures } = this.renderer.texture;\n\n        for (let i = maxTextures - 1; i >= 0; --i)\n        {\n            arr[i] = boundTextures[i] || null;\n            if (arr[i])\n            {\n                arr[i]._batchLocation = i;\n            }\n        }\n    }\n\n    /**\n     * Assigns batch locations to textures in array based on boundTextures state.\n     * All textures in texArray should have `_batchEnabled = _batchId`,\n     * and their count should be less than `maxTextures`.\n     *\n     * @param {PIXI.BatchTextureArray} texArray - textures to bound\n     * @param {PIXI.BaseTexture[]} boundTextures - current state of bound textures\n     * @param {number} batchId - marker for _batchEnabled param of textures in texArray\n     * @param {number} maxTextures - number of texture locations to manipulate\n     */\n    boundArray(texArray: BatchTextureArray, boundTextures: Array<BaseTexture>,\n        batchId: number, maxTextures: number): void\n    {\n        const { elements, ids, count } = texArray;\n        let j = 0;\n\n        for (let i = 0; i < count; i++)\n        {\n            const tex = elements[i];\n            const loc = tex._batchLocation;\n\n            if (loc >= 0 && loc < maxTextures\n                && boundTextures[loc] === tex)\n            {\n                ids[i] = loc;\n                continue;\n            }\n\n            while (j < maxTextures)\n            {\n                const bound = boundTextures[j];\n\n                if (bound && bound._batchEnabled === batchId\n                    && bound._batchLocation === j)\n                {\n                    j++;\n                    continue;\n                }\n\n                ids[i] = j;\n                tex._batchLocation = j;\n                boundTextures[j] = tex;\n                break;\n            }\n        }\n    }\n}\n","import { ENV } from '@pixi/constants';\nimport { System } from '../System';\nimport { settings } from '../settings';\n\nimport type { IRenderingContext } from '../IRenderingContext';\nimport type { Renderer } from '../Renderer';\n\nlet CONTEXT_UID_COUNTER = 0;\n\nexport interface ISupportDict {\n    uint32Indices: boolean;\n}\n/**\n * System plugin to the renderer to manage the context.\n *\n * @class\n * @extends PIXI.System\n * @memberof PIXI.systems\n */\nexport class ContextSystem extends System\n{\n    public webGLVersion: number;\n    readonly supports: ISupportDict;\n\n    protected CONTEXT_UID: number;\n    protected gl: IRenderingContext;\n    /* eslint-disable camelcase */\n    extensions:\n    {\n        drawBuffers?: WEBGL_draw_buffers;\n        depthTexture?: OES_texture_float;\n        loseContext?: WEBGL_lose_context;\n        vertexArrayObject?: OES_vertex_array_object;\n        anisotropicFiltering?: EXT_texture_filter_anisotropic;\n        uint32ElementIndex?: OES_element_index_uint;\n        floatTexture?: OES_texture_float;\n        floatTextureLinear?: OES_texture_float_linear;\n        textureHalfFloat?: OES_texture_half_float;\n        textureHalfFloatLinear?: OES_texture_half_float_linear;\n        colorBufferFloat?: WEBGL_color_buffer_float;\n    };\n    /* eslint-enable camelcase */\n\n    /**\n     * @param {PIXI.Renderer} renderer - The renderer this System works for.\n     */\n    constructor(renderer: Renderer)\n    {\n        super(renderer);\n\n        /**\n         * Either 1 or 2 to reflect the WebGL version being used\n         * @member {number}\n         * @readonly\n         */\n        this.webGLVersion = 1;\n\n        /**\n         * Extensions being used\n         * @member {object}\n         * @readonly\n         * @property {WEBGL_draw_buffers} drawBuffers - WebGL v1 extension\n         * @property {WEBGL_depth_texture} depthTexture - WebGL v1 extension\n         * @property {OES_texture_float} floatTexture - WebGL v1 extension\n         * @property {WEBGL_lose_context} loseContext - WebGL v1 extension\n         * @property {OES_vertex_array_object} vertexArrayObject - WebGL v1 extension\n         * @property {EXT_texture_filter_anisotropic} anisotropicFiltering - WebGL v1 and v2 extension\n         */\n        this.extensions = {};\n\n        /**\n         * Features supported by current context\n         * @member {object}\n         * @private\n         * @readonly\n         * @property {boolean} uint32Indices - Supports of 32-bit indices buffer\n         */\n        this.supports = {\n            uint32Indices: false,\n        };\n\n        // Bind functions\n        this.handleContextLost = this.handleContextLost.bind(this);\n        this.handleContextRestored = this.handleContextRestored.bind(this);\n\n        (renderer.view as any).addEventListener('webglcontextlost', this.handleContextLost, false);\n        renderer.view.addEventListener('webglcontextrestored', this.handleContextRestored, false);\n    }\n\n    /**\n     * `true` if the context is lost\n     * @member {boolean}\n     * @readonly\n     */\n    get isLost(): boolean\n    {\n        return (!this.gl || this.gl.isContextLost());\n    }\n\n    /**\n     * Handle the context change event\n     * @param {WebGLRenderingContext} gl - new webgl context\n     */\n    protected contextChange(gl: IRenderingContext): void\n    {\n        this.gl = gl;\n        this.renderer.gl = gl;\n        this.renderer.CONTEXT_UID = CONTEXT_UID_COUNTER++;\n\n        // restore a context if it was previously lost\n        if (gl.isContextLost() && gl.getExtension('WEBGL_lose_context'))\n        {\n            gl.getExtension('WEBGL_lose_context').restoreContext();\n        }\n    }\n\n    /**\n     * Initialize the context\n     *\n     * @protected\n     * @param {WebGLRenderingContext} gl - WebGL context\n     */\n    initFromContext(gl: IRenderingContext): void\n    {\n        this.gl = gl;\n        this.validateContext(gl);\n        this.renderer.gl = gl;\n        this.renderer.CONTEXT_UID = CONTEXT_UID_COUNTER++;\n        this.renderer.runners.contextChange.emit(gl);\n    }\n\n    /**\n     * Initialize from context options\n     *\n     * @protected\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/getContext\n     * @param {object} options - context attributes\n     */\n    initFromOptions(options: WebGLContextAttributes): void\n    {\n        const gl = this.createContext(this.renderer.view, options);\n\n        this.initFromContext(gl);\n    }\n\n    /**\n     * Helper class to create a WebGL Context\n     *\n     * @param canvas {HTMLCanvasElement} the canvas element that we will get the context from\n     * @param options {object} An options object that gets passed in to the canvas element containing the context attributes\n     * @see https://developer.mozilla.org/en/docs/Web/API/HTMLCanvasElement/getContext\n     * @return {WebGLRenderingContext} the WebGL context\n     */\n    createContext(canvas: HTMLCanvasElement, options: WebGLContextAttributes): IRenderingContext\n    {\n        let gl;\n\n        if (settings.PREFER_ENV >= ENV.WEBGL2)\n        {\n            gl = canvas.getContext('webgl2', options);\n        }\n\n        if (gl)\n        {\n            this.webGLVersion = 2;\n        }\n        else\n        {\n            this.webGLVersion = 1;\n\n            gl = canvas.getContext('webgl', options)\n            || canvas.getContext('experimental-webgl', options);\n\n            if (!gl)\n            {\n                // fail, not able to get a context\n                throw new Error('This browser does not support WebGL. Try using the canvas renderer');\n            }\n        }\n\n        this.gl = gl as IRenderingContext;\n\n        this.getExtensions();\n\n        return this.gl;\n    }\n\n    /**\n     * Auto-populate the extensions\n     *\n     * @protected\n     */\n    protected getExtensions(): void\n    {\n        // time to set up default extensions that Pixi uses.\n        const { gl } = this;\n\n        if (this.webGLVersion === 1)\n        {\n            Object.assign(this.extensions, {\n                drawBuffers: gl.getExtension('WEBGL_draw_buffers'),\n                depthTexture: gl.getExtension('WEBGL_depth_texture'),\n                loseContext: gl.getExtension('WEBGL_lose_context'),\n                vertexArrayObject: gl.getExtension('OES_vertex_array_object')\n                    || gl.getExtension('MOZ_OES_vertex_array_object')\n                    || gl.getExtension('WEBKIT_OES_vertex_array_object'),\n                anisotropicFiltering: gl.getExtension('EXT_texture_filter_anisotropic'),\n                uint32ElementIndex: gl.getExtension('OES_element_index_uint'),\n                // Floats and half-floats\n                floatTexture: gl.getExtension('OES_texture_float'),\n                floatTextureLinear: gl.getExtension('OES_texture_float_linear'),\n                textureHalfFloat: gl.getExtension('OES_texture_half_float'),\n                textureHalfFloatLinear: gl.getExtension('OES_texture_half_float_linear'),\n            });\n        }\n        else if (this.webGLVersion === 2)\n        {\n            Object.assign(this.extensions, {\n                anisotropicFiltering: gl.getExtension('EXT_texture_filter_anisotropic'),\n                // Floats and half-floats\n                colorBufferFloat: gl.getExtension('EXT_color_buffer_float'),\n                floatTextureLinear: gl.getExtension('OES_texture_float_linear'),\n            });\n        }\n    }\n\n    /**\n     * Handles a lost webgl context\n     *\n     * @protected\n     * @param {WebGLContextEvent} event - The context lost event.\n     */\n    protected handleContextLost(event: WebGLContextEvent): void\n    {\n        event.preventDefault();\n    }\n\n    /**\n     * Handles a restored webgl context\n     *\n     * @protected\n     */\n    protected handleContextRestored(): void\n    {\n        this.renderer.runners.contextChange.emit(this.gl);\n    }\n\n    destroy(): void\n    {\n        const view = this.renderer.view;\n\n        // remove listeners\n        (view as any).removeEventListener('webglcontextlost', this.handleContextLost);\n        view.removeEventListener('webglcontextrestored', this.handleContextRestored);\n\n        this.gl.useProgram(null);\n\n        if (this.extensions.loseContext)\n        {\n            this.extensions.loseContext.loseContext();\n        }\n    }\n\n    /**\n     * Handle the post-render runner event\n     *\n     * @protected\n     */\n    protected postrender(): void\n    {\n        if (this.renderer.renderingToScreen)\n        {\n            this.gl.flush();\n        }\n    }\n\n    /**\n     * Validate context\n     *\n     * @protected\n     * @param {WebGLRenderingContext} gl - Render context\n     */\n    protected validateContext(gl: IRenderingContext): void\n    {\n        const attributes = gl.getContextAttributes();\n\n        const isWebGl2 = 'WebGL2RenderingContext' in window && gl instanceof window.WebGL2RenderingContext;\n\n        if (isWebGl2)\n        {\n            this.webGLVersion = 2;\n        }\n\n        // this is going to be fairly simple for now.. but at least we have room to grow!\n        if (!attributes.stencil)\n        {\n            /* eslint-disable max-len, no-console */\n            console.warn('Provided WebGL context does not have a stencil buffer, masks may not render correctly');\n            /* eslint-enable max-len, no-console */\n        }\n\n        const hasuint32 = isWebGl2 || !!(gl as WebGLRenderingContext).getExtension('OES_element_index_uint');\n\n        this.supports.uint32Indices = hasuint32;\n\n        if (!hasuint32)\n        {\n            /* eslint-disable max-len, no-console */\n            console.warn('Provided WebGL context does not support 32 index buffer, complex graphics may not render correctly');\n            /* eslint-enable max-len, no-console */\n        }\n    }\n}\n","import { MSAA_QUALITY } from '@pixi/constants';\n\nimport type { Framebuffer } from './Framebuffer';\n\n/**\n * Internal framebuffer for WebGL context\n * @class\n * @memberof PIXI\n */\nexport class GLFramebuffer\n{\n    public framebuffer: WebGLFramebuffer;\n    public stencil: WebGLRenderbuffer;\n    public multisample: MSAA_QUALITY;\n    public msaaBuffer: WebGLRenderbuffer;\n    public blitFramebuffer: Framebuffer;\n    dirtyId: number;\n    dirtyFormat: number;\n    dirtySize: number;\n\n    constructor(framebuffer: WebGLTexture)\n    {\n        /**\n         * The WebGL framebuffer\n         * @member {WebGLFramebuffer}\n         */\n        this.framebuffer = framebuffer;\n        /**\n         * stencil+depth , usually costs 32bits per pixel\n         * @member {WebGLRenderbuffer}\n         */\n        this.stencil = null;\n        /**\n         * latest known version of framebuffer\n         * @member {number}\n         * @protected\n         */\n        this.dirtyId = 0;\n        /**\n         * latest known version of framebuffer format\n         * @member {number}\n         * @protected\n         */\n        this.dirtyFormat = 0;\n        /**\n         * latest known version of framebuffer size\n         * @member {number}\n         * @protected\n         */\n        this.dirtySize = 0;\n\n        /**\n         * Detected AA samples number\n         * @member {PIXI.MSAA_QUALITY}\n         */\n        this.multisample = MSAA_QUALITY.NONE;\n\n        /**\n         * In case MSAA, we use this Renderbuffer instead of colorTextures[0] when we write info\n         * @member {WebGLRenderbuffer}\n         */\n        this.msaaBuffer = null;\n\n        /**\n         * In case we use MSAA, this is actual framebuffer that has colorTextures[0]\n         * The contents of that framebuffer are read when we use that renderTexture in sprites\n         * @member {PIXI.Framebuffer}\n         */\n        this.blitFramebuffer = null;\n    }\n}\n","import { System } from '../System';\nimport { Rectangle } from '@pixi/math';\nimport { ENV, BUFFER_BITS, MSAA_QUALITY } from '@pixi/constants';\nimport { settings } from '../settings';\nimport { Framebuffer } from './Framebuffer';\nimport { GLFramebuffer } from './GLFramebuffer';\n\nimport type { Renderer } from '../Renderer';\nimport type { IRenderingContext } from '../IRenderingContext';\n\nconst tempRectangle = new Rectangle();\n\n/**\n * System plugin to the renderer to manage framebuffers.\n *\n * @class\n * @extends PIXI.System\n * @memberof PIXI.systems\n */\nexport class FramebufferSystem extends System\n{\n    public readonly managedFramebuffers: Array<Framebuffer>;\n    public current: Framebuffer;\n    public viewport: Rectangle;\n    public hasMRT: boolean;\n    public writeDepthTexture: boolean;\n    protected CONTEXT_UID: number;\n    protected gl: IRenderingContext;\n    protected unknownFramebuffer: Framebuffer;\n    protected msaaSamples: Array<number>;\n\n    /**\n     * @param {PIXI.Renderer} renderer - The renderer this System works for.\n     */\n    constructor(renderer: Renderer)\n    {\n        super(renderer);\n\n        /**\n         * A list of managed framebuffers\n         * @member {PIXI.Framebuffer[]}\n         * @readonly\n         */\n        this.managedFramebuffers = [];\n\n        /**\n         * Framebuffer value that shows that we don't know what is bound\n         * @member {Framebuffer}\n         * @readonly\n         */\n        this.unknownFramebuffer = new Framebuffer(10, 10);\n\n        this.msaaSamples = null;\n    }\n\n    /**\n     * Sets up the renderer context and necessary buffers.\n     */\n    protected contextChange(): void\n    {\n        const gl = this.gl = this.renderer.gl;\n\n        this.CONTEXT_UID = this.renderer.CONTEXT_UID;\n        this.current = this.unknownFramebuffer;\n        this.viewport = new Rectangle();\n        this.hasMRT = true;\n        this.writeDepthTexture = true;\n\n        this.disposeAll(true);\n\n        // webgl2\n        if (this.renderer.context.webGLVersion === 1)\n        {\n            // webgl 1!\n            let nativeDrawBuffersExtension = this.renderer.context.extensions.drawBuffers;\n            let nativeDepthTextureExtension = this.renderer.context.extensions.depthTexture;\n\n            if (settings.PREFER_ENV === ENV.WEBGL_LEGACY)\n            {\n                nativeDrawBuffersExtension = null;\n                nativeDepthTextureExtension = null;\n            }\n\n            if (nativeDrawBuffersExtension)\n            {\n                gl.drawBuffers = (activeTextures: number[]): void =>\n                    nativeDrawBuffersExtension.drawBuffersWEBGL(activeTextures);\n            }\n            else\n            {\n                this.hasMRT = false;\n                gl.drawBuffers = (): void =>\n                {\n                    // empty\n                };\n            }\n\n            if (!nativeDepthTextureExtension)\n            {\n                this.writeDepthTexture = false;\n            }\n        }\n        else\n        {\n            // WebGL2\n            // cache possible MSAA samples\n            this.msaaSamples = gl.getInternalformatParameter(gl.RENDERBUFFER, gl.RGBA8, gl.SAMPLES);\n        }\n    }\n\n    /**\n     * Bind a framebuffer\n     *\n     * @param {PIXI.Framebuffer} framebuffer\n     * @param {PIXI.Rectangle} [frame] frame, default is framebuffer size\n     */\n    bind(framebuffer?: Framebuffer, frame?: Rectangle): void\n    {\n        const { gl } = this;\n\n        if (framebuffer)\n        {\n            // TODO caching layer!\n\n            const fbo = framebuffer.glFramebuffers[this.CONTEXT_UID] || this.initFramebuffer(framebuffer);\n\n            if (this.current !== framebuffer)\n            {\n                this.current = framebuffer;\n                gl.bindFramebuffer(gl.FRAMEBUFFER, fbo.framebuffer);\n            }\n            // make sure all textures are unbound..\n\n            // now check for updates...\n            if (fbo.dirtyId !== framebuffer.dirtyId)\n            {\n                fbo.dirtyId = framebuffer.dirtyId;\n\n                if (fbo.dirtyFormat !== framebuffer.dirtyFormat)\n                {\n                    fbo.dirtyFormat = framebuffer.dirtyFormat;\n                    this.updateFramebuffer(framebuffer);\n                }\n                else if (fbo.dirtySize !== framebuffer.dirtySize)\n                {\n                    fbo.dirtySize = framebuffer.dirtySize;\n                    this.resizeFramebuffer(framebuffer);\n                }\n            }\n\n            for (let i = 0; i < framebuffer.colorTextures.length; i++)\n            {\n                const tex = framebuffer.colorTextures[i];\n\n                this.renderer.texture.unbind(tex.parentTextureArray || tex);\n            }\n\n            if (framebuffer.depthTexture)\n            {\n                this.renderer.texture.unbind(framebuffer.depthTexture);\n            }\n\n            if (frame)\n            {\n                this.setViewport(frame.x, frame.y, frame.width, frame.height);\n            }\n            else\n            {\n                this.setViewport(0, 0, framebuffer.width, framebuffer.height);\n            }\n        }\n        else\n        {\n            if (this.current)\n            {\n                this.current = null;\n                gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            }\n\n            if (frame)\n            {\n                this.setViewport(frame.x, frame.y, frame.width, frame.height);\n            }\n            else\n            {\n                this.setViewport(0, 0, this.renderer.width, this.renderer.height);\n            }\n        }\n    }\n\n    /**\n     * Set the WebGLRenderingContext's viewport.\n     *\n     * @param {Number} x - X position of viewport\n     * @param {Number} y - Y position of viewport\n     * @param {Number} width - Width of viewport\n     * @param {Number} height - Height of viewport\n     */\n    setViewport(x: number, y: number, width: number, height: number): void\n    {\n        const v = this.viewport;\n\n        if (v.width !== width || v.height !== height || v.x !== x || v.y !== y)\n        {\n            v.x = x;\n            v.y = y;\n            v.width = width;\n            v.height = height;\n\n            this.gl.viewport(x, y, width, height);\n        }\n    }\n\n    /**\n     * Get the size of the current width and height. Returns object with `width` and `height` values.\n     *\n     * @member {object}\n     * @readonly\n     */\n    get size(): { x: number; y: number; width: number; height: number }\n    {\n        if (this.current)\n        {\n            // TODO store temp\n            return { x: 0, y: 0, width: this.current.width, height: this.current.height };\n        }\n\n        return { x: 0, y: 0, width: this.renderer.width, height: this.renderer.height };\n    }\n\n    /**\n     * Clear the color of the context\n     *\n     * @param {Number} r - Red value from 0 to 1\n     * @param {Number} g - Green value from 0 to 1\n     * @param {Number} b - Blue value from 0 to 1\n     * @param {Number} a - Alpha value from 0 to 1\n     * @param {PIXI.BUFFER_BITS} [mask=BUFFER_BITS.COLOR | BUFFER_BITS.DEPTH] - Bitwise OR of masks\n     *  that indicate the buffers to be cleared, by default COLOR and DEPTH buffers.\n     */\n    clear(r: number, g: number, b: number, a: number, mask: BUFFER_BITS = BUFFER_BITS.COLOR | BUFFER_BITS.DEPTH): void\n    {\n        const { gl } = this;\n\n        // TODO clear color can be set only one right?\n        gl.clearColor(r, g, b, a);\n        gl.clear(mask);\n    }\n\n    /**\n     * Initialize framebuffer for this context\n     *\n     * @protected\n     * @param {PIXI.Framebuffer} framebuffer\n     * @returns {PIXI.GLFramebuffer} created GLFramebuffer\n     */\n    initFramebuffer(framebuffer: Framebuffer): GLFramebuffer\n    {\n        const { gl } = this;\n        const fbo = new GLFramebuffer(gl.createFramebuffer());\n\n        fbo.multisample = this.detectSamples(framebuffer.multisample);\n        framebuffer.glFramebuffers[this.CONTEXT_UID] = fbo;\n\n        this.managedFramebuffers.push(framebuffer);\n        framebuffer.disposeRunner.add(this);\n\n        return fbo;\n    }\n\n    /**\n     * Resize the framebuffer\n     *\n     * @protected\n     * @param {PIXI.Framebuffer} framebuffer\n     */\n    resizeFramebuffer(framebuffer: Framebuffer): void\n    {\n        const { gl } = this;\n\n        const fbo = framebuffer.glFramebuffers[this.CONTEXT_UID];\n\n        if (fbo.stencil)\n        {\n            gl.bindRenderbuffer(gl.RENDERBUFFER, fbo.stencil);\n            gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_STENCIL, framebuffer.width, framebuffer.height);\n        }\n\n        const colorTextures = framebuffer.colorTextures;\n\n        for (let i = 0; i < colorTextures.length; i++)\n        {\n            this.renderer.texture.bind(colorTextures[i], 0);\n        }\n\n        if (framebuffer.depthTexture)\n        {\n            this.renderer.texture.bind(framebuffer.depthTexture, 0);\n        }\n    }\n\n    /**\n     * Update the framebuffer\n     *\n     * @protected\n     * @param {PIXI.Framebuffer} framebuffer\n     */\n    updateFramebuffer(framebuffer: Framebuffer): void\n    {\n        const { gl } = this;\n\n        const fbo = framebuffer.glFramebuffers[this.CONTEXT_UID];\n\n        // bind the color texture\n        const colorTextures = framebuffer.colorTextures;\n\n        let count = colorTextures.length;\n\n        if (!gl.drawBuffers)\n        {\n            count = Math.min(count, 1);\n        }\n\n        if (fbo.multisample > 1)\n        {\n            fbo.msaaBuffer = gl.createRenderbuffer();\n            gl.bindRenderbuffer(gl.RENDERBUFFER, fbo.msaaBuffer);\n            gl.renderbufferStorageMultisample(gl.RENDERBUFFER, fbo.multisample,\n                gl.RGBA8, framebuffer.width, framebuffer.height);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.RENDERBUFFER, fbo.msaaBuffer);\n        }\n\n        const activeTextures = [];\n\n        for (let i = 0; i < count; i++)\n        {\n            if (i === 0 && fbo.multisample > 1)\n            {\n                continue;\n            }\n\n            const texture = framebuffer.colorTextures[i];\n            const parentTexture = texture.parentTextureArray || texture;\n\n            this.renderer.texture.bind(parentTexture, 0);\n\n            gl.framebufferTexture2D(gl.FRAMEBUFFER,\n                gl.COLOR_ATTACHMENT0 + i,\n                texture.target,\n                parentTexture._glTextures[this.CONTEXT_UID].texture,\n                0);\n\n            activeTextures.push(gl.COLOR_ATTACHMENT0 + i);\n        }\n\n        if (activeTextures.length > 1)\n        {\n            gl.drawBuffers(activeTextures);\n        }\n\n        if (framebuffer.depthTexture)\n        {\n            const writeDepthTexture = this.writeDepthTexture;\n\n            if (writeDepthTexture)\n            {\n                const depthTexture = framebuffer.depthTexture;\n\n                this.renderer.texture.bind(depthTexture, 0);\n\n                gl.framebufferTexture2D(gl.FRAMEBUFFER,\n                    gl.DEPTH_ATTACHMENT,\n                    gl.TEXTURE_2D,\n                    depthTexture._glTextures[this.CONTEXT_UID].texture,\n                    0);\n            }\n        }\n\n        if (!fbo.stencil && (framebuffer.stencil || framebuffer.depth))\n        {\n            fbo.stencil = gl.createRenderbuffer();\n\n            gl.bindRenderbuffer(gl.RENDERBUFFER, fbo.stencil);\n\n            gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_STENCIL, framebuffer.width, framebuffer.height);\n            // TODO.. this is depth AND stencil?\n            if (!framebuffer.depthTexture)\n            { // you can't have both, so one should take priority if enabled\n                gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_STENCIL_ATTACHMENT, gl.RENDERBUFFER, fbo.stencil);\n            }\n        }\n    }\n\n    /**\n     * Detects number of samples that is not more than a param but as close to it as possible\n     *\n     * @param {PIXI.MSAA_QUALITY} samples - number of samples\n     * @returns {PIXI.MSAA_QUALITY} - recommended number of samples\n     */\n    protected detectSamples(samples: MSAA_QUALITY): MSAA_QUALITY\n    {\n        const { msaaSamples } = this;\n        let res = MSAA_QUALITY.NONE;\n\n        if (samples <= 1 || msaaSamples === null)\n        {\n            return res;\n        }\n        for (let i = 0; i < msaaSamples.length; i++)\n        {\n            if (msaaSamples[i] <= samples)\n            {\n                res = msaaSamples[i];\n                break;\n            }\n        }\n\n        if (res === 1)\n        {\n            res = MSAA_QUALITY.NONE;\n        }\n\n        return res;\n    }\n\n    /**\n     * Only works with WebGL2\n     *\n     * blits framebuffer to another of the same or bigger size\n     * after that target framebuffer is bound\n     *\n     * Fails with WebGL warning if blits multisample framebuffer to different size\n     *\n     * @param {PIXI.Framebuffer} [framebuffer] - by default it blits \"into itself\", from renderBuffer to texture.\n     * @param {PIXI.Rectangle} [sourcePixels] - source rectangle in pixels\n     * @param {PIXI.Rectangle} [destPixels] - dest rectangle in pixels, assumed to be the same as sourcePixels\n     */\n    public blit(framebuffer?: Framebuffer, sourcePixels?: Rectangle, destPixels?: Rectangle): void\n    {\n        const { current, renderer, gl, CONTEXT_UID } = this;\n\n        if (renderer.context.webGLVersion !== 2)\n        {\n            return;\n        }\n\n        if (!current)\n        {\n            return;\n        }\n        const fbo = current.glFramebuffers[CONTEXT_UID];\n\n        if (!fbo)\n        {\n            return;\n        }\n        if (!framebuffer)\n        {\n            if (fbo.multisample <= 1)\n            {\n                return;\n            }\n            if (!fbo.blitFramebuffer)\n            {\n                fbo.blitFramebuffer = new Framebuffer(current.width, current.height);\n                fbo.blitFramebuffer.addColorTexture(0, current.colorTextures[0]);\n            }\n            framebuffer = fbo.blitFramebuffer;\n            framebuffer.width = current.width;\n            framebuffer.height = current.height;\n        }\n\n        if (!sourcePixels)\n        {\n            sourcePixels = tempRectangle;\n            sourcePixels.width = current.width;\n            sourcePixels.height = current.height;\n        }\n        if (!destPixels)\n        {\n            destPixels = sourcePixels;\n        }\n\n        const sameSize = sourcePixels.width === destPixels.width && sourcePixels.height === destPixels.height;\n\n        this.bind(framebuffer);\n        gl.bindFramebuffer(gl.READ_FRAMEBUFFER, fbo.framebuffer);\n        gl.blitFramebuffer(sourcePixels.x, sourcePixels.y, sourcePixels.width, sourcePixels.height,\n            destPixels.x, destPixels.y, destPixels.width, destPixels.height,\n            gl.COLOR_BUFFER_BIT, sameSize ? gl.NEAREST : gl.LINEAR\n        );\n    }\n\n    /**\n     * Disposes framebuffer\n     * @param {PIXI.Framebuffer} framebuffer - framebuffer that has to be disposed of\n     * @param {boolean} [contextLost=false] - If context was lost, we suppress all delete function calls\n     */\n    disposeFramebuffer(framebuffer: Framebuffer, contextLost?: boolean): void\n    {\n        const fbo = framebuffer.glFramebuffers[this.CONTEXT_UID];\n        const gl = this.gl;\n\n        if (!fbo)\n        {\n            return;\n        }\n\n        delete framebuffer.glFramebuffers[this.CONTEXT_UID];\n\n        const index = this.managedFramebuffers.indexOf(framebuffer);\n\n        if (index >= 0)\n        {\n            this.managedFramebuffers.splice(index, 1);\n        }\n\n        framebuffer.disposeRunner.remove(this);\n\n        if (!contextLost)\n        {\n            gl.deleteFramebuffer(fbo.framebuffer);\n\n            if (fbo.stencil)\n            {\n                gl.deleteRenderbuffer(fbo.stencil);\n            }\n        }\n    }\n\n    /**\n     * Disposes all framebuffers, but not textures bound to them\n     * @param {boolean} [contextLost=false] - If context was lost, we suppress all delete function calls\n     */\n    disposeAll(contextLost?: boolean): void\n    {\n        const list = this.managedFramebuffers;\n\n        (this.managedFramebuffers as any) = [];\n\n        for (let i = 0; i < list.length; i++)\n        {\n            this.disposeFramebuffer(list[i], contextLost);\n        }\n    }\n\n    /**\n     * Forcing creation of stencil buffer for current framebuffer, if it wasn't done before.\n     * Used by MaskSystem, when its time to use stencil mask for Graphics element.\n     *\n     * Its an alternative for public lazy `framebuffer.enableStencil`, in case we need stencil without rebind.\n     *\n     * @private\n     */\n    forceStencil(): void\n    {\n        const framebuffer = this.current;\n\n        if (!framebuffer)\n        {\n            return;\n        }\n\n        const fbo = framebuffer.glFramebuffers[this.CONTEXT_UID];\n\n        if (!fbo || fbo.stencil)\n        {\n            return;\n        }\n        framebuffer.enableStencil();\n\n        const w = framebuffer.width;\n        const h = framebuffer.height;\n        const gl = this.gl;\n        const stencil = gl.createRenderbuffer();\n\n        gl.bindRenderbuffer(gl.RENDERBUFFER, stencil);\n        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_STENCIL, w, h);\n\n        fbo.stencil = stencil;\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_STENCIL_ATTACHMENT, gl.RENDERBUFFER, stencil);\n    }\n\n    /**\n     * resets framebuffer stored state, binds screen framebuffer\n     *\n     * should be called before renderTexture reset()\n     */\n    reset(): void\n    {\n        this.current = this.unknownFramebuffer;\n        this.viewport = new Rectangle();\n    }\n}\n","export class GLBuffer\n{\n    buffer: WebGLBuffer;\n    updateID: number;\n    byteLength: number;\n    refCount: number;\n\n    constructor(buffer?: WebGLBuffer)\n    {\n        this.buffer = buffer || null;\n        this.updateID = -1;\n        this.byteLength = -1;\n        this.refCount = 0;\n    }\n}\n","import { System } from '../System';\nimport { GLBuffer } from './GLBuffer';\nimport { ENV } from '@pixi/constants';\nimport { settings } from '../settings';\n\nimport type { DRAW_MODES } from '@pixi/constants';\nimport type { Renderer } from '../Renderer';\nimport type { IRenderingContext } from '../IRenderingContext';\nimport type { Geometry } from './Geometry';\nimport type { Shader } from '../shader/Shader';\nimport type { Program } from '../shader/Program';\nimport type { Buffer } from './Buffer';\nimport type { Dict } from '@pixi/utils';\n\nconst byteSizeMap: {[key: number]: number} = { 5126: 4, 5123: 2, 5121: 1 };\n\n/**\n * System plugin to the renderer to manage geometry.\n *\n * @class\n * @extends PIXI.System\n * @memberof PIXI.systems\n */\nexport class GeometrySystem extends System\n{\n    public hasVao: boolean;\n    public hasInstance: boolean;\n    public canUseUInt32ElementIndex: boolean;\n    protected CONTEXT_UID: number;\n    protected gl: IRenderingContext;\n    protected _activeGeometry: Geometry;\n    protected _activeVao: WebGLVertexArrayObject;\n    protected _boundBuffer: GLBuffer;\n    readonly managedGeometries: {[key: number]: Geometry};\n    readonly managedBuffers: {[key: number]: Buffer};\n\n    /**\n     * @param {PIXI.Renderer} renderer - The renderer this System works for.\n     */\n    constructor(renderer: Renderer)\n    {\n        super(renderer);\n\n        this._activeGeometry = null;\n        this._activeVao = null;\n\n        /**\n         * `true` if we has `*_vertex_array_object` extension\n         * @member {boolean}\n         * @readonly\n         */\n        this.hasVao = true;\n\n        /**\n         * `true` if has `ANGLE_instanced_arrays` extension\n         * @member {boolean}\n         * @readonly\n         */\n        this.hasInstance = true;\n\n        /**\n         * `true` if support `gl.UNSIGNED_INT` in `gl.drawElements` or `gl.drawElementsInstanced`\n         * @member {boolean}\n         * @readonly\n         */\n        this.canUseUInt32ElementIndex = false;\n\n        /**\n         * Cache for all geometries by id, used in case renderer gets destroyed or for profiling\n         * @member {object}\n         * @readonly\n         */\n        this.managedGeometries = {};\n\n        /**\n         * Cache for all buffers by id, used in case renderer gets destroyed or for profiling\n         * @member {object}\n         * @readonly\n         */\n        this.managedBuffers = {};\n    }\n\n    /**\n     * Sets up the renderer context and necessary buffers.\n     */\n    protected contextChange(): void\n    {\n        this.disposeAll(true);\n\n        const gl = this.gl = this.renderer.gl;\n        const context = this.renderer.context;\n\n        this.CONTEXT_UID = this.renderer.CONTEXT_UID;\n\n        // webgl2\n        if (context.webGLVersion !== 2)\n        {\n            // webgl 1!\n            let nativeVaoExtension = this.renderer.context.extensions.vertexArrayObject;\n\n            if (settings.PREFER_ENV === ENV.WEBGL_LEGACY)\n            {\n                nativeVaoExtension = null;\n            }\n\n            if (nativeVaoExtension)\n            {\n                gl.createVertexArray = (): WebGLVertexArrayObject =>\n                    nativeVaoExtension.createVertexArrayOES();\n\n                gl.bindVertexArray = (vao): void =>\n                    nativeVaoExtension.bindVertexArrayOES(vao);\n\n                gl.deleteVertexArray = (vao): void =>\n                    nativeVaoExtension.deleteVertexArrayOES(vao);\n            }\n            else\n            {\n                this.hasVao = false;\n                gl.createVertexArray = (): WebGLVertexArrayObject =>\n                    null;\n\n                gl.bindVertexArray = (): void =>\n                    null;\n\n                gl.deleteVertexArray = (): void =>\n                    null;\n            }\n        }\n\n        if (context.webGLVersion !== 2)\n        {\n            const instanceExt = gl.getExtension('ANGLE_instanced_arrays');\n\n            if (instanceExt)\n            {\n                gl.vertexAttribDivisor = (a, b): void =>\n                    instanceExt.vertexAttribDivisorANGLE(a, b);\n\n                gl.drawElementsInstanced = (a, b, c, d, e): void =>\n                    instanceExt.drawElementsInstancedANGLE(a, b, c, d, e);\n\n                gl.drawArraysInstanced = (a, b, c, d): void =>\n                    instanceExt.drawArraysInstancedANGLE(a, b, c, d);\n            }\n            else\n            {\n                this.hasInstance = false;\n            }\n        }\n\n        this.canUseUInt32ElementIndex = context.webGLVersion === 2 || !!context.extensions.uint32ElementIndex;\n    }\n\n    /**\n     * Binds geometry so that is can be drawn. Creating a Vao if required\n     *\n     * @param {PIXI.Geometry} geometry - instance of geometry to bind\n     * @param {PIXI.Shader} [shader] - instance of shader to use vao for\n     */\n    bind(geometry?: Geometry, shader?: Shader): void\n    {\n        shader = shader || this.renderer.shader.shader;\n\n        const { gl } = this;\n\n        // not sure the best way to address this..\n        // currently different shaders require different VAOs for the same geometry\n        // Still mulling over the best way to solve this one..\n        // will likely need to modify the shader attribute locations at run time!\n        let vaos = geometry.glVertexArrayObjects[this.CONTEXT_UID];\n        let incRefCount = false;\n\n        if (!vaos)\n        {\n            this.managedGeometries[geometry.id] = geometry;\n            geometry.disposeRunner.add(this);\n            geometry.glVertexArrayObjects[this.CONTEXT_UID] = vaos = {};\n            incRefCount = true;\n        }\n\n        const vao = vaos[shader.program.id] || this.initGeometryVao(geometry, shader.program, incRefCount);\n\n        this._activeGeometry = geometry;\n\n        if (this._activeVao !== vao)\n        {\n            this._activeVao = vao;\n\n            if (this.hasVao)\n            {\n                gl.bindVertexArray(vao);\n            }\n            else\n            {\n                this.activateVao(geometry, shader.program);\n            }\n        }\n\n        // TODO - optimise later!\n        // don't need to loop through if nothing changed!\n        // maybe look to add an 'autoupdate' to geometry?\n        this.updateBuffers();\n    }\n\n    /**\n     * Reset and unbind any active VAO and geometry\n     */\n    reset(): void\n    {\n        this.unbind();\n    }\n\n    /**\n     * Update buffers\n     * @protected\n     */\n    updateBuffers(): void\n    {\n        const geometry = this._activeGeometry;\n        const { gl } = this;\n\n        for (let i = 0; i < geometry.buffers.length; i++)\n        {\n            const buffer = geometry.buffers[i];\n\n            const glBuffer = buffer._glBuffers[this.CONTEXT_UID];\n\n            if (buffer._updateID !== glBuffer.updateID)\n            {\n                glBuffer.updateID = buffer._updateID;\n\n                // TODO can cache this on buffer! maybe added a getter / setter?\n                const type = buffer.index ? gl.ELEMENT_ARRAY_BUFFER : gl.ARRAY_BUFFER;\n\n                // TODO this could change if the VAO changes...\n                // need to come up with a better way to cache..\n                // if (this.boundBuffers[type] !== glBuffer)\n                // {\n                // this.boundBuffers[type] = glBuffer;\n                gl.bindBuffer(type, glBuffer.buffer);\n                // }\n\n                this._boundBuffer = glBuffer;\n\n                if (glBuffer.byteLength >= buffer.data.byteLength)\n                {\n                    // offset is always zero for now!\n                    gl.bufferSubData(type, 0, buffer.data);\n                }\n                else\n                {\n                    const drawType = buffer.static ? gl.STATIC_DRAW : gl.DYNAMIC_DRAW;\n\n                    glBuffer.byteLength = buffer.data.byteLength;\n                    gl.bufferData(type, buffer.data, drawType);\n                }\n            }\n        }\n    }\n\n    /**\n     * Check compability between a geometry and a program\n     * @protected\n     * @param {PIXI.Geometry} geometry - Geometry instance\n     * @param {PIXI.Program} program - Program instance\n     */\n    protected checkCompatibility(geometry: Geometry, program: Program): void\n    {\n        // geometry must have at least all the attributes that the shader requires.\n        const geometryAttributes = geometry.attributes;\n        const shaderAttributes = program.attributeData;\n\n        for (const j in shaderAttributes)\n        {\n            if (!geometryAttributes[j])\n            {\n                throw new Error(`shader and geometry incompatible, geometry missing the \"${j}\" attribute`);\n            }\n        }\n    }\n\n    /**\n     * Takes a geometry and program and generates a unique signature for them.\n     *\n     * @param {PIXI.Geometry} geometry - to get signature from\n     * @param {PIXI.Program} program - to test geometry against\n     * @returns {String} Unique signature of the geometry and program\n     * @protected\n     */\n    protected getSignature(geometry: Geometry, program: Program): string\n    {\n        const attribs = geometry.attributes;\n        const shaderAttributes = program.attributeData;\n\n        const strings = ['g', geometry.id];\n\n        for (const i in attribs)\n        {\n            if (shaderAttributes[i])\n            {\n                strings.push(i);\n            }\n        }\n\n        return strings.join('-');\n    }\n\n    /**\n     * Creates or gets Vao with the same structure as the geometry and stores it on the geometry.\n     * If vao is created, it is bound automatically.\n     *\n     * @protected\n     * @param {PIXI.Geometry} geometry - Instance of geometry to to generate Vao for\n     * @param {PIXI.Program} program - Instance of program\n     * @param {boolean} [incRefCount=false] - Increment refCount of all geometry buffers\n     */\n    protected initGeometryVao(geometry: Geometry, program: Program, incRefCount = true): WebGLVertexArrayObject\n    {\n        this.checkCompatibility(geometry, program);\n\n        const gl = this.gl;\n        const CONTEXT_UID = this.CONTEXT_UID;\n\n        const signature = this.getSignature(geometry, program);\n\n        const vaoObjectHash = geometry.glVertexArrayObjects[this.CONTEXT_UID];\n\n        let vao = vaoObjectHash[signature];\n\n        if (vao)\n        {\n            // this will give us easy access to the vao\n            vaoObjectHash[program.id] = vao;\n\n            return vao;\n        }\n\n        const buffers = geometry.buffers;\n        const attributes = geometry.attributes;\n        const tempStride: Dict<number> = {};\n        const tempStart: Dict<number> = {};\n\n        for (const j in buffers)\n        {\n            tempStride[j] = 0;\n            tempStart[j] = 0;\n        }\n\n        for (const j in attributes)\n        {\n            if (!attributes[j].size && program.attributeData[j])\n            {\n                attributes[j].size = program.attributeData[j].size;\n            }\n            else if (!attributes[j].size)\n            {\n                console.warn(`PIXI Geometry attribute '${j}' size cannot be determined (likely the bound shader does not have the attribute)`);  // eslint-disable-line\n            }\n\n            tempStride[attributes[j].buffer] += attributes[j].size * byteSizeMap[attributes[j].type];\n        }\n\n        for (const j in attributes)\n        {\n            const attribute = attributes[j];\n            const attribSize = attribute.size;\n\n            if (attribute.stride === undefined)\n            {\n                if (tempStride[attribute.buffer] === attribSize * byteSizeMap[attribute.type])\n                {\n                    attribute.stride = 0;\n                }\n                else\n                {\n                    attribute.stride = tempStride[attribute.buffer];\n                }\n            }\n\n            if (attribute.start === undefined)\n            {\n                attribute.start = tempStart[attribute.buffer];\n\n                tempStart[attribute.buffer] += attribSize * byteSizeMap[attribute.type];\n            }\n        }\n\n        vao = gl.createVertexArray();\n\n        gl.bindVertexArray(vao);\n\n        // first update - and create the buffers!\n        // only create a gl buffer if it actually gets\n        for (let i = 0; i < buffers.length; i++)\n        {\n            const buffer = buffers[i];\n\n            if (!buffer._glBuffers[CONTEXT_UID])\n            {\n                buffer._glBuffers[CONTEXT_UID] = new GLBuffer(gl.createBuffer());\n                this.managedBuffers[buffer.id] = buffer;\n                buffer.disposeRunner.add(this);\n            }\n\n            if (incRefCount)\n            {\n                buffer._glBuffers[CONTEXT_UID].refCount++;\n            }\n        }\n\n        // TODO - maybe make this a data object?\n        // lets wait to see if we need to first!\n\n        this.activateVao(geometry, program);\n\n        this._activeVao = vao;\n\n        // add it to the cache!\n        vaoObjectHash[program.id] = vao;\n        vaoObjectHash[signature] = vao;\n\n        return vao;\n    }\n\n    /**\n     * Disposes buffer\n     * @param {PIXI.Buffer} buffer - buffer with data\n     * @param {boolean} [contextLost=false] - If context was lost, we suppress deleteVertexArray\n     */\n    disposeBuffer(buffer: Buffer, contextLost?: boolean): void\n    {\n        if (!this.managedBuffers[buffer.id])\n        {\n            return;\n        }\n\n        delete this.managedBuffers[buffer.id];\n\n        const glBuffer = buffer._glBuffers[this.CONTEXT_UID];\n        const gl = this.gl;\n\n        buffer.disposeRunner.remove(this);\n\n        if (!glBuffer)\n        {\n            return;\n        }\n\n        if (!contextLost)\n        {\n            gl.deleteBuffer(glBuffer.buffer);\n        }\n\n        delete buffer._glBuffers[this.CONTEXT_UID];\n    }\n\n    /**\n     * Disposes geometry\n     * @param {PIXI.Geometry} geometry - Geometry with buffers. Only VAO will be disposed\n     * @param {boolean} [contextLost=false] - If context was lost, we suppress deleteVertexArray\n     */\n    disposeGeometry(geometry: Geometry, contextLost?: boolean): void\n    {\n        if (!this.managedGeometries[geometry.id])\n        {\n            return;\n        }\n\n        delete this.managedGeometries[geometry.id];\n\n        const vaos = geometry.glVertexArrayObjects[this.CONTEXT_UID];\n        const gl = this.gl;\n        const buffers = geometry.buffers;\n\n        geometry.disposeRunner.remove(this);\n\n        if (!vaos)\n        {\n            return;\n        }\n\n        for (let i = 0; i < buffers.length; i++)\n        {\n            const buf = buffers[i]._glBuffers[this.CONTEXT_UID];\n\n            buf.refCount--;\n            if (buf.refCount === 0 && !contextLost)\n            {\n                this.disposeBuffer(buffers[i], contextLost);\n            }\n        }\n\n        if (!contextLost)\n        {\n            for (const vaoId in vaos)\n            {\n                // delete only signatures, everything else are copies\n                if (vaoId[0] === 'g')\n                {\n                    const vao = vaos[vaoId];\n\n                    if (this._activeVao === vao)\n                    {\n                        this.unbind();\n                    }\n                    gl.deleteVertexArray(vao);\n                }\n            }\n        }\n\n        delete geometry.glVertexArrayObjects[this.CONTEXT_UID];\n    }\n\n    /**\n     * dispose all WebGL resources of all managed geometries and buffers\n     * @param {boolean} [contextLost=false] - If context was lost, we suppress `gl.delete` calls\n     */\n    disposeAll(contextLost?: boolean): void\n    {\n        let all: Array<any> = Object.keys(this.managedGeometries);\n\n        for (let i = 0; i < all.length; i++)\n        {\n            this.disposeGeometry(this.managedGeometries[all[i]], contextLost);\n        }\n        all = Object.keys(this.managedBuffers);\n        for (let i = 0; i < all.length; i++)\n        {\n            this.disposeBuffer(this.managedBuffers[all[i]], contextLost);\n        }\n    }\n\n    /**\n     * Activate vertex array object\n     *\n     * @protected\n     * @param {PIXI.Geometry} geometry - Geometry instance\n     * @param {PIXI.Program} program - Shader program instance\n     */\n    protected activateVao(geometry: Geometry, program: Program): void\n    {\n        const gl = this.gl;\n        const CONTEXT_UID = this.CONTEXT_UID;\n        const buffers = geometry.buffers;\n        const attributes = geometry.attributes;\n\n        if (geometry.indexBuffer)\n        {\n            // first update the index buffer if we have one..\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, geometry.indexBuffer._glBuffers[CONTEXT_UID].buffer);\n        }\n\n        let lastBuffer = null;\n\n        // add a new one!\n        for (const j in attributes)\n        {\n            const attribute = attributes[j];\n            const buffer = buffers[attribute.buffer];\n            const glBuffer = buffer._glBuffers[CONTEXT_UID];\n\n            if (program.attributeData[j])\n            {\n                if (lastBuffer !== glBuffer)\n                {\n                    gl.bindBuffer(gl.ARRAY_BUFFER, glBuffer.buffer);\n\n                    lastBuffer = glBuffer;\n                }\n\n                const location = program.attributeData[j].location;\n\n                // TODO introduce state again\n                // we can optimise this for older devices that have no VAOs\n                gl.enableVertexAttribArray(location);\n\n                gl.vertexAttribPointer(location,\n                    attribute.size,\n                    attribute.type || gl.FLOAT,\n                    attribute.normalized,\n                    attribute.stride,\n                    attribute.start);\n\n                if (attribute.instance)\n                {\n                    // TODO calculate instance count based of this...\n                    if (this.hasInstance)\n                    {\n                        gl.vertexAttribDivisor(location, 1);\n                    }\n                    else\n                    {\n                        throw new Error('geometry error, GPU Instancing is not supported on this device');\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Draw the geometry\n     *\n     * @param {Number} type - the type primitive to render\n     * @param {Number} [size] - the number of elements to be rendered\n     * @param {Number} [start] - Starting index\n     * @param {Number} [instanceCount] - the number of instances of the set of elements to execute\n     */\n    draw(type: DRAW_MODES, size?: number, start?: number, instanceCount?: number): this\n    {\n        const { gl } = this;\n        const geometry = this._activeGeometry;\n\n        // TODO.. this should not change so maybe cache the function?\n\n        if (geometry.indexBuffer)\n        {\n            const byteSize = geometry.indexBuffer.data.BYTES_PER_ELEMENT;\n            const glType = byteSize === 2 ? gl.UNSIGNED_SHORT : gl.UNSIGNED_INT;\n\n            if (byteSize === 2 || (byteSize === 4 && this.canUseUInt32ElementIndex))\n            {\n                if (geometry.instanced)\n                {\n                    /* eslint-disable max-len */\n                    gl.drawElementsInstanced(type, size || geometry.indexBuffer.data.length, glType, (start || 0) * byteSize, instanceCount || 1);\n                    /* eslint-enable max-len */\n                }\n                else\n                {\n                    /* eslint-disable max-len */\n                    gl.drawElements(type, size || geometry.indexBuffer.data.length, glType, (start || 0) * byteSize);\n                    /* eslint-enable max-len */\n                }\n            }\n            else\n            {\n                console.warn('unsupported index buffer type: uint32');\n            }\n        }\n        else if (geometry.instanced)\n        {\n            // TODO need a better way to calculate size..\n            gl.drawArraysInstanced(type, start, size || geometry.getSize(), instanceCount || 1);\n        }\n        else\n        {\n            gl.drawArrays(type, start, size || geometry.getSize());\n        }\n\n        return this;\n    }\n\n    /**\n     * Unbind/reset everything\n     * @protected\n     */\n    protected unbind(): void\n    {\n        this.gl.bindVertexArray(null);\n        this._activeVao = null;\n        this._activeGeometry = null;\n    }\n}\n","import { MASK_TYPES } from '@pixi/constants';\n\nimport type { Rectangle, Matrix } from '@pixi/math';\nimport type { IFilterTarget } from '../filters/IFilterTarget';\nimport type { Renderer } from '../Renderer';\n\nexport interface IMaskTarget extends IFilterTarget\n{\n    renderable: boolean;\n    isSprite?: boolean;\n    worldTransform: Matrix;\n    isFastRect?(): boolean;\n    getBounds(skipUpdate?: boolean): Rectangle;\n    render(renderer: Renderer): void;\n}\n/**\n * Component for masked elements\n *\n * Holds mask mode and temporary data about current mask\n *\n * @class\n * @memberof PIXI\n */\nexport class MaskData\n{\n    public type: MASK_TYPES;\n    public autoDetect: boolean;\n    public maskObject: IMaskTarget;\n    public pooled: boolean;\n    public isMaskData: true;\n    _stencilCounter: number;\n    _scissorCounter: number;\n    _scissorRect: Rectangle;\n    _target: IMaskTarget;\n\n    /**\n     * Create MaskData\n     *\n     * @param {PIXI.DisplayObject} [maskObject=null] - object that describes the mask\n     */\n    constructor(maskObject: IMaskTarget = null)\n    {\n        /**\n         * Mask type\n         * @member {PIXI.MASK_TYPES}\n         */\n        this.type = MASK_TYPES.NONE;\n\n        /**\n         * Whether we know the mask type beforehand\n         * @member {boolean}\n         * @default true\n         */\n        this.autoDetect = true;\n\n        /**\n         * Which element we use to mask\n         * @member {PIXI.DisplayObject}\n         */\n        this.maskObject = maskObject || null;\n\n        /**\n         * Whether it belongs to MaskSystem pool\n         * @member {boolean}\n         */\n        this.pooled = false;\n\n        /**\n         * Indicator of the type\n         * @member {boolean}\n         */\n        this.isMaskData = true;\n\n        /**\n         * Stencil counter above the mask in stack\n         * @member {number}\n         * @private\n         */\n        this._stencilCounter = 0;\n        /**\n         * Scissor counter above the mask in stack\n         * @member {number}\n         * @private\n         */\n        this._scissorCounter = 0;\n\n        /**\n         * Scissor operation above the mask in stack.\n         * Null if _scissorCounter is zero, rectangle instance if positive.\n         * @member {PIXI.Rectangle}\n         */\n        this._scissorRect = null;\n\n        /**\n         * Targeted element. Temporary variable set by MaskSystem\n         * @member {PIXI.DisplayObject}\n         * @private\n         */\n        this._target = null;\n    }\n\n    /**\n     * resets the mask data after popMask()\n     */\n    reset(): void\n    {\n        if (this.pooled)\n        {\n            this.maskObject = null;\n\n            this.type = MASK_TYPES.NONE;\n\n            this.autoDetect = true;\n        }\n\n        this._target = null;\n    }\n\n    /**\n     * copies counters from maskData above, called from pushMask()\n     * @param {PIXI.MaskData|null} maskAbove\n     */\n    copyCountersOrReset(maskAbove?: MaskData): void\n    {\n        if (maskAbove)\n        {\n            this._stencilCounter = maskAbove._stencilCounter;\n            this._scissorCounter = maskAbove._scissorCounter;\n            this._scissorRect = maskAbove._scissorRect;\n        }\n        else\n        {\n            this._stencilCounter = 0;\n            this._scissorCounter = 0;\n            this._scissorRect = null;\n        }\n    }\n}\n","import type { Dict } from '@pixi/utils';\n\n/**\n * @private\n * @param gl {WebGLRenderingContext} The current WebGL context {WebGLProgram}\n * @param type {Number} the type, can be either VERTEX_SHADER or FRAGMENT_SHADER\n * @param src {string} The vertex shader source as an array of strings.\n * @return {WebGLShader} the shader\n */\nfunction compileShader(gl: WebGLRenderingContextBase, type: number, src: string): WebGLShader\n{\n    const shader = gl.createShader(type);\n\n    gl.shaderSource(shader, src);\n    gl.compileShader(shader);\n\n    return shader;\n}\n\n/**\n * @method compileProgram\n * @private\n * @memberof PIXI.glCore.shader\n * @param gl {WebGLRenderingContext} The current WebGL context {WebGLProgram}\n * @param vertexSrc {string|string[]} The vertex shader source as an array of strings.\n * @param fragmentSrc {string|string[]} The fragment shader source as an array of strings.\n * @param attributeLocations {Object} An attribute location map that lets you manually set the attribute locations\n * @return {WebGLProgram} the shader program\n */\nexport function compileProgram(gl: WebGLRenderingContextBase, vertexSrc: string, fragmentSrc: string,\n    attributeLocations?: Dict<number>): WebGLProgram\n{\n    const glVertShader = compileShader(gl, gl.VERTEX_SHADER, vertexSrc);\n    const glFragShader = compileShader(gl, gl.FRAGMENT_SHADER, fragmentSrc);\n\n    let program = gl.createProgram();\n\n    gl.attachShader(program, glVertShader);\n    gl.attachShader(program, glFragShader);\n\n    // optionally, set the attributes manually for the program rather than letting WebGL decide..\n    if (attributeLocations)\n    {\n        for (const i in attributeLocations)\n        {\n            gl.bindAttribLocation(program, attributeLocations[i], i);\n        }\n    }\n\n    gl.linkProgram(program);\n\n    // if linking fails, then log and cleanup\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS))\n    {\n        if (!gl.getShaderParameter(glVertShader, gl.COMPILE_STATUS))\n        {\n            console.warn(vertexSrc);\n            console.error(gl.getShaderInfoLog(glVertShader));\n        }\n\n        if (!gl.getShaderParameter(glFragShader, gl.COMPILE_STATUS))\n        {\n            console.warn(fragmentSrc);\n            console.error(gl.getShaderInfoLog(glFragShader));\n        }\n\n        console.error('Pixi.js Error: Could not initialize shader.');\n        console.error('gl.VALIDATE_STATUS', gl.getProgramParameter(program, gl.VALIDATE_STATUS));\n        console.error('gl.getError()', gl.getError());\n\n        // if there is a program info log, log it\n        if (gl.getProgramInfoLog(program) !== '')\n        {\n            console.warn('Pixi.js Warning: gl.getProgramInfoLog()', gl.getProgramInfoLog(program));\n        }\n\n        gl.deleteProgram(program);\n        program = null;\n    }\n\n    // clean up some shaders\n    gl.deleteShader(glVertShader);\n    gl.deleteShader(glFragShader);\n\n    return program;\n}\n","function booleanArray(size: number): Array<boolean>\n{\n    const array = new Array(size);\n\n    for (let i = 0; i < array.length; i++)\n    {\n        array[i] = false;\n    }\n\n    return array;\n}\n\n/**\n * @method defaultValue\n * @memberof PIXI.glCore.shader\n * @param type {String} Type of value\n * @param size {Number}\n * @private\n */\nexport function defaultValue(type: string, size: number): number|Float32Array|Int32Array|boolean|boolean[]\n{\n    switch (type)\n    {\n        case 'float':\n            return 0;\n\n        case 'vec2':\n            return new Float32Array(2 * size);\n\n        case 'vec3':\n            return new Float32Array(3 * size);\n\n        case 'vec4':\n            return new Float32Array(4 * size);\n\n        case 'int':\n        case 'sampler2D':\n        case 'sampler2DArray':\n            return 0;\n\n        case 'ivec2':\n            return new Int32Array(2 * size);\n\n        case 'ivec3':\n            return new Int32Array(3 * size);\n\n        case 'ivec4':\n            return new Int32Array(4 * size);\n\n        case 'bool':\n            return false;\n\n        case 'bvec2':\n\n            return booleanArray(2 * size);\n\n        case 'bvec3':\n            return booleanArray(3 * size);\n\n        case 'bvec4':\n            return booleanArray(4 * size);\n\n        case 'mat2':\n            return new Float32Array([1, 0,\n                0, 1]);\n\n        case 'mat3':\n            return new Float32Array([1, 0, 0,\n                0, 1, 0,\n                0, 0, 1]);\n\n        case 'mat4':\n            return new Float32Array([1, 0, 0, 0,\n                0, 1, 0, 0,\n                0, 0, 1, 0,\n                0, 0, 0, 1]);\n    }\n\n    return null;\n}\n","import { settings } from '../../settings';\nimport { ENV } from '@pixi/constants';\n\nconst unknownContext = {};\nlet context: WebGLRenderingContext | WebGL2RenderingContext = unknownContext as any;\n\n/**\n * returns a little WebGL context to use for program inspection.\n *\n * @static\n * @private\n * @returns {WebGLRenderingContext} a gl context to test with\n */\nexport function getTestContext(): WebGLRenderingContext | WebGL2RenderingContext\n{\n    if (context === unknownContext || (context && context.isContextLost()))\n    {\n        const canvas = document.createElement('canvas');\n\n        let gl: WebGLRenderingContext | WebGL2RenderingContext;\n\n        if (settings.PREFER_ENV >= ENV.WEBGL2)\n        {\n            gl = canvas.getContext('webgl2', {});\n        }\n\n        if (!gl)\n        {\n            gl = canvas.getContext('webgl', {})\n            || (canvas.getContext('experimental-webgl', {}) as WebGLRenderingContext);\n\n            if (!gl)\n            {\n                // fail, not able to get a context\n                gl = null;\n            }\n            else\n            {\n                // for shader testing..\n                gl.getExtension('WEBGL_draw_buffers');\n            }\n        }\n\n        context = gl;\n    }\n\n    return context;\n}\n","import { getTestContext } from './getTestContext';\nimport { PRECISION } from '@pixi/constants';\n\nlet maxFragmentPrecision: string;\n\nexport function getMaxFragmentPrecision(): string\n{\n    if (!maxFragmentPrecision)\n    {\n        maxFragmentPrecision = PRECISION.MEDIUM;\n        const gl = getTestContext();\n\n        if (gl)\n        {\n            if (gl.getShaderPrecisionFormat)\n            {\n                const shaderFragment = gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT);\n\n                maxFragmentPrecision = shaderFragment.precision ? PRECISION.HIGH : PRECISION.MEDIUM;\n            }\n        }\n    }\n\n    return maxFragmentPrecision;\n}\n","import { PRECISION } from '@pixi/constants';\n\n/**\n * Sets the float precision on the shader, ensuring the device supports the request precision.\n * If the precision is already present, it just ensures that the device is able to handle it.\n *\n * @private\n * @param {string} src - The shader source\n * @param {string} requestedPrecision - The request float precision of the shader. Options are 'lowp', 'mediump' or 'highp'.\n * @param {string} maxSupportedPrecision - The maximum precision the shader supports.\n *\n * @return {string} modified shader source\n */\nexport function setPrecision(src: string, requestedPrecision: string, maxSupportedPrecision: string): string\n{\n    if (src.substring(0, 9) !== 'precision')\n    {\n        // no precision supplied, so PixiJS will add the requested level.\n        let precision = requestedPrecision;\n\n        // If highp is requested but not supported, downgrade precision to a level all devices support.\n        if (requestedPrecision === PRECISION.HIGH && maxSupportedPrecision !== PRECISION.HIGH)\n        {\n            precision = PRECISION.MEDIUM;\n        }\n\n        return `precision ${precision} float;\\n${src}`;\n    }\n    else if (maxSupportedPrecision !== PRECISION.HIGH && src.substring(0, 15) === 'precision highp')\n    {\n        // precision was supplied, but at a level this device does not support, so downgrading to mediump.\n        return src.replace('precision highp', 'precision mediump');\n    }\n\n    return src;\n}\n","import type { Dict } from '@pixi/utils';\n\nconst GLSL_TO_SIZE: Dict<number> = {\n    float:    1,\n    vec2:     2,\n    vec3:     3,\n    vec4:     4,\n\n    int:      1,\n    ivec2:    2,\n    ivec3:    3,\n    ivec4:    4,\n\n    bool:     1,\n    bvec2:    2,\n    bvec3:    3,\n    bvec4:    4,\n\n    mat2:     4,\n    mat3:     9,\n    mat4:     16,\n\n    sampler2D:  1,\n};\n\n/**\n * @private\n * @method mapSize\n * @memberof PIXI.glCore.shader\n * @param type {String}\n * @return {Number}\n */\nexport function mapSize(type: string): number\n{\n    return GLSL_TO_SIZE[type];\n}\n","import type { Dict } from '@pixi/utils';\n\nlet GL_TABLE: Dict<string> = null;\n\nconst GL_TO_GLSL_TYPES: Dict<string> = {\n    FLOAT:       'float',\n    FLOAT_VEC2:  'vec2',\n    FLOAT_VEC3:  'vec3',\n    FLOAT_VEC4:  'vec4',\n\n    INT:         'int',\n    INT_VEC2:    'ivec2',\n    INT_VEC3:    'ivec3',\n    INT_VEC4:    'ivec4',\n\n    BOOL:        'bool',\n    BOOL_VEC2:   'bvec2',\n    BOOL_VEC3:   'bvec3',\n    BOOL_VEC4:   'bvec4',\n\n    FLOAT_MAT2:  'mat2',\n    FLOAT_MAT3:  'mat3',\n    FLOAT_MAT4:  'mat4',\n\n    SAMPLER_2D:              'sampler2D',\n    INT_SAMPLER_2D:          'sampler2D',\n    UNSIGNED_INT_SAMPLER_2D: 'sampler2D',\n    SAMPLER_CUBE:              'samplerCube',\n    INT_SAMPLER_CUBE:          'samplerCube',\n    UNSIGNED_INT_SAMPLER_CUBE: 'samplerCube',\n    SAMPLER_2D_ARRAY:              'sampler2DArray',\n    INT_SAMPLER_2D_ARRAY:          'sampler2DArray',\n    UNSIGNED_INT_SAMPLER_2D_ARRAY: 'sampler2DArray',\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function mapType(gl: any, type: number): string\n{\n    if (!GL_TABLE)\n    {\n        const typeNames = Object.keys(GL_TO_GLSL_TYPES);\n\n        GL_TABLE = {};\n\n        for (let i = 0; i < typeNames.length; ++i)\n        {\n            const tn = typeNames[i];\n\n            GL_TABLE[gl[tn]] = GL_TO_GLSL_TYPES[tn];\n        }\n    }\n\n    return GL_TABLE[type];\n}\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n// Parsers, each one of these will take a look at the type of shader property and uniform.\n// if they pass the test function then the code function is called that returns a the shader upload code for that uniform.\n// Shader upload code is automagically generated with these parsers.\n// If no parser is valid then the default upload functions are used.\n// exposing Parsers means that custom upload logic can be added to pixi's shaders.\n// A good example would be a pixi rectangle can be directly set on a uniform.\n// If the shader sees it it knows how to upload the rectangle structure as a vec4\n// format is as follows:\n//\n// {\n//     test: (data, uniform) => {} <--- test is this code should be used for this uniform\n//     code: (name, uniform) => {} <--- returns the string of the piece of code that uploads the uniform\n// }\n\nexport interface IUniformParser\n{\n    test(data: unknown, uniform: any): boolean;\n    code(name: string, uniform: any): string;\n}\n\nexport const uniformParsers: IUniformParser[] = [\n\n    // a float cache layer\n    {\n        test: (data: any): boolean =>\n            data.type === 'float' && data.size === 1,\n        code: (name: string): string =>\n            `\n            if(uv[\"${name}\"] !== ud[\"${name}\"].value)\n            {\n                ud[\"${name}\"].value = uv[\"${name}\"]\n                gl.uniform1f(ud[\"${name}\"].location, uv[\"${name}\"])\n            }\n            `,\n    },\n    // handling samplers\n    {\n        test: (data: any): boolean =>\n            // eslint-disable-next-line max-len\n            (data.type === 'sampler2D' || data.type === 'samplerCube' || data.type === 'sampler2DArray') && data.size === 1 && !data.isArray,\n        code: (name: string): string => `t = syncData.textureCount++;\n\n            renderer.texture.bind(uv[\"${name}\"], t);\n\n            if(ud[\"${name}\"].value !== t)\n            {\n                ud[\"${name}\"].value = t;\n                gl.uniform1i(ud[\"${name}\"].location, t);\\n; // eslint-disable-line max-len\n            }`,\n    },\n    // uploading pixi matrix object to mat3\n    {\n        test: (data: any, uniform: any): boolean =>\n            data.type === 'mat3' && data.size === 1 && uniform.a !== undefined,\n        code: (name: string): string =>\n\n            // TODO and some smart caching dirty ids here!\n            `\n            gl.uniformMatrix3fv(ud[\"${name}\"].location, false, uv[\"${name}\"].toArray(true));\n            `\n        ,\n\n    },\n    // uploading a pixi point as a vec2 with caching layer\n    {\n        test: (data: any, uniform: any): boolean =>\n            data.type === 'vec2' && data.size === 1 && uniform.x !== undefined,\n        code: (name: string): string =>\n            `\n                cv = ud[\"${name}\"].value;\n                v = uv[\"${name}\"];\n\n                if(cv[0] !== v.x || cv[1] !== v.y)\n                {\n                    cv[0] = v.x;\n                    cv[1] = v.y;\n                    gl.uniform2f(ud[\"${name}\"].location, v.x, v.y);\n                }`,\n    },\n    // caching layer for a vec2\n    {\n        test: (data: any): boolean =>\n            data.type === 'vec2' && data.size === 1,\n        code: (name: string): string =>\n            `\n                cv = ud[\"${name}\"].value;\n                v = uv[\"${name}\"];\n\n                if(cv[0] !== v[0] || cv[1] !== v[1])\n                {\n                    cv[0] = v[0];\n                    cv[1] = v[1];\n                    gl.uniform2f(ud[\"${name}\"].location, v[0], v[1]);\n                }\n            `,\n    },\n    // upload a pixi rectangle as a vec4 with caching layer\n    {\n        test: (data: any, uniform: any): boolean =>\n            data.type === 'vec4' && data.size === 1 && uniform.width !== undefined,\n\n        code: (name: string): string =>\n            `\n                cv = ud[\"${name}\"].value;\n                v = uv[\"${name}\"];\n\n                if(cv[0] !== v.x || cv[1] !== v.y || cv[2] !== v.width || cv[3] !== v.height)\n                {\n                    cv[0] = v.x;\n                    cv[1] = v.y;\n                    cv[2] = v.width;\n                    cv[3] = v.height;\n                    gl.uniform4f(ud[\"${name}\"].location, v.x, v.y, v.width, v.height)\n                }`,\n    },\n    // a caching layer for vec4 uploading\n    {\n        test: (data: any): boolean =>\n            data.type === 'vec4' && data.size === 1,\n        code: (name: string): string =>\n            `\n                cv = ud[\"${name}\"].value;\n                v = uv[\"${name}\"];\n\n                if(cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2] || cv[3] !== v[3])\n                {\n                    cv[0] = v[0];\n                    cv[1] = v[1];\n                    cv[2] = v[2];\n                    cv[3] = v[3];\n\n                    gl.uniform4f(ud[\"${name}\"].location, v[0], v[1], v[2], v[3])\n                }`,\n    },\n];\n\n","import { uniformParsers } from './uniformParsers';\n\nimport type { UniformGroup } from '../UniformGroup';\nimport type { Dict } from '@pixi/utils';\n\nexport type UniformsSyncCallback = (...args: any[]) => void;\n\n// cv = CachedValue\n// v = value\n// ud = uniformData\n// uv = uniformValue\n// l = location\nconst GLSL_TO_SINGLE_SETTERS_CACHED: Dict<string> = {\n\n    float: `\n    if(cv !== v)\n    {\n        cv.v = v;\n        gl.uniform1f(location, v)\n    }`,\n\n    vec2: `\n    if(cv[0] !== v[0] || cv[1] !== v[1])\n    {\n        cv[0] = v[0];\n        cv[1] = v[1];\n        gl.uniform2f(location, v[0], v[1])\n    }`,\n\n    vec3: `\n    if(cv[0] !== v[0] || cv[1] !== v[1] || cv[2] !== v[2])\n    {\n        cv[0] = v[0];\n        cv[1] = v[1];\n        cv[2] = v[2];\n\n        gl.uniform3f(location, v[0], v[1], v[2])\n    }`,\n\n    vec4:     'gl.uniform4f(location, v[0], v[1], v[2], v[3])',\n\n    int:      'gl.uniform1i(location, v)',\n    ivec2:    'gl.uniform2i(location, v[0], v[1])',\n    ivec3:    'gl.uniform3i(location, v[0], v[1], v[2])',\n    ivec4:    'gl.uniform4i(location, v[0], v[1], v[2], v[3])',\n\n    bool:     'gl.uniform1i(location, v)',\n    bvec2:    'gl.uniform2i(location, v[0], v[1])',\n    bvec3:    'gl.uniform3i(location, v[0], v[1], v[2])',\n    bvec4:    'gl.uniform4i(location, v[0], v[1], v[2], v[3])',\n\n    mat2:     'gl.uniformMatrix2fv(location, false, v)',\n    mat3:     'gl.uniformMatrix3fv(location, false, v)',\n    mat4:     'gl.uniformMatrix4fv(location, false, v)',\n\n    sampler2D:      'gl.uniform1i(location, v)',\n    samplerCube:    'gl.uniform1i(location, v)',\n    sampler2DArray: 'gl.uniform1i(location, v)',\n};\n\nconst GLSL_TO_ARRAY_SETTERS: Dict<string> = {\n\n    float:    `gl.uniform1fv(location, v)`,\n\n    vec2:     `gl.uniform2fv(location, v)`,\n    vec3:     `gl.uniform3fv(location, v)`,\n    vec4:     'gl.uniform4fv(location, v)',\n\n    mat4:     'gl.uniformMatrix4fv(location, false, v)',\n    mat3:     'gl.uniformMatrix3fv(location, false, v)',\n    mat2:     'gl.uniformMatrix2fv(location, false, v)',\n\n    int:      'gl.uniform1iv(location, v)',\n    ivec2:    'gl.uniform2iv(location, v)',\n    ivec3:    'gl.uniform3iv(location, v)',\n    ivec4:    'gl.uniform4iv(location, v)',\n\n    bool:     'gl.uniform1iv(location, v)',\n    bvec2:    'gl.uniform2iv(location, v)',\n    bvec3:    'gl.uniform3iv(location, v)',\n    bvec4:    'gl.uniform4iv(location, v)',\n\n    sampler2D:      'gl.uniform1iv(location, v)',\n    samplerCube:    'gl.uniform1iv(location, v)',\n    sampler2DArray: 'gl.uniform1iv(location, v)',\n};\n\nexport function generateUniformsSync(group: UniformGroup, uniformData: Dict<any>): UniformsSyncCallback\n{\n    const funcFragments = [`\n        var v = null;\n        var cv = null\n        var t = 0;\n        var gl = renderer.gl\n    `];\n\n    for (const i in group.uniforms)\n    {\n        const data = uniformData[i];\n\n        if (!data)\n        {\n            if (group.uniforms[i].group)\n            {\n                funcFragments.push(`\n                    renderer.shader.syncUniformGroup(uv[\"${i}\"], syncData);\n                `);\n            }\n\n            continue;\n        }\n\n        const uniform = group.uniforms[i];\n\n        let parsed = false;\n\n        for (let j = 0; j < uniformParsers.length; j++)\n        {\n            if (uniformParsers[j].test(data, uniform))\n            {\n                funcFragments.push(uniformParsers[j].code(i, uniform));\n                parsed = true;\n\n                break;\n            }\n        }\n\n        if (!parsed)\n        {\n            const templateType = (data.size === 1) ? GLSL_TO_SINGLE_SETTERS_CACHED : GLSL_TO_ARRAY_SETTERS;\n\n            const template =  templateType[data.type].replace('location', `ud[\"${i}\"].location`);\n\n            funcFragments.push(`\n            cv = ud[\"${i}\"].value;\n            v = uv[\"${i}\"];\n            ${template};`);\n        }\n    }\n\n    /**\n     * the introduction of syncData is to solve an issue where textures in uniform groups are not set correctly\n     * the texture count was always starting from 0 in each group. This needs to increment each time a texture is used\n     * no matter which group is being used\n     *\n     */\n    // eslint-disable-next-line no-new-func\n    return new Function('ud', 'uv', 'renderer', 'syncData', funcFragments.join('\\n')) as UniformsSyncCallback;\n}\n\n","import type { IRenderingContext } from '../../IRenderingContext';\n\nconst fragTemplate = [\n    'precision mediump float;',\n    'void main(void){',\n    'float test = 0.1;',\n    '%forloop%',\n    'gl_FragColor = vec4(0.0);',\n    '}',\n].join('\\n');\n\nfunction generateIfTestSrc(maxIfs: number): string\n{\n    let src = '';\n\n    for (let i = 0; i < maxIfs; ++i)\n    {\n        if (i > 0)\n        {\n            src += '\\nelse ';\n        }\n\n        if (i < maxIfs - 1)\n        {\n            src += `if(test == ${i}.0){}`;\n        }\n    }\n\n    return src;\n}\n\nexport function checkMaxIfStatementsInShader(maxIfs: number, gl: IRenderingContext): number\n{\n    if (maxIfs === 0)\n    {\n        throw new Error('Invalid value of `0` passed to `checkMaxIfStatementsInShader`');\n    }\n\n    const shader = gl.createShader(gl.FRAGMENT_SHADER);\n\n    while (true) // eslint-disable-line no-constant-condition\n    {\n        const fragmentSrc = fragTemplate.replace(/%forloop%/gi, generateIfTestSrc(maxIfs));\n\n        gl.shaderSource(shader, fragmentSrc);\n        gl.compileShader(shader);\n\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS))\n        {\n            maxIfs = (maxIfs / 2) | 0;\n        }\n        else\n        {\n            // valid!\n            break;\n        }\n    }\n\n    return maxIfs;\n}\n","// Cache the result to prevent running this over and over\nlet unsafeEval: boolean;\n\n/**\n * Not all platforms allow to generate function code (e.g., `new Function`).\n * this provides the platform-level detection.\n *\n * @private\n * @returns {boolean}\n */\nexport function unsafeEvalSupported(): boolean\n{\n    if (typeof unsafeEval === 'boolean')\n    {\n        return unsafeEval;\n    }\n\n    try\n    {\n        /* eslint-disable no-new-func */\n        const func = new Function('param1', 'param2', 'param3', 'return param1[param2] === param3;');\n        /* eslint-enable no-new-func */\n\n        unsafeEval = func({ a: 'b' }, 'a', 'b') === true;\n    }\n    catch (e)\n    {\n        unsafeEval = false;\n    }\n\n    return unsafeEval;\n}\n","import { setPrecision,\n    defaultValue,\n    compileProgram,\n    mapSize,\n    mapType,\n    getTestContext,\n    getMaxFragmentPrecision } from './utils';\nimport { ProgramCache } from '@pixi/utils';\nimport defaultFragment from './defaultProgram.frag';\nimport defaultVertex from './defaultProgram.vert';\nimport { settings } from '@pixi/settings';\nimport { PRECISION } from '@pixi/constants';\n\nimport type { GLProgram } from './GLProgram';\n\nlet UID = 0;\n\nconst nameCache: { [key: string]: number } = {};\n\nexport interface IAttributeData\n{\n    type: string;\n    size: number;\n    location: number;\n    name: string;\n}\n\nexport interface IUniformData\n{\n    type: string;\n    size: number;\n    isArray: RegExpMatchArray;\n    value: any;\n}\n\n/**\n * Helper class to create a shader program.\n *\n * @class\n * @memberof PIXI\n */\nexport class Program\n{\n    public id: number;\n    public vertexSrc: string;\n    public fragmentSrc: string;\n    nameCache: any;\n    glPrograms: { [ key: number ]: GLProgram};\n    syncUniforms: any;\n    attributeData: { [key: string]: IAttributeData};\n    uniformData: {[key: string]: IUniformData};\n    /**\n     * @param {string} [vertexSrc] - The source of the vertex shader.\n     * @param {string} [fragmentSrc] - The source of the fragment shader.\n     * @param {string} [name] - Name for shader\n     */\n    constructor(vertexSrc?: string, fragmentSrc?: string, name = 'pixi-shader')\n    {\n        this.id = UID++;\n\n        /**\n         * The vertex shader.\n         *\n         * @member {string}\n         */\n        this.vertexSrc = vertexSrc || Program.defaultVertexSrc;\n\n        /**\n         * The fragment shader.\n         *\n         * @member {string}\n         */\n        this.fragmentSrc = fragmentSrc || Program.defaultFragmentSrc;\n\n        this.vertexSrc = this.vertexSrc.trim();\n        this.fragmentSrc = this.fragmentSrc.trim();\n\n        if (this.vertexSrc.substring(0, 8) !== '#version')\n        {\n            name = name.replace(/\\s+/g, '-');\n\n            if (nameCache[name])\n            {\n                nameCache[name]++;\n                name += `-${nameCache[name]}`;\n            }\n            else\n            {\n                nameCache[name] = 1;\n            }\n\n            this.vertexSrc = `#define SHADER_NAME ${name}\\n${this.vertexSrc}`;\n            this.fragmentSrc = `#define SHADER_NAME ${name}\\n${this.fragmentSrc}`;\n\n            this.vertexSrc = setPrecision(this.vertexSrc, settings.PRECISION_VERTEX, PRECISION.HIGH);\n            this.fragmentSrc = setPrecision(this.fragmentSrc, settings.PRECISION_FRAGMENT, getMaxFragmentPrecision());\n        }\n\n        // currently this does not extract structs only default types\n        this.extractData(this.vertexSrc, this.fragmentSrc);\n\n        // this is where we store shader references..\n        this.glPrograms = {};\n\n        this.syncUniforms = null;\n    }\n\n    /**\n     * Extracts the data for a buy creating a small test program\n     * or reading the src directly.\n     * @protected\n     *\n     * @param {string} [vertexSrc] - The source of the vertex shader.\n     * @param {string} [fragmentSrc] - The source of the fragment shader.\n     */\n    protected extractData(vertexSrc: string, fragmentSrc: string): void\n    {\n        const gl = getTestContext();\n\n        if (gl)\n        {\n            const program = compileProgram(gl, vertexSrc, fragmentSrc);\n\n            this.attributeData = this.getAttributeData(program, gl);\n            this.uniformData = this.getUniformData(program, gl);\n\n            gl.deleteProgram(program);\n        }\n        else\n        {\n            this.uniformData = {};\n            this.attributeData = {};\n        }\n    }\n\n    /**\n     * returns the attribute data from the program\n     * @private\n     *\n     * @param {WebGLProgram} [program] - the WebGL program\n     * @param {WebGLRenderingContext} [gl] - the WebGL context\n     *\n     * @returns {object} the attribute data for this program\n     */\n    protected getAttributeData(program: WebGLProgram, gl: WebGLRenderingContextBase): {[key: string]: IAttributeData}\n    {\n        const attributes: {[key: string]: IAttributeData} = {};\n        const attributesArray: Array<IAttributeData> = [];\n\n        const totalAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n        for (let i = 0; i < totalAttributes; i++)\n        {\n            const attribData = gl.getActiveAttrib(program, i);\n            const type = mapType(gl, attribData.type);\n\n            /*eslint-disable */\n            const data = {\n                type: type,\n                name: attribData.name,\n                size: mapSize(type),\n                location: 0,\n            };\n            /* eslint-enable */\n\n            attributes[attribData.name] = data;\n            attributesArray.push(data);\n        }\n\n        attributesArray.sort((a, b) => (a.name > b.name) ? 1 : -1); // eslint-disable-line no-confusing-arrow\n\n        for (let i = 0; i < attributesArray.length; i++)\n        {\n            attributesArray[i].location = i;\n        }\n\n        return attributes;\n    }\n\n    /**\n     * returns the uniform data from the program\n     * @private\n     *\n     * @param {webGL-program} [program] - the webgl program\n     * @param {context} [gl] - the WebGL context\n     *\n     * @returns {object} the uniform data for this program\n     */\n    private getUniformData(program: WebGLProgram, gl: WebGLRenderingContextBase): {[key: string]: IUniformData}\n    {\n        const uniforms: {[key: string]: IUniformData} = {};\n\n        const totalUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n        // TODO expose this as a prop?\n        // const maskRegex = new RegExp('^(projectionMatrix|uSampler|translationMatrix)$');\n        // const maskRegex = new RegExp('^(projectionMatrix|uSampler|translationMatrix)$');\n\n        for (let i = 0; i < totalUniforms; i++)\n        {\n            const uniformData = gl.getActiveUniform(program, i);\n            const name = uniformData.name.replace(/\\[.*?\\]$/, '');\n\n            const isArray = uniformData.name.match(/\\[.*?\\]$/);\n            const type = mapType(gl, uniformData.type);\n\n            /*eslint-disable */\n            uniforms[name] = {\n                type: type,\n                size: uniformData.size,\n                isArray:isArray,\n                value: defaultValue(type, uniformData.size),\n            };\n            /* eslint-enable */\n        }\n\n        return uniforms;\n    }\n\n    /**\n     * The default vertex shader source\n     *\n     * @static\n     * @constant\n     * @member {string}\n     */\n    static get defaultVertexSrc(): string\n    {\n        return defaultVertex;\n    }\n\n    /**\n     * The default fragment shader source\n     *\n     * @static\n     * @constant\n     * @member {string}\n     */\n    static get defaultFragmentSrc(): string\n    {\n        return defaultFragment;\n    }\n\n    /**\n     * A short hand function to create a program based of a vertex and fragment shader\n     * this method will also check to see if there is a cached program.\n     *\n     * @param {string} [vertexSrc] - The source of the vertex shader.\n     * @param {string} [fragmentSrc] - The source of the fragment shader.\n     * @param {string} [name=pixi-shader] - Name for shader\n     *\n     * @returns {PIXI.Program} an shiny new Pixi shader!\n     */\n    static from(vertexSrc?: string, fragmentSrc?: string, name?: string): Program\n    {\n        const key = vertexSrc + fragmentSrc;\n\n        let program = ProgramCache[key];\n\n        if (!program)\n        {\n            ProgramCache[key] = program = new Program(vertexSrc, fragmentSrc, name);\n        }\n\n        return program;\n    }\n}\n","import { Program } from './Program';\nimport { UniformGroup } from './UniformGroup';\n\nimport type { Dict } from '@pixi/utils';\n\n/**\n * A helper class for shaders\n *\n * @class\n * @memberof PIXI\n */\nexport class Shader\n{\n    public program: Program;\n    public uniformGroup: UniformGroup;\n    /**\n     * @param {PIXI.Program} [program] - The program the shader will use.\n     * @param {object} [uniforms] - Custom uniforms to use to augment the built-in ones.\n     */\n    constructor(program: Program, uniforms: Dict<any>)\n    {\n        /**\n         * Program that the shader uses\n         *\n         * @member {PIXI.Program}\n         */\n        this.program = program;\n\n        // lets see whats been passed in\n        // uniforms should be converted to a uniform group\n        if (uniforms)\n        {\n            if (uniforms instanceof UniformGroup)\n            {\n                this.uniformGroup = uniforms;\n            }\n            else\n            {\n                this.uniformGroup = new UniformGroup(uniforms);\n            }\n        }\n        else\n        {\n            this.uniformGroup = new UniformGroup({});\n        }\n\n        // time to build some getters and setters!\n        // I guess down the line this could sort of generate an instruction list rather than use dirty ids?\n        // does the trick for now though!\n        for (const i in program.uniformData)\n        {\n            if (this.uniformGroup.uniforms[i] instanceof Array)\n            {\n                this.uniformGroup.uniforms[i] = new Float32Array(this.uniformGroup.uniforms[i]);\n            }\n        }\n    }\n\n    // TODO move to shader system..\n    checkUniformExists(name: string, group: UniformGroup): boolean\n    {\n        if (group.uniforms[name])\n        {\n            return true;\n        }\n\n        for (const i in group.uniforms)\n        {\n            const uniform = group.uniforms[i];\n\n            if (uniform.group)\n            {\n                if (this.checkUniformExists(name, uniform))\n                {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    destroy(): void\n    {\n        // usage count on programs?\n        // remove if not used!\n        this.uniformGroup = null;\n    }\n\n    /**\n     * Shader uniform values, shortcut for `uniformGroup.uniforms`\n     * @readonly\n     * @member {object}\n     */\n    get uniforms(): Dict<any>\n    {\n        return this.uniformGroup.uniforms;\n    }\n\n    /**\n     * A short hand function to create a shader based of a vertex and fragment shader\n     *\n     * @param {string} [vertexSrc] - The source of the vertex shader.\n     * @param {string} [fragmentSrc] - The source of the fragment shader.\n     * @param {object} [uniforms] - Custom uniforms to use to augment the built-in ones.\n     *\n     * @returns {PIXI.Shader} an shiny new Pixi shader!\n     */\n    static from(vertexSrc?: string, fragmentSrc?: string, uniforms?: Dict<any>): Shader\n    {\n        const program = Program.from(vertexSrc, fragmentSrc);\n\n        return new Shader(program, uniforms);\n    }\n}\n","import { BLEND_MODES } from '@pixi/constants';\n\n/* eslint-disable max-len */\n\nconst BLEND = 0;\nconst OFFSET = 1;\nconst CULLING = 2;\nconst DEPTH_TEST = 3;\nconst WINDING = 4;\n\n/**\n * This is a WebGL state, and is is passed The WebGL StateManager.\n *\n * Each mesh rendered may require WebGL to be in a different state.\n * For example you may want different blend mode or to enable polygon offsets\n *\n * @class\n * @memberof PIXI\n */\nexport class State\n{\n    data: number;\n    _blendMode: BLEND_MODES;\n    _polygonOffset: number;\n\n    constructor()\n    {\n        this.data = 0;\n\n        this.blendMode = BLEND_MODES.NORMAL;\n        this.polygonOffset = 0;\n\n        this.blend = true;\n        //  this.depthTest = true;\n    }\n\n    /**\n     * Activates blending of the computed fragment color values\n     *\n     * @member {boolean}\n     */\n    get blend(): boolean\n    {\n        return !!(this.data & (1 << BLEND));\n    }\n\n    set blend(value: boolean)\n    {\n        if (!!(this.data & (1 << BLEND)) !== value)\n        {\n            this.data ^= (1 << BLEND);\n        }\n    }\n\n    /**\n     * Activates adding an offset to depth values of polygon's fragments\n     *\n     * @member {boolean}\n     * @default false\n     */\n    get offsets(): boolean\n    {\n        return !!(this.data & (1 << OFFSET));\n    }\n\n    set offsets(value: boolean)\n    {\n        if (!!(this.data & (1 << OFFSET)) !== value)\n        {\n            this.data ^= (1 << OFFSET);\n        }\n    }\n\n    /**\n     * Activates culling of polygons.\n     *\n     * @member {boolean}\n     * @default false\n     */\n    get culling(): boolean\n    {\n        return !!(this.data & (1 << CULLING));\n    }\n\n    set culling(value: boolean)\n    {\n        if (!!(this.data & (1 << CULLING)) !== value)\n        {\n            this.data ^= (1 << CULLING);\n        }\n    }\n\n    /**\n     * Activates depth comparisons and updates to the depth buffer.\n     *\n     * @member {boolean}\n     * @default false\n     */\n    get depthTest(): boolean\n    {\n        return !!(this.data & (1 << DEPTH_TEST));\n    }\n\n    set depthTest(value: boolean)\n    {\n        if (!!(this.data & (1 << DEPTH_TEST)) !== value)\n        {\n            this.data ^= (1 << DEPTH_TEST);\n        }\n    }\n\n    /**\n     * Specifies whether or not front or back-facing polygons can be culled.\n     * @member {boolean}\n     * @default false\n     */\n    get clockwiseFrontFace(): boolean\n    {\n        return !!(this.data & (1 << WINDING));\n    }\n\n    set clockwiseFrontFace(value: boolean)\n    {\n        if (!!(this.data & (1 << WINDING)) !== value)\n        {\n            this.data ^= (1 << WINDING);\n        }\n    }\n\n    /**\n     * The blend mode to be applied when this state is set. Apply a value of `PIXI.BLEND_MODES.NORMAL` to reset the blend mode.\n     * Setting this mode to anything other than NO_BLEND will automatically switch blending on.\n     *\n     * @member {number}\n     * @default PIXI.BLEND_MODES.NORMAL\n     * @see PIXI.BLEND_MODES\n     */\n    get blendMode(): BLEND_MODES\n    {\n        return this._blendMode;\n    }\n\n    set blendMode(value: BLEND_MODES)\n    {\n        this.blend = (value !== BLEND_MODES.NONE);\n        this._blendMode = value;\n    }\n\n    /**\n     * The polygon offset. Setting this property to anything other than 0 will automatically enable polygon offset fill.\n     *\n     * @member {number}\n     * @default 0\n     */\n    get polygonOffset(): number\n    {\n        return this._polygonOffset;\n    }\n\n    set polygonOffset(value: number)\n    {\n        this.offsets = !!value;\n        this._polygonOffset = value;\n    }\n\n    static for2d(): State\n    {\n        const state = new State();\n\n        state.depthTest = false;\n        state.blend = true;\n\n        return state;\n    }\n}\n\n","import { Shader } from '../shader/Shader';\nimport { Program } from '../shader/Program';\nimport { State } from '../state/State';\nimport { settings } from '@pixi/settings';\nimport defaultVertex from './defaultFilter.vert';\nimport defaultFragment from './defaultFilter.frag';\n\nimport type { RenderTexture } from '../renderTexture/RenderTexture';\nimport type { FilterSystem } from './FilterSystem';\nimport type { FilterState } from './FilterState';\nimport type { BLEND_MODES, CLEAR_MODES } from '@pixi/constants';\nimport type { Dict } from '@pixi/utils';\n\n/**\n * Filter is a special type of WebGL shader that is applied to the screen.\n *\n * {@link http://pixijs.io/examples/#/filters/blur-filter.js Example} of the\n * {@link PIXI.filters.BlurFilter BlurFilter}.\n *\n * ### Usage\n * Filters can be applied to any DisplayObject or Container.\n * PixiJS' `FilterSystem` renders the container into temporary Framebuffer,\n * then filter renders it to the screen.\n * Multiple filters can be added to the `filters` array property and stacked on each other.\n *\n * ```\n * const filter = new PIXI.Filter(myShaderVert, myShaderFrag, { myUniform: 0.5 });\n * const container = new PIXI.Container();\n * container.filters = [filter];\n * ```\n *\n * ### Previous Version Differences\n *\n * In PixiJS **v3**, a filter was always applied to _whole screen_.\n *\n * In PixiJS **v4**, a filter can be applied _only part of the screen_.\n * Developers had to create a set of uniforms to deal with coordinates.\n *\n * In PixiJS **v5** combines _both approaches_.\n * Developers can use normal coordinates of v3 and then allow filter to use partial Framebuffers,\n * bringing those extra uniforms into account.\n *\n * Also be aware that we have changed default vertex shader, please consult\n * {@link https://github.com/pixijs/pixi.js/wiki/v5-Creating-filters Wiki}.\n *\n * ### Built-in Uniforms\n *\n * PixiJS viewport uses screen (CSS) coordinates, `(0, 0, renderer.screen.width, renderer.screen.height)`,\n * and `projectionMatrix` uniform maps it to the gl viewport.\n *\n * **uSampler**\n *\n * The most important uniform is the input texture that container was rendered into.\n * _Important note: as with all Framebuffers in PixiJS, both input and output are\n * premultiplied by alpha._\n *\n * By default, input normalized coordinates are passed to fragment shader with `vTextureCoord`.\n * Use it to sample the input.\n *\n * ```\n * const fragment = `\n * varying vec2 vTextureCoord;\n * uniform sampler2D uSampler;\n * void main(void)\n * {\n *    gl_FragColor = texture2D(uSampler, vTextureCoord);\n * }\n * `;\n *\n * const myFilter = new PIXI.Filter(null, fragment);\n * ```\n *\n * This filter is just one uniform less than {@link PIXI.filters.AlphaFilter AlphaFilter}.\n *\n * **outputFrame**\n *\n * The `outputFrame` holds the rectangle where filter is applied in screen (CSS) coordinates.\n * It's the same as `renderer.screen` for a fullscreen filter.\n * Only a part of  `outputFrame.zw` size of temporary Framebuffer is used,\n * `(0, 0, outputFrame.width, outputFrame.height)`,\n *\n * Filters uses this quad to normalized (0-1) space, its passed into `aVertexPosition` attribute.\n * To calculate vertex position in screen space using normalized (0-1) space:\n *\n * ```\n * vec4 filterVertexPosition( void )\n * {\n *     vec2 position = aVertexPosition * max(outputFrame.zw, vec2(0.)) + outputFrame.xy;\n *     return vec4((projectionMatrix * vec3(position, 1.0)).xy, 0.0, 1.0);\n * }\n * ```\n *\n * **inputSize**\n *\n * Temporary framebuffer is different, it can be either the size of screen, either power-of-two.\n * The `inputSize.xy` are size of temporary framebuffer that holds input.\n * The `inputSize.zw` is inverted, it's a shortcut to evade division inside the shader.\n *\n * Set `inputSize.xy = outputFrame.zw` for a fullscreen filter.\n *\n * To calculate input normalized coordinate, you have to map it to filter normalized space.\n * Multiply by `outputFrame.zw` to get input coordinate.\n * Divide by `inputSize.xy` to get input normalized coordinate.\n *\n * ```\n * vec2 filterTextureCoord( void )\n * {\n *     return aVertexPosition * (outputFrame.zw * inputSize.zw); // same as /inputSize.xy\n * }\n * ```\n * **resolution**\n *\n * The `resolution` is the ratio of screen (CSS) pixels to real pixels.\n *\n * **inputPixel**\n *\n * `inputPixel.xy` is the size of framebuffer in real pixels, same as `inputSize.xy * resolution`\n * `inputPixel.zw` is inverted `inputPixel.xy`.\n *\n * It's handy for filters that use neighbour pixels, like {@link PIXI.filters.FXAAFilter FXAAFilter}.\n *\n * **inputClamp**\n *\n * If you try to get info from outside of used part of Framebuffer - you'll get undefined behaviour.\n * For displacements, coordinates has to be clamped.\n *\n * The `inputClamp.xy` is left-top pixel center, you may ignore it, because we use left-top part of Framebuffer\n * `inputClamp.zw` is bottom-right pixel center.\n *\n * ```\n * vec4 color = texture2D(uSampler, clamp(modifigedTextureCoord, inputClamp.xy, inputClamp.zw))\n * ```\n * OR\n * ```\n * vec4 color = texture2D(uSampler, min(modifigedTextureCoord, inputClamp.zw))\n * ```\n *\n * ### Additional Information\n *\n * Complete documentation on Filter usage is located in the\n * {@link https://github.com/pixijs/pixi.js/wiki/v5-Creating-filters Wiki}.\n *\n * Since PixiJS only had a handful of built-in filters, additional filters can be downloaded\n * {@link https://github.com/pixijs/pixi-filters here} from the PixiJS Filters repository.\n *\n * @class\n * @memberof PIXI\n * @extends PIXI.Shader\n */\nexport class Filter extends Shader\n{\n    public padding: number;\n    public resolution: number;\n    public enabled: boolean;\n    public autoFit: boolean;\n    public legacy: boolean;\n    state: State;\n    /**\n     * @param {string} [vertexSrc] - The source of the vertex shader.\n     * @param {string} [fragmentSrc] - The source of the fragment shader.\n     * @param {object} [uniforms] - Custom uniforms to use to augment the built-in ones.\n     */\n    constructor(vertexSrc?: string, fragmentSrc?: string, uniforms?: Dict<any>)\n    {\n        const program = Program.from(vertexSrc || Filter.defaultVertexSrc,\n            fragmentSrc || Filter.defaultFragmentSrc);\n\n        super(program, uniforms);\n\n        /**\n         * The padding of the filter. Some filters require extra space to breath such as a blur.\n         * Increasing this will add extra width and height to the bounds of the object that the\n         * filter is applied to.\n         *\n         * @member {number}\n         */\n        this.padding = 0;\n\n        /**\n         * The resolution of the filter. Setting this to be lower will lower the quality but\n         * increase the performance of the filter.\n         *\n         * @member {number}\n         */\n        this.resolution = settings.FILTER_RESOLUTION;\n\n        /**\n         * If enabled is true the filter is applied, if false it will not.\n         *\n         * @member {boolean}\n         */\n        this.enabled = true;\n\n        /**\n         * If enabled, PixiJS will fit the filter area into boundaries for better performance.\n         * Switch it off if it does not work for specific shader.\n         *\n         * @member {boolean}\n         */\n        this.autoFit = true;\n\n        /**\n         * Legacy filters use position and uvs from attributes\n         * @member {boolean}\n         * @readonly\n         */\n        this.legacy = !!this.program.attributeData.aTextureCoord;\n\n        /**\n         * The WebGL state the filter requires to render\n         * @member {PIXI.State}\n         */\n        this.state = new State();\n    }\n\n    /**\n     * Applies the filter\n     *\n     * @param {PIXI.systems.FilterSystem} filterManager - The renderer to retrieve the filter from\n     * @param {PIXI.RenderTexture} input - The input render target.\n     * @param {PIXI.RenderTexture} output - The target to output to.\n     * @param {PIXI.CLEAR_MODES} clearMode - Should the output be cleared before rendering to it.\n     * @param {object} [currentState] - It's current state of filter.\n     *        There are some useful properties in the currentState :\n     *        target, filters, sourceFrame, destinationFrame, renderTarget, resolution\n     */\n    apply(filterManager: FilterSystem, input: RenderTexture, output: RenderTexture, clearMode: CLEAR_MODES,\n        _currentState?: FilterState): void\n    {\n        // do as you please!\n\n        filterManager.applyFilter(this, input, output, clearMode);\n\n        // or just do a regular render..\n    }\n\n    /**\n     * Sets the blendmode of the filter\n     *\n     * @member {number}\n     * @default PIXI.BLEND_MODES.NORMAL\n     */\n    get blendMode(): BLEND_MODES\n    {\n        return this.state.blendMode;\n    }\n\n    set blendMode(value: BLEND_MODES)\n    {\n        this.state.blendMode = value;\n    }\n\n    /**\n     * The default vertex shader source\n     *\n     * @static\n     * @type {string}\n     * @constant\n     */\n    static get defaultVertexSrc(): string\n    {\n        return defaultVertex;\n    }\n\n    /**\n     * The default fragment shader source\n     *\n     * @static\n     * @type {string}\n     * @constant\n     */\n    static get defaultFragmentSrc(): string\n    {\n        return defaultFragment;\n    }\n\n    /**\n     * Used for caching shader IDs\n     *\n     * @static\n     * @type {object}\n     * @protected\n     */\n    static SOURCE_KEY_MAP: Dict<string>;\n}\n","import { Matrix } from '@pixi/math';\n\nimport type { Texture } from './Texture';\n\nconst tempMat = new Matrix();\n\n/**\n * Class controls uv mapping from Texture normal space to BaseTexture normal space.\n *\n * Takes `trim` and `rotate` into account. May contain clamp settings for Meshes and TilingSprite.\n *\n * Can be used in Texture `uvMatrix` field, or separately, you can use different clamp settings on the same texture.\n * If you want to add support for texture region of certain feature or filter, that's what you're looking for.\n *\n * Takes track of Texture changes through `_lastTextureID` private field.\n * Use `update()` method call to track it from outside.\n *\n * @see PIXI.Texture\n * @see PIXI.Mesh\n * @see PIXI.TilingSprite\n * @class\n * @memberof PIXI\n */\nexport class TextureMatrix\n{\n    public mapCoord: Matrix;\n    public clampOffset: number;\n    public clampMargin: number;\n    readonly uClampFrame: Float32Array;\n    readonly uClampOffset: Float32Array;\n    _textureID: number;\n    _updateID: number;\n    _texture: Texture;\n    isSimple: boolean;\n    /**\n     *\n     * @param {PIXI.Texture} texture - observed texture\n     * @param {number} [clampMargin] - Changes frame clamping, 0.5 by default. Use -0.5 for extra border.\n     * @constructor\n     */\n    constructor(texture: Texture, clampMargin?: number)\n    {\n        this._texture = texture;\n\n        /**\n         * Matrix operation that converts texture region coords to texture coords\n         * @member {PIXI.Matrix}\n         * @readonly\n         */\n        this.mapCoord = new Matrix();\n\n        /**\n         * Clamp region for normalized coords, left-top pixel center in xy , bottom-right in zw.\n         * Calculated based on clampOffset.\n         * @member {Float32Array}\n         * @readonly\n         */\n        this.uClampFrame = new Float32Array(4);\n\n        /**\n         * Normalized clamp offset.\n         * Calculated based on clampOffset.\n         * @member {Float32Array}\n         * @readonly\n         */\n        this.uClampOffset = new Float32Array(2);\n\n        /**\n         * Tracks Texture frame changes\n         * @member {number}\n         * @protected\n         */\n        this._textureID = -1;\n\n        /**\n         * Tracks Texture frame changes\n         * @member {number}\n         * @protected\n         */\n        this._updateID = 0;\n\n        /**\n         * Changes frame clamping\n         * Works with TilingSprite and Mesh\n         * Change to 1.5 if you texture has repeated right and bottom lines, that leads to smoother borders\n         *\n         * @default 0\n         * @member {number}\n         */\n        this.clampOffset = 0;\n\n        /**\n         * Changes frame clamping\n         * Works with TilingSprite and Mesh\n         * Change to -0.5 to add a pixel to the edge, recommended for transparent trimmed textures in atlas\n         *\n         * @default 0.5\n         * @member {number}\n         */\n        this.clampMargin = (typeof clampMargin === 'undefined') ? 0.5 : clampMargin;\n\n        /**\n         * If texture size is the same as baseTexture\n         * @member {boolean}\n         * @default false\n         * @readonly\n         */\n        this.isSimple = false;\n    }\n\n    /**\n     * texture property\n     * @member {PIXI.Texture}\n     */\n    get texture(): Texture\n    {\n        return this._texture;\n    }\n\n    set texture(value: Texture)\n    {\n        this._texture = value;\n        this._textureID = -1;\n    }\n\n    /**\n     * Multiplies uvs array to transform\n     * @param {Float32Array} uvs - mesh uvs\n     * @param {Float32Array} [out=uvs] output\n     * @returns {Float32Array} output\n     */\n    multiplyUvs(uvs: Float32Array, out?: Float32Array): Float32Array\n    {\n        if (out === undefined)\n        {\n            out = uvs;\n        }\n\n        const mat = this.mapCoord;\n\n        for (let i = 0; i < uvs.length; i += 2)\n        {\n            const x = uvs[i];\n            const y = uvs[i + 1];\n\n            out[i] = (x * mat.a) + (y * mat.c) + mat.tx;\n            out[i + 1] = (x * mat.b) + (y * mat.d) + mat.ty;\n        }\n\n        return out;\n    }\n\n    /**\n     * updates matrices if texture was changed\n     * @param {boolean} [forceUpdate=false] - if true, matrices will be updated any case\n     * @returns {boolean} whether or not it was updated\n     */\n    update(forceUpdate?: boolean): boolean\n    {\n        const tex = this._texture;\n\n        if (!tex || !tex.valid)\n        {\n            return false;\n        }\n\n        if (!forceUpdate\n            && this._textureID === tex._updateID)\n        {\n            return false;\n        }\n\n        this._textureID = tex._updateID;\n        this._updateID++;\n\n        const uvs = tex._uvs;\n\n        this.mapCoord.set(uvs.x1 - uvs.x0, uvs.y1 - uvs.y0, uvs.x3 - uvs.x0, uvs.y3 - uvs.y0, uvs.x0, uvs.y0);\n\n        const orig = tex.orig;\n        const trim = tex.trim;\n\n        if (trim)\n        {\n            tempMat.set(orig.width / trim.width, 0, 0, orig.height / trim.height,\n                -trim.x / trim.width, -trim.y / trim.height);\n            this.mapCoord.append(tempMat);\n        }\n\n        const texBase = tex.baseTexture;\n        const frame = this.uClampFrame;\n        const margin = this.clampMargin / texBase.resolution;\n        const offset = this.clampOffset;\n\n        frame[0] = (tex._frame.x + margin + offset) / texBase.width;\n        frame[1] = (tex._frame.y + margin + offset) / texBase.height;\n        frame[2] = (tex._frame.x + tex._frame.width - margin + offset) / texBase.width;\n        frame[3] = (tex._frame.y + tex._frame.height - margin + offset) / texBase.height;\n        this.uClampOffset[0] = offset / texBase.realWidth;\n        this.uClampOffset[1] = offset / texBase.realHeight;\n\n        this.isSimple = tex._frame.width === texBase.width\n            && tex._frame.height === texBase.height\n            && tex.rotate === 0;\n\n        return true;\n    }\n}\n","import { Filter } from '../Filter';\nimport { Matrix, Point } from '@pixi/math';\nimport { CLEAR_MODES } from '@pixi/constants';\nimport vertex from './spriteMaskFilter.vert';\nimport fragment from './spriteMaskFilter.frag';\nimport { TextureMatrix } from '../../textures/TextureMatrix';\n\nimport type { FilterSystem } from '../FilterSystem';\nimport type { IMaskTarget } from '../../mask/MaskData';\nimport type { Texture } from '../../textures/Texture';\nimport type { RenderTexture } from '../../renderTexture/RenderTexture';\n\nexport interface ISpriteMaskTarget extends IMaskTarget\n{\n    _texture: Texture;\n    worldAlpha: number;\n    anchor: Point;\n}\n\n/**\n * This handles a Sprite acting as a mask, as opposed to a Graphic.\n *\n * WebGL only.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI\n */\nexport class SpriteMaskFilter extends Filter\n{\n    maskSprite: IMaskTarget;\n    maskMatrix: Matrix;\n    /**\n     * @param {PIXI.Sprite} sprite - the target sprite\n     */\n    constructor(sprite: IMaskTarget)\n    {\n        const maskMatrix = new Matrix();\n\n        super(vertex, fragment);\n\n        sprite.renderable = false;\n\n        /**\n         * Sprite mask\n         * @member {PIXI.Sprite}\n         */\n        this.maskSprite = sprite;\n\n        /**\n         * Mask matrix\n         * @member {PIXI.Matrix}\n         */\n        this.maskMatrix = maskMatrix;\n    }\n\n    /**\n     * Applies the filter\n     *\n     * @param {PIXI.systems.FilterSystem} filterManager - The renderer to retrieve the filter from\n     * @param {PIXI.RenderTexture} input - The input render target.\n     * @param {PIXI.RenderTexture} output - The target to output to.\n     * @param {PIXI.CLEAR_MODES} clearMode - Should the output be cleared before rendering to it.\n     */\n    apply(filterManager: FilterSystem, input: RenderTexture, output: RenderTexture, clearMode: CLEAR_MODES): void\n    {\n        const maskSprite = this.maskSprite as ISpriteMaskTarget;\n        const tex = maskSprite._texture;\n\n        if (!tex.valid)\n        {\n            return;\n        }\n        if (!tex.uvMatrix)\n        {\n            // margin = 0.0, let it bleed a bit, shader code becomes easier\n            // assuming that atlas textures were made with 1-pixel padding\n            tex.uvMatrix = new TextureMatrix(tex, 0.0);\n        }\n        tex.uvMatrix.update();\n\n        this.uniforms.npmAlpha = tex.baseTexture.alphaMode ? 0.0 : 1.0;\n        this.uniforms.mask = tex;\n        // get _normalized sprite texture coords_ and convert them to _normalized atlas texture coords_ with `prepend`\n        this.uniforms.otherMatrix = filterManager.calculateSpriteMatrix(this.maskMatrix, maskSprite)\n            .prepend(tex.uvMatrix.mapCoord);\n        this.uniforms.alpha = maskSprite.worldAlpha;\n        this.uniforms.maskClamp = tex.uvMatrix.uClampFrame;\n\n        filterManager.applyFilter(this, input, output, clearMode);\n    }\n}\n","import { System } from '../System';\nimport { MaskData } from './MaskData';\nimport { SpriteMaskFilter } from '../filters/spriteMask/SpriteMaskFilter';\nimport { MASK_TYPES } from '@pixi/constants';\n\nimport type { IMaskTarget } from './MaskData';\nimport type { Renderer } from '../Renderer';\n\n/**\n * System plugin to the renderer to manage masks.\n *\n * @class\n * @extends PIXI.System\n * @memberof PIXI.systems\n */\nexport class MaskSystem extends System\n{\n    public enableScissor: boolean;\n    protected readonly alphaMaskPool: Array<SpriteMaskFilter[]>;\n    protected alphaMaskIndex: number;\n    private readonly maskDataPool: Array<MaskData>;\n    private maskStack: Array<MaskData>;\n\n    /**\n     * @param {PIXI.Renderer} renderer - The renderer this System works for.\n     */\n    constructor(renderer: Renderer)\n    {\n        super(renderer);\n\n        /**\n         * Enable scissor\n         * @member {boolean}\n         * @readonly\n         */\n        this.enableScissor = false;\n\n        /**\n         * Pool of used sprite mask filters\n         * @member {PIXI.SpriteMaskFilter[]}\n         * @readonly\n         */\n        this.alphaMaskPool = [];\n\n        /**\n         * Pool of mask data\n         * @member {PIXI.MaskData[]}\n         * @readonly\n         */\n        this.maskDataPool = [];\n\n        this.maskStack = [];\n\n        /**\n         * Current index of alpha mask pool\n         * @member {number}\n         * @default 0\n         * @readonly\n         */\n        this.alphaMaskIndex = 0;\n    }\n\n    /**\n     * Changes the mask stack that is used by this System.\n     *\n     * @param {PIXI.MaskData[]} maskStack - The mask stack\n     */\n    setMaskStack(maskStack: Array<MaskData>): void\n    {\n        this.maskStack = maskStack;\n        this.renderer.scissor.setMaskStack(maskStack);\n        this.renderer.stencil.setMaskStack(maskStack);\n    }\n\n    /**\n     * Applies the Mask and adds it to the current filter stack.\n     * Renderer batch must be flushed beforehand.\n     *\n     * @param {PIXI.DisplayObject} target - Display Object to push the mask to\n     * @param {PIXI.MaskData|PIXI.Sprite|PIXI.Graphics|PIXI.DisplayObject} maskData - The masking data.\n     */\n    push(target: IMaskTarget, maskDataOrTarget: MaskData|IMaskTarget): void\n    {\n        let maskData = maskDataOrTarget as MaskData;\n\n        if (!maskData.isMaskData)\n        {\n            const d = this.maskDataPool.pop() || new MaskData();\n\n            d.pooled = true;\n            d.maskObject = maskDataOrTarget as IMaskTarget;\n            maskData = d;\n        }\n\n        if (maskData.autoDetect)\n        {\n            this.detect(maskData);\n        }\n\n        maskData.copyCountersOrReset(this.maskStack[this.maskStack.length - 1]);\n        maskData._target = target;\n\n        switch (maskData.type)\n        {\n            case MASK_TYPES.SCISSOR:\n                this.maskStack.push(maskData);\n                this.renderer.scissor.push(maskData);\n                break;\n            case MASK_TYPES.STENCIL:\n                this.maskStack.push(maskData);\n                this.renderer.stencil.push(maskData);\n                break;\n            case MASK_TYPES.SPRITE:\n                maskData.copyCountersOrReset(null);\n                this.pushSpriteMask(maskData);\n                this.maskStack.push(maskData);\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * Removes the last mask from the mask stack and doesn't return it.\n     * Renderer batch must be flushed beforehand.\n     *\n     * @param {PIXI.DisplayObject} target - Display Object to pop the mask from\n     */\n    pop(target: IMaskTarget): void\n    {\n        const maskData = this.maskStack.pop();\n\n        if (!maskData || maskData._target !== target)\n        {\n            // TODO: add an assert when we have it\n\n            return;\n        }\n\n        switch (maskData.type)\n        {\n            case MASK_TYPES.SCISSOR:\n                this.renderer.scissor.pop();\n                break;\n            case MASK_TYPES.STENCIL:\n                this.renderer.stencil.pop(maskData.maskObject);\n                break;\n            case MASK_TYPES.SPRITE:\n                this.popSpriteMask();\n                break;\n            default:\n                break;\n        }\n\n        maskData.reset();\n\n        if (maskData.pooled)\n        {\n            this.maskDataPool.push(maskData);\n        }\n    }\n\n    /**\n     * Sets type of MaskData based on its maskObject\n     * @param {PIXI.MaskData} maskData\n     */\n    detect(maskData: MaskData): void\n    {\n        const maskObject = maskData.maskObject;\n\n        if (maskObject.isSprite)\n        {\n            maskData.type = MASK_TYPES.SPRITE;\n\n            return;\n        }\n        maskData.type = MASK_TYPES.STENCIL;\n        // detect scissor in graphics\n        if (this.enableScissor\n            && maskObject.isFastRect\n            && maskObject.isFastRect())\n        {\n            const matrix = maskObject.worldTransform;\n\n            // TODO: move the check to the matrix itself\n            // we are checking that its orthogonal and x rotation is 0 90 180 or 270\n\n            let rotX = Math.atan2(matrix.b, matrix.a);\n            let rotXY = Math.atan2(matrix.d, matrix.c);\n\n            // use the nearest degree to 0.01\n            rotX = Math.round(rotX * (180 / Math.PI) * 100);\n            rotXY = Math.round(rotXY * (180 / Math.PI) * 100) - rotX;\n\n            rotX = ((rotX % 9000) + 9000) % 9000;\n            rotXY = ((rotXY % 18000) + 18000) % 18000;\n\n            if (rotX === 0 && rotXY === 9000)\n            {\n                maskData.type = MASK_TYPES.SCISSOR;\n            }\n        }\n    }\n\n    /**\n     * Applies the Mask and adds it to the current filter stack.\n     *\n     * @param {PIXI.MaskData} maskData - Sprite to be used as the mask\n     */\n    pushSpriteMask(maskData: MaskData): void\n    {\n        const { maskObject } = maskData;\n        const target = maskData._target;\n        let alphaMaskFilter = this.alphaMaskPool[this.alphaMaskIndex];\n\n        if (!alphaMaskFilter)\n        {\n            alphaMaskFilter = this.alphaMaskPool[this.alphaMaskIndex] = [new SpriteMaskFilter(maskObject)];\n        }\n\n        alphaMaskFilter[0].resolution = this.renderer.resolution;\n        alphaMaskFilter[0].maskSprite = maskObject;\n\n        const stashFilterArea = target.filterArea;\n\n        target.filterArea = maskObject.getBounds(true);\n        this.renderer.filter.push(target, alphaMaskFilter);\n        target.filterArea = stashFilterArea;\n\n        this.alphaMaskIndex++;\n    }\n\n    /**\n     * Removes the last filter from the filter stack and doesn't return it.\n     */\n    popSpriteMask(): void\n    {\n        this.renderer.filter.pop();\n        this.alphaMaskIndex--;\n    }\n}\n","import { System } from '../System';\n\nimport type { MaskData } from './MaskData';\nimport type { Renderer } from '../Renderer';\n\n/**\n * System plugin to the renderer to manage masks of certain type\n *\n * @class\n * @extends PIXI.System\n * @memberof PIXI.systems\n */\nexport class AbstractMaskSystem extends System\n{\n    protected maskStack: Array<MaskData>;\n    protected glConst: number;\n    /**\n     * @param {PIXI.Renderer} renderer - The renderer this System works for.\n     */\n    constructor(renderer: Renderer)\n    {\n        super(renderer);\n\n        /**\n         * The mask stack\n         * @member {PIXI.MaskData[]}\n         */\n        this.maskStack = [];\n\n        /**\n         * Constant for gl.enable\n         * @member {number}\n         * @private\n         */\n        this.glConst = 0;\n    }\n\n    /**\n     * gets count of masks of certain type\n     * @returns {number}\n     */\n    getStackLength(): number\n    {\n        return this.maskStack.length;\n    }\n\n    /**\n     * Changes the mask stack that is used by this System.\n     *\n     * @param {PIXI.MaskData[]} maskStack - The mask stack\n     */\n    setMaskStack(maskStack: Array<MaskData>): void\n    {\n        const { gl } = this.renderer;\n        const curStackLen = this.getStackLength();\n\n        this.maskStack = maskStack;\n\n        const newStackLen = this.getStackLength();\n\n        if (newStackLen !== curStackLen)\n        {\n            if (newStackLen === 0)\n            {\n                gl.disable(this.glConst);\n            }\n            else\n            {\n                gl.enable(this.glConst);\n                this._useCurrent();\n            }\n        }\n    }\n\n    /**\n     * Setup renderer to use the current mask data.\n     * @private\n     */\n    protected _useCurrent(): void\n    {\n        // OVERWRITE;\n    }\n\n    /**\n     * Destroys the mask stack.\n     *\n     */\n    destroy(): void\n    {\n        super.destroy();\n\n        this.maskStack = null;\n    }\n}\n","import { AbstractMaskSystem } from './AbstractMaskSystem';\n\nimport type { Renderer } from '../Renderer';\nimport type { MaskData } from './MaskData';\n\n/**\n * System plugin to the renderer to manage scissor rects (used for masks).\n *\n * @class\n * @extends PIXI.System\n * @memberof PIXI.systems\n */\nexport class ScissorSystem extends AbstractMaskSystem\n{\n    /**\n     * @param {PIXI.Renderer} renderer - The renderer this System works for.\n     */\n    constructor(renderer: Renderer)\n    {\n        super(renderer);\n\n        this.glConst = WebGLRenderingContext.SCISSOR_TEST;\n    }\n\n    getStackLength(): number\n    {\n        const maskData = this.maskStack[this.maskStack.length - 1];\n\n        if (maskData)\n        {\n            return maskData._scissorCounter;\n        }\n\n        return 0;\n    }\n\n    /**\n     * Applies the Mask and adds it to the current stencil stack. @alvin\n     *\n     * @param {PIXI.MaskData} maskData - The mask data\n     */\n    push(maskData: MaskData): void\n    {\n        const maskObject = maskData.maskObject;\n\n        maskObject.renderable = true;\n\n        const prevData = maskData._scissorRect;\n        const bounds = maskObject.getBounds(true);\n        const { gl } = this.renderer;\n\n        maskObject.renderable = false;\n\n        if (prevData)\n        {\n            bounds.fit(prevData);\n        }\n        else\n        {\n            gl.enable(gl.SCISSOR_TEST);\n        }\n\n        maskData._scissorCounter++;\n        maskData._scissorRect = bounds;\n        this._useCurrent();\n    }\n\n    /**\n     * Pops scissor mask. MaskData is already removed from stack\n     */\n    pop(): void\n    {\n        const { gl } = this.renderer;\n\n        if (this.getStackLength() > 0)\n        {\n            this._useCurrent();\n        }\n        else\n        {\n            gl.disable(gl.SCISSOR_TEST);\n        }\n    }\n\n    /**\n     * Setup renderer to use the current scissor data.\n     * @private\n     */\n    _useCurrent(): void\n    {\n        const rect = this.maskStack[this.maskStack.length - 1]._scissorRect;\n        const rt = this.renderer.renderTexture.current;\n        const { transform, sourceFrame, destinationFrame } = this.renderer.projection;\n        const resolution = rt ? rt.resolution : this.renderer.resolution;\n        let x = ((rect.x - sourceFrame.x) * resolution) + destinationFrame.x;\n        let y = ((rect.y - sourceFrame.y) * resolution) + destinationFrame.y;\n        const width = rect.width * resolution;\n        const height = rect.height * resolution;\n\n        if (transform)\n        {\n            x += transform.tx * resolution;\n            y += transform.ty * resolution;\n        }\n        if (!rt)\n        {\n            // flipY. In future we'll have it over renderTextures as an option\n            y = this.renderer.height - height - y;\n        }\n\n        this.renderer.gl.scissor(x, y, width, height);\n    }\n}\n","import { AbstractMaskSystem } from './AbstractMaskSystem';\n\nimport type { Renderer } from '../Renderer';\nimport type { IMaskTarget, MaskData } from './MaskData';\n\n/**\n * System plugin to the renderer to manage stencils (used for masks).\n *\n * @class\n * @extends PIXI.System\n * @memberof PIXI.systems\n */\nexport class StencilSystem extends AbstractMaskSystem\n{\n    /**\n     * @param {PIXI.Renderer} renderer - The renderer this System works for.\n     */\n    constructor(renderer: Renderer)\n    {\n        super(renderer);\n\n        this.glConst = WebGLRenderingContext.STENCIL_TEST;\n    }\n\n    getStackLength(): number\n    {\n        const maskData = this.maskStack[this.maskStack.length - 1];\n\n        if (maskData)\n        {\n            return maskData._stencilCounter;\n        }\n\n        return 0;\n    }\n\n    /**\n     * Applies the Mask and adds it to the current stencil stack.\n     *\n     * @param {PIXI.MaskData} maskData - The mask data\n     */\n    push(maskData: MaskData): void\n    {\n        const maskObject = maskData.maskObject;\n        const { gl } = this.renderer;\n        const prevMaskCount = maskData._stencilCounter;\n\n        if (prevMaskCount === 0)\n        {\n            // force use stencil texture in current framebuffer\n            this.renderer.framebuffer.forceStencil();\n            gl.enable(gl.STENCIL_TEST);\n        }\n\n        maskData._stencilCounter++;\n\n        // Increment the reference stencil value where the new mask overlaps with the old ones.\n        gl.colorMask(false, false, false, false);\n        gl.stencilFunc(gl.EQUAL, prevMaskCount, this._getBitwiseMask());\n        gl.stencilOp(gl.KEEP, gl.KEEP, gl.INCR);\n\n        maskObject.renderable = true;\n        maskObject.render(this.renderer);\n        this.renderer.batch.flush();\n        maskObject.renderable = false;\n\n        this._useCurrent();\n    }\n\n    /**\n     * Pops stencil mask. MaskData is already removed from stack\n     *\n     * @param {PIXI.DisplayObject} maskObject - object of popped mask data\n     */\n    pop(maskObject: IMaskTarget): void\n    {\n        const gl = this.renderer.gl;\n\n        if (this.getStackLength() === 0)\n        {\n            // the stack is empty!\n            gl.disable(gl.STENCIL_TEST);\n            gl.clear(gl.STENCIL_BUFFER_BIT);\n            gl.clearStencil(0);\n        }\n        else\n        {\n            // Decrement the reference stencil value where the popped mask overlaps with the other ones\n            gl.colorMask(false, false, false, false);\n            gl.stencilOp(gl.KEEP, gl.KEEP, gl.DECR);\n\n            maskObject.renderable = true;\n            maskObject.render(this.renderer);\n            this.renderer.batch.flush();\n            maskObject.renderable = false;\n\n            this._useCurrent();\n        }\n    }\n\n    /**\n     * Setup renderer to use the current stencil data.\n     * @private\n     */\n    _useCurrent(): void\n    {\n        const gl = this.renderer.gl;\n\n        gl.colorMask(true, true, true, true);\n        gl.stencilFunc(gl.EQUAL, this.getStackLength(), this._getBitwiseMask());\n        gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n    }\n\n    /**\n     * Fill 1s equal to the number of acitve stencil masks.\n     * @private\n     * @return {number} The bitwise mask.\n     */\n    _getBitwiseMask(): number\n    {\n        return (1 << this.getStackLength()) - 1;\n    }\n}\n","import { System } from '../System';\nimport { Matrix } from '@pixi/math';\n\nimport type { Rectangle } from '@pixi/math';\nimport type { Renderer } from '../Renderer';\n\n/**\n * System plugin to the renderer to manage the projection matrix.\n *\n * @class\n * @extends PIXI.System\n * @memberof PIXI.systems\n */\n\nexport class ProjectionSystem extends System\n{\n    public destinationFrame: Rectangle;\n    public sourceFrame: Rectangle;\n    public defaultFrame: Rectangle;\n    public projectionMatrix: Matrix;\n    public transform: Matrix;\n\n    /**\n     * @param {PIXI.Renderer} renderer - The renderer this System works for.\n     */\n    constructor(renderer: Renderer)\n    {\n        super(renderer);\n\n        /**\n         * Destination frame\n         * @member {PIXI.Rectangle}\n         * @readonly\n         */\n        this.destinationFrame = null;\n\n        /**\n         * Source frame\n         * @member {PIXI.Rectangle}\n         * @readonly\n         */\n        this.sourceFrame = null;\n\n        /**\n         * Default destination frame\n         * @member {PIXI.Rectangle}\n         * @readonly\n         */\n        this.defaultFrame = null;\n\n        /**\n         * Project matrix\n         * @member {PIXI.Matrix}\n         * @readonly\n         */\n        this.projectionMatrix = new Matrix();\n\n        /**\n         * A transform that will be appended to the projection matrix\n         * if null, nothing will be applied\n         * @member {PIXI.Matrix}\n         */\n        this.transform = null;\n    }\n\n    /**\n     * Updates the projection matrix based on a projection frame (which is a rectangle).\n     *\n     * Make sure to run `renderer.framebuffer.setViewport(destinationFrame)` after calling this.\n     *\n     * @param {PIXI.Rectangle} destinationFrame - The destination frame.\n     * @param {PIXI.Rectangle} sourceFrame - The source frame.\n     * @param {Number} resolution - Resolution\n     * @param {boolean} root - If is root\n     */\n    update(destinationFrame: Rectangle, sourceFrame: Rectangle, resolution: number, root: boolean): void\n    {\n        this.destinationFrame = destinationFrame || this.destinationFrame || this.defaultFrame;\n        this.sourceFrame = sourceFrame || this.sourceFrame || destinationFrame;\n\n        // Calculate object-space to clip-space projection\n        this.calculateProjection(this.destinationFrame, this.sourceFrame, resolution, root);\n\n        if (this.transform)\n        {\n            this.projectionMatrix.append(this.transform);\n        }\n\n        const renderer =  this.renderer;\n\n        renderer.globalUniforms.uniforms.projectionMatrix = this.projectionMatrix;\n        renderer.globalUniforms.update();\n\n        // this will work for now\n        // but would be sweet to stick and even on the global uniforms..\n        if (renderer.shader.shader)\n        {\n            renderer.shader.syncUniformGroup(renderer.shader.shader.uniforms.globals);\n        }\n    }\n\n    /**\n     * Updates the projection matrix based on a projection frame (which is a rectangle)\n     *\n     * @param {PIXI.Rectangle} destinationFrame - The destination frame.\n     * @param {PIXI.Rectangle} sourceFrame - The source frame.\n     * @param {Number} resolution - Resolution\n     * @param {boolean} root - If is root\n     */\n    calculateProjection(_destinationFrame: Rectangle, sourceFrame: Rectangle, _resolution: number, root: boolean): void\n    {\n        const pm = this.projectionMatrix;\n        const sign = !root ? 1 : -1;\n\n        pm.identity();\n\n        pm.a = (1 / sourceFrame.width * 2);\n        pm.d = sign * (1 / sourceFrame.height * 2);\n\n        pm.tx = -1 - (sourceFrame.x * pm.a);\n        pm.ty = -sign - (sourceFrame.y * pm.d);\n    }\n\n    /**\n     * Sets the transform of the active render target to the given matrix\n     *\n     * @param {PIXI.Matrix} matrix - The transformation matrix\n     */\n    setTransform(_matrix: Matrix): void\n    {\n        // this._activeRenderTarget.transform = matrix;\n    }\n}\n","import { System } from '../System';\nimport { Rectangle } from '@pixi/math';\nimport { BUFFER_BITS } from '@pixi/constants';\n\nimport type { Renderer } from '../Renderer';\nimport type { RenderTexture } from './RenderTexture';\nimport type { BaseRenderTexture } from './BaseRenderTexture';\nimport type { MaskData } from '../mask/MaskData';\n\n// Temporary rectangle for assigned sourceFrame or destinationFrame\nconst tempRect = new Rectangle();\n\n// Temporary rectangle for renderTexture destinationFrame\nconst tempRect2 = new Rectangle();\n\n// Temporary rectangle for passing the framebuffer viewport\nconst viewportFrame = new Rectangle();\n\n/**\n * System plugin to the renderer to manage render textures.\n *\n * Should be added after FramebufferSystem\n *\n * @class\n * @extends PIXI.System\n * @memberof PIXI.systems\n */\nexport class RenderTextureSystem extends System\n{\n    public clearColor: number[];\n    public defaultMaskStack: Array<MaskData>;\n    public current: RenderTexture;\n    public readonly sourceFrame: Rectangle;\n    public readonly destinationFrame: Rectangle;\n\n    /**\n     * @param {PIXI.Renderer} renderer - The renderer this System works for.\n     */\n    constructor(renderer: Renderer)\n    {\n        super(renderer);\n\n        /**\n         * The clear background color as rgba\n         * @member {number[]}\n         */\n        this.clearColor = renderer._backgroundColorRgba;\n\n        // TODO move this property somewhere else!\n        /**\n         * List of masks for the StencilSystem\n         * @member {PIXI.Graphics[]}\n         * @readonly\n         */\n        this.defaultMaskStack = [];\n\n        // empty render texture?\n        /**\n         * Render texture\n         * @member {PIXI.RenderTexture}\n         * @readonly\n         */\n        this.current = null;\n\n        /**\n         * Source frame\n         * @member {PIXI.Rectangle}\n         * @readonly\n         */\n        this.sourceFrame = new Rectangle();\n\n        /**\n         * Destination frame\n         * @member {PIXI.Rectangle}\n         * @readonly\n         */\n        this.destinationFrame = new Rectangle();\n    }\n\n    /**\n     * Bind the current render texture\n     *\n     * @param {PIXI.RenderTexture} [renderTexture] - RenderTexture to bind, by default its `null`, the screen\n     * @param {PIXI.Rectangle} [sourceFrame] - part of screen that is mapped to the renderTexture\n     * @param {PIXI.Rectangle} [destinationFrame] - part of renderTexture, by default it has the same size as sourceFrame\n     */\n    bind(renderTexture: RenderTexture = null, sourceFrame?: Rectangle, destinationFrame?: Rectangle): void\n    {\n        const renderer = this.renderer;\n\n        this.current = renderTexture;\n\n        let baseTexture: BaseRenderTexture;\n        let framebuffer;\n        let resolution;\n\n        if (renderTexture)\n        {\n            baseTexture = renderTexture.baseTexture as BaseRenderTexture;\n\n            resolution = baseTexture.resolution;\n\n            if (!sourceFrame)\n            {\n                tempRect.width = renderTexture.frame.width;\n                tempRect.height = renderTexture.frame.height;\n\n                sourceFrame = tempRect;\n            }\n\n            if (!destinationFrame)\n            {\n                tempRect2.x = renderTexture.frame.x;\n                tempRect2.y = renderTexture.frame.y;\n                tempRect2.width = sourceFrame.width;\n                tempRect2.height = sourceFrame.height;\n\n                destinationFrame = tempRect2;\n            }\n\n            framebuffer = baseTexture.framebuffer;\n        }\n        else\n        {\n            resolution = renderer.resolution;\n\n            if (!sourceFrame)\n            {\n                tempRect.width = renderer.screen.width;\n                tempRect.height = renderer.screen.height;\n\n                sourceFrame = tempRect;\n            }\n\n            if (!destinationFrame)\n            {\n                destinationFrame = tempRect;\n\n                destinationFrame.width = sourceFrame.width;\n                destinationFrame.height = sourceFrame.height;\n            }\n        }\n\n        viewportFrame.x = destinationFrame.x * resolution;\n        viewportFrame.y = destinationFrame.y * resolution;\n        viewportFrame.width = destinationFrame.width * resolution;\n        viewportFrame.height = destinationFrame.height * resolution;\n\n        this.renderer.framebuffer.bind(framebuffer, viewportFrame);\n        this.renderer.projection.update(destinationFrame, sourceFrame, resolution, !framebuffer);\n\n        if (renderTexture)\n        {\n            this.renderer.mask.setMaskStack(baseTexture.maskStack);\n        }\n        else\n        {\n            this.renderer.mask.setMaskStack(this.defaultMaskStack);\n        }\n\n        this.sourceFrame.copyFrom(sourceFrame);\n        this.destinationFrame.copyFrom(destinationFrame);\n    }\n\n    /**\n     * Erases the render texture and fills the drawing area with a colour\n     *\n     * @param {number[]} [clearColor] - The color as rgba, default to use the renderer backgroundColor\n     * @param {PIXI.BUFFER_BITS} [mask=BUFFER_BITS.COLOR | BUFFER_BITS.DEPTH] - Bitwise OR of masks\n     *  that indicate the buffers to be cleared, by default COLOR and DEPTH buffers.\n     * @return {PIXI.Renderer} Returns itself.\n     */\n    clear(clearColor?: number[], mask?: BUFFER_BITS): void\n    {\n        if (this.current)\n        {\n            clearColor = clearColor || (this.current.baseTexture as BaseRenderTexture).clearColor;\n        }\n        else\n        {\n            clearColor = clearColor || this.clearColor;\n        }\n\n        this.renderer.framebuffer.clear(clearColor[0], clearColor[1], clearColor[2], clearColor[3], mask);\n    }\n\n    resize(): void // screenWidth, screenHeight)\n    {\n        // resize the root only!\n        this.bind(null);\n    }\n\n    /**\n     * Resets renderTexture state\n     */\n    reset(): void\n    {\n        this.bind(null);\n    }\n}\n","import type { Dict } from '@pixi/utils';\n\nexport class IGLUniformData\n{\n    location: WebGLUniformLocation;\n    value: number | boolean | Float32Array | Int32Array | boolean[];\n}\n\n/**\n * Helper class to create a WebGL Program\n *\n * @class\n * @memberof PIXI\n */\nexport class GLProgram\n{\n    public program: WebGLProgram;\n    public uniformData: Dict<any>;\n    public uniformGroups: Dict<any>;\n    /**\n     * Makes a new Pixi program\n     *\n     * @param program {WebGLProgram} webgl program\n     * @param uniformData {Object} uniforms\n     */\n    constructor(program: WebGLProgram, uniformData: {[key: string]: IGLUniformData})\n    {\n        /**\n         * The shader program\n         *\n         * @member {WebGLProgram}\n         */\n        this.program = program;\n\n        /**\n         * holds the uniform data which contains uniform locations\n         * and current uniform values used for caching and preventing unneeded GPU commands\n         * @member {Object}\n         */\n        this.uniformData = uniformData;\n\n        /**\n         * uniformGroups holds the various upload functions for the shader. Each uniform group\n         * and program have a unique upload function generated.\n         * @member {Object}\n         */\n        this.uniformGroups = {};\n    }\n\n    /**\n     * Destroys this program\n     */\n    destroy(): void\n    {\n        this.uniformData = null;\n        this.uniformGroups = null;\n        this.program = null;\n    }\n}\n","import { System } from '../System';\nimport { GLProgram } from './GLProgram';\nimport { generateUniformsSync, unsafeEvalSupported, defaultValue, compileProgram } from './utils';\n\nimport type { IGLUniformData } from './GLProgram';\nimport type { Renderer } from '../Renderer';\nimport type { IRenderingContext } from '../IRenderingContext';\nimport type { Shader } from './Shader';\nimport type { Program } from './Program';\nimport type { UniformGroup } from './UniformGroup';\nimport type { Dict } from '@pixi/utils';\nimport type { UniformsSyncCallback } from './utils';\n\nlet UID = 0;\n// defualt sync data so we don't create a new one each time!\nconst defaultSyncData = { textureCount: 0 };\n\n/**\n * System plugin to the renderer to manage shaders.\n *\n * @class\n * @memberof PIXI.systems\n * @extends PIXI.System\n */\nexport class ShaderSystem extends System\n{\n    protected gl: IRenderingContext;\n    public shader: Shader;\n    public program: Program;\n    public id: number;\n    public destroyed = false;\n    private cache: Dict<UniformsSyncCallback>;\n    /**\n     * @param {PIXI.Renderer} renderer - The renderer this System works for.\n     */\n    constructor(renderer: Renderer)\n    {\n        super(renderer);\n\n        // Validation check that this environment support `new Function`\n        this.systemCheck();\n\n        /**\n         * The current WebGL rendering context\n         *\n         * @member {WebGLRenderingContext}\n         */\n        this.gl = null;\n\n        this.shader = null;\n        this.program = null;\n\n        /**\n         * Cache to holds the generated functions. Stored against UniformObjects unique signature\n         * @type {Object}\n         * @private\n         */\n        this.cache = {};\n\n        this.id = UID++;\n    }\n\n    /**\n     * Overrideable function by `@pixi/unsafe-eval` to silence\n     * throwing an error if platform doesn't support unsafe-evals.\n     *\n     * @private\n     */\n    systemCheck(): void\n    {\n        if (!unsafeEvalSupported())\n        {\n            throw new Error('Current environment does not allow unsafe-eval, '\n                + 'please use @pixi/unsafe-eval module to enable support.');\n        }\n    }\n\n    protected contextChange(gl: IRenderingContext): void\n    {\n        this.gl = gl;\n        this.reset();\n    }\n\n    /**\n     * Changes the current shader to the one given in parameter\n     *\n     * @param {PIXI.Shader} shader - the new shader\n     * @param {boolean} [dontSync] - false if the shader should automatically sync its uniforms.\n     * @returns {PIXI.GLProgram} the glProgram that belongs to the shader.\n     */\n    bind(shader: Shader, dontSync?: boolean): GLProgram\n    {\n        shader.uniforms.globals = this.renderer.globalUniforms;\n\n        const program = shader.program;\n        const glProgram = program.glPrograms[this.renderer.CONTEXT_UID] || this.generateShader(shader);\n\n        this.shader = shader;\n\n        // TODO - some current Pixi plugins bypass this.. so it not safe to use yet..\n        if (this.program !== program)\n        {\n            this.program = program;\n            this.gl.useProgram(glProgram.program);\n        }\n\n        if (!dontSync)\n        {\n            defaultSyncData.textureCount = 0;\n\n            this.syncUniformGroup(shader.uniformGroup, defaultSyncData);\n        }\n\n        return glProgram;\n    }\n\n    /**\n     * Uploads the uniforms values to the currently bound shader.\n     *\n     * @param {object} uniforms - the uniforms values that be applied to the current shader\n     */\n    setUniforms(uniforms: Dict<any>): void\n    {\n        const shader = this.shader.program;\n        const glProgram = shader.glPrograms[this.renderer.CONTEXT_UID];\n\n        shader.syncUniforms(glProgram.uniformData, uniforms, this.renderer);\n    }\n\n    /* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n    /**\n     *\n     * syncs uniforms on the group\n     * @param {*} group - the uniform group to sync\n     * @param {*} [syncData] - this is data that is passed to the sync function and any nested sync functions\n     */\n    syncUniformGroup(group: UniformGroup, syncData?: any): void\n    {\n        const glProgram = this.getglProgram();\n\n        if (!group.static || group.dirtyId !== glProgram.uniformGroups[group.id])\n        {\n            glProgram.uniformGroups[group.id] = group.dirtyId;\n\n            this.syncUniforms(group, glProgram, syncData);\n        }\n    }\n\n    /**\n     * Overrideable by the @pixi/unsafe-eval package to use static\n     * syncUnforms instead.\n     *\n     * @private\n     */\n    syncUniforms(group: UniformGroup, glProgram: GLProgram, syncData: any): void\n    {\n        const syncFunc = group.syncUniforms[this.shader.program.id] || this.createSyncGroups(group);\n\n        syncFunc(glProgram.uniformData, group.uniforms, this.renderer, syncData);\n    }\n    /* eslint-enable @typescript-eslint/explicit-module-boundary-types */\n\n    createSyncGroups(group: UniformGroup): UniformsSyncCallback\n    {\n        const id = this.getSignature(group, this.shader.program.uniformData);\n\n        if (!this.cache[id])\n        {\n            this.cache[id] = generateUniformsSync(group, this.shader.program.uniformData);\n        }\n\n        group.syncUniforms[this.shader.program.id] = this.cache[id];\n\n        return group.syncUniforms[this.shader.program.id];\n    }\n\n    /**\n     * Takes a uniform group and data and generates a unique signature for them.\n     *\n     * @param {PIXI.UniformGroup} group - the uniform group to get signature of\n     * @param {Object} uniformData - uniform information generated by the shader\n     * @returns {String} Unique signature of the uniform group\n     * @private\n     */\n    private getSignature(group: UniformGroup, uniformData: Dict<any>): string\n    {\n        const uniforms = group.uniforms;\n\n        const strings = [];\n\n        for (const i in uniforms)\n        {\n            strings.push(i);\n\n            if (uniformData[i])\n            {\n                strings.push(uniformData[i].type);\n            }\n        }\n\n        return strings.join('-');\n    }\n\n    /**\n     * Returns the underlying GLShade rof the currently bound shader.\n     * This can be handy for when you to have a little more control over the setting of your uniforms.\n     *\n     * @return {PIXI.GLProgram} the glProgram for the currently bound Shader for this context\n     */\n    getglProgram(): GLProgram\n    {\n        if (this.shader)\n        {\n            return this.shader.program.glPrograms[this.renderer.CONTEXT_UID];\n        }\n\n        return null;\n    }\n\n    /**\n     * Generates a glProgram version of the Shader provided.\n     *\n     * @private\n     * @param {PIXI.Shader} shader - the shader that the glProgram will be based on.\n     * @return {PIXI.GLProgram} A shiny new glProgram!\n     */\n    generateShader(shader: Shader): GLProgram\n    {\n        const gl = this.gl;\n\n        const program = shader.program;\n\n        const attribMap: Dict<number> = {};\n\n        for (const i in program.attributeData)\n        {\n            attribMap[i] = program.attributeData[i].location;\n        }\n\n        const shaderProgram = compileProgram(gl, program.vertexSrc, program.fragmentSrc, attribMap);\n        const uniformData: {[key: string]: IGLUniformData} = {};\n\n        for (const i in program.uniformData)\n        {\n            const data = program.uniformData[i];\n\n            uniformData[i] = {\n                location: gl.getUniformLocation(shaderProgram, i),\n                value: defaultValue(data.type, data.size),\n            };\n        }\n\n        const glProgram = new GLProgram(shaderProgram, uniformData);\n\n        program.glPrograms[this.renderer.CONTEXT_UID] = glProgram;\n\n        return glProgram;\n    }\n\n    /**\n     * Resets ShaderSystem state, does not affect WebGL state\n     */\n    reset(): void\n    {\n        this.program = null;\n        this.shader = null;\n    }\n\n    /**\n     * Destroys this System and removes all its textures\n     */\n    destroy(): void\n    {\n        // TODO implement destroy method for ShaderSystem\n        this.destroyed = true;\n    }\n}\n","import { BLEND_MODES } from '@pixi/constants';\n\n/**\n * Maps gl blend combinations to WebGL.\n *\n * @memberof PIXI\n * @function mapWebGLBlendModesToPixi\n * @private\n * @param {WebGLRenderingContext} gl - The rendering context.\n * @param {number[][]} [array=[]] - The array to output into.\n * @return {number[][]} Mapped modes.\n */\nexport function mapWebGLBlendModesToPixi(gl: WebGLRenderingContextBase, array: number[][] = []): number[][]\n{\n    // TODO - premultiply alpha would be different.\n    // add a boolean for that!\n    array[BLEND_MODES.NORMAL] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.ADD] = [gl.ONE, gl.ONE];\n    array[BLEND_MODES.MULTIPLY] = [gl.DST_COLOR, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.SCREEN] = [gl.ONE, gl.ONE_MINUS_SRC_COLOR, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.OVERLAY] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.DARKEN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.LIGHTEN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.COLOR_DODGE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.COLOR_BURN] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.HARD_LIGHT] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.SOFT_LIGHT] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.DIFFERENCE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.EXCLUSION] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.HUE] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.SATURATION] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.COLOR] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.LUMINOSITY] = [gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.NONE] = [0, 0];\n\n    // not-premultiplied blend modes\n    array[BLEND_MODES.NORMAL_NPM] = [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.ADD_NPM] = [gl.SRC_ALPHA, gl.ONE, gl.ONE, gl.ONE];\n    array[BLEND_MODES.SCREEN_NPM] = [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_COLOR, gl.ONE, gl.ONE_MINUS_SRC_ALPHA];\n\n    // composite operations\n    array[BLEND_MODES.SRC_IN] = [gl.DST_ALPHA, gl.ZERO];\n    array[BLEND_MODES.SRC_OUT] = [gl.ONE_MINUS_DST_ALPHA, gl.ZERO];\n    array[BLEND_MODES.SRC_ATOP] = [gl.DST_ALPHA, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.DST_OVER] = [gl.ONE_MINUS_DST_ALPHA, gl.ONE];\n    array[BLEND_MODES.DST_IN] = [gl.ZERO, gl.SRC_ALPHA];\n    array[BLEND_MODES.DST_OUT] = [gl.ZERO, gl.ONE_MINUS_SRC_ALPHA];\n    array[BLEND_MODES.DST_ATOP] = [gl.ONE_MINUS_DST_ALPHA, gl.SRC_ALPHA];\n    array[BLEND_MODES.XOR] = [gl.ONE_MINUS_DST_ALPHA, gl.ONE_MINUS_SRC_ALPHA];\n\n    // SUBTRACT from flash\n    array[BLEND_MODES.SUBTRACT] = [gl.ONE, gl.ONE, gl.ONE, gl.ONE, gl.FUNC_REVERSE_SUBTRACT, gl.FUNC_ADD];\n\n    return array;\n}\n","import { mapWebGLBlendModesToPixi } from './utils/mapWebGLBlendModesToPixi';\nimport { System } from '../System';\nimport { State } from './State';\nimport { BLEND_MODES } from '@pixi/constants';\n\nimport type { IRenderingContext } from '../IRenderingContext';\nimport type { Renderer } from '../Renderer';\n\nconst BLEND = 0;\nconst OFFSET = 1;\nconst CULLING = 2;\nconst DEPTH_TEST = 3;\nconst WINDING = 4;\n\n/**\n * System plugin to the renderer to manage WebGL state machines.\n *\n * @class\n * @extends PIXI.System\n * @memberof PIXI.systems\n */\nexport class StateSystem extends System\n{\n    public stateId: number;\n    public polygonOffset: number;\n    public blendMode: BLEND_MODES;\n    protected _blendEq: boolean;\n    protected gl: IRenderingContext;\n    protected blendModes: number[][];\n    protected readonly map: Array<(value: boolean) => void>;\n    protected readonly checks: Array<(system: this, state: State) => void>;\n    protected defaultState: State;\n    /**\n     * @param {PIXI.Renderer} renderer - The renderer this System works for.\n     */\n    constructor(renderer: Renderer)\n    {\n        super(renderer);\n\n        /**\n         * GL context\n         * @member {WebGLRenderingContext}\n         * @readonly\n         */\n        this.gl = null;\n\n        /**\n         * State ID\n         * @member {number}\n         * @readonly\n         */\n        this.stateId = 0;\n\n        /**\n         * Polygon offset\n         * @member {number}\n         * @readonly\n         */\n        this.polygonOffset = 0;\n\n        /**\n         * Blend mode\n         * @member {number}\n         * @default PIXI.BLEND_MODES.NONE\n         * @readonly\n         */\n        this.blendMode = BLEND_MODES.NONE;\n\n        /**\n         * Whether current blend equation is different\n         * @member {boolean}\n         * @protected\n         */\n        this._blendEq = false;\n\n        /**\n         * Collection of calls\n         * @member {function[]}\n         * @readonly\n         */\n        this.map = [];\n\n        // map functions for when we set state..\n        this.map[BLEND] = this.setBlend;\n        this.map[OFFSET] = this.setOffset;\n        this.map[CULLING] = this.setCullFace;\n        this.map[DEPTH_TEST] = this.setDepthTest;\n        this.map[WINDING] = this.setFrontFace;\n\n        /**\n         * Collection of check calls\n         * @member {function[]}\n         * @readonly\n         */\n        this.checks = [];\n\n        /**\n         * Default WebGL State\n         * @member {PIXI.State}\n         * @readonly\n         */\n        this.defaultState = new State();\n        this.defaultState.blend = true;\n    }\n\n    contextChange(gl: IRenderingContext): void\n    {\n        this.gl = gl;\n\n        this.blendModes = mapWebGLBlendModesToPixi(gl);\n\n        this.set(this.defaultState);\n\n        this.reset();\n    }\n\n    /**\n     * Sets the current state\n     *\n     * @param {*} state - The state to set.\n     */\n    set(state: State): void\n    {\n        state = state || this.defaultState;\n\n        // TODO maybe to an object check? ( this.state === state )?\n        if (this.stateId !== state.data)\n        {\n            let diff = this.stateId ^ state.data;\n            let i = 0;\n\n            // order from least to most common\n            while (diff)\n            {\n                if (diff & 1)\n                {\n                    // state change!\n                    this.map[i].call(this, !!(state.data & (1 << i)));\n                }\n\n                diff = diff >> 1;\n                i++;\n            }\n\n            this.stateId = state.data;\n        }\n\n        // based on the above settings we check for specific modes..\n        // for example if blend is active we check and set the blend modes\n        // or of polygon offset is active we check the poly depth.\n        for (let i = 0; i < this.checks.length; i++)\n        {\n            this.checks[i](this, state);\n        }\n    }\n\n    /**\n     * Sets the state, when previous state is unknown\n     *\n     * @param {*} state - The state to set\n     */\n    forceState(state: State): void\n    {\n        state = state || this.defaultState;\n        for (let i = 0; i < this.map.length; i++)\n        {\n            this.map[i].call(this, !!(state.data & (1 << i)));\n        }\n        for (let i = 0; i < this.checks.length; i++)\n        {\n            this.checks[i](this, state);\n        }\n\n        this.stateId = state.data;\n    }\n\n    /**\n     * Enables or disabled blending.\n     *\n     * @param {boolean} value - Turn on or off webgl blending.\n     */\n    setBlend(value: boolean): void\n    {\n        this.updateCheck(StateSystem.checkBlendMode, value);\n\n        this.gl[value ? 'enable' : 'disable'](this.gl.BLEND);\n    }\n\n    /**\n     * Enables or disable polygon offset fill\n     *\n     * @param {boolean} value - Turn on or off webgl polygon offset testing.\n     */\n    setOffset(value: boolean): void\n    {\n        this.updateCheck(StateSystem.checkPolygonOffset, value);\n\n        this.gl[value ? 'enable' : 'disable'](this.gl.POLYGON_OFFSET_FILL);\n    }\n\n    /**\n     * Sets whether to enable or disable depth test.\n     *\n     * @param {boolean} value - Turn on or off webgl depth testing.\n     */\n    setDepthTest(value: boolean): void\n    {\n        this.gl[value ? 'enable' : 'disable'](this.gl.DEPTH_TEST);\n    }\n\n    /**\n     * Sets whether to enable or disable cull face.\n     *\n     * @param {boolean} value - Turn on or off webgl cull face.\n     */\n    setCullFace(value: boolean): void\n    {\n        this.gl[value ? 'enable' : 'disable'](this.gl.CULL_FACE);\n    }\n\n    /**\n     * Sets the gl front face.\n     *\n     * @param {boolean} value - true is clockwise and false is counter-clockwise\n     */\n    setFrontFace(value: boolean): void\n    {\n        this.gl.frontFace(this.gl[value ? 'CW' : 'CCW']);\n    }\n\n    /**\n     * Sets the blend mode.\n     *\n     * @param {number} value - The blend mode to set to.\n     */\n    setBlendMode(value: number): void\n    {\n        if (value === this.blendMode)\n        {\n            return;\n        }\n\n        this.blendMode = value;\n\n        const mode = this.blendModes[value];\n        const gl = this.gl;\n\n        if (mode.length === 2)\n        {\n            gl.blendFunc(mode[0], mode[1]);\n        }\n        else\n        {\n            gl.blendFuncSeparate(mode[0], mode[1], mode[2], mode[3]);\n        }\n        if (mode.length === 6)\n        {\n            this._blendEq = true;\n            gl.blendEquationSeparate(mode[4], mode[5]);\n        }\n        else if (this._blendEq)\n        {\n            this._blendEq = false;\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n        }\n    }\n\n    /**\n     * Sets the polygon offset.\n     *\n     * @param {number} value - the polygon offset\n     * @param {number} scale - the polygon offset scale\n     */\n    setPolygonOffset(value: number, scale: number): void\n    {\n        this.gl.polygonOffset(value, scale);\n    }\n\n    // used\n    /**\n     * Resets all the logic and disables the vaos\n     */\n    reset(): void\n    {\n        this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, false);\n\n        this.forceState(this.defaultState);\n\n        this._blendEq = true;\n        this.blendMode = -1;\n        this.setBlendMode(0);\n    }\n\n    /**\n     * checks to see which updates should be checked based on which settings have been activated.\n     * For example, if blend is enabled then we should check the blend modes each time the state is changed\n     * or if polygon fill is activated then we need to check if the polygon offset changes.\n     * The idea is that we only check what we have too.\n     *\n     * @param {Function} func - the checking function to add or remove\n     * @param {boolean} value - should the check function be added or removed.\n     */\n    updateCheck(func: (system: this, state: State) => void, value: boolean): void\n    {\n        const index = this.checks.indexOf(func);\n\n        if (value && index === -1)\n        {\n            this.checks.push(func);\n        }\n        else if (!value && index !== -1)\n        {\n            this.checks.splice(index, 1);\n        }\n    }\n\n    /**\n     * A private little wrapper function that we call to check the blend mode.\n     *\n     * @static\n     * @private\n     * @param {PIXI.StateSystem} System - the System to perform the state check on\n     * @param {PIXI.State} state - the state that the blendMode will pulled from\n     */\n    static checkBlendMode(system: StateSystem, state: State): void\n    {\n        system.setBlendMode(state.blendMode);\n    }\n\n    /**\n     * A private little wrapper function that we call to check the polygon offset.\n     *\n     * @static\n     * @private\n     * @param {PIXI.StateSystem} System - the System to perform the state check on\n     * @param {PIXI.State} state - the state that the blendMode will pulled from\n     */\n    static checkPolygonOffset(system: StateSystem, state: State): void\n    {\n        system.setPolygonOffset(1, state.polygonOffset);\n    }\n}\n","import { System } from '../System';\nimport { GC_MODES } from '@pixi/constants';\nimport { settings } from '@pixi/settings';\n\nimport type { Renderer } from '../Renderer';\nimport type { Texture } from './Texture';\nimport type { RenderTexture } from '../renderTexture/RenderTexture';\n\nexport interface IUnloadableTexture {\n    _texture: Texture | RenderTexture;\n    children: IUnloadableTexture[];\n}\n\n/**\n * System plugin to the renderer to manage texture garbage collection on the GPU,\n * ensuring that it does not get clogged up with textures that are no longer being used.\n *\n * @class\n * @memberof PIXI.systems\n * @extends PIXI.System\n */\nexport class TextureGCSystem extends System\n{\n    public count: number;\n    public checkCount: number;\n    public maxIdle: number;\n    public checkCountMax: number;\n    public mode: number;\n    /**\n     * @param {PIXI.Renderer} renderer - The renderer this System works for.\n     */\n    constructor(renderer: Renderer)\n    {\n        super(renderer);\n\n        /**\n         * Count\n         * @member {number}\n         * @readonly\n         */\n        this.count = 0;\n\n        /**\n         * Check count\n         * @member {number}\n         * @readonly\n         */\n        this.checkCount = 0;\n\n        /**\n         * Maximum idle time, in seconds\n         * @member {number}\n         * @see PIXI.settings.GC_MAX_IDLE\n         */\n        this.maxIdle = settings.GC_MAX_IDLE;\n\n        /**\n         * Maximum number of item to check\n         * @member {number}\n         * @see PIXI.settings.GC_MAX_CHECK_COUNT\n         */\n        this.checkCountMax = settings.GC_MAX_CHECK_COUNT;\n\n        /**\n         * Current garabage collection mode\n         * @member {PIXI.GC_MODES}\n         * @see PIXI.settings.GC_MODE\n         */\n        this.mode = settings.GC_MODE;\n    }\n\n    /**\n     * Checks to see when the last time a texture was used\n     * if the texture has not been used for a specified amount of time it will be removed from the GPU\n     */\n    protected postrender(): void\n    {\n        if (!this.renderer.renderingToScreen)\n        {\n            return;\n        }\n\n        this.count++;\n\n        if (this.mode === GC_MODES.MANUAL)\n        {\n            return;\n        }\n\n        this.checkCount++;\n\n        if (this.checkCount > this.checkCountMax)\n        {\n            this.checkCount = 0;\n\n            this.run();\n        }\n    }\n\n    /**\n     * Checks to see when the last time a texture was used\n     * if the texture has not been used for a specified amount of time it will be removed from the GPU\n     */\n    run(): void\n    {\n        const tm = this.renderer.texture;\n        const managedTextures =  tm.managedTextures;\n        let wasRemoved = false;\n\n        for (let i = 0; i < managedTextures.length; i++)\n        {\n            const texture = managedTextures[i];\n\n            // only supports non generated textures at the moment!\n            if (!(texture as any).framebuffer && this.count - texture.touched > this.maxIdle)\n            {\n                tm.destroyTexture(texture, true);\n                managedTextures[i] = null;\n                wasRemoved = true;\n            }\n        }\n\n        if (wasRemoved)\n        {\n            let j = 0;\n\n            for (let i = 0; i < managedTextures.length; i++)\n            {\n                if (managedTextures[i] !== null)\n                {\n                    managedTextures[j++] = managedTextures[i];\n                }\n            }\n\n            managedTextures.length = j;\n        }\n    }\n\n    /**\n     * Removes all the textures within the specified displayObject and its children from the GPU\n     *\n     * @param {PIXI.DisplayObject} displayObject - the displayObject to remove the textures from.\n     */\n    unload(displayObject: IUnloadableTexture): void\n    {\n        const tm = this.renderer.texture;\n        const texture = displayObject._texture as RenderTexture;\n\n        // only destroy non generated textures\n        if (texture && !texture.framebuffer)\n        {\n            tm.destroyTexture(texture);\n        }\n\n        for (let i = displayObject.children.length - 1; i >= 0; i--)\n        {\n            this.unload(displayObject.children[i]);\n        }\n    }\n}\n","/**\n * Internal texture for WebGL context\n * @class\n * @memberof PIXI\n */\nexport class GLTexture\n{\n    public texture: WebGLTexture;\n    public width: number;\n    public height: number;\n    public mipmap: boolean;\n    public wrapMode: number;\n    public type: number;\n    public internalFormat: number;\n    dirtyId: number;\n    dirtyStyleId: number;\n\n    constructor(texture: WebGLTexture)\n    {\n        /**\n         * The WebGL texture\n         * @member {WebGLTexture}\n         */\n        this.texture = texture;\n\n        /**\n         * Width of texture that was used in texImage2D\n         * @member {number}\n         */\n        this.width = -1;\n\n        /**\n         * Height of texture that was used in texImage2D\n         * @member {number}\n         */\n        this.height = -1;\n\n        /**\n         * Texture contents dirty flag\n         * @member {number}\n         */\n        this.dirtyId = -1;\n\n        /**\n         * Texture style dirty flag\n         * @member {number}\n         */\n        this.dirtyStyleId = -1;\n\n        /**\n         * Whether mip levels has to be generated\n         * @member {boolean}\n         */\n        this.mipmap = false;\n\n        /**\n         * WrapMode copied from baseTexture\n         * @member {number}\n         */\n        this.wrapMode = 33071;\n\n        /**\n         * Type copied from baseTexture\n         * @member {number}\n         */\n        this.type = 6408;\n\n        /**\n         * Type copied from baseTexture\n         * @member {number}\n         */\n        this.internalFormat = 5121;\n    }\n}\n","import { System } from '../System';\nimport { BaseTexture } from './BaseTexture';\nimport { GLTexture } from './GLTexture';\nimport { removeItems } from '@pixi/utils';\nimport { MIPMAP_MODES, WRAP_MODES, SCALE_MODES, TYPES } from '@pixi/constants';\n\nimport type { Texture } from './Texture';\nimport type { IRenderingContext } from '../IRenderingContext';\nimport type { Renderer } from '../Renderer';\n/**\n * System plugin to the renderer to manage textures.\n *\n * @class\n * @extends PIXI.System\n * @memberof PIXI.systems\n */\nexport class TextureSystem extends System\n{\n    public boundTextures: BaseTexture[];\n    public managedTextures: Array<BaseTexture>;\n    protected CONTEXT_UID: number;\n    protected gl: IRenderingContext;\n    protected webGLVersion: number;\n    protected unknownTexture: BaseTexture;\n    protected _unknownBoundTextures: boolean;\n    currentLocation: number;\n    emptyTextures: {[key: number]: GLTexture};\n\n    /**\n     * @param {PIXI.Renderer} renderer - The renderer this System works for.\n     */\n    constructor(renderer: Renderer)\n    {\n        super(renderer);\n\n        // TODO set to max textures...\n        /**\n         * Bound textures\n         * @member {PIXI.BaseTexture[]}\n         * @readonly\n         */\n        this.boundTextures = [];\n        /**\n         * Current location\n         * @member {number}\n         * @readonly\n         */\n        this.currentLocation = -1;\n\n        /**\n         * List of managed textures\n         * @member {PIXI.BaseTexture[]}\n         * @readonly\n         */\n        this.managedTextures = [];\n\n        /**\n         * Did someone temper with textures state? We'll overwrite them when we need to unbind something.\n         * @member {boolean}\n         * @private\n         */\n        this._unknownBoundTextures = false;\n\n        /**\n         * BaseTexture value that shows that we don't know what is bound\n         * @member {PIXI.BaseTexture}\n         * @readonly\n         */\n        this.unknownTexture = new BaseTexture();\n    }\n\n    /**\n     * Sets up the renderer context and necessary buffers.\n     */\n    contextChange(): void\n    {\n        const gl = this.gl = this.renderer.gl;\n\n        this.CONTEXT_UID = this.renderer.CONTEXT_UID;\n\n        this.webGLVersion = this.renderer.context.webGLVersion;\n\n        const maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n\n        this.boundTextures.length = maxTextures;\n\n        for (let i = 0; i < maxTextures; i++)\n        {\n            this.boundTextures[i] = null;\n        }\n\n        // TODO move this.. to a nice make empty textures class..\n        this.emptyTextures = {};\n\n        const emptyTexture2D = new GLTexture(gl.createTexture());\n\n        gl.bindTexture(gl.TEXTURE_2D, emptyTexture2D.texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array(4));\n\n        this.emptyTextures[gl.TEXTURE_2D] = emptyTexture2D;\n        this.emptyTextures[gl.TEXTURE_CUBE_MAP] = new GLTexture(gl.createTexture());\n\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, this.emptyTextures[gl.TEXTURE_CUBE_MAP].texture);\n\n        for (let i = 0; i < 6; i++)\n        {\n            gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n        }\n\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n        for (let i = 0; i < this.boundTextures.length; i++)\n        {\n            this.bind(null, i);\n        }\n    }\n\n    /**\n     * Bind a texture to a specific location\n     *\n     * If you want to unbind something, please use `unbind(texture)` instead of `bind(null, textureLocation)`\n     *\n     * @param {PIXI.Texture|PIXI.BaseTexture} texture_ - Texture to bind\n     * @param {number} [location=0] - Location to bind at\n     */\n    bind(texture: Texture|BaseTexture, location = 0): void\n    {\n        const { gl } = this;\n\n        if (texture)\n        {\n            texture = texture.castToBaseTexture();\n\n            if (texture.parentTextureArray)\n            {\n                // cannot bind partial texture\n                // TODO: report a warning\n                return;\n            }\n\n            if (texture.valid)\n            {\n                texture.touched = this.renderer.textureGC.count;\n\n                const glTexture = texture._glTextures[this.CONTEXT_UID] || this.initTexture(texture);\n\n                if (this.boundTextures[location] !== texture)\n                {\n                    if (this.currentLocation !== location)\n                    {\n                        this.currentLocation = location;\n                        gl.activeTexture(gl.TEXTURE0 + location);\n                    }\n                    gl.bindTexture(texture.target, glTexture.texture);\n                }\n\n                if (glTexture.dirtyId !== texture.dirtyId)\n                {\n                    if (this.currentLocation !== location)\n                    {\n                        this.currentLocation = location;\n                        gl.activeTexture(gl.TEXTURE0 + location);\n                    }\n                    this.updateTexture(texture);\n                }\n\n                this.boundTextures[location] = texture;\n            }\n        }\n        else\n        {\n            if (this.currentLocation !== location)\n            {\n                this.currentLocation = location;\n                gl.activeTexture(gl.TEXTURE0 + location);\n            }\n\n            gl.bindTexture(gl.TEXTURE_2D, this.emptyTextures[gl.TEXTURE_2D].texture);\n            this.boundTextures[location] = null;\n        }\n    }\n\n    /**\n     * Resets texture location and bound textures\n     *\n     * Actual `bind(null, i)` calls will be performed at next `unbind()` call\n     */\n    reset(): void\n    {\n        this._unknownBoundTextures = true;\n        this.currentLocation = -1;\n\n        for (let i = 0; i < this.boundTextures.length; i++)\n        {\n            this.boundTextures[i] = this.unknownTexture;\n        }\n    }\n\n    /**\n     * Unbind a texture\n     * @param {PIXI.BaseTexture} texture - Texture to bind\n     */\n    unbind(texture?: BaseTexture): void\n    {\n        const { gl, boundTextures } = this;\n\n        if (this._unknownBoundTextures)\n        {\n            this._unknownBoundTextures = false;\n            // someone changed webGL state,\n            // we have to be sure that our texture does not appear in multi-texture renderer samplers\n            for (let i = 0; i < boundTextures.length; i++)\n            {\n                if (boundTextures[i] === this.unknownTexture)\n                {\n                    this.bind(null, i);\n                }\n            }\n        }\n\n        for (let i = 0; i < boundTextures.length; i++)\n        {\n            if (boundTextures[i] === texture)\n            {\n                if (this.currentLocation !== i)\n                {\n                    gl.activeTexture(gl.TEXTURE0 + i);\n                    this.currentLocation = i;\n                }\n\n                gl.bindTexture(texture.target, this.emptyTextures[texture.target].texture);\n                boundTextures[i] = null;\n            }\n        }\n    }\n\n    /**\n     * Initialize a texture\n     *\n     * @private\n     * @param {PIXI.BaseTexture} texture - Texture to initialize\n     */\n    initTexture(texture: BaseTexture): GLTexture\n    {\n        const glTexture = new GLTexture(this.gl.createTexture());\n\n        // guarantee an update..\n        glTexture.dirtyId = -1;\n\n        texture._glTextures[this.CONTEXT_UID] = glTexture;\n\n        this.managedTextures.push(texture);\n        texture.on('dispose', this.destroyTexture, this);\n\n        return glTexture;\n    }\n\n    initTextureType(texture: BaseTexture, glTexture: GLTexture): void\n    {\n        glTexture.internalFormat = texture.format;\n        glTexture.type = texture.type;\n        if (this.webGLVersion !== 2)\n        {\n            return;\n        }\n        const gl = this.renderer.gl;\n\n        if (texture.type === gl.FLOAT\n            && texture.format === gl.RGBA)\n        {\n            glTexture.internalFormat = gl.RGBA32F;\n        }\n        // that's WebGL1 HALF_FLOAT_OES\n        // we have to convert it to WebGL HALF_FLOAT\n        if (texture.type === TYPES.HALF_FLOAT)\n        {\n            glTexture.type = gl.HALF_FLOAT;\n        }\n        if (glTexture.type === gl.HALF_FLOAT\n            && texture.format === gl.RGBA)\n        {\n            glTexture.internalFormat = gl.RGBA16F;\n        }\n    }\n\n    /**\n     * Update a texture\n     *\n     * @private\n     * @param {PIXI.BaseTexture} texture - Texture to initialize\n     */\n    updateTexture(texture: BaseTexture): void\n    {\n        const glTexture = texture._glTextures[this.CONTEXT_UID];\n\n        if (!glTexture)\n        {\n            return;\n        }\n\n        const renderer = this.renderer;\n\n        this.initTextureType(texture, glTexture);\n\n        if (texture.resource && texture.resource.upload(renderer, texture, glTexture))\n        {\n            // texture is uploaded, dont do anything!\n        }\n        else\n        {\n            // default, renderTexture-like logic\n            const width = texture.realWidth;\n            const height = texture.realHeight;\n            const gl = renderer.gl;\n\n            if (glTexture.width !== width\n                || glTexture.height !== height\n                || glTexture.dirtyId < 0)\n            {\n                glTexture.width = width;\n                glTexture.height = height;\n\n                gl.texImage2D(texture.target, 0,\n                    glTexture.internalFormat,\n                    width,\n                    height,\n                    0,\n                    texture.format,\n                    glTexture.type,\n                    null);\n            }\n        }\n\n        // lets only update what changes..\n        if (texture.dirtyStyleId !== glTexture.dirtyStyleId)\n        {\n            this.updateTextureStyle(texture);\n        }\n        glTexture.dirtyId = texture.dirtyId;\n    }\n\n    /**\n     * Deletes the texture from WebGL\n     *\n     * @private\n     * @param {PIXI.BaseTexture|PIXI.Texture} texture_ - the texture to destroy\n     * @param {boolean} [skipRemove=false] - Whether to skip removing the texture from the TextureManager.\n     */\n    destroyTexture(texture: BaseTexture|Texture, skipRemove?: boolean): void\n    {\n        const { gl } = this;\n\n        texture = texture.castToBaseTexture();\n\n        if (texture._glTextures[this.CONTEXT_UID])\n        {\n            this.unbind(texture);\n\n            gl.deleteTexture(texture._glTextures[this.CONTEXT_UID].texture);\n            texture.off('dispose', this.destroyTexture, this);\n\n            delete texture._glTextures[this.CONTEXT_UID];\n\n            if (!skipRemove)\n            {\n                const i = this.managedTextures.indexOf(texture);\n\n                if (i !== -1)\n                {\n                    removeItems(this.managedTextures, i, 1);\n                }\n            }\n        }\n    }\n\n    /**\n     * Update texture style such as mipmap flag\n     *\n     * @private\n     * @param {PIXI.BaseTexture} texture - Texture to update\n     */\n    updateTextureStyle(texture: BaseTexture): void\n    {\n        const glTexture = texture._glTextures[this.CONTEXT_UID];\n\n        if (!glTexture)\n        {\n            return;\n        }\n\n        if ((texture.mipmap === MIPMAP_MODES.POW2 || this.webGLVersion !== 2) && !texture.isPowerOfTwo)\n        {\n            glTexture.mipmap = false;\n        }\n        else\n        {\n            glTexture.mipmap = texture.mipmap >= 1;\n        }\n\n        if (this.webGLVersion !== 2 && !texture.isPowerOfTwo)\n        {\n            glTexture.wrapMode = WRAP_MODES.CLAMP;\n        }\n        else\n        {\n            glTexture.wrapMode = texture.wrapMode;\n        }\n\n        if (texture.resource && texture.resource.style(this.renderer, texture, glTexture))\n        {\n            // style is set, dont do anything!\n        }\n        else\n        {\n            this.setStyle(texture, glTexture);\n        }\n\n        glTexture.dirtyStyleId = texture.dirtyStyleId;\n    }\n\n    /**\n     * Set style for texture\n     *\n     * @private\n     * @param {PIXI.BaseTexture} texture - Texture to update\n     * @param {PIXI.GLTexture} glTexture\n     */\n    setStyle(texture: BaseTexture, glTexture: GLTexture): void\n    {\n        const gl = this.gl;\n\n        if (glTexture.mipmap)\n        {\n            gl.generateMipmap(texture.target);\n        }\n\n        gl.texParameteri(texture.target, gl.TEXTURE_WRAP_S, glTexture.wrapMode);\n        gl.texParameteri(texture.target, gl.TEXTURE_WRAP_T, glTexture.wrapMode);\n\n        if (glTexture.mipmap)\n        {\n            /* eslint-disable max-len */\n            gl.texParameteri(texture.target, gl.TEXTURE_MIN_FILTER, texture.scaleMode === SCALE_MODES.LINEAR ? gl.LINEAR_MIPMAP_LINEAR : gl.NEAREST_MIPMAP_NEAREST);\n            /* eslint-disable max-len */\n\n            const anisotropicExt = this.renderer.context.extensions.anisotropicFiltering;\n\n            if (anisotropicExt && texture.anisotropicLevel > 0 && texture.scaleMode === SCALE_MODES.LINEAR)\n            {\n                const level = Math.min(texture.anisotropicLevel, gl.getParameter(anisotropicExt.MAX_TEXTURE_MAX_ANISOTROPY_EXT));\n\n                gl.texParameterf(texture.target, anisotropicExt.TEXTURE_MAX_ANISOTROPY_EXT, level);\n            }\n        }\n        else\n        {\n            gl.texParameteri(texture.target, gl.TEXTURE_MIN_FILTER, texture.scaleMode === SCALE_MODES.LINEAR ? gl.LINEAR : gl.NEAREST);\n        }\n\n        gl.texParameteri(texture.target, gl.TEXTURE_MAG_FILTER, texture.scaleMode === SCALE_MODES.LINEAR ? gl.LINEAR : gl.NEAREST);\n    }\n}\n","/**\n * Systems are individual components to the Renderer pipeline.\n * @namespace PIXI.systems\n */\nexport * from './filters/FilterSystem';\nexport * from './batch/BatchSystem';\nexport * from './context/ContextSystem';\nexport * from './framebuffer/FramebufferSystem';\nexport * from './geometry/GeometrySystem';\nexport * from './mask/MaskSystem';\nexport * from './mask/ScissorSystem';\nexport * from './mask/StencilSystem';\nexport * from './projection/ProjectionSystem';\nexport * from './renderTexture/RenderTextureSystem';\nexport * from './shader/ShaderSystem';\nexport * from './state/StateSystem';\nexport * from './textures/TextureGCSystem';\nexport * from './textures/TextureSystem';\n","import { hex2string, hex2rgb, deprecation, EventEmitter } from '@pixi/utils';\nimport { Matrix, Rectangle } from '@pixi/math';\nimport { RENDERER_TYPE } from '@pixi/constants';\nimport { settings } from '@pixi/settings';\nimport { DisplayObject } from '@pixi/display';\nimport { RenderTexture } from './renderTexture/RenderTexture';\n\nimport type { SCALE_MODES } from '@pixi/constants';\nimport type { IRenderingContext } from './IRenderingContext';\nimport type { Container } from '@pixi/display';\n\nconst tempMatrix = new Matrix();\n\nexport interface IRendererOptions extends GlobalMixins.IRendererOptions\n{\n    width?: number;\n    height?: number;\n    view?: HTMLCanvasElement;\n    transparent?: boolean | 'notMultiplied';\n    autoDensity?: boolean;\n    antialias?: boolean;\n    resolution?: number;\n    preserveDrawingBuffer?: boolean;\n    clearBeforeRender?: boolean;\n    backgroundColor?: number;\n    powerPreference?: WebGLPowerPreference;\n    context?: IRenderingContext;\n}\n\ninterface IRendererOptionsLegacy extends IRendererOptions\n{\n    autoResize?: boolean;\n    roundPixels?: boolean;\n}\n\nexport interface IRendererPlugins\n{\n    [key: string]: any;\n}\n\n/**\n * The AbstractRenderer is the base for a PixiJS Renderer. It is extended by the {@link PIXI.CanvasRenderer}\n * and {@link PIXI.Renderer} which can be used for rendering a PixiJS scene.\n *\n * @abstract\n * @class\n * @extends PIXI.utils.EventEmitter\n * @memberof PIXI\n */\nexport abstract class AbstractRenderer extends EventEmitter\n{\n    public resolution: number;\n    public clearBeforeRender?: boolean;\n    public readonly options: IRendererOptions;\n    public readonly type: RENDERER_TYPE;\n    public readonly screen: Rectangle;\n    public readonly view: HTMLCanvasElement;\n    public readonly plugins: IRendererPlugins;\n    public readonly transparent: boolean | 'notMultiplied';\n    public readonly autoDensity: boolean;\n    public readonly preserveDrawingBuffer: boolean;\n\n    protected _backgroundColor: number;\n    protected _backgroundColorString: string;\n    _backgroundColorRgba: number[];\n    _lastObjectRendered: DisplayObject;\n\n    /**\n     * @param {string} system - The name of the system this renderer is for.\n     * @param {object} [options] - The optional renderer parameters.\n     * @param {number} [options.width=800] - The width of the screen.\n     * @param {number} [options.height=600] - The height of the screen.\n     * @param {HTMLCanvasElement} [options.view] - The canvas to use as a view, optional.\n     * @param {boolean} [options.transparent=false] - If the render view is transparent.\n     * @param {boolean} [options.autoDensity=false] - Resizes renderer view in CSS pixels to allow for\n     *   resolutions other than 1.\n     * @param {boolean} [options.antialias=false] - Sets antialias\n     * @param {number} [options.resolution=1] - The resolution / device pixel ratio of the renderer. The\n     *  resolution of the renderer retina would be 2.\n     * @param {boolean} [options.preserveDrawingBuffer=false] - Enables drawing buffer preservation,\n     *  enable this if you need to call toDataUrl on the WebGL context.\n     * @param {boolean} [options.clearBeforeRender=true] - This sets if the renderer will clear the canvas or\n     *      not before the new render pass.\n     * @param {number} [options.backgroundColor=0x000000] - The background color of the rendered area\n     *  (shown if not transparent).\n     */\n    constructor(type: RENDERER_TYPE = RENDERER_TYPE.UNKNOWN, options?: IRendererOptions)\n    {\n        super();\n\n        // Add the default render options\n        options = Object.assign({}, settings.RENDER_OPTIONS, options);\n\n        // Deprecation notice for renderer roundPixels option\n        if ((options as IRendererOptionsLegacy).roundPixels)\n        {\n            settings.ROUND_PIXELS = (options as IRendererOptionsLegacy).roundPixels;\n            deprecation('5.0.0', 'Renderer roundPixels option is deprecated, please use PIXI.settings.ROUND_PIXELS', 2);\n        }\n\n        /**\n         * The supplied constructor options.\n         *\n         * @member {Object}\n         * @readOnly\n         */\n        this.options = options;\n\n        /**\n         * The type of the renderer.\n         *\n         * @member {number}\n         * @default PIXI.RENDERER_TYPE.UNKNOWN\n         * @see PIXI.RENDERER_TYPE\n         */\n        this.type = type;\n\n        /**\n         * Measurements of the screen. (0, 0, screenWidth, screenHeight).\n         *\n         * Its safe to use as filterArea or hitArea for the whole stage.\n         *\n         * @member {PIXI.Rectangle}\n         */\n        this.screen = new Rectangle(0, 0, options.width, options.height);\n\n        /**\n         * The canvas element that everything is drawn to.\n         *\n         * @member {HTMLCanvasElement}\n         */\n        this.view = options.view || document.createElement('canvas');\n\n        /**\n         * The resolution / device pixel ratio of the renderer.\n         *\n         * @member {number}\n         * @default 1\n         */\n        this.resolution = options.resolution || settings.RESOLUTION;\n\n        /**\n         * Whether the render view is transparent.\n         *\n         * @member {boolean}\n         */\n        this.transparent = options.transparent;\n\n        /**\n         * Whether CSS dimensions of canvas view should be resized to screen dimensions automatically.\n         *\n         * @member {boolean}\n         */\n        this.autoDensity = options.autoDensity || (options as IRendererOptionsLegacy).autoResize || false;\n        // autoResize is deprecated, provides fallback support\n\n        /**\n         * The value of the preserveDrawingBuffer flag affects whether or not the contents of\n         * the stencil buffer is retained after rendering.\n         *\n         * @member {boolean}\n         */\n        this.preserveDrawingBuffer = options.preserveDrawingBuffer;\n\n        /**\n         * This sets if the CanvasRenderer will clear the canvas or not before the new render pass.\n         * If the scene is NOT transparent PixiJS will use a canvas sized fillRect operation every\n         * frame to set the canvas background color. If the scene is transparent PixiJS will use clearRect\n         * to clear the canvas every frame. Disable this by setting this to false. For example, if\n         * your game has a canvas filling background image you often don't need this set.\n         *\n         * @member {boolean}\n         * @default\n         */\n        this.clearBeforeRender = options.clearBeforeRender;\n\n        /**\n         * The background color as a number.\n         *\n         * @member {number}\n         * @protected\n         */\n        this._backgroundColor = 0x000000;\n\n        /**\n         * The background color as an [R, G, B] array.\n         *\n         * @member {number[]}\n         * @protected\n         */\n        this._backgroundColorRgba = [0, 0, 0, 0];\n\n        /**\n         * The background color as a string.\n         *\n         * @member {string}\n         * @protected\n         */\n        this._backgroundColorString = '#000000';\n\n        this.backgroundColor = options.backgroundColor || this._backgroundColor; // run bg color setter\n\n        /**\n         * The last root object that the renderer tried to render.\n         *\n         * @member {PIXI.DisplayObject}\n         * @protected\n         */\n        this._lastObjectRendered = null;\n\n        /**\n         * Collection of plugins.\n         * @readonly\n         * @member {object}\n         */\n        this.plugins = {};\n    }\n\n    /**\n     * Initialize the plugins.\n     *\n     * @protected\n     * @param {object} staticMap - The dictionary of statically saved plugins.\n     */\n    initPlugins(staticMap: IRendererPlugins): void\n    {\n        for (const o in staticMap)\n        {\n            this.plugins[o] = new (staticMap[o])(this);\n        }\n    }\n\n    /**\n     * Same as view.width, actual number of pixels in the canvas by horizontal.\n     *\n     * @member {number}\n     * @readonly\n     * @default 800\n     */\n    get width(): number\n    {\n        return this.view.width;\n    }\n\n    /**\n     * Same as view.height, actual number of pixels in the canvas by vertical.\n     *\n     * @member {number}\n     * @readonly\n     * @default 600\n     */\n    get height(): number\n    {\n        return this.view.height;\n    }\n\n    /**\n     * Resizes the screen and canvas to the specified width and height.\n     * Canvas dimensions are multiplied by resolution.\n     *\n     * @param {number} screenWidth - The new width of the screen.\n     * @param {number} screenHeight - The new height of the screen.\n     */\n    resize(screenWidth: number, screenHeight: number): void\n    {\n        this.screen.width = screenWidth;\n        this.screen.height = screenHeight;\n\n        this.view.width = screenWidth * this.resolution;\n        this.view.height = screenHeight * this.resolution;\n\n        if (this.autoDensity)\n        {\n            this.view.style.width = `${screenWidth}px`;\n            this.view.style.height = `${screenHeight}px`;\n        }\n\n        /**\n         * Fired after view has been resized.\n         *\n         * @event PIXI.Renderer#resize\n         * @param {number} screenWidth - The new width of the screen.\n         * @param {number} screenHeight - The new height of the screen.\n         */\n        this.emit('resize', screenWidth, screenHeight);\n    }\n\n    /**\n     * Useful function that returns a texture of the display object that can then be used to create sprites\n     * This can be quite useful if your displayObject is complicated and needs to be reused multiple times.\n     *\n     * @param {PIXI.DisplayObject} displayObject - The displayObject the object will be generated from.\n     * @param {PIXI.SCALE_MODES} scaleMode - The scale mode of the texture.\n     * @param {number} resolution - The resolution / device pixel ratio of the texture being generated.\n     * @param {PIXI.Rectangle} [region] - The region of the displayObject, that shall be rendered,\n     *        if no region is specified, defaults to the local bounds of the displayObject.\n     * @return {PIXI.RenderTexture} A texture of the graphics object.\n     */\n    generateTexture(displayObject: DisplayObject,\n        scaleMode?: SCALE_MODES, resolution?: number, region?: Rectangle): RenderTexture\n    {\n        region = region || (displayObject as Container).getLocalBounds(null, true);\n\n        // minimum texture size is 1x1, 0x0 will throw an error\n        if (region.width === 0) region.width = 1;\n        if (region.height === 0) region.height = 1;\n\n        const renderTexture = RenderTexture.create(\n            {\n                width: region.width | 0,\n                height: region.height | 0,\n                scaleMode,\n                resolution,\n            });\n\n        tempMatrix.tx = -region.x;\n        tempMatrix.ty = -region.y;\n\n        this.render(displayObject, renderTexture, false, tempMatrix, !!displayObject.parent);\n\n        return renderTexture;\n    }\n\n    abstract render(displayObject: DisplayObject, renderTexture?: RenderTexture,\n                    clear?: boolean, transform?: Matrix, skipUpdateTransform?: boolean): void;\n\n    /**\n     * Removes everything from the renderer and optionally removes the Canvas DOM element.\n     *\n     * @param {boolean} [removeView=false] - Removes the Canvas element from the DOM.\n     */\n    destroy(removeView?: boolean): void\n    {\n        for (const o in this.plugins)\n        {\n            this.plugins[o].destroy();\n            this.plugins[o] = null;\n        }\n\n        if (removeView && this.view.parentNode)\n        {\n            this.view.parentNode.removeChild(this.view);\n        }\n\n        const thisAny = this as any;\n\n        // null-ing all objects, that's a tradition!\n\n        thisAny.plugins = null;\n        thisAny.type = RENDERER_TYPE.UNKNOWN;\n        thisAny.view = null;\n        thisAny.screen = null;\n        thisAny._tempDisplayObjectParent = null;\n        thisAny.options = null;\n        this._backgroundColorRgba = null;\n        this._backgroundColorString = null;\n        this._lastObjectRendered = null;\n    }\n\n    /**\n     * The background color to fill if not transparent\n     *\n     * @member {number}\n     */\n    get backgroundColor(): number\n    {\n        return this._backgroundColor;\n    }\n\n    set backgroundColor(value: number)\n    {\n        this._backgroundColor = value;\n        this._backgroundColorString = hex2string(value);\n        hex2rgb(value, this._backgroundColorRgba);\n    }\n}\n","import { AbstractRenderer } from './AbstractRenderer';\nimport { sayHello, isWebGLSupported } from '@pixi/utils';\nimport { MaskSystem } from './mask/MaskSystem';\nimport { StencilSystem } from './mask/StencilSystem';\nimport { ScissorSystem } from './mask/ScissorSystem';\nimport { FilterSystem } from './filters/FilterSystem';\nimport { FramebufferSystem } from './framebuffer/FramebufferSystem';\nimport { RenderTextureSystem } from './renderTexture/RenderTextureSystem';\nimport { TextureSystem } from './textures/TextureSystem';\nimport { ProjectionSystem } from './projection/ProjectionSystem';\nimport { StateSystem } from './state/StateSystem';\nimport { GeometrySystem } from './geometry/GeometrySystem';\nimport { ShaderSystem } from './shader/ShaderSystem';\nimport { ContextSystem } from './context/ContextSystem';\nimport { BatchSystem } from './batch/BatchSystem';\nimport { TextureGCSystem } from './textures/TextureGCSystem';\nimport { RENDERER_TYPE } from '@pixi/constants';\nimport { UniformGroup } from './shader/UniformGroup';\nimport { Matrix } from '@pixi/math';\nimport { Runner } from '@pixi/runner';\n\nimport type { IRendererOptions, IRendererPlugins } from './AbstractRenderer';\nimport type { RenderTexture } from './renderTexture/RenderTexture';\nimport type { DisplayObject } from '@pixi/display';\nimport type { System } from './System';\nimport type { IRenderingContext } from './IRenderingContext';\nimport type { Extract } from '@pixi/extract';\n\nexport interface IRendererPluginConstructor {\n    new (renderer: Renderer, options?: any): IRendererPlugin;\n}\n\nexport interface IRendererPlugin {\n    destroy(): void;\n}\n\n/**\n * The Renderer draws the scene and all its content onto a WebGL enabled canvas.\n *\n * This renderer should be used for browsers that support WebGL.\n *\n * This renderer works by automatically managing WebGLBatchesm, so no need for Sprite Batches or Sprite Clouds.\n * Don't forget to add the view to your DOM or you will not see anything!\n *\n * @class\n * @memberof PIXI\n * @extends PIXI.AbstractRenderer\n */\nexport class Renderer extends AbstractRenderer\n{\n    public gl: IRenderingContext;\n    public globalUniforms: UniformGroup;\n    public CONTEXT_UID: number;\n    public renderingToScreen: boolean;\n    public extract: Extract;\n    // systems\n    public mask: MaskSystem;\n    public context: ContextSystem;\n    public state: StateSystem;\n    public shader: ShaderSystem;\n    public texture: TextureSystem;\n    public geometry: GeometrySystem;\n    public framebuffer: FramebufferSystem;\n    public scissor: ScissorSystem;\n    public stencil: StencilSystem;\n    public projection: ProjectionSystem;\n    public textureGC: TextureGCSystem;\n    public filter: FilterSystem;\n    public renderTexture: RenderTextureSystem;\n    public batch: BatchSystem;\n\n    runners: {[key: string]: Runner};\n\n    /**\n     * Create renderer if WebGL is available. Overrideable\n     * by the **@pixi/canvas-renderer** package to allow fallback.\n     * throws error if WebGL is not available.\n     * @static\n     * @private\n     */\n    static create(options: IRendererOptions): AbstractRenderer\n    {\n        if (isWebGLSupported())\n        {\n            return new Renderer(options);\n        }\n\n        throw new Error('WebGL unsupported in this browser, use \"pixi.js-legacy\" for fallback canvas2d support.');\n    }\n\n    /**\n     * @param {object} [options] - The optional renderer parameters.\n     * @param {number} [options.width=800] - The width of the screen.\n     * @param {number} [options.height=600] - The height of the screen.\n     * @param {HTMLCanvasElement} [options.view] - The canvas to use as a view, optional.\n     * @param {boolean} [options.transparent=false] - If the render view is transparent.\n     * @param {boolean} [options.autoDensity=false] - Resizes renderer view in CSS pixels to allow for\n     *   resolutions other than 1.\n     * @param {boolean} [options.antialias=false] - Sets antialias. If not available natively then FXAA\n     *  antialiasing is used.\n     * @param {number} [options.resolution=1] - The resolution / device pixel ratio of the renderer.\n     *  The resolution of the renderer retina would be 2.\n     * @param {boolean} [options.clearBeforeRender=true] - This sets if the renderer will clear\n     *  the canvas or not before the new render pass. If you wish to set this to false, you *must* set\n     *  preserveDrawingBuffer to `true`.\n     * @param {boolean} [options.preserveDrawingBuffer=false] - Enables drawing buffer preservation,\n     *  enable this if you need to call toDataUrl on the WebGL context.\n     * @param {number} [options.backgroundColor=0x000000] - The background color of the rendered area\n     *  (shown if not transparent).\n     * @param {string} [options.powerPreference] - Parameter passed to WebGL context, set to \"high-performance\"\n     *  for devices with dual graphics card.\n     * @param {object} [options.context] - If WebGL context already exists, all parameters must be taken from it.\n     * @public\n     */\n    constructor(options? : IRendererOptions)\n    {\n        super(RENDERER_TYPE.WEBGL, options);\n\n        // the options will have been modified here in the super constructor with pixi's default settings..\n        options = this.options;\n\n        /**\n         * WebGL context, set by the contextSystem (this.context)\n         *\n         * @readonly\n         * @member {WebGLRenderingContext}\n         */\n        this.gl = null;\n\n        this.CONTEXT_UID = 0;\n\n        // TODO legacy!\n\n        /**\n         * Internal signal instances of **runner**, these\n         * are assigned to each system created.\n         * @see PIXI.Runner\n         * @name PIXI.Renderer#runners\n         * @private\n         * @type {object}\n         * @readonly\n         * @property {PIXI.Runner} destroy - Destroy runner\n         * @property {PIXI.Runner} contextChange - Context change runner\n         * @property {PIXI.Runner} reset - Reset runner\n         * @property {PIXI.Runner} update - Update runner\n         * @property {PIXI.Runner} postrender - Post-render runner\n         * @property {PIXI.Runner} prerender - Pre-render runner\n         * @property {PIXI.Runner} resize - Resize runner\n         */\n        this.runners = {\n            destroy: new Runner('destroy'),\n            contextChange: new Runner('contextChange'),\n            reset: new Runner('reset'),\n            update: new Runner('update'),\n            postrender: new Runner('postrender'),\n            prerender: new Runner('prerender'),\n            resize: new Runner('resize'),\n        };\n\n        /**\n         * Global uniforms\n         * @member {PIXI.UniformGroup}\n         */\n        this.globalUniforms = new UniformGroup({\n            projectionMatrix: new Matrix(),\n        }, true);\n\n        /**\n         * Mask system instance\n         * @member {PIXI.systems.MaskSystem} mask\n         * @memberof PIXI.Renderer#\n         * @readonly\n         */\n        this.addSystem(MaskSystem, 'mask')\n            /**\n             * Context system instance\n             * @member {PIXI.systems.ContextSystem} context\n             * @memberof PIXI.Renderer#\n             * @readonly\n             */\n            .addSystem(ContextSystem, 'context')\n            /**\n             * State system instance\n             * @member {PIXI.systems.StateSystem} state\n             * @memberof PIXI.Renderer#\n             * @readonly\n             */\n            .addSystem(StateSystem, 'state')\n            /**\n             * Shader system instance\n             * @member {PIXI.systems.ShaderSystem} shader\n             * @memberof PIXI.Renderer#\n             * @readonly\n             */\n            .addSystem(ShaderSystem, 'shader')\n            /**\n             * Texture system instance\n             * @member {PIXI.systems.TextureSystem} texture\n             * @memberof PIXI.Renderer#\n             * @readonly\n             */\n            .addSystem(TextureSystem, 'texture')\n            /**\n             * Geometry system instance\n             * @member {PIXI.systems.GeometrySystem} geometry\n             * @memberof PIXI.Renderer#\n             * @readonly\n             */\n            .addSystem(GeometrySystem, 'geometry')\n            /**\n             * Framebuffer system instance\n             * @member {PIXI.systems.FramebufferSystem} framebuffer\n             * @memberof PIXI.Renderer#\n             * @readonly\n             */\n            .addSystem(FramebufferSystem, 'framebuffer')\n            /**\n             * Scissor system instance\n             * @member {PIXI.systems.ScissorSystem} scissor\n             * @memberof PIXI.Renderer#\n             * @readonly\n             */\n            .addSystem(ScissorSystem, 'scissor')\n            /**\n             * Stencil system instance\n             * @member {PIXI.systems.StencilSystem} stencil\n             * @memberof PIXI.Renderer#\n             * @readonly\n             */\n            .addSystem(StencilSystem, 'stencil')\n            /**\n             * Projection system instance\n             * @member {PIXI.systems.ProjectionSystem} projection\n             * @memberof PIXI.Renderer#\n             * @readonly\n             */\n            .addSystem(ProjectionSystem, 'projection')\n            /**\n             * Texture garbage collector system instance\n             * @member {PIXI.systems.TextureGCSystem} textureGC\n             * @memberof PIXI.Renderer#\n             * @readonly\n             */\n            .addSystem(TextureGCSystem, 'textureGC')\n            /**\n             * Filter system instance\n             * @member {PIXI.systems.FilterSystem} filter\n             * @memberof PIXI.Renderer#\n             * @readonly\n             */\n            .addSystem(FilterSystem, 'filter')\n            /**\n             * RenderTexture system instance\n             * @member {PIXI.systems.RenderTextureSystem} renderTexture\n             * @memberof PIXI.Renderer#\n             * @readonly\n             */\n            .addSystem(RenderTextureSystem, 'renderTexture')\n\n            /**\n             * Batch system instance\n             * @member {PIXI.systems.BatchSystem} batch\n             * @memberof PIXI.Renderer#\n             * @readonly\n             */\n            .addSystem(BatchSystem, 'batch');\n\n        this.initPlugins(Renderer.__plugins);\n\n        /**\n         * The options passed in to create a new WebGL context.\n         */\n        if (options.context)\n        {\n            this.context.initFromContext(options.context);\n        }\n        else\n        {\n            this.context.initFromOptions({\n                alpha: !!this.transparent,\n                antialias: options.antialias,\n                premultipliedAlpha: this.transparent && this.transparent !== 'notMultiplied',\n                stencil: true,\n                preserveDrawingBuffer: options.preserveDrawingBuffer,\n                powerPreference: this.options.powerPreference,\n            });\n        }\n\n        /**\n         * Flag if we are rendering to the screen vs renderTexture\n         * @member {boolean}\n         * @readonly\n         * @default true\n         */\n        this.renderingToScreen = true;\n\n        sayHello(this.context.webGLVersion === 2 ? 'WebGL 2' : 'WebGL 1');\n\n        this.resize(this.options.width, this.options.height);\n    }\n\n    /**\n     * Add a new system to the renderer.\n     * @param {Function} ClassRef - Class reference\n     * @param {string} [name] - Property name for system, if not specified\n     *        will use a static `name` property on the class itself. This\n     *        name will be assigned as s property on the Renderer so make\n     *        sure it doesn't collide with properties on Renderer.\n     * @return {PIXI.Renderer} Return instance of renderer\n     */\n    addSystem<T extends System>(ClassRef: { new(renderer: Renderer): T}, name: string): this\n    {\n        if (!name)\n        {\n            name = ClassRef.name;\n        }\n\n        const system = new ClassRef(this);\n\n        if ((this as any)[name])\n        {\n            throw new Error(`Whoops! The name \"${name}\" is already in use`);\n        }\n\n        (this as any)[name] = system;\n\n        for (const i in this.runners)\n        {\n            this.runners[i].add(system);\n        }\n\n        /**\n         * Fired after rendering finishes.\n         *\n         * @event PIXI.Renderer#postrender\n         */\n\n        /**\n         * Fired before rendering starts.\n         *\n         * @event PIXI.Renderer#prerender\n         */\n\n        /**\n         * Fired when the WebGL context is set.\n         *\n         * @event PIXI.Renderer#context\n         * @param {WebGLRenderingContext} gl - WebGL context.\n         */\n\n        return this;\n    }\n\n    /**\n     * Renders the object to its WebGL view\n     *\n     * @param {PIXI.DisplayObject} displayObject - The object to be rendered.\n     * @param {PIXI.RenderTexture} [renderTexture] - The render texture to render to.\n     * @param {boolean} [clear=true] - Should the canvas be cleared before the new render.\n     * @param {PIXI.Matrix} [transform] - A transform to apply to the render texture before rendering.\n     * @param {boolean} [skipUpdateTransform=false] - Should we skip the update transform pass?\n     */\n    render(displayObject: DisplayObject, renderTexture?: RenderTexture,\n        clear?: boolean, transform?: Matrix, skipUpdateTransform?: boolean): void\n    {\n        // can be handy to know!\n        this.renderingToScreen = !renderTexture;\n\n        this.runners.prerender.emit();\n        this.emit('prerender');\n\n        // apply a transform at a GPU level\n        this.projection.transform = transform;\n\n        // no point rendering if our context has been blown up!\n        if (this.context.isLost)\n        {\n            return;\n        }\n\n        if (!renderTexture)\n        {\n            this._lastObjectRendered = displayObject;\n        }\n\n        if (!skipUpdateTransform)\n        {\n            // update the scene graph\n            const cacheParent = displayObject.enableTempParent();\n\n            displayObject.updateTransform();\n            displayObject.disableTempParent(cacheParent);\n            // displayObject.hitArea = //TODO add a temp hit area\n        }\n\n        this.renderTexture.bind(renderTexture);\n        this.batch.currentRenderer.start();\n\n        if (clear !== undefined ? clear : this.clearBeforeRender)\n        {\n            this.renderTexture.clear();\n        }\n\n        displayObject.render(this);\n\n        // apply transform..\n        this.batch.currentRenderer.flush();\n\n        if (renderTexture)\n        {\n            renderTexture.baseTexture.update();\n        }\n\n        this.runners.postrender.emit();\n\n        // reset transform after render\n        this.projection.transform = null;\n\n        this.emit('postrender');\n    }\n\n    /**\n     * Resizes the WebGL view to the specified width and height.\n     *\n     * @param {number} screenWidth - The new width of the screen.\n     * @param {number} screenHeight - The new height of the screen.\n     */\n    resize(screenWidth: number, screenHeight: number): void\n    {\n        super.resize(screenWidth, screenHeight);\n\n        this.runners.resize.emit(screenWidth, screenHeight);\n    }\n\n    /**\n     * Resets the WebGL state so you can render things however you fancy!\n     *\n     * @return {PIXI.Renderer} Returns itself.\n     */\n    reset(): this\n    {\n        this.runners.reset.emit();\n\n        return this;\n    }\n\n    /**\n     * Clear the frame buffer\n     */\n    clear(): void\n    {\n        this.renderTexture.bind();\n        this.renderTexture.clear();\n    }\n\n    /**\n     * Removes everything from the renderer (event listeners, spritebatch, etc...)\n     *\n     * @param {boolean} [removeView=false] - Removes the Canvas element from the DOM.\n     *  See: https://github.com/pixijs/pixi.js/issues/2233\n     */\n    destroy(removeView?: boolean): void\n    {\n        this.runners.destroy.emit();\n\n        for (const r in this.runners)\n        {\n            this.runners[r].destroy();\n        }\n\n        // call base destroy\n        super.destroy(removeView);\n\n        // TODO nullify all the managers..\n        this.gl = null;\n    }\n\n    /**\n     * Collection of installed plugins. These are included by default in PIXI, but can be excluded\n     * by creating a custom build. Consult the README for more information about creating custom\n     * builds and excluding plugins.\n     * @name PIXI.Renderer#plugins\n     * @type {object}\n     * @readonly\n     * @property {PIXI.AccessibilityManager} accessibility Support tabbing interactive elements.\n     * @property {PIXI.Extract} extract Extract image data from renderer.\n     * @property {PIXI.InteractionManager} interaction Handles mouse, touch and pointer events.\n     * @property {PIXI.Prepare} prepare Pre-render display objects.\n     */\n\n    static __plugins: IRendererPlugins;\n    /**\n     * Adds a plugin to the renderer.\n     *\n     * @method\n     * @param {string} pluginName - The name of the plugin.\n     * @param {Function} ctor - The constructor function or class for the plugin.\n     */\n    static registerPlugin(pluginName: string, ctor: IRendererPluginConstructor): void\n    {\n        Renderer.__plugins = Renderer.__plugins || {};\n        Renderer.__plugins[pluginName] = ctor;\n    }\n}\n","import { Renderer } from './Renderer';\nimport type { AbstractRenderer, IRendererOptions } from './AbstractRenderer';\n\nexport interface IRendererOptionsAuto extends IRendererOptions\n{\n    forceCanvas?: boolean;\n}\n/**\n * This helper function will automatically detect which renderer you should be using.\n * WebGL is the preferred renderer as it is a lot faster. If WebGL is not supported by\n * the browser then this function will return a canvas renderer\n *\n * @memberof PIXI\n * @function autoDetectRenderer\n * @param {object} [options] - The optional renderer parameters\n * @param {number} [options.width=800] - the width of the renderers view\n * @param {number} [options.height=600] - the height of the renderers view\n * @param {HTMLCanvasElement} [options.view] - the canvas to use as a view, optional\n * @param {boolean} [options.transparent=false] - If the render view is transparent, default false\n * @param {boolean} [options.autoDensity=false] - Resizes renderer view in CSS pixels to allow for\n *   resolutions other than 1\n * @param {boolean} [options.antialias=false] - sets antialias\n * @param {boolean} [options.preserveDrawingBuffer=false] - enables drawing buffer preservation, enable this if you\n *  need to call toDataUrl on the webgl context\n * @param {number} [options.backgroundColor=0x000000] - The background color of the rendered area\n *  (shown if not transparent).\n * @param {boolean} [options.clearBeforeRender=true] - This sets if the renderer will clear the canvas or\n *   not before the new render pass.\n * @param {number} [options.resolution=1] - The resolution / device pixel ratio of the renderer, retina would be 2\n * @param {boolean} [options.forceCanvas=false] - prevents selection of WebGL renderer, even if such is present, this\n *   option only is available when using **pixi.js-legacy** or **@pixi/canvas-renderer** modules, otherwise\n *   it is ignored.\n * @param {string} [options.powerPreference] - Parameter passed to webgl context, set to \"high-performance\"\n *  for devices with dual graphics card **webgl only**\n * @return {PIXI.Renderer|PIXI.CanvasRenderer} Returns WebGL renderer if available, otherwise CanvasRenderer\n */\nexport function autoDetectRenderer(options: IRendererOptionsAuto): AbstractRenderer\n{\n    return Renderer.create(options);\n}\n","import { DRAW_MODES } from '@pixi/constants';\n\nimport type { BLEND_MODES } from '@pixi/constants';\nimport type { BatchTextureArray } from './BatchTextureArray';\n\n/**\n * Used by the batcher to draw batches.\n * Each one of these contains all information required to draw a bound geometry.\n *\n * @class\n * @memberof PIXI\n */\nexport class BatchDrawCall\n{\n    texArray: BatchTextureArray;\n    type: DRAW_MODES;\n    blend: BLEND_MODES;\n    start: number;\n    size: number;\n    data: any;\n\n    constructor()\n    {\n        this.texArray = null;\n        this.blend = 0;\n        this.type = DRAW_MODES.TRIANGLES;\n\n        this.start = 0;\n        this.size = 0;\n\n        /**\n         * data for uniforms or custom webgl state\n         * @member {object}\n         */\n        this.data = null;\n    }\n}\n","import type { BaseTexture } from '@pixi/core';\n\n/**\n * Used by the batcher to build texture batches.\n * Holds list of textures and their respective locations.\n *\n * @class\n * @memberof PIXI\n */\nexport class BatchTextureArray\n{\n    public elements: BaseTexture[];\n    public ids: number[];\n    public count: number;\n\n    constructor()\n    {\n        /**\n         * inside textures array\n         * @member {PIXI.BaseTexture[]}\n         */\n        this.elements = [];\n        /**\n         * Respective locations for textures\n         * @member {number[]}\n         */\n        this.ids = [];\n        /**\n         * number of filled elements\n         * @member {number}\n         */\n        this.count = 0;\n    }\n\n    clear(): void\n    {\n        for (let i = 0; i < this.count; i++)\n        {\n            this.elements[i] = null;\n        }\n        this.count = 0;\n    }\n}\n","import type { ITypedArray } from './Buffer';\n\n/**\n * Flexible wrapper around `ArrayBuffer` that also provides\n * typed array views on demand.\n *\n * @class\n * @memberof PIXI\n */\nexport class ViewableBuffer\n{\n    public size: number;\n    public rawBinaryData: ArrayBuffer;\n    public uint32View: Uint32Array;\n    public float32View: Float32Array;\n\n    private _int8View: Int8Array;\n    private _uint8View: Uint8Array;\n    private _int16View: Int16Array;\n    private _uint16View: Uint16Array;\n    private _int32View: Int32Array;\n\n    /**\n     * @param {number} size - The size of the buffer in bytes.\n     */\n    constructor(size: number)\n    {\n        /**\n         * Underlying `ArrayBuffer` that holds all the data\n         * and is of capacity `size`.\n         *\n         * @member {ArrayBuffer}\n         */\n        this.rawBinaryData = new ArrayBuffer(size);\n\n        /**\n         * View on the raw binary data as a `Uint32Array`.\n         *\n         * @member {Uint32Array}\n         */\n        this.uint32View = new Uint32Array(this.rawBinaryData);\n\n        /**\n         * View on the raw binary data as a `Float32Array`.\n         *\n         * @member {Float32Array}\n         */\n        this.float32View = new Float32Array(this.rawBinaryData);\n    }\n\n    /**\n     * View on the raw binary data as a `Int8Array`.\n     *\n     * @member {Int8Array}\n     */\n    get int8View(): Int8Array\n    {\n        if (!this._int8View)\n        {\n            this._int8View = new Int8Array(this.rawBinaryData);\n        }\n\n        return this._int8View;\n    }\n\n    /**\n     * View on the raw binary data as a `Uint8Array`.\n     *\n     * @member {Uint8Array}\n     */\n    get uint8View(): Uint8Array\n    {\n        if (!this._uint8View)\n        {\n            this._uint8View = new Uint8Array(this.rawBinaryData);\n        }\n\n        return this._uint8View;\n    }\n\n    /**\n     * View on the raw binary data as a `Int16Array`.\n     *\n     * @member {Int16Array}\n     */\n    get int16View(): Int16Array\n    {\n        if (!this._int16View)\n        {\n            this._int16View = new Int16Array(this.rawBinaryData);\n        }\n\n        return this._int16View;\n    }\n\n    /**\n     * View on the raw binary data as a `Uint16Array`.\n     *\n     * @member {Uint16Array}\n     */\n    get uint16View(): Uint16Array\n    {\n        if (!this._uint16View)\n        {\n            this._uint16View = new Uint16Array(this.rawBinaryData);\n        }\n\n        return this._uint16View;\n    }\n\n    /**\n     * View on the raw binary data as a `Int32Array`.\n     *\n     * @member {Int32Array}\n     */\n    get int32View(): Int32Array\n    {\n        if (!this._int32View)\n        {\n            this._int32View = new Int32Array(this.rawBinaryData);\n        }\n\n        return this._int32View;\n    }\n\n    /**\n     * Returns the view of the given type.\n     *\n     * @param {string} type - One of `int8`, `uint8`, `int16`,\n     *    `uint16`, `int32`, `uint32`, and `float32`.\n     * @return {object} typed array of given type\n     */\n    view(type: string): ITypedArray\n    {\n        return (this as any)[`${type}View`];\n    }\n\n    /**\n     * Destroys all buffer references. Do not use after calling\n     * this.\n     */\n    destroy(): void\n    {\n        this.rawBinaryData = null;\n        this._int8View = null;\n        this._uint8View = null;\n        this._int16View = null;\n        this._uint16View = null;\n        this._int32View = null;\n        this.uint32View = null;\n        this.float32View = null;\n    }\n\n    static sizeOf(type: string): number\n    {\n        switch (type)\n        {\n            case 'int8':\n            case 'uint8':\n                return 1;\n            case 'int16':\n            case 'uint16':\n                return 2;\n            case 'int32':\n            case 'uint32':\n            case 'float32':\n                return 4;\n            default:\n                throw new Error(`${type} isn't a valid view type`);\n        }\n    }\n}\n","import { BatchDrawCall } from './BatchDrawCall';\nimport { BatchTextureArray } from './BatchTextureArray';\nimport { BaseTexture } from '../textures/BaseTexture';\nimport { ObjectRenderer } from './ObjectRenderer';\nimport { State } from '../state/State';\nimport { ViewableBuffer } from '../geometry/ViewableBuffer';\n\nimport { checkMaxIfStatementsInShader } from '../shader/utils/checkMaxIfStatementsInShader';\n\nimport { settings } from '@pixi/settings';\nimport { premultiplyBlendMode, premultiplyTint, nextPow2, log2 } from '@pixi/utils';\nimport { ENV } from '@pixi/constants';\n\nimport type { Renderer } from '../Renderer';\nimport type { Shader } from '../shader/Shader';\nimport type { BatchShaderGenerator } from './BatchShaderGenerator';\nimport type { BatchGeometry } from './BatchGeometry';\nimport type { Texture } from '../textures/Texture';\nimport type { BLEND_MODES } from '@pixi/constants';\n\n/**\n * Interface for elements like Sprite, Mesh etc. for batching.\n */\nexport interface IBatchableElement {\n    _texture: Texture;\n    vertexData: Float32Array;\n    indices: Uint16Array | Uint32Array | Array<number>;\n    uvs: Float32Array;\n    worldAlpha: number;\n    _tintRGB: number;\n    blendMode: BLEND_MODES;\n}\n\n/**\n * Renderer dedicated to drawing and batching sprites.\n *\n * This is the default batch renderer. It buffers objects\n * with texture-based geometries and renders them in\n * batches. It uploads multiple textures to the GPU to\n * reduce to the number of draw calls.\n *\n * @class\n * @protected\n * @memberof PIXI\n * @extends PIXI.ObjectRenderer\n */\nexport class AbstractBatchRenderer extends ObjectRenderer\n{\n    public readonly state: State;\n    public size: number;\n    public MAX_TEXTURES: number;\n\n    protected shaderGenerator: BatchShaderGenerator;\n    protected geometryClass: typeof BatchGeometry;\n    protected vertexSize: number;\n    protected _vertexCount: number;\n    protected _indexCount: number;\n    protected _bufferedElements: Array<IBatchableElement>;\n    protected _bufferedTextures: Array<BaseTexture>;\n    protected _bufferSize: number;\n    protected _shader: Shader;\n    protected _flushId: number;\n    protected _aBuffers: Array<ViewableBuffer>;\n    protected _iBuffers: Array<Uint16Array>;\n    protected _dcIndex: number;\n    protected _aIndex: number;\n    protected _iIndex: number;\n    protected _attributeBuffer: ViewableBuffer;\n    protected _indexBuffer: Uint16Array;\n    protected _tempBoundTextures: BaseTexture[];\n\n    private _packedGeometries: Array<BatchGeometry>;\n    private _packedGeometryPoolSize: number;\n\n    /**\n     * This will hook onto the renderer's `contextChange`\n     * and `prerender` signals.\n     *\n     * @param {PIXI.Renderer} renderer - The renderer this works for.\n     */\n    constructor(renderer: Renderer)\n    {\n        super(renderer);\n\n        /**\n         * This is used to generate a shader that can\n         * color each vertex based on a `aTextureId`\n         * attribute that points to an texture in `uSampler`.\n         *\n         * This enables the objects with different textures\n         * to be drawn in the same draw call.\n         *\n         * You can customize your shader by creating your\n         * custom shader generator.\n         *\n         * @member {PIXI.BatchShaderGenerator}\n         * @protected\n         */\n        this.shaderGenerator = null;\n\n        /**\n         * The class that represents the geometry of objects\n         * that are going to be batched with this.\n         *\n         * @member {object}\n         * @default PIXI.BatchGeometry\n         * @protected\n         */\n        this.geometryClass = null;\n\n        /**\n         * Size of data being buffered per vertex in the\n         * attribute buffers (in floats). By default, the\n         * batch-renderer plugin uses 6:\n         *\n         * | aVertexPosition | 2 |\n         * |-----------------|---|\n         * | aTextureCoords  | 2 |\n         * | aColor          | 1 |\n         * | aTextureId      | 1 |\n         *\n         * @member {number}\n         * @readonly\n         */\n        this.vertexSize = null;\n\n        /**\n         * The WebGL state in which this renderer will work.\n         *\n         * @member {PIXI.State}\n         * @readonly\n         */\n        this.state = State.for2d();\n\n        /**\n         * The number of bufferable objects before a flush\n         * occurs automatically.\n         *\n         * @member {number}\n         * @default settings.SPRITE_BATCH_SIZE * 4\n         */\n        this.size = settings.SPRITE_BATCH_SIZE * 4;\n\n        /**\n         * Total count of all vertices used by the currently\n         * buffered objects.\n         *\n         * @member {number}\n         * @private\n         */\n        this._vertexCount = 0;\n\n        /**\n         * Total count of all indices used by the currently\n         * buffered objects.\n         *\n         * @member {number}\n         * @private\n         */\n        this._indexCount = 0;\n\n        /**\n         * Buffer of objects that are yet to be rendered.\n         *\n         * @member {PIXI.DisplayObject[]}\n         * @private\n         */\n        this._bufferedElements = [];\n\n        /**\n         * Data for texture batch builder, helps to save a bit of CPU on a pass.\n         * @type {PIXI.BaseTexture[]}\n         * @private\n         */\n        this._bufferedTextures = [];\n\n        /**\n         * Number of elements that are buffered and are\n         * waiting to be flushed.\n         *\n         * @member {number}\n         * @private\n         */\n        this._bufferSize = 0;\n\n        /**\n         * This shader is generated by `this.shaderGenerator`.\n         *\n         * It is generated specifically to handle the required\n         * number of textures being batched together.\n         *\n         * @member {PIXI.Shader}\n         * @protected\n         */\n        this._shader = null;\n\n        /**\n         * Pool of `this.geometryClass` geometry objects\n         * that store buffers. They are used to pass data\n         * to the shader on each draw call.\n         *\n         * These are never re-allocated again, unless a\n         * context change occurs; however, the pool may\n         * be expanded if required.\n         *\n         * @member {PIXI.Geometry[]}\n         * @private\n         * @see PIXI.AbstractBatchRenderer.contextChange\n         */\n        this._packedGeometries = [];\n\n        /**\n         * Size of `this._packedGeometries`. It can be expanded\n         * if more than `this._packedGeometryPoolSize` flushes\n         * occur in a single frame.\n         *\n         * @member {number}\n         * @private\n         */\n        this._packedGeometryPoolSize = 2;\n\n        /**\n         * A flush may occur multiple times in a single\n         * frame. On iOS devices or when\n         * `settings.CAN_UPLOAD_SAME_BUFFER` is false, the\n         * batch renderer does not upload data to the same\n         * `WebGLBuffer` for performance reasons.\n         *\n         * This is the index into `packedGeometries` that points to\n         * geometry holding the most recent buffers.\n         *\n         * @member {number}\n         * @private\n         */\n        this._flushId = 0;\n\n        /**\n         * Pool of `ViewableBuffer` objects that are sorted in\n         * order of increasing size. The flush method uses\n         * the buffer with the least size above the amount\n         * it requires. These are used for passing attributes.\n         *\n         * The first buffer has a size of 8; each subsequent\n         * buffer has double capacity of its previous.\n         *\n         * @member {PIXI.ViewableBuffer[]}\n         * @private\n         * @see PIXI.AbstractBatchRenderer#getAttributeBuffer\n         */\n        this._aBuffers = {} as any;\n\n        /**\n         * Pool of `Uint16Array` objects that are sorted in\n         * order of increasing size. The flush method uses\n         * the buffer with the least size above the amount\n         * it requires. These are used for passing indices.\n         *\n         * The first buffer has a size of 12; each subsequent\n         * buffer has double capacity of its previous.\n         *\n         * @member {Uint16Array[]}\n         * @private\n         * @see PIXI.AbstractBatchRenderer#getIndexBuffer\n         */\n        this._iBuffers = {} as any;\n\n        /**\n         * Maximum number of textures that can be uploaded to\n         * the GPU under the current context. It is initialized\n         * properly in `this.contextChange`.\n         *\n         * @member {number}\n         * @see PIXI.AbstractBatchRenderer#contextChange\n         * @readonly\n         */\n        this.MAX_TEXTURES = 1;\n\n        this.renderer.on('prerender', this.onPrerender, this);\n        renderer.runners.contextChange.add(this);\n\n        this._dcIndex = 0;\n        this._aIndex = 0;\n        this._iIndex = 0;\n        this._attributeBuffer = null;\n        this._indexBuffer = null;\n        this._tempBoundTextures = [];\n    }\n\n    /**\n     * Handles the `contextChange` signal.\n     *\n     * It calculates `this.MAX_TEXTURES` and allocating the\n     * packed-geometry object pool.\n     */\n    contextChange(): void\n    {\n        const gl = this.renderer.gl;\n\n        if (settings.PREFER_ENV === ENV.WEBGL_LEGACY)\n        {\n            this.MAX_TEXTURES = 1;\n        }\n        else\n        {\n            // step 1: first check max textures the GPU can handle.\n            this.MAX_TEXTURES = Math.min(\n                gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS),\n                settings.SPRITE_MAX_TEXTURES);\n\n            // step 2: check the maximum number of if statements the shader can have too..\n            this.MAX_TEXTURES = checkMaxIfStatementsInShader(\n                this.MAX_TEXTURES, gl);\n        }\n\n        this._shader = this.shaderGenerator.generateShader(this.MAX_TEXTURES);\n\n        // we use the second shader as the first one depending on your browser\n        // may omit aTextureId as it is not used by the shader so is optimized out.\n        for (let i = 0; i < this._packedGeometryPoolSize; i++)\n        {\n            /* eslint-disable max-len */\n            this._packedGeometries[i] = new (this.geometryClass)();\n        }\n\n        this.initFlushBuffers();\n    }\n\n    /**\n     * Makes sure that static and dynamic flush pooled objects have correct dimensions\n     */\n    initFlushBuffers(): void\n    {\n        const {\n            _drawCallPool,\n            _textureArrayPool,\n        } = AbstractBatchRenderer;\n        // max draw calls\n        const MAX_SPRITES = this.size / 4;\n        // max texture arrays\n        const MAX_TA = Math.floor(MAX_SPRITES / this.MAX_TEXTURES) + 1;\n\n        while (_drawCallPool.length < MAX_SPRITES)\n        {\n            _drawCallPool.push(new BatchDrawCall());\n        }\n        while (_textureArrayPool.length < MAX_TA)\n        {\n            _textureArrayPool.push(new BatchTextureArray());\n        }\n        for (let i = 0; i < this.MAX_TEXTURES; i++)\n        {\n            this._tempBoundTextures[i] = null;\n        }\n    }\n\n    /**\n     * Handles the `prerender` signal.\n     *\n     * It ensures that flushes start from the first geometry\n     * object again.\n     */\n    onPrerender(): void\n    {\n        this._flushId = 0;\n    }\n\n    /**\n     * Buffers the \"batchable\" object. It need not be rendered\n     * immediately.\n     *\n     * @param {PIXI.DisplayObject} element - the element to render when\n     *    using this renderer\n     */\n    render(element: IBatchableElement): void\n    {\n        if (!element._texture.valid)\n        {\n            return;\n        }\n\n        if (this._vertexCount + (element.vertexData.length / 2) > this.size)\n        {\n            this.flush();\n        }\n\n        this._vertexCount += element.vertexData.length / 2;\n        this._indexCount += element.indices.length;\n        this._bufferedTextures[this._bufferSize] = element._texture.baseTexture;\n        this._bufferedElements[this._bufferSize++] = element;\n    }\n\n    buildTexturesAndDrawCalls(): void\n    {\n        const {\n            _bufferedTextures: textures,\n            MAX_TEXTURES,\n        } = this;\n        const textureArrays = AbstractBatchRenderer._textureArrayPool;\n        const batch = this.renderer.batch;\n        const boundTextures = this._tempBoundTextures;\n        const touch = this.renderer.textureGC.count;\n\n        let TICK = ++BaseTexture._globalBatch;\n        let countTexArrays = 0;\n        let texArray = textureArrays[0];\n        let start = 0;\n\n        batch.copyBoundTextures(boundTextures, MAX_TEXTURES);\n\n        for (let i = 0; i < this._bufferSize; ++i)\n        {\n            const tex = textures[i];\n\n            textures[i] = null;\n            if (tex._batchEnabled === TICK)\n            {\n                continue;\n            }\n\n            if (texArray.count >= MAX_TEXTURES)\n            {\n                batch.boundArray(texArray, boundTextures, TICK, MAX_TEXTURES);\n                this.buildDrawCalls(texArray, start, i);\n                start = i;\n                texArray = textureArrays[++countTexArrays];\n                ++TICK;\n            }\n\n            tex._batchEnabled = TICK;\n            tex.touched = touch;\n            texArray.elements[texArray.count++] = tex;\n        }\n\n        if (texArray.count > 0)\n        {\n            batch.boundArray(texArray, boundTextures, TICK, MAX_TEXTURES);\n            this.buildDrawCalls(texArray, start, this._bufferSize);\n            ++countTexArrays;\n            ++TICK;\n        }\n\n        // Clean-up\n\n        for (let i = 0; i < boundTextures.length; i++)\n        {\n            boundTextures[i] = null;\n        }\n        BaseTexture._globalBatch = TICK;\n    }\n\n    /**\n     * Populating drawcalls for rendering\n     *\n     * @param {PIXI.BatchTextureArray} texArray\n     * @param {number} start\n     * @param {number} finish\n     */\n    buildDrawCalls(texArray: BatchTextureArray, start: number, finish: number): void\n    {\n        const {\n            _bufferedElements: elements,\n            _attributeBuffer,\n            _indexBuffer,\n            vertexSize,\n        } = this;\n        const drawCalls = AbstractBatchRenderer._drawCallPool;\n\n        let dcIndex = this._dcIndex;\n        let aIndex = this._aIndex;\n        let iIndex = this._iIndex;\n\n        let drawCall = drawCalls[dcIndex];\n\n        drawCall.start = this._iIndex;\n        drawCall.texArray = texArray;\n\n        for (let i = start; i < finish; ++i)\n        {\n            const sprite = elements[i];\n            const tex = sprite._texture.baseTexture;\n            const spriteBlendMode = premultiplyBlendMode[\n                tex.alphaMode ? 1 : 0][sprite.blendMode];\n\n            elements[i] = null;\n\n            if (start < i && drawCall.blend !== spriteBlendMode)\n            {\n                drawCall.size = iIndex - drawCall.start;\n                start = i;\n                drawCall = drawCalls[++dcIndex];\n                drawCall.texArray = texArray;\n                drawCall.start = iIndex;\n            }\n\n            this.packInterleavedGeometry(sprite, _attributeBuffer, _indexBuffer, aIndex, iIndex);\n            aIndex += sprite.vertexData.length / 2 * vertexSize;\n            iIndex += sprite.indices.length;\n\n            drawCall.blend = spriteBlendMode;\n        }\n\n        if (start < finish)\n        {\n            drawCall.size = iIndex - drawCall.start;\n            ++dcIndex;\n        }\n\n        this._dcIndex = dcIndex;\n        this._aIndex = aIndex;\n        this._iIndex = iIndex;\n    }\n\n    /**\n     * Bind textures for current rendering\n     *\n     * @param {PIXI.BatchTextureArray} texArray\n     */\n    bindAndClearTexArray(texArray: BatchTextureArray): void\n    {\n        const textureSystem = this.renderer.texture;\n\n        for (let j = 0; j < texArray.count; j++)\n        {\n            textureSystem.bind(texArray.elements[j], texArray.ids[j]);\n            texArray.elements[j] = null;\n        }\n        texArray.count = 0;\n    }\n\n    updateGeometry(): void\n    {\n        const {\n            _packedGeometries: packedGeometries,\n            _attributeBuffer: attributeBuffer,\n            _indexBuffer: indexBuffer,\n        } = this;\n\n        if (!settings.CAN_UPLOAD_SAME_BUFFER)\n        { /* Usually on iOS devices, where the browser doesn't\n            like uploads to the same buffer in a single frame. */\n            if (this._packedGeometryPoolSize <= this._flushId)\n            {\n                this._packedGeometryPoolSize++;\n                packedGeometries[this._flushId] = new (this.geometryClass)();\n            }\n\n            packedGeometries[this._flushId]._buffer.update(attributeBuffer.rawBinaryData);\n            packedGeometries[this._flushId]._indexBuffer.update(indexBuffer);\n\n            this.renderer.geometry.bind(packedGeometries[this._flushId]);\n            this.renderer.geometry.updateBuffers();\n            this._flushId++;\n        }\n        else\n        {\n            // lets use the faster option, always use buffer number 0\n            packedGeometries[this._flushId]._buffer.update(attributeBuffer.rawBinaryData);\n            packedGeometries[this._flushId]._indexBuffer.update(indexBuffer);\n\n            this.renderer.geometry.updateBuffers();\n        }\n    }\n\n    drawBatches(): void\n    {\n        const dcCount = this._dcIndex;\n        const { gl, state: stateSystem } = this.renderer;\n        const drawCalls = AbstractBatchRenderer._drawCallPool;\n\n        let curTexArray = null;\n\n        // Upload textures and do the draw calls\n        for (let i = 0; i < dcCount; i++)\n        {\n            const { texArray, type, size, start, blend } = drawCalls[i];\n\n            if (curTexArray !== texArray)\n            {\n                curTexArray = texArray;\n                this.bindAndClearTexArray(texArray);\n            }\n\n            this.state.blendMode = blend;\n            stateSystem.set(this.state);\n            gl.drawElements(type, size, gl.UNSIGNED_SHORT, start * 2);\n        }\n    }\n\n    /**\n     * Renders the content _now_ and empties the current batch.\n     */\n    flush(): void\n    {\n        if (this._vertexCount === 0)\n        {\n            return;\n        }\n\n        this._attributeBuffer = this.getAttributeBuffer(this._vertexCount);\n        this._indexBuffer = this.getIndexBuffer(this._indexCount);\n        this._aIndex = 0;\n        this._iIndex = 0;\n        this._dcIndex = 0;\n\n        this.buildTexturesAndDrawCalls();\n        this.updateGeometry();\n        this.drawBatches();\n\n        // reset elements buffer for the next flush\n        this._bufferSize = 0;\n        this._vertexCount = 0;\n        this._indexCount = 0;\n    }\n\n    /**\n     * Starts a new sprite batch.\n     */\n    start(): void\n    {\n        this.renderer.state.set(this.state);\n\n        this.renderer.shader.bind(this._shader);\n\n        if (settings.CAN_UPLOAD_SAME_BUFFER)\n        {\n            // bind buffer #0, we don't need others\n            this.renderer.geometry.bind(this._packedGeometries[this._flushId]);\n        }\n    }\n\n    /**\n     * Stops and flushes the current batch.\n     */\n    stop(): void\n    {\n        this.flush();\n    }\n\n    /**\n     * Destroys this `AbstractBatchRenderer`. It cannot be used again.\n     */\n    destroy(): void\n    {\n        for (let i = 0; i < this._packedGeometryPoolSize; i++)\n        {\n            if (this._packedGeometries[i])\n            {\n                this._packedGeometries[i].destroy();\n            }\n        }\n\n        this.renderer.off('prerender', this.onPrerender, this);\n\n        this._aBuffers = null;\n        this._iBuffers = null;\n        this._packedGeometries = null;\n        this._attributeBuffer = null;\n        this._indexBuffer = null;\n\n        if (this._shader)\n        {\n            this._shader.destroy();\n            this._shader = null;\n        }\n\n        super.destroy();\n    }\n\n    /**\n     * Fetches an attribute buffer from `this._aBuffers` that\n     * can hold atleast `size` floats.\n     *\n     * @param {number} size - minimum capacity required\n     * @return {ViewableBuffer} - buffer than can hold atleast `size` floats\n     * @private\n     */\n    getAttributeBuffer(size: number): ViewableBuffer\n    {\n        // 8 vertices is enough for 2 quads\n        const roundedP2 = nextPow2(Math.ceil(size / 8));\n        const roundedSizeIndex = log2(roundedP2);\n        const roundedSize = roundedP2 * 8;\n\n        if (this._aBuffers.length <= roundedSizeIndex)\n        {\n            this._iBuffers.length = roundedSizeIndex + 1;\n        }\n\n        let buffer = this._aBuffers[roundedSize];\n\n        if (!buffer)\n        {\n            this._aBuffers[roundedSize] = buffer = new ViewableBuffer(roundedSize * this.vertexSize * 4);\n        }\n\n        return buffer;\n    }\n\n    /**\n     * Fetches an index buffer from `this._iBuffers` that can\n     * have at least `size` capacity.\n     *\n     * @param {number} size - minimum required capacity\n     * @return {Uint16Array} - buffer that can fit `size`\n     *    indices.\n     * @private\n     */\n    getIndexBuffer(size: number): Uint16Array\n    {\n        // 12 indices is enough for 2 quads\n        const roundedP2 = nextPow2(Math.ceil(size / 12));\n        const roundedSizeIndex = log2(roundedP2);\n        const roundedSize = roundedP2 * 12;\n\n        if (this._iBuffers.length <= roundedSizeIndex)\n        {\n            this._iBuffers.length = roundedSizeIndex + 1;\n        }\n\n        let buffer = this._iBuffers[roundedSizeIndex];\n\n        if (!buffer)\n        {\n            this._iBuffers[roundedSizeIndex] = buffer = new Uint16Array(roundedSize);\n        }\n\n        return buffer;\n    }\n\n    /**\n     * Takes the four batching parameters of `element`, interleaves\n     * and pushes them into the batching attribute/index buffers given.\n     *\n     * It uses these properties: `vertexData` `uvs`, `textureId` and\n     * `indicies`. It also uses the \"tint\" of the base-texture, if\n     * present.\n     *\n     * @param {PIXI.Sprite} element - element being rendered\n     * @param {PIXI.ViewableBuffer} attributeBuffer - attribute buffer.\n     * @param {Uint16Array} indexBuffer - index buffer\n     * @param {number} aIndex - number of floats already in the attribute buffer\n     * @param {number} iIndex - number of indices already in `indexBuffer`\n     */\n    packInterleavedGeometry(element: IBatchableElement, attributeBuffer: ViewableBuffer, indexBuffer: Uint16Array,\n        aIndex: number, iIndex: number): void\n    {\n        const {\n            uint32View,\n            float32View,\n        } = attributeBuffer;\n\n        const packedVertices = aIndex / this.vertexSize;\n        const uvs = element.uvs;\n        const indicies = element.indices;\n        const vertexData = element.vertexData;\n        const textureId = element._texture.baseTexture._batchLocation;\n\n        const alpha = Math.min(element.worldAlpha, 1.0);\n        const argb = (alpha < 1.0\n            && element._texture.baseTexture.alphaMode)\n            ? premultiplyTint(element._tintRGB, alpha)\n            : element._tintRGB + (alpha * 255 << 24);\n\n        // lets not worry about tint! for now..\n        for (let i = 0; i < vertexData.length; i += 2)\n        {\n            float32View[aIndex++] = vertexData[i];\n            float32View[aIndex++] = vertexData[i + 1];\n            float32View[aIndex++] = uvs[i];\n            float32View[aIndex++] = uvs[i + 1];\n            uint32View[aIndex++] = argb;\n            float32View[aIndex++] = textureId;\n        }\n\n        for (let i = 0; i < indicies.length; i++)\n        {\n            indexBuffer[iIndex++] = packedVertices + indicies[i];\n        }\n    }\n\n    /**\n     * Pool of `BatchDrawCall` objects that `flush` used\n     * to create \"batches\" of the objects being rendered.\n     *\n     * These are never re-allocated again.\n     * Shared between all batch renderers because it can be only one \"flush\" working at the moment.\n     *\n     * @static\n     * @member {PIXI.BatchDrawCall[]}\n     */\n    static _drawCallPool: Array<BatchDrawCall> = [];\n\n    /**\n     * Pool of `BatchDrawCall` objects that `flush` used\n     * to create \"batches\" of the objects being rendered.\n     *\n     * These are never re-allocated again.\n     * Shared between all batch renderers because it can be only one \"flush\" working at the moment.\n     *\n     * @static\n     * @member {PIXI.BatchTextureArray[]}\n     */\n    static _textureArrayPool: Array<BatchTextureArray> = [];\n}\n","import { Shader } from '../shader/Shader';\nimport { Program } from '../shader/Program';\nimport { UniformGroup } from '../shader/UniformGroup';\nimport { Matrix } from '@pixi/math';\n\n/**\n * Helper that generates batching multi-texture shader. Use it with your new BatchRenderer\n *\n * @class\n * @memberof PIXI\n */\nexport class BatchShaderGenerator\n{\n    public vertexSrc: string;\n    public fragTemplate: string;\n    programCache: {[key: number]: Program};\n    defaultGroupCache: {[key: number]: UniformGroup};\n    /**\n     * @param {string} vertexSrc - Vertex shader\n     * @param {string} fragTemplate - Fragment shader template\n     */\n    constructor(vertexSrc: string, fragTemplate: string)\n    {\n        /**\n         * Reference to the vertex shader source.\n         *\n         * @member {string}\n         */\n        this.vertexSrc = vertexSrc;\n\n        /**\n         * Reference to the fragement shader template. Must contain \"%count%\" and \"%forloop%\".\n         *\n         * @member {string}\n         */\n        this.fragTemplate = fragTemplate;\n\n        this.programCache = {};\n        this.defaultGroupCache = {};\n\n        if (fragTemplate.indexOf('%count%') < 0)\n        {\n            throw new Error('Fragment template must contain \"%count%\".');\n        }\n\n        if (fragTemplate.indexOf('%forloop%') < 0)\n        {\n            throw new Error('Fragment template must contain \"%forloop%\".');\n        }\n    }\n\n    generateShader(maxTextures: number): Shader\n    {\n        if (!this.programCache[maxTextures])\n        {\n            const sampleValues = new Int32Array(maxTextures);\n\n            for (let i = 0; i < maxTextures; i++)\n            {\n                sampleValues[i] = i;\n            }\n\n            this.defaultGroupCache[maxTextures] = UniformGroup.from({ uSamplers: sampleValues }, true);\n\n            let fragmentSrc = this.fragTemplate;\n\n            fragmentSrc = fragmentSrc.replace(/%count%/gi, `${maxTextures}`);\n            fragmentSrc = fragmentSrc.replace(/%forloop%/gi, this.generateSampleSrc(maxTextures));\n\n            this.programCache[maxTextures] = new Program(this.vertexSrc, fragmentSrc);\n        }\n\n        const uniforms = {\n            tint: new Float32Array([1, 1, 1, 1]),\n            translationMatrix: new Matrix(),\n            default: this.defaultGroupCache[maxTextures],\n        };\n\n        return new Shader(this.programCache[maxTextures], uniforms);\n    }\n\n    generateSampleSrc(maxTextures: number): string\n    {\n        let src = '';\n\n        src += '\\n';\n        src += '\\n';\n\n        for (let i = 0; i < maxTextures; i++)\n        {\n            if (i > 0)\n            {\n                src += '\\nelse ';\n            }\n\n            if (i < maxTextures - 1)\n            {\n                src += `if(vTextureId < ${i}.5)`;\n            }\n\n            src += '\\n{';\n            src += `\\n\\tcolor = texture2D(uSamplers[${i}], vTextureCoord);`;\n            src += '\\n}';\n        }\n\n        src += '\\n';\n        src += '\\n';\n\n        return src;\n    }\n}\n","import { TYPES } from '@pixi/constants';\nimport { Geometry } from '../geometry/Geometry';\nimport { Buffer } from '../geometry/Buffer';\n\n/**\n * Geometry used to batch standard PIXI content (e.g. Mesh, Sprite, Graphics objects).\n *\n * @class\n * @memberof PIXI\n */\nexport class BatchGeometry extends Geometry\n{\n    _buffer: Buffer;\n    _indexBuffer: Buffer;\n    /**\n     * @param {boolean} [_static=false] - Optimization flag, where `false`\n     *        is updated every frame, `true` doesn't change frame-to-frame.\n     */\n    constructor(_static = false)\n    {\n        super();\n\n        /**\n         * Buffer used for position, color, texture IDs\n         *\n         * @member {PIXI.Buffer}\n         * @protected\n         */\n        this._buffer = new Buffer(null, _static, false);\n\n        /**\n         * Index buffer data\n         *\n         * @member {PIXI.Buffer}\n         * @protected\n         */\n        this._indexBuffer = new Buffer(null, _static, true);\n\n        this.addAttribute('aVertexPosition', this._buffer, 2, false, TYPES.FLOAT)\n            .addAttribute('aTextureCoord', this._buffer, 2, false, TYPES.FLOAT)\n            .addAttribute('aColor', this._buffer, 4, true, TYPES.UNSIGNED_BYTE)\n            .addAttribute('aTextureId', this._buffer, 1, true, TYPES.FLOAT)\n            .addIndex(this._indexBuffer);\n    }\n}\n","import { BatchShaderGenerator } from './BatchShaderGenerator';\nimport { BatchGeometry } from './BatchGeometry';\nimport { AbstractBatchRenderer } from './AbstractBatchRenderer';\n\nimport defaultVertex from './texture.vert';\nimport defaultFragment from './texture.frag';\n\nimport type { Renderer } from '../Renderer';\n\nexport interface IBatchFactoryOptions\n{\n    vertex?: string;\n    fragment?: string;\n    geometryClass?: typeof BatchGeometry;\n    vertexSize?: number;\n}\n\n/**\n * @class\n * @memberof PIXI\n * @hideconstructor\n */\nexport class BatchPluginFactory\n{\n    /**\n     * Create a new BatchRenderer plugin for Renderer. this convenience can provide an easy way\n     * to extend BatchRenderer with all the necessary pieces.\n     * @example\n     * const fragment = `\n     * varying vec2 vTextureCoord;\n     * varying vec4 vColor;\n     * varying float vTextureId;\n     * uniform sampler2D uSamplers[%count%];\n     *\n     * void main(void){\n     *     vec4 color;\n     *     %forloop%\n     *     gl_FragColor = vColor * vec4(color.a - color.rgb, color.a);\n     * }\n     * `;\n     * const InvertBatchRenderer = PIXI.BatchPluginFactory.create({ fragment });\n     * PIXI.Renderer.registerPlugin('invert', InvertBatchRenderer);\n     * const sprite = new PIXI.Sprite();\n     * sprite.pluginName = 'invert';\n     *\n     * @static\n     * @param {object} [options]\n     * @param {string} [options.vertex=PIXI.BatchPluginFactory.defaultVertexSrc] - Vertex shader source\n     * @param {string} [options.fragment=PIXI.BatchPluginFactory.defaultFragmentTemplate] - Fragment shader template\n     * @param {number} [options.vertexSize=6] - Vertex size\n     * @param {object} [options.geometryClass=PIXI.BatchGeometry]\n     * @return {*} New batch renderer plugin\n     */\n    static create(options?: IBatchFactoryOptions): typeof AbstractBatchRenderer\n    {\n        const { vertex, fragment, vertexSize, geometryClass } = Object.assign({\n            vertex: defaultVertex,\n            fragment: defaultFragment,\n            geometryClass: BatchGeometry,\n            vertexSize: 6,\n        }, options);\n\n        return class BatchPlugin extends AbstractBatchRenderer\n        {\n            constructor(renderer: Renderer)\n            {\n                super(renderer);\n\n                this.shaderGenerator = new BatchShaderGenerator(vertex, fragment);\n                this.geometryClass = geometryClass;\n                this.vertexSize = vertexSize;\n            }\n        };\n    }\n\n    /**\n     * The default vertex shader source\n     *\n     * @static\n     * @type {string}\n     * @constant\n     */\n    static get defaultVertexSrc(): string\n    {\n        return defaultVertex;\n    }\n\n    /**\n     * The default fragment shader source\n     *\n     * @static\n     * @type {string}\n     * @constant\n     */\n    static get defaultFragmentTemplate(): string\n    {\n        return defaultFragment;\n    }\n}\n\n// Setup the default BatchRenderer plugin, this is what\n// we'll actually export at the root level\nexport const BatchRenderer = BatchPluginFactory.create();\n","import { Rectangle } from '@pixi/math';\n\nimport type { IPointData, Transform, Matrix } from '@pixi/math';\n\n/**\n * 'Builder' pattern for bounds rectangles.\n *\n * This could be called an Axis-Aligned Bounding Box.\n * It is not an actual shape. It is a mutable thing; no 'EMPTY' or those kind of problems.\n *\n * @class\n * @memberof PIXI\n */\nexport class Bounds\n{\n    public minX: number;\n    public minY: number;\n    public maxX: number;\n    public maxY: number;\n    public rect: Rectangle;\n    public updateID: number;\n\n    constructor()\n    {\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.minX = Infinity;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.minY = Infinity;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.maxX = -Infinity;\n\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.maxY = -Infinity;\n\n        this.rect = null;\n\n        /**\n         * It is updated to _boundsID of corresponding object to keep bounds in sync with content.\n         * Updated from outside, thus public modifier.\n         *\n         * @member {number}\n         * @public\n         */\n        this.updateID = -1;\n    }\n\n    /**\n     * Checks if bounds are empty.\n     *\n     * @return {boolean} True if empty.\n     */\n    isEmpty(): boolean\n    {\n        return this.minX > this.maxX || this.minY > this.maxY;\n    }\n\n    /**\n     * Clears the bounds and resets.\n     *\n     */\n    clear(): void\n    {\n        this.minX = Infinity;\n        this.minY = Infinity;\n        this.maxX = -Infinity;\n        this.maxY = -Infinity;\n    }\n\n    /**\n     * Can return Rectangle.EMPTY constant, either construct new rectangle, either use your rectangle\n     * It is not guaranteed that it will return tempRect\n     *\n     * @param {PIXI.Rectangle} rect - temporary object will be used if AABB is not empty\n     * @returns {PIXI.Rectangle} A rectangle of the bounds\n     */\n    getRectangle(rect?: Rectangle): Rectangle\n    {\n        if (this.minX > this.maxX || this.minY > this.maxY)\n        {\n            return Rectangle.EMPTY;\n        }\n\n        rect = rect || new Rectangle(0, 0, 1, 1);\n\n        rect.x = this.minX;\n        rect.y = this.minY;\n        rect.width = this.maxX - this.minX;\n        rect.height = this.maxY - this.minY;\n\n        return rect;\n    }\n\n    /**\n     * This function should be inlined when its possible.\n     *\n     * @param {PIXI.IPointData} point - The point to add.\n     */\n    addPoint(point: IPointData): void\n    {\n        this.minX = Math.min(this.minX, point.x);\n        this.maxX = Math.max(this.maxX, point.x);\n        this.minY = Math.min(this.minY, point.y);\n        this.maxY = Math.max(this.maxY, point.y);\n    }\n\n    /**\n     * Adds a quad, not transformed\n     *\n     * @param {Float32Array} vertices - The verts to add.\n     */\n    addQuad(vertices: Float32Array): void\n    {\n        let minX = this.minX;\n        let minY = this.minY;\n        let maxX = this.maxX;\n        let maxY = this.maxY;\n\n        let x = vertices[0];\n        let y = vertices[1];\n\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        x = vertices[2];\n        y = vertices[3];\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        x = vertices[4];\n        y = vertices[5];\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        x = vertices[6];\n        y = vertices[7];\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        this.minX = minX;\n        this.minY = minY;\n        this.maxX = maxX;\n        this.maxY = maxY;\n    }\n\n    /**\n     * Adds sprite frame, transformed.\n     *\n     * @param {PIXI.Transform} transform - transform to apply\n     * @param {number} x0 - left X of frame\n     * @param {number} y0 - top Y of frame\n     * @param {number} x1 - right X of frame\n     * @param {number} y1 - bottom Y of frame\n     */\n    addFrame(transform: Transform, x0: number, y0: number, x1: number, y1: number): void\n    {\n        this.addFrameMatrix(transform.worldTransform, x0, y0, x1, y1);\n    }\n\n    /**\n     * Adds sprite frame, multiplied by matrix\n     *\n     * @param {PIXI.Matrix} matrix - matrix to apply\n     * @param {number} x0 - left X of frame\n     * @param {number} y0 - top Y of frame\n     * @param {number} x1 - right X of frame\n     * @param {number} y1 - bottom Y of frame\n     */\n    addFrameMatrix(matrix: Matrix, x0: number, y0: number, x1: number, y1: number): void\n    {\n        const a = matrix.a;\n        const b = matrix.b;\n        const c = matrix.c;\n        const d = matrix.d;\n        const tx = matrix.tx;\n        const ty = matrix.ty;\n\n        let minX = this.minX;\n        let minY = this.minY;\n        let maxX = this.maxX;\n        let maxY = this.maxY;\n\n        let x = (a * x0) + (c * y0) + tx;\n        let y = (b * x0) + (d * y0) + ty;\n\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        x = (a * x1) + (c * y0) + tx;\n        y = (b * x1) + (d * y0) + ty;\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        x = (a * x0) + (c * y1) + tx;\n        y = (b * x0) + (d * y1) + ty;\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        x = (a * x1) + (c * y1) + tx;\n        y = (b * x1) + (d * y1) + ty;\n        minX = x < minX ? x : minX;\n        minY = y < minY ? y : minY;\n        maxX = x > maxX ? x : maxX;\n        maxY = y > maxY ? y : maxY;\n\n        this.minX = minX;\n        this.minY = minY;\n        this.maxX = maxX;\n        this.maxY = maxY;\n    }\n\n    /**\n     * Adds screen vertices from array\n     *\n     * @param {Float32Array} vertexData - calculated vertices\n     * @param {number} beginOffset - begin offset\n     * @param {number} endOffset - end offset, excluded\n     */\n    addVertexData(vertexData: Float32Array, beginOffset: number, endOffset: number): void\n    {\n        let minX = this.minX;\n        let minY = this.minY;\n        let maxX = this.maxX;\n        let maxY = this.maxY;\n\n        for (let i = beginOffset; i < endOffset; i += 2)\n        {\n            const x = vertexData[i];\n            const y = vertexData[i + 1];\n\n            minX = x < minX ? x : minX;\n            minY = y < minY ? y : minY;\n            maxX = x > maxX ? x : maxX;\n            maxY = y > maxY ? y : maxY;\n        }\n\n        this.minX = minX;\n        this.minY = minY;\n        this.maxX = maxX;\n        this.maxY = maxY;\n    }\n\n    /**\n     * Add an array of mesh vertices\n     *\n     * @param {PIXI.Transform} transform - mesh transform\n     * @param {Float32Array} vertices - mesh coordinates in array\n     * @param {number} beginOffset - begin offset\n     * @param {number} endOffset - end offset, excluded\n     */\n    addVertices(transform: Transform, vertices: Float32Array, beginOffset: number, endOffset: number): void\n    {\n        this.addVerticesMatrix(transform.worldTransform, vertices, beginOffset, endOffset);\n    }\n\n    /**\n     * Add an array of mesh vertices.\n     *\n     * @param {PIXI.Matrix} matrix - mesh matrix\n     * @param {Float32Array} vertices - mesh coordinates in array\n     * @param {number} beginOffset - begin offset\n     * @param {number} endOffset - end offset, excluded\n     * @param {number} [padX=0] - x padding\n     * @param {number} [padY=0] - y padding\n     */\n    addVerticesMatrix(matrix: Matrix, vertices: Float32Array, beginOffset: number,\n        endOffset: number, padX = 0, padY = padX): void\n    {\n        const a = matrix.a;\n        const b = matrix.b;\n        const c = matrix.c;\n        const d = matrix.d;\n        const tx = matrix.tx;\n        const ty = matrix.ty;\n\n        let minX = this.minX;\n        let minY = this.minY;\n        let maxX = this.maxX;\n        let maxY = this.maxY;\n\n        for (let i = beginOffset; i < endOffset; i += 2)\n        {\n            const rawX = vertices[i];\n            const rawY = vertices[i + 1];\n            const x = (a * rawX) + (c * rawY) + tx;\n            const y = (d * rawY) + (b * rawX) + ty;\n\n            minX = Math.min(minX, x - padX);\n            maxX = Math.max(maxX, x + padX);\n            minY = Math.min(minY, y - padY);\n            maxY = Math.max(maxY, y + padY);\n        }\n\n        this.minX = minX;\n        this.minY = minY;\n        this.maxX = maxX;\n        this.maxY = maxY;\n    }\n\n    /**\n     * Adds other Bounds.\n     *\n     * @param {PIXI.Bounds} bounds - The Bounds to be added\n     */\n    addBounds(bounds: Bounds): void\n    {\n        const minX = this.minX;\n        const minY = this.minY;\n        const maxX = this.maxX;\n        const maxY = this.maxY;\n\n        this.minX = bounds.minX < minX ? bounds.minX : minX;\n        this.minY = bounds.minY < minY ? bounds.minY : minY;\n        this.maxX = bounds.maxX > maxX ? bounds.maxX : maxX;\n        this.maxY = bounds.maxY > maxY ? bounds.maxY : maxY;\n    }\n\n    /**\n     * Adds other Bounds, masked with Bounds.\n     *\n     * @param {PIXI.Bounds} bounds - The Bounds to be added.\n     * @param {PIXI.Bounds} mask - TODO\n     */\n    addBoundsMask(bounds: Bounds, mask: Bounds): void\n    {\n        const _minX = bounds.minX > mask.minX ? bounds.minX : mask.minX;\n        const _minY = bounds.minY > mask.minY ? bounds.minY : mask.minY;\n        const _maxX = bounds.maxX < mask.maxX ? bounds.maxX : mask.maxX;\n        const _maxY = bounds.maxY < mask.maxY ? bounds.maxY : mask.maxY;\n\n        if (_minX <= _maxX && _minY <= _maxY)\n        {\n            const minX = this.minX;\n            const minY = this.minY;\n            const maxX = this.maxX;\n            const maxY = this.maxY;\n\n            this.minX = _minX < minX ? _minX : minX;\n            this.minY = _minY < minY ? _minY : minY;\n            this.maxX = _maxX > maxX ? _maxX : maxX;\n            this.maxY = _maxY > maxY ? _maxY : maxY;\n        }\n    }\n\n    /**\n     * Adds other Bounds, multiplied by matrix. Bounds shouldn't be empty.\n     *\n     * @param {PIXI.Bounds} bounds - other bounds\n     * @param {PIXI.Matrix} matrix - multiplicator\n     */\n    addBoundsMatrix(bounds: Bounds, matrix: Matrix): void\n    {\n        this.addFrameMatrix(matrix, bounds.minX, bounds.minY, bounds.maxX, bounds.maxY);\n    }\n\n    /**\n     * Adds other Bounds, masked with Rectangle.\n     *\n     * @param {PIXI.Bounds} bounds - TODO\n     * @param {PIXI.Rectangle} area - TODO\n     */\n    addBoundsArea(bounds: Bounds, area: Rectangle): void\n    {\n        const _minX = bounds.minX > area.x ? bounds.minX : area.x;\n        const _minY = bounds.minY > area.y ? bounds.minY : area.y;\n        const _maxX = bounds.maxX < area.x + area.width ? bounds.maxX : (area.x + area.width);\n        const _maxY = bounds.maxY < area.y + area.height ? bounds.maxY : (area.y + area.height);\n\n        if (_minX <= _maxX && _minY <= _maxY)\n        {\n            const minX = this.minX;\n            const minY = this.minY;\n            const maxX = this.maxX;\n            const maxY = this.maxY;\n\n            this.minX = _minX < minX ? _minX : minX;\n            this.minY = _minY < minY ? _minY : minY;\n            this.maxX = _maxX > maxX ? _maxX : maxX;\n            this.maxY = _maxY > maxY ? _maxY : maxY;\n        }\n    }\n\n    /**\n     * Pads bounds object, making it grow in all directions.\n     * If paddingY is omitted, both paddingX and paddingY will be set to paddingX.\n     *\n     * @param {number} [paddingX=0] - The horizontal padding amount.\n     * @param {number} [paddingY=0] - The vertical padding amount.\n     */\n    pad(paddingX = 0, paddingY = paddingX): void\n    {\n        if (!this.isEmpty())\n        {\n            this.minX -= paddingX;\n            this.maxX += paddingX;\n            this.minY -= paddingY;\n            this.maxY += paddingY;\n        }\n    }\n\n    /**\n     * Adds padded frame. (x0, y0) should be strictly less than (x1, y1)\n     *\n     * @param {number} x0 - left X of frame\n     * @param {number} y0 - top Y of frame\n     * @param {number} x1 - right X of frame\n     * @param {number} y1 - bottom Y of frame\n     * @param {number} padX - padding X\n     * @param {number} padY - padding Y\n     */\n    addFramePad(x0: number, y0: number, x1: number, y1: number, padX: number, padY: number): void\n    {\n        x0 -= padX;\n        y0 -= padY;\n        x1 += padX;\n        y1 += padY;\n\n        this.minX = this.minX < x0 ? this.minX : x0;\n        this.maxX = this.maxX > x1 ? this.maxX : x1;\n        this.minY = this.minY < y0 ? this.minY : y0;\n        this.maxY = this.maxY > y1 ? this.maxY : y1;\n    }\n}\n","import { DEG_TO_RAD, Matrix, Point, RAD_TO_DEG, Rectangle, Transform } from '@pixi/math';\nimport { EventEmitter } from '@pixi/utils';\nimport { Container } from './Container';\nimport { Bounds } from './Bounds';\n\nimport type { Filter, MaskData, Renderer } from '@pixi/core';\nimport type { IPointData, ObservablePoint } from '@pixi/math';\nimport type { Dict } from '@pixi/utils';\n\nexport interface IDestroyOptions {\n    children?: boolean;\n    texture?: boolean;\n    baseTexture?: boolean;\n}\n\nexport interface DisplayObject extends GlobalMixins.DisplayObject, EventEmitter {}\n\n/**\n * The base class for all objects that are rendered on the screen.\n *\n * This is an abstract class and should not be used on its own; rather it should b e extended.\n *\n * @class\n * @extends PIXI.utils.EventEmitter\n * @memberof PIXI\n */\nexport abstract class DisplayObject extends EventEmitter\n{\n    abstract sortDirty: boolean;\n\n    public parent: DisplayObject;\n    public worldAlpha: number;\n    public transform: Transform;\n    public alpha: number;\n    public visible: boolean;\n    public renderable: boolean;\n    public filterArea: Rectangle;\n    public filters: Filter[];\n    public isSprite: boolean;\n    public isMask: boolean;\n    public _lastSortedIndex: number;\n    public _mask: Container|MaskData;\n    public _bounds: Bounds;\n    public _localBounds: Bounds;\n\n    protected _zIndex: number;\n    protected _enabledFilters: Filter[];\n    protected _boundsID: number;\n    protected _boundsRect: Rectangle;\n    protected _localBoundsRect: Rectangle;\n    protected _destroyed: boolean;\n\n    private tempDisplayObjectParent: TemporaryDisplayObject;\n    public displayObjectUpdateTransform: () => void;\n\n    /**\n     * Mixes all enumerable properties and methods from a source object to DisplayObject.\n     *\n     * @param {object} source - The source of properties and methods to mix in.\n     */\n    static mixin(source: Dict<any>): void\n    {\n        // in ES8/ES2017, this would be really easy:\n        // Object.defineProperties(DisplayObject.prototype, Object.getOwnPropertyDescriptors(source));\n\n        // get all the enumerable property keys\n        const keys = Object.keys(source);\n\n        // loop through properties\n        for (let i = 0; i < keys.length; ++i)\n        {\n            const propertyName = keys[i];\n\n            // Set the property using the property descriptor - this works for accessors and normal value properties\n            Object.defineProperty(\n                DisplayObject.prototype,\n                propertyName,\n                Object.getOwnPropertyDescriptor(source, propertyName)\n            );\n        }\n    }\n\n    constructor()\n    {\n        super();\n\n        this.tempDisplayObjectParent = null;\n\n        // TODO: need to create Transform from factory\n        /**\n         * World transform and local transform of this object.\n         * This will become read-only later, please do not assign anything there unless you know what are you doing.\n         *\n         * @member {PIXI.Transform}\n         */\n        this.transform = new Transform();\n\n        /**\n         * The opacity of the object.\n         *\n         * @member {number}\n         */\n        this.alpha = 1;\n\n        /**\n         * The visibility of the object. If false the object will not be drawn, and\n         * the updateTransform function will not be called.\n         *\n         * Only affects recursive calls from parent. You can ask for bounds or call updateTransform manually.\n         *\n         * @member {boolean}\n         */\n        this.visible = true;\n\n        /**\n         * Can this object be rendered, if false the object will not be drawn but the updateTransform\n         * methods will still be called.\n         *\n         * Only affects recursive calls from parent. You can ask for bounds manually.\n         *\n         * @member {boolean}\n         */\n        this.renderable = true;\n\n        /**\n         * The display object container that contains this display object.\n         *\n         * @member {PIXI.Container}\n         */\n        this.parent = null;\n\n        /**\n         * The multiplied alpha of the displayObject.\n         *\n         * @member {number}\n         * @readonly\n         */\n        this.worldAlpha = 1;\n\n        /**\n         * Which index in the children array the display component was before the previous zIndex sort.\n         * Used by containers to help sort objects with the same zIndex, by using previous array index as the decider.\n         *\n         * @member {number}\n         * @protected\n         */\n        this._lastSortedIndex = 0;\n\n        /**\n         * The zIndex of the displayObject.\n         * A higher value will mean it will be rendered on top of other displayObjects within the same container.\n         *\n         * @member {number}\n         * @protected\n         */\n        this._zIndex = 0;\n\n        /**\n         * The area the filter is applied to. This is used as more of an optimization\n         * rather than figuring out the dimensions of the displayObject each frame you can set this rectangle.\n         *\n         * Also works as an interaction mask.\n         *\n         * @member {?PIXI.Rectangle}\n         */\n        this.filterArea = null;\n\n        /**\n         * Sets the filters for the displayObject.\n         * * IMPORTANT: This is a WebGL only feature and will be ignored by the canvas renderer.\n         * To remove filters simply set this property to `'null'`.\n         *\n         * @member {?PIXI.Filter[]}\n         */\n        this.filters = null;\n\n        /**\n         * Currently enabled filters\n         * @member {PIXI.Filter[]}\n         * @protected\n         */\n        this._enabledFilters = null;\n\n        /**\n         * The bounds object, this is used to calculate and store the bounds of the displayObject.\n         *\n         * @member {PIXI.Bounds}\n         */\n        this._bounds = new Bounds();\n\n        /**\n         * Local bounds object, swapped with `_bounds` when using `getLocalBounds()`.\n         *\n         * @member {PIXI.Bounds}\n         */\n        this._localBounds = null;\n\n        /**\n         * Flags the cached bounds as dirty.\n         *\n         * @member {number}\n         * @protected\n         */\n        this._boundsID = 0;\n\n        /**\n         * Cache of this display-object's bounds-rectangle.\n         *\n         * @member {PIXI.Bounds}\n         * @protected\n         */\n        this._boundsRect = null;\n\n        /**\n         * Cache of this display-object's local-bounds rectangle.\n         *\n         * @member {PIXI.Bounds}\n         * @protected\n         */\n        this._localBoundsRect = null;\n\n        /**\n         * The original, cached mask of the object.\n         *\n         * @member {PIXI.Container|PIXI.MaskData|null}\n         * @protected\n         */\n        this._mask = null;\n\n        /**\n         * Fired when this DisplayObject is added to a Container.\n         *\n         * @event PIXI.DisplayObject#added\n         * @param {PIXI.Container} container - The container added to.\n         */\n\n        /**\n         * Fired when this DisplayObject is removed from a Container.\n         *\n         * @event PIXI.DisplayObject#removed\n         * @param {PIXI.Container} container - The container removed from.\n         */\n\n        /**\n         * If the object has been destroyed via destroy(). If true, it should not be used.\n         *\n         * @member {boolean}\n         * @protected\n         */\n        this._destroyed = false;\n\n        /**\n         * used to fast check if a sprite is.. a sprite!\n         * @member {boolean}\n         */\n        this.isSprite = false;\n\n        /**\n         * Does any other displayObject use this object as a mask?\n         * @member {boolean}\n         */\n        this.isMask = false;\n    }\n\n    /**\n     * Recalculates the bounds of the display object.\n     */\n    abstract calculateBounds(): void;\n\n    abstract removeChild(child: DisplayObject): void;\n\n    /**\n     * Renders the object using the WebGL renderer.\n     *\n     * @param {PIXI.Renderer} renderer - The renderer.\n     */\n    abstract render(renderer: Renderer): void;\n\n    /**\n     * Recursively updates transform of all objects from the root to this one\n     * internal function for toLocal()\n     */\n    protected _recursivePostUpdateTransform(): void\n    {\n        if (this.parent)\n        {\n            this.parent._recursivePostUpdateTransform();\n            this.transform.updateTransform(this.parent.transform);\n        }\n        else\n        {\n            this.transform.updateTransform(this._tempDisplayObjectParent.transform);\n        }\n    }\n\n    /**\n     * Updates the object transform for rendering.\n     *\n     * TODO - Optimization pass!\n     */\n    updateTransform(): void\n    {\n        this._boundsID++;\n\n        this.transform.updateTransform(this.parent.transform);\n        // multiply the alphas..\n        this.worldAlpha = this.alpha * this.parent.worldAlpha;\n    }\n\n    /**\n     * Retrieves the bounds of the displayObject as a rectangle object.\n     *\n     * @param {boolean} [skipUpdate] - Setting to `true` will stop the transforms of the scene graph from\n     *  being updated. This means the calculation returned MAY be out of date BUT will give you a\n     *  nice performance boost.\n     * @param {PIXI.Rectangle} [rect] - Optional rectangle to store the result of the bounds calculation.\n     * @return {PIXI.Rectangle} The rectangular bounding area.\n     */\n    getBounds(skipUpdate?: boolean, rect?: Rectangle): Rectangle\n    {\n        if (!skipUpdate)\n        {\n            if (!this.parent)\n            {\n                this.parent = this._tempDisplayObjectParent;\n                this.updateTransform();\n                this.parent = null;\n            }\n            else\n            {\n                this._recursivePostUpdateTransform();\n                this.updateTransform();\n            }\n        }\n\n        if (this._bounds.updateID !== this._boundsID)\n        {\n            this.calculateBounds();\n            this._bounds.updateID = this._boundsID;\n        }\n\n        if (!rect)\n        {\n            if (!this._boundsRect)\n            {\n                this._boundsRect = new Rectangle();\n            }\n\n            rect = this._boundsRect;\n        }\n\n        return this._bounds.getRectangle(rect);\n    }\n\n    /**\n     * Retrieves the local bounds of the displayObject as a rectangle object.\n     *\n     * @param {PIXI.Rectangle} [rect] - Optional rectangle to store the result of the bounds calculation.\n     * @return {PIXI.Rectangle} The rectangular bounding area.\n     */\n    getLocalBounds(rect?: Rectangle): Rectangle\n    {\n        if (!rect)\n        {\n            if (!this._localBoundsRect)\n            {\n                this._localBoundsRect = new Rectangle();\n            }\n\n            rect = this._localBoundsRect;\n        }\n\n        if (!this._localBounds)\n        {\n            this._localBounds = new Bounds();\n        }\n\n        const transformRef = this.transform;\n        const parentRef = this.parent;\n\n        this.parent = null;\n        this.transform = this._tempDisplayObjectParent.transform;\n\n        const worldBounds = this._bounds;\n        const worldBoundsID = this._boundsID;\n\n        this._bounds = this._localBounds;\n\n        const bounds = this.getBounds(false, rect);\n\n        this.parent = parentRef;\n        this.transform = transformRef;\n\n        this._bounds = worldBounds;\n        this._bounds.updateID += this._boundsID - worldBoundsID;// reflect side-effects\n\n        return bounds;\n    }\n\n    /**\n     * Calculates the global position of the display object.\n     *\n     * @param {PIXI.IPointData} position - The world origin to calculate from.\n     * @param {PIXI.Point} [point] - A Point object in which to store the value, optional\n     *  (otherwise will create a new Point).\n     * @param {boolean} [skipUpdate=false] - Should we skip the update transform.\n     * @return {PIXI.Point} A point object representing the position of this object.\n     */\n    toGlobal<P extends IPointData = Point>(position: IPointData, point?: P, skipUpdate = false): P\n    {\n        if (!skipUpdate)\n        {\n            this._recursivePostUpdateTransform();\n\n            // this parent check is for just in case the item is a root object.\n            // If it is we need to give it a temporary parent so that displayObjectUpdateTransform works correctly\n            // this is mainly to avoid a parent check in the main loop. Every little helps for performance :)\n            if (!this.parent)\n            {\n                this.parent = this._tempDisplayObjectParent;\n                this.displayObjectUpdateTransform();\n                this.parent = null;\n            }\n            else\n            {\n                this.displayObjectUpdateTransform();\n            }\n        }\n\n        // don't need to update the lot\n        return this.worldTransform.apply<P>(position, point);\n    }\n\n    /**\n     * Calculates the local position of the display object relative to another point.\n     *\n     * @param {PIXI.IPointData} position - The world origin to calculate from.\n     * @param {PIXI.DisplayObject} [from] - The DisplayObject to calculate the global position from.\n     * @param {PIXI.Point} [point] - A Point object in which to store the value, optional\n     *  (otherwise will create a new Point).\n     * @param {boolean} [skipUpdate=false] - Should we skip the update transform\n     * @return {PIXI.Point} A point object representing the position of this object\n     */\n    toLocal<P extends IPointData = Point>(position: IPointData, from: DisplayObject, point?: P, skipUpdate?: boolean): P\n    {\n        if (from)\n        {\n            position = from.toGlobal(position, point, skipUpdate);\n        }\n\n        if (!skipUpdate)\n        {\n            this._recursivePostUpdateTransform();\n\n            // this parent check is for just in case the item is a root object.\n            // If it is we need to give it a temporary parent so that displayObjectUpdateTransform works correctly\n            // this is mainly to avoid a parent check in the main loop. Every little helps for performance :)\n            if (!this.parent)\n            {\n                this.parent = this._tempDisplayObjectParent;\n                this.displayObjectUpdateTransform();\n                this.parent = null;\n            }\n            else\n            {\n                this.displayObjectUpdateTransform();\n            }\n        }\n\n        // simply apply the matrix..\n        return this.worldTransform.applyInverse<P>(position, point);\n    }\n\n    /**\n     * Set the parent Container of this DisplayObject.\n     *\n     * @param {PIXI.Container} container - The Container to add this DisplayObject to.\n     * @return {PIXI.Container} The Container that this DisplayObject was added to.\n     */\n    setParent(container: Container): Container\n    {\n        if (!container || !container.addChild)\n        {\n            throw new Error('setParent: Argument must be a Container');\n        }\n\n        container.addChild(this);\n\n        return container;\n    }\n\n    /**\n     * Convenience function to set the position, scale, skew and pivot at once.\n     *\n     * @param {number} [x=0] - The X position\n     * @param {number} [y=0] - The Y position\n     * @param {number} [scaleX=1] - The X scale value\n     * @param {number} [scaleY=1] - The Y scale value\n     * @param {number} [rotation=0] - The rotation\n     * @param {number} [skewX=0] - The X skew value\n     * @param {number} [skewY=0] - The Y skew value\n     * @param {number} [pivotX=0] - The X pivot value\n     * @param {number} [pivotY=0] - The Y pivot value\n     * @return {PIXI.DisplayObject} The DisplayObject instance\n     */\n    setTransform(x = 0, y = 0, scaleX = 1, scaleY = 1, rotation = 0, skewX = 0, skewY = 0, pivotX = 0, pivotY = 0): this\n    {\n        this.position.x = x;\n        this.position.y = y;\n        this.scale.x = !scaleX ? 1 : scaleX;\n        this.scale.y = !scaleY ? 1 : scaleY;\n        this.rotation = rotation;\n        this.skew.x = skewX;\n        this.skew.y = skewY;\n        this.pivot.x = pivotX;\n        this.pivot.y = pivotY;\n\n        return this;\n    }\n\n    /**\n     * Base destroy method for generic display objects. This will automatically\n     * remove the display object from its parent Container as well as remove\n     * all current event listeners and internal references. Do not use a DisplayObject\n     * after calling `destroy()`.\n     *\n     */\n    destroy(_options?: IDestroyOptions|boolean): void\n    {\n        if (this.parent)\n        {\n            this.parent.removeChild(this);\n        }\n        this.removeAllListeners();\n        this.transform = null;\n\n        this.parent = null;\n        this._bounds = null;\n        this._mask = null;\n\n        this.filters = null;\n        this.filterArea = null;\n        this.hitArea = null;\n\n        this.interactive = false;\n        this.interactiveChildren = false;\n\n        this._destroyed = true;\n    }\n\n    /**\n     * @protected\n     * @member {PIXI.Container}\n     */\n    get _tempDisplayObjectParent(): TemporaryDisplayObject\n    {\n        if (this.tempDisplayObjectParent === null)\n        {\n            // eslint-disable-next-line no-use-before-define\n            this.tempDisplayObjectParent = new TemporaryDisplayObject();\n        }\n\n        return this.tempDisplayObjectParent;\n    }\n\n    /**\n     * Used in Renderer, cacheAsBitmap and other places where you call an `updateTransform` on root\n     *\n     * ```\n     * const cacheParent = elem.enableTempParent();\n     * elem.updateTransform();\n     * elem.disableTempParent(cacheParent);\n     * ```\n     *\n     * @returns {PIXI.DisplayObject} current parent\n     */\n    enableTempParent(): DisplayObject\n    {\n        const myParent = this.parent;\n\n        this.parent = this._tempDisplayObjectParent;\n\n        return myParent;\n    }\n\n    /**\n     * Pair method for `enableTempParent`\n     * @param {PIXI.DisplayObject} cacheParent actual parent of element\n     */\n    disableTempParent(cacheParent: DisplayObject): void\n    {\n        this.parent = cacheParent;\n    }\n\n    /**\n     * The position of the displayObject on the x axis relative to the local coordinates of the parent.\n     * An alias to position.x\n     *\n     * @member {number}\n     */\n    get x(): number\n    {\n        return this.position.x;\n    }\n\n    set x(value: number)\n    {\n        this.transform.position.x = value;\n    }\n\n    /**\n     * The position of the displayObject on the y axis relative to the local coordinates of the parent.\n     * An alias to position.y\n     *\n     * @member {number}\n     */\n    get y(): number\n    {\n        return this.position.y;\n    }\n\n    set y(value: number)\n    {\n        this.transform.position.y = value;\n    }\n\n    /**\n     * Current transform of the object based on world (parent) factors.\n     *\n     * @member {PIXI.Matrix}\n     * @readonly\n     */\n    get worldTransform(): Matrix\n    {\n        return this.transform.worldTransform;\n    }\n\n    /**\n     * Current transform of the object based on local factors: position, scale, other stuff.\n     *\n     * @member {PIXI.Matrix}\n     * @readonly\n     */\n    get localTransform(): Matrix\n    {\n        return this.transform.localTransform;\n    }\n\n    /**\n     * The coordinate of the object relative to the local coordinates of the parent.\n     * Assignment by value since pixi-v4.\n     *\n     * @member {PIXI.ObservablePoint}\n     */\n    get position(): ObservablePoint\n    {\n        return this.transform.position;\n    }\n\n    set position(value: ObservablePoint)\n    {\n        this.transform.position.copyFrom(value);\n    }\n\n    /**\n     * The scale factor of the object.\n     * Assignment by value since pixi-v4.\n     *\n     * @member {PIXI.ObservablePoint}\n     */\n    get scale(): ObservablePoint\n    {\n        return this.transform.scale;\n    }\n\n    set scale(value: ObservablePoint)\n    {\n        this.transform.scale.copyFrom(value);\n    }\n\n    /**\n     * The pivot point of the displayObject that it rotates around.\n     * Assignment by value since pixi-v4.\n     *\n     * @member {PIXI.ObservablePoint}\n     */\n    get pivot(): ObservablePoint\n    {\n        return this.transform.pivot;\n    }\n\n    set pivot(value: ObservablePoint)\n    {\n        this.transform.pivot.copyFrom(value);\n    }\n\n    /**\n     * The skew factor for the object in radians.\n     * Assignment by value since pixi-v4.\n     *\n     * @member {PIXI.ObservablePoint}\n     */\n    get skew(): ObservablePoint\n    {\n        return this.transform.skew;\n    }\n\n    set skew(value: ObservablePoint)\n    {\n        this.transform.skew.copyFrom(value);\n    }\n\n    /**\n     * The rotation of the object in radians.\n     * 'rotation' and 'angle' have the same effect on a display object; rotation is in radians, angle is in degrees.\n     *\n     * @member {number}\n     */\n    get rotation(): number\n    {\n        return this.transform.rotation;\n    }\n\n    set rotation(value: number)\n    {\n        this.transform.rotation = value;\n    }\n\n    /**\n     * The angle of the object in degrees.\n     * 'rotation' and 'angle' have the same effect on a display object; rotation is in radians, angle is in degrees.\n     *\n     * @member {number}\n     */\n    get angle(): number\n    {\n        return this.transform.rotation * RAD_TO_DEG;\n    }\n\n    set angle(value: number)\n    {\n        this.transform.rotation = value * DEG_TO_RAD;\n    }\n\n    /**\n     * The zIndex of the displayObject.\n     * If a container has the sortableChildren property set to true, children will be automatically\n     * sorted by zIndex value; a higher value will mean it will be moved towards the end of the array,\n     * and thus rendered on top of other displayObjects within the same container.\n     *\n     * @member {number}\n     */\n    get zIndex(): number\n    {\n        return this._zIndex;\n    }\n\n    set zIndex(value: number)\n    {\n        this._zIndex = value;\n        if (this.parent)\n        {\n            this.parent.sortDirty = true;\n        }\n    }\n\n    /**\n     * Indicates if the object is globally visible.\n     *\n     * @member {boolean}\n     * @readonly\n     */\n    get worldVisible(): boolean\n    {\n        let item = this as DisplayObject;\n\n        do\n        {\n            if (!item.visible)\n            {\n                return false;\n            }\n\n            item = item.parent;\n        } while (item);\n\n        return true;\n    }\n\n    /**\n     * Sets a mask for the displayObject. A mask is an object that limits the visibility of an\n     * object to the shape of the mask applied to it. In PixiJS a regular mask must be a\n     * {@link PIXI.Graphics} or a {@link PIXI.Sprite} object. This allows for much faster masking in canvas as it\n     * utilities shape clipping. To remove a mask, set this property to `null`.\n     *\n     * For sprite mask both alpha and red channel are used. Black mask is the same as transparent mask.\n     * @example\n     * const graphics = new PIXI.Graphics();\n     * graphics.beginFill(0xFF3300);\n     * graphics.drawRect(50, 250, 100, 100);\n     * graphics.endFill();\n     *\n     * const sprite = new PIXI.Sprite(texture);\n     * sprite.mask = graphics;\n     * @todo At the moment, PIXI.CanvasRenderer doesn't support PIXI.Sprite as mask.\n     *\n     * @member {PIXI.Container|PIXI.MaskData|null}\n     */\n    get mask(): Container|MaskData|null\n    {\n        return this._mask;\n    }\n\n    set mask(value: Container|MaskData|null)\n    {\n        if (this._mask)\n        {\n            const maskObject = ((this._mask as MaskData).maskObject || this._mask) as Container;\n\n            maskObject.renderable = true;\n            maskObject.isMask = false;\n        }\n\n        this._mask = value;\n\n        if (this._mask)\n        {\n            const maskObject = ((this._mask as MaskData).maskObject || this._mask) as Container;\n\n            maskObject.renderable = false;\n            maskObject.isMask = true;\n        }\n    }\n}\n\nexport class TemporaryDisplayObject extends DisplayObject\n{\n    calculateBounds: () => null;\n    removeChild: (child: DisplayObject) => null;\n    render: (renderer: Renderer) => null;\n    sortDirty: boolean = null;\n}\n\n/**\n * DisplayObject default updateTransform, does not update children of container.\n * Will crash if there's no parent element.\n *\n * @memberof PIXI.DisplayObject#\n * @function displayObjectUpdateTransform\n */\nDisplayObject.prototype.displayObjectUpdateTransform = DisplayObject.prototype.updateTransform;\n","import { settings } from '@pixi/settings';\nimport { removeItems } from '@pixi/utils';\nimport { DisplayObject } from './DisplayObject';\nimport { Rectangle } from '@pixi/math';\n\nimport type { MaskData, Renderer } from '@pixi/core';\nimport type { IDestroyOptions } from './DisplayObject';\n\nfunction sortChildren(a: DisplayObject, b: DisplayObject): number\n{\n    if (a.zIndex === b.zIndex)\n    {\n        return a._lastSortedIndex - b._lastSortedIndex;\n    }\n\n    return a.zIndex - b.zIndex;\n}\n\nexport interface Container extends GlobalMixins.Container, DisplayObject {}\n\n/**\n * A Container represents a collection of display objects.\n *\n * It is the base class of all display objects that act as a container for other objects (like Sprites).\n *\n *```js\n * let container = new PIXI.Container();\n * container.addChild(sprite);\n * ```\n *\n * @class\n * @extends PIXI.DisplayObject\n * @memberof PIXI\n */\nexport class Container extends DisplayObject\n{\n    public readonly children: DisplayObject[];\n    public sortableChildren: boolean;\n    public sortDirty: boolean;\n    public containerUpdateTransform: () => void;\n\n    protected _width: number;\n    protected _height: number;\n\n    constructor()\n    {\n        super();\n\n        /**\n         * The array of children of this container.\n         *\n         * @member {PIXI.DisplayObject[]}\n         * @readonly\n         */\n        this.children = [];\n\n        /**\n         * If set to true, the container will sort its children by zIndex value\n         * when updateTransform() is called, or manually if sortChildren() is called.\n         *\n         * This actually changes the order of elements in the array, so should be treated\n         * as a basic solution that is not performant compared to other solutions,\n         * such as @link https://github.com/pixijs/pixi-display\n         *\n         * Also be aware of that this may not work nicely with the addChildAt() function,\n         * as the zIndex sorting may cause the child to automatically sorted to another position.\n         *\n         * @see PIXI.settings.SORTABLE_CHILDREN\n         *\n         * @member {boolean}\n         */\n        this.sortableChildren = settings.SORTABLE_CHILDREN;\n\n        /**\n         * Should children be sorted by zIndex at the next updateTransform call.\n         * Will get automatically set to true if a new child is added, or if a child's zIndex changes.\n         *\n         * @member {boolean}\n         */\n        this.sortDirty = false;\n\n        /**\n         * Fired when a DisplayObject is added to this Container.\n         *\n         * @event PIXI.Container#childAdded\n         * @param {PIXI.DisplayObject} child - The child added to the Container.\n         * @param {PIXI.Container} container - The container that added the child.\n         * @param {number} index - The children's index of the added child.\n         */\n\n        /**\n         * Fired when a DisplayObject is removed from this Container.\n         *\n         * @event PIXI.DisplayObject#removedFrom\n         * @param {PIXI.DisplayObject} child - The child removed from the Container.\n         * @param {PIXI.Container} container - The container that removed removed the child.\n         * @param {number} index - The former children's index of the removed child\n         */\n    }\n\n    /**\n     * Overridable method that can be used by Container subclasses whenever the children array is modified\n     *\n     * @protected\n     */\n    protected onChildrenChange(_length: number): void\n    {\n        /* empty */\n    }\n\n    /**\n     * Adds one or more children to the container.\n     *\n     * Multiple items can be added like so: `myContainer.addChild(thingOne, thingTwo, thingThree)`\n     *\n     * @param {...PIXI.DisplayObject} children - The DisplayObject(s) to add to the container\n     * @return {PIXI.DisplayObject} The first child that was added.\n     */\n    addChild<T extends DisplayObject[]>(...children: T): T[0]\n    {\n        // if there is only one argument we can bypass looping through the them\n        if (children.length > 1)\n        {\n            // loop through the array and add all children\n            for (let i = 0; i < children.length; i++)\n            {\n                // eslint-disable-next-line prefer-rest-params\n                this.addChild(children[i]);\n            }\n        }\n        else\n        {\n            const child = children[0];\n            // if the child has a parent then lets remove it as PixiJS objects can only exist in one place\n\n            if (child.parent)\n            {\n                child.parent.removeChild(child);\n            }\n\n            child.parent = this;\n            this.sortDirty = true;\n\n            // ensure child transform will be recalculated\n            child.transform._parentID = -1;\n\n            this.children.push(child);\n\n            // ensure bounds will be recalculated\n            this._boundsID++;\n\n            // TODO - lets either do all callbacks or all events.. not both!\n            this.onChildrenChange(this.children.length - 1);\n            this.emit('childAdded', child, this, this.children.length - 1);\n            child.emit('added', this);\n        }\n\n        return children[0];\n    }\n\n    /**\n     * Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown\n     *\n     * @param {PIXI.DisplayObject} child - The child to add\n     * @param {number} index - The index to place the child in\n     * @return {PIXI.DisplayObject} The child that was added.\n     */\n    addChildAt<T extends DisplayObject>(child: T, index: number): T\n    {\n        if (index < 0 || index > this.children.length)\n        {\n            throw new Error(`${child}addChildAt: The index ${index} supplied is out of bounds ${this.children.length}`);\n        }\n\n        if (child.parent)\n        {\n            child.parent.removeChild(child);\n        }\n\n        child.parent = this;\n        this.sortDirty = true;\n\n        // ensure child transform will be recalculated\n        child.transform._parentID = -1;\n\n        this.children.splice(index, 0, child);\n\n        // ensure bounds will be recalculated\n        this._boundsID++;\n\n        // TODO - lets either do all callbacks or all events.. not both!\n        this.onChildrenChange(index);\n        child.emit('added', this);\n        this.emit('childAdded', child, this, index);\n\n        return child;\n    }\n\n    /**\n     * Swaps the position of 2 Display Objects within this container.\n     *\n     * @param {PIXI.DisplayObject} child - First display object to swap\n     * @param {PIXI.DisplayObject} child2 - Second display object to swap\n     */\n    swapChildren(child: DisplayObject, child2: DisplayObject): void\n    {\n        if (child === child2)\n        {\n            return;\n        }\n\n        const index1 = this.getChildIndex(child);\n        const index2 = this.getChildIndex(child2);\n\n        this.children[index1] = child2;\n        this.children[index2] = child;\n        this.onChildrenChange(index1 < index2 ? index1 : index2);\n    }\n\n    /**\n     * Returns the index position of a child DisplayObject instance\n     *\n     * @param {PIXI.DisplayObject} child - The DisplayObject instance to identify\n     * @return {number} The index position of the child display object to identify\n     */\n    getChildIndex(child: DisplayObject): number\n    {\n        const index = this.children.indexOf(child);\n\n        if (index === -1)\n        {\n            throw new Error('The supplied DisplayObject must be a child of the caller');\n        }\n\n        return index;\n    }\n\n    /**\n     * Changes the position of an existing child in the display object container\n     *\n     * @param {PIXI.DisplayObject} child - The child DisplayObject instance for which you want to change the index number\n     * @param {number} index - The resulting index number for the child display object\n     */\n    setChildIndex(child: DisplayObject, index: number): void\n    {\n        if (index < 0 || index >= this.children.length)\n        {\n            throw new Error(`The index ${index} supplied is out of bounds ${this.children.length}`);\n        }\n\n        const currentIndex = this.getChildIndex(child);\n\n        removeItems(this.children, currentIndex, 1); // remove from old position\n        this.children.splice(index, 0, child); // add at new position\n\n        this.onChildrenChange(index);\n    }\n\n    /**\n     * Returns the child at the specified index\n     *\n     * @param {number} index - The index to get the child at\n     * @return {PIXI.DisplayObject} The child at the given index, if any.\n     */\n    getChildAt(index: number): DisplayObject\n    {\n        if (index < 0 || index >= this.children.length)\n        {\n            throw new Error(`getChildAt: Index (${index}) does not exist.`);\n        }\n\n        return this.children[index];\n    }\n\n    /**\n     * Removes one or more children from the container.\n     *\n     * @param {...PIXI.DisplayObject} children - The DisplayObject(s) to remove\n     * @return {PIXI.DisplayObject} The first child that was removed.\n     */\n    removeChild<T extends DisplayObject[]>(...children: T): T[0]\n    {\n        // if there is only one argument we can bypass looping through the them\n        if (children.length > 1)\n        {\n            // loop through the arguments property and remove all children\n            for (let i = 0; i < children.length; i++)\n            {\n                this.removeChild(children[i]);\n            }\n        }\n        else\n        {\n            const child = children[0];\n            const index = this.children.indexOf(child);\n\n            if (index === -1) return null;\n\n            child.parent = null;\n            // ensure child transform will be recalculated\n            child.transform._parentID = -1;\n            removeItems(this.children, index, 1);\n\n            // ensure bounds will be recalculated\n            this._boundsID++;\n\n            // TODO - lets either do all callbacks or all events.. not both!\n            this.onChildrenChange(index);\n            child.emit('removed', this);\n            this.emit('childRemoved', child, this, index);\n        }\n\n        return children[0];\n    }\n\n    /**\n     * Removes a child from the specified index position.\n     *\n     * @param {number} index - The index to get the child from\n     * @return {PIXI.DisplayObject} The child that was removed.\n     */\n    removeChildAt(index: number): DisplayObject\n    {\n        const child = this.getChildAt(index);\n\n        // ensure child transform will be recalculated..\n        child.parent = null;\n        child.transform._parentID = -1;\n        removeItems(this.children, index, 1);\n\n        // ensure bounds will be recalculated\n        this._boundsID++;\n\n        // TODO - lets either do all callbacks or all events.. not both!\n        this.onChildrenChange(index);\n        child.emit('removed', this);\n        this.emit('childRemoved', child, this, index);\n\n        return child;\n    }\n\n    /**\n     * Removes all children from this container that are within the begin and end indexes.\n     *\n     * @param {number} [beginIndex=0] - The beginning position.\n     * @param {number} [endIndex=this.children.length] - The ending position. Default value is size of the container.\n     * @returns {PIXI.DisplayObject[]} List of removed children\n     */\n    removeChildren(beginIndex = 0, endIndex = this.children.length): DisplayObject[]\n    {\n        const begin = beginIndex;\n        const end = endIndex;\n        const range = end - begin;\n        let removed;\n\n        if (range > 0 && range <= end)\n        {\n            removed = this.children.splice(begin, range);\n\n            for (let i = 0; i < removed.length; ++i)\n            {\n                removed[i].parent = null;\n                if (removed[i].transform)\n                {\n                    removed[i].transform._parentID = -1;\n                }\n            }\n\n            this._boundsID++;\n\n            this.onChildrenChange(beginIndex);\n\n            for (let i = 0; i < removed.length; ++i)\n            {\n                removed[i].emit('removed', this);\n                this.emit('childRemoved', removed[i], this, i);\n            }\n\n            return removed;\n        }\n        else if (range === 0 && this.children.length === 0)\n        {\n            return [];\n        }\n\n        throw new RangeError('removeChildren: numeric values are outside the acceptable range.');\n    }\n\n    /**\n     * Sorts children by zIndex. Previous order is mantained for 2 children with the same zIndex.\n     */\n    sortChildren(): void\n    {\n        let sortRequired = false;\n\n        for (let i = 0, j = this.children.length; i < j; ++i)\n        {\n            const child = this.children[i];\n\n            child._lastSortedIndex = i;\n\n            if (!sortRequired && child.zIndex !== 0)\n            {\n                sortRequired = true;\n            }\n        }\n\n        if (sortRequired && this.children.length > 1)\n        {\n            this.children.sort(sortChildren);\n        }\n\n        this.sortDirty = false;\n    }\n\n    /**\n     * Updates the transform on all children of this container for rendering\n     */\n    updateTransform(): void\n    {\n        if (this.sortableChildren && this.sortDirty)\n        {\n            this.sortChildren();\n        }\n\n        this._boundsID++;\n\n        this.transform.updateTransform(this.parent.transform);\n\n        // TODO: check render flags, how to process stuff here\n        this.worldAlpha = this.alpha * this.parent.worldAlpha;\n\n        for (let i = 0, j = this.children.length; i < j; ++i)\n        {\n            const child = this.children[i];\n\n            if (child.visible)\n            {\n                child.updateTransform();\n            }\n        }\n    }\n\n    /**\n     * Recalculates the bounds of the container.\n     *\n     */\n    calculateBounds(): void\n    {\n        this._bounds.clear();\n\n        this._calculateBounds();\n\n        for (let i = 0; i < this.children.length; i++)\n        {\n            const child = this.children[i];\n\n            if (!child.visible || !child.renderable)\n            {\n                continue;\n            }\n\n            child.calculateBounds();\n\n            // TODO: filter+mask, need to mask both somehow\n            if (child._mask)\n            {\n                const maskObject = ((child._mask as MaskData).maskObject || child._mask) as Container;\n\n                maskObject.calculateBounds();\n                this._bounds.addBoundsMask(child._bounds, maskObject._bounds);\n            }\n            else if (child.filterArea)\n            {\n                this._bounds.addBoundsArea(child._bounds, child.filterArea);\n            }\n            else\n            {\n                this._bounds.addBounds(child._bounds);\n            }\n        }\n\n        this._bounds.updateID = this._boundsID;\n    }\n\n    /**\n     * Retrieves the local bounds of the displayObject as a rectangle object.\n     *\n     * @param {PIXI.Rectangle} [rect] - Optional rectangle to store the result of the bounds calculation.\n     * @param {boolean} [skipChildrenUpdate=false] - Setting to `true` will stop re-calculation of children transforms,\n     *  it was default behaviour of pixi 4.0-5.2 and caused many problems to users.\n     * @return {PIXI.Rectangle} The rectangular bounding area.\n     */\n    public getLocalBounds(rect?: Rectangle, skipChildrenUpdate = false): Rectangle\n    {\n        const result = super.getLocalBounds(rect);\n\n        if (!skipChildrenUpdate)\n        {\n            for (let i = 0, j = this.children.length; i < j; ++i)\n            {\n                const child = this.children[i];\n\n                if (child.visible)\n                {\n                    child.updateTransform();\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Recalculates the bounds of the object. Override this to\n     * calculate the bounds of the specific object (not including children).\n     *\n     * @protected\n     */\n    protected _calculateBounds(): void\n    {\n        // FILL IN//\n    }\n\n    /**\n     * Renders the object using the WebGL renderer\n     *\n     * @param {PIXI.Renderer} renderer - The renderer\n     */\n    render(renderer: Renderer): void\n    {\n        // if the object is not visible or the alpha is 0 then no need to render this element\n        if (!this.visible || this.worldAlpha <= 0 || !this.renderable)\n        {\n            return;\n        }\n\n        // do a quick check to see if this element has a mask or a filter.\n        if (this._mask || (this.filters && this.filters.length))\n        {\n            this.renderAdvanced(renderer);\n        }\n        else\n        {\n            this._render(renderer);\n\n            // simple render children!\n            for (let i = 0, j = this.children.length; i < j; ++i)\n            {\n                this.children[i].render(renderer);\n            }\n        }\n    }\n\n    /**\n     * Render the object using the WebGL renderer and advanced features.\n     *\n     * @protected\n     * @param {PIXI.Renderer} renderer - The renderer\n     */\n    protected renderAdvanced(renderer: Renderer): void\n    {\n        renderer.batch.flush();\n\n        const filters = this.filters;\n        const mask = this._mask;\n\n        // push filter first as we need to ensure the stencil buffer is correct for any masking\n        if (filters)\n        {\n            if (!this._enabledFilters)\n            {\n                this._enabledFilters = [];\n            }\n\n            this._enabledFilters.length = 0;\n\n            for (let i = 0; i < filters.length; i++)\n            {\n                if (filters[i].enabled)\n                {\n                    this._enabledFilters.push(filters[i]);\n                }\n            }\n\n            if (this._enabledFilters.length)\n            {\n                renderer.filter.push(this, this._enabledFilters);\n            }\n        }\n\n        if (mask)\n        {\n            renderer.mask.push(this, this._mask);\n        }\n\n        // add this object to the batch, only rendered if it has a texture.\n        this._render(renderer);\n\n        // now loop through the children and make sure they get rendered\n        for (let i = 0, j = this.children.length; i < j; i++)\n        {\n            this.children[i].render(renderer);\n        }\n\n        renderer.batch.flush();\n\n        if (mask)\n        {\n            renderer.mask.pop(this);\n        }\n\n        if (filters && this._enabledFilters && this._enabledFilters.length)\n        {\n            renderer.filter.pop();\n        }\n    }\n\n    /**\n     * To be overridden by the subclasses.\n     *\n     * @protected\n     * @param {PIXI.Renderer} renderer - The renderer\n     */\n    protected _render(_renderer: Renderer): void // eslint-disable-line no-unused-vars\n    {\n        // this is where content itself gets rendered...\n    }\n\n    /**\n     * Removes all internal references and listeners as well as removes children from the display list.\n     * Do not use a Container after calling `destroy`.\n     *\n     * @param {object|boolean} [options] - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [options.children=false] - if set to true, all the children will have their destroy\n     *  method called as well. 'options' will be passed on to those calls.\n     * @param {boolean} [options.texture=false] - Only used for child Sprites if options.children is set to true\n     *  Should it destroy the texture of the child sprite\n     * @param {boolean} [options.baseTexture=false] - Only used for child Sprites if options.children is set to true\n     *  Should it destroy the base texture of the child sprite\n     */\n    destroy(options?: IDestroyOptions|boolean): void\n    {\n        super.destroy();\n\n        this.sortDirty = false;\n\n        const destroyChildren = typeof options === 'boolean' ? options : options && options.children;\n\n        const oldChildren = this.removeChildren(0, this.children.length);\n\n        if (destroyChildren)\n        {\n            for (let i = 0; i < oldChildren.length; ++i)\n            {\n                oldChildren[i].destroy(options);\n            }\n        }\n    }\n\n    /**\n     * The width of the Container, setting this will actually modify the scale to achieve the value set\n     *\n     * @member {number}\n     */\n    get width(): number\n    {\n        return this.scale.x * this.getLocalBounds().width;\n    }\n\n    set width(value: number)\n    {\n        const width = this.getLocalBounds().width;\n\n        if (width !== 0)\n        {\n            this.scale.x = value / width;\n        }\n        else\n        {\n            this.scale.x = 1;\n        }\n\n        this._width = value;\n    }\n\n    /**\n     * The height of the Container, setting this will actually modify the scale to achieve the value set\n     *\n     * @member {number}\n     */\n    get height(): number\n    {\n        return this.scale.y * this.getLocalBounds().height;\n    }\n\n    set height(value: number)\n    {\n        const height = this.getLocalBounds().height;\n\n        if (height !== 0)\n        {\n            this.scale.y = value / height;\n        }\n        else\n        {\n            this.scale.y = 1;\n        }\n\n        this._height = value;\n    }\n}\n\n/**\n * Container default updateTransform, does update children of container.\n * Will crash if there's no parent element.\n *\n * @memberof PIXI.Container#\n * @function containerUpdateTransform\n */\nContainer.prototype.containerUpdateTransform = Container.prototype.updateTransform;\n","import { Texture } from '@pixi/core';\nimport type { Matrix } from '@pixi/math';\n\n/**\n * Fill style object for Graphics.\n *\n * @class\n * @memberof PIXI\n */\nexport class FillStyle\n{\n    /**\n     * The hex color value used when coloring the Graphics object.\n     *\n     * @member {number}\n     * @default 0xFFFFFF\n     */\n    public color = 0xFFFFFF;\n\n    /**\n     * The alpha value used when filling the Graphics object.\n     *\n     * @member {number}\n     * @default 1\n     */\n    public alpha = 1.0;\n\n    /**\n     * The texture to be used for the fill.\n     *\n     * @member {PIXI.Texture}\n     * @default 0\n     */\n    public texture: Texture = Texture.WHITE;\n\n    /**\n     * The transform aplpied to the texture.\n     *\n     * @member {PIXI.Matrix}\n     * @default null\n     */\n    public matrix: Matrix = null;\n\n    /**\n     * If the current fill is visible.\n     *\n     * @member {boolean}\n     * @default false\n     */\n    public visible = false;\n\n    constructor()\n    {\n        this.reset();\n    }\n\n    /**\n     * Clones the object\n     *\n     * @return {PIXI.FillStyle}\n     */\n    public clone(): FillStyle\n    {\n        const obj = new FillStyle();\n\n        obj.color = this.color;\n        obj.alpha = this.alpha;\n        obj.texture = this.texture;\n        obj.matrix = this.matrix;\n        obj.visible = this.visible;\n\n        return obj;\n    }\n\n    /**\n     * Reset\n     */\n    public reset(): void\n    {\n        this.color = 0xFFFFFF;\n        this.alpha = 1;\n        this.texture = Texture.WHITE;\n        this.matrix = null;\n        this.visible = false;\n    }\n\n    /**\n     * Destroy and don't use after this\n     */\n    public destroy(): void\n    {\n        this.texture = null;\n        this.matrix = null;\n    }\n}\n","import { earcut } from '@pixi/utils';\n\nimport type { IShapeBuildCommand } from './IShapeBuildCommand';\nimport type { Polygon } from '@pixi/math';\n\n/**\n * Builds a polygon to draw\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {PIXI.WebGLGraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {object} webGLData - an object containing all the WebGL-specific information to create this shape\n * @param {object} webGLDataNativeLines - an object containing all the WebGL-specific information to create nativeLines\n */\nexport const buildPoly: IShapeBuildCommand = {\n\n    build(graphicsData)\n    {\n        graphicsData.points = (graphicsData.shape as Polygon).points.slice();\n    },\n\n    triangulate(graphicsData, graphicsGeometry)\n    {\n        let points = graphicsData.points;\n        const holes = graphicsData.holes;\n        const verts = graphicsGeometry.points;\n        const indices = graphicsGeometry.indices;\n\n        if (points.length >= 6)\n        {\n            const holeArray = [];\n            // Process holes..\n\n            for (let i = 0; i < holes.length; i++)\n            {\n                const hole = holes[i];\n\n                holeArray.push(points.length / 2);\n                points = points.concat(hole.points);\n            }\n\n            // sort color\n            const triangles = earcut(points, holeArray, 2);\n\n            if (!triangles)\n            {\n                return;\n            }\n\n            const vertPos = verts.length / 2;\n\n            for (let i = 0; i < triangles.length; i += 3)\n            {\n                indices.push(triangles[i] + vertPos);\n                indices.push(triangles[i + 1] + vertPos);\n                indices.push(triangles[i + 2] + vertPos);\n            }\n\n            for (let i = 0; i < points.length; i++)\n            {\n                verts.push(points[i]);\n            }\n        }\n    },\n};\n","// for type only\nimport { SHAPES } from '@pixi/math';\n\nimport type { Circle, Ellipse } from '@pixi/math';\nimport type { IShapeBuildCommand } from './IShapeBuildCommand';\n\n/**\n * Builds a circle to draw\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {PIXI.WebGLGraphicsData} graphicsData - The graphics object to draw\n * @param {object} webGLData - an object containing all the WebGL-specific information to create this shape\n * @param {object} webGLDataNativeLines - an object containing all the WebGL-specific information to create nativeLines\n */\nexport const buildCircle: IShapeBuildCommand = {\n\n    build(graphicsData)\n    {\n        // need to convert points to a nice regular data\n        const circleData = graphicsData.shape as Circle;\n        const points = graphicsData.points;\n        const x = circleData.x;\n        const y = circleData.y;\n        let width;\n        let height;\n\n        points.length = 0;\n\n        // TODO - bit hacky??\n        if (graphicsData.type === SHAPES.CIRC)\n        {\n            width = circleData.radius;\n            height = circleData.radius;\n        }\n        else\n        {\n            const ellipseData = graphicsData.shape as Ellipse;\n\n            width = ellipseData.width;\n            height = ellipseData.height;\n        }\n\n        if (width === 0 || height === 0)\n        {\n            return;\n        }\n\n        let totalSegs = Math.floor(30 * Math.sqrt(circleData.radius))\n            || Math.floor(15 * Math.sqrt(width + height));\n\n        totalSegs /= 2.3;\n\n        const seg = (Math.PI * 2) / totalSegs;\n\n        for (let i = 0; i < totalSegs - 0.5; i++)\n        {\n            points.push(\n                x + (Math.sin(-seg * i) * width),\n                y + (Math.cos(-seg * i) * height)\n            );\n        }\n\n        points.push(points[0], points[1]);\n    },\n\n    triangulate(graphicsData, graphicsGeometry)\n    {\n        const points = graphicsData.points;\n        const verts = graphicsGeometry.points;\n        const indices = graphicsGeometry.indices;\n\n        let vertPos = verts.length / 2;\n        const center = vertPos;\n\n        const circle = (graphicsData.shape) as Circle;\n        const matrix = graphicsData.matrix;\n        const x = circle.x;\n        const y = circle.y;\n\n        // Push center (special point)\n        verts.push(\n            graphicsData.matrix ? (matrix.a * x) + (matrix.c * y) + matrix.tx : x,\n            graphicsData.matrix ? (matrix.b * x) + (matrix.d * y) + matrix.ty : y);\n\n        for (let i = 0; i < points.length; i += 2)\n        {\n            verts.push(points[i], points[i + 1]);\n\n            // add some uvs\n            indices.push(vertPos++, center, vertPos);\n        }\n    },\n};\n","import type { IShapeBuildCommand } from './IShapeBuildCommand';\nimport type { Rectangle } from '@pixi/math';\n\n/**\n * Builds a rectangle to draw\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {PIXI.WebGLGraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {object} webGLData - an object containing all the WebGL-specific information to create this shape\n * @param {object} webGLDataNativeLines - an object containing all the WebGL-specific information to create nativeLines\n */\nexport const buildRectangle: IShapeBuildCommand = {\n\n    build(graphicsData)\n    {\n        // --- //\n        // need to convert points to a nice regular data\n        //\n        const rectData = graphicsData.shape as Rectangle;\n        const x = rectData.x;\n        const y = rectData.y;\n        const width = rectData.width;\n        const height = rectData.height;\n\n        const points = graphicsData.points;\n\n        points.length = 0;\n\n        points.push(x, y,\n            x + width, y,\n            x + width, y + height,\n            x, y + height);\n    },\n\n    triangulate(graphicsData, graphicsGeometry)\n    {\n        const points = graphicsData.points;\n        const verts = graphicsGeometry.points;\n\n        const vertPos = verts.length / 2;\n\n        verts.push(points[0], points[1],\n            points[2], points[3],\n            points[6], points[7],\n            points[4], points[5]);\n\n        graphicsGeometry.indices.push(vertPos, vertPos + 1, vertPos + 2,\n            vertPos + 1, vertPos + 2, vertPos + 3);\n    },\n};\n","import { earcut } from '@pixi/utils';\n\n// for type only\nimport type { IShapeBuildCommand } from './IShapeBuildCommand';\nimport type { RoundedRectangle } from '@pixi/math';\n\n/**\n * Calculate a single point for a quadratic bezier curve.\n * Utility function used by quadraticBezierCurve.\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {number} n1 - first number\n * @param {number} n2 - second number\n * @param {number} perc - percentage\n * @return {number} the result\n *\n */\nfunction getPt(n1: number, n2: number, perc: number): number\n{\n    const diff = n2 - n1;\n\n    return n1 + (diff * perc);\n}\n\n/**\n * Calculate the points for a quadratic bezier curve. (helper function..)\n * Based on: https://stackoverflow.com/questions/785097/how-do-i-implement-a-bezier-curve-in-c\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {number} fromX - Origin point x\n * @param {number} fromY - Origin point x\n * @param {number} cpX - Control point x\n * @param {number} cpY - Control point y\n * @param {number} toX - Destination point x\n * @param {number} toY - Destination point y\n * @param {number[]} [out=[]] - The output array to add points into. If not passed, a new array is created.\n * @return {number[]} an array of points\n */\nfunction quadraticBezierCurve(\n    fromX: number, fromY: number,\n    cpX: number, cpY: number,\n    toX: number, toY: number,\n    out: Array<number> = []): Array<number>\n{\n    const n = 20;\n    const points = out;\n\n    let xa = 0;\n    let ya = 0;\n    let xb = 0;\n    let yb = 0;\n    let x = 0;\n    let y = 0;\n\n    for (let i = 0, j = 0; i <= n; ++i)\n    {\n        j = i / n;\n\n        // The Green Line\n        xa = getPt(fromX, cpX, j);\n        ya = getPt(fromY, cpY, j);\n        xb = getPt(cpX, toX, j);\n        yb = getPt(cpY, toY, j);\n\n        // The Black Dot\n        x = getPt(xa, xb, j);\n        y = getPt(ya, yb, j);\n\n        points.push(x, y);\n    }\n\n    return points;\n}\n\n/**\n * Builds a rounded rectangle to draw\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {PIXI.WebGLGraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {object} webGLData - an object containing all the WebGL-specific information to create this shape\n * @param {object} webGLDataNativeLines - an object containing all the WebGL-specific information to create nativeLines\n */\nexport const buildRoundedRectangle: IShapeBuildCommand = {\n\n    build(graphicsData)\n    {\n        const rrectData = graphicsData.shape as RoundedRectangle;\n        const points = graphicsData.points;\n        const x = rrectData.x;\n        const y = rrectData.y;\n        const width = rrectData.width;\n        const height = rrectData.height;\n\n        // Don't allow negative radius or greater than half the smallest width\n        const radius = Math.max(0, Math.min(rrectData.radius, Math.min(width, height) / 2));\n\n        points.length = 0;\n\n        // No radius, do a simple rectangle\n        if (!radius)\n        {\n            points.push(x, y,\n                x + width, y,\n                x + width, y + height,\n                x, y + height);\n        }\n        else\n        {\n            quadraticBezierCurve(x, y + radius,\n                x, y,\n                x + radius, y,\n                points);\n            quadraticBezierCurve(x + width - radius,\n                y, x + width, y,\n                x + width, y + radius,\n                points);\n            quadraticBezierCurve(x + width, y + height - radius,\n                x + width, y + height,\n                x + width - radius, y + height,\n                points);\n            quadraticBezierCurve(x + radius, y + height,\n                x, y + height,\n                x, y + height - radius,\n                points);\n        }\n\n        // this tiny number deals with the issue that occurs when points overlap and earcut fails to triangulate the item.\n        // TODO - fix this properly, this is not very elegant.. but it works for now.\n    },\n\n    triangulate(graphicsData, graphicsGeometry)\n    {\n        const points = graphicsData.points;\n\n        const verts = graphicsGeometry.points;\n        const indices = graphicsGeometry.indices;\n\n        const vecPos = verts.length / 2;\n\n        const triangles = earcut(points, null, 2);\n\n        for (let i = 0, j = triangles.length; i < j; i += 3)\n        {\n            indices.push(triangles[i] + vecPos);\n            //     indices.push(triangles[i] + vecPos);\n            indices.push(triangles[i + 1] + vecPos);\n            //   indices.push(triangles[i + 2] + vecPos);\n            indices.push(triangles[i + 2] + vecPos);\n        }\n\n        for (let i = 0, j = points.length; i < j; i++)\n        {\n            verts.push(points[i], points[++i]);\n        }\n    },\n};\n","import { Point, SHAPES } from '@pixi/math';\n\nimport type { Polygon } from '@pixi/math';\nimport type { GraphicsData } from '../GraphicsData';\nimport type { GraphicsGeometry } from '../GraphicsGeometry';\nimport { LINE_JOIN, LINE_CAP } from '../const';\nimport { GRAPHICS_CURVES } from '../const';\n\n/**\n * Buffers vertices to draw a square cap.\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {number} x - X-coord of end point\n * @param {number} y - Y-coord of end point\n * @param {number} nx - X-coord of line normal pointing inside\n * @param {number} ny - Y-coord of line normal pointing inside\n * @param {Array<number>} verts - vertex buffer\n * @returns {}\n */\nfunction square(\n    x: number,\n    y: number,\n    nx: number,\n    ny: number,\n    innerWeight: number,\n    outerWeight: number,\n    clockwise: boolean, /* rotation for square (true at left end, false at right end) */\n    verts: Array<number>\n): number\n{\n    const ix = x - (nx * innerWeight);\n    const iy = y - (ny * innerWeight);\n    const ox = x + (nx * outerWeight);\n    const oy = y + (ny * outerWeight);\n\n    /* Rotate nx,ny for extension vector */\n    let exx; let\n        eyy;\n\n    if (clockwise)\n    {\n        exx = ny;\n        eyy = -nx;\n    }\n    else\n    {\n        exx = -ny;\n        eyy = nx;\n    }\n\n    /* [i|0]x,y extended at cap */\n    const eix = ix + exx;\n    const eiy = iy + eyy;\n    const eox = ox + exx;\n    const eoy = oy + eyy;\n\n    /* Square itself must be inserted clockwise*/\n    verts.push(eix, eiy);\n    verts.push(eox, eoy);\n\n    return 2;\n}\n\n/**\n * Buffers vertices to draw an arc at the line joint or cap.\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {number} cx - X-coord of center\n * @param {number} cy - Y-coord of center\n * @param {number} sx - X-coord of arc start\n * @param {number} sy - Y-coord of arc start\n * @param {number} ex - X-coord of arc end\n * @param {number} ey - Y-coord of arc end\n * @param {Array<number>} verts - buffer of vertices\n * @param {boolean} clockwise - orientation of vertices\n * @returns {number} - no. of vertices pushed\n */\nfunction round(\n    cx: number,\n    cy: number,\n    sx: number,\n    sy: number,\n    ex: number,\n    ey: number,\n    verts: Array<number>,\n    clockwise: boolean, /* if not cap, then clockwise is turn of joint, otherwise rotation from angle0 to angle1 */\n): number\n{\n    const cx2p0x = sx - cx;\n    const cy2p0y = sy - cy;\n\n    let angle0 = Math.atan2(cx2p0x, cy2p0y);\n    let angle1 = Math.atan2(ex - cx, ey - cy);\n\n    if (clockwise && angle0 < angle1)\n    {\n        angle0 += Math.PI * 2;\n    }\n    else if (!clockwise && angle0 > angle1)\n    {\n        angle1 += Math.PI * 2;\n    }\n\n    let startAngle = angle0;\n    const angleDiff = angle1 - angle0;\n    const absAngleDiff = Math.abs(angleDiff);\n\n    /* if (absAngleDiff >= PI_LBOUND && absAngleDiff <= PI_UBOUND)\n    {\n        const r1x = cx - nxtPx;\n        const r1y = cy - nxtPy;\n\n        if (r1x === 0)\n        {\n            if (r1y > 0)\n            {\n                angleDiff = -angleDiff;\n            }\n        }\n        else if (r1x >= -GRAPHICS_CURVES.epsilon)\n        {\n            angleDiff = -angleDiff;\n        }\n    }*/\n\n    const radius = Math.sqrt((cx2p0x * cx2p0x) + (cy2p0y * cy2p0y));\n    const segCount = ((15 * absAngleDiff * Math.sqrt(radius) / Math.PI) >> 0) + 1;\n    const angleInc = angleDiff / segCount;\n\n    startAngle += angleInc;\n\n    if (clockwise)\n    {\n        verts.push(cx, cy);\n        verts.push(sx, sy);\n\n        for (let i = 1, angle = startAngle; i < segCount; i++, angle += angleInc)\n        {\n            verts.push(cx, cy);\n            verts.push(cx + ((Math.sin(angle) * radius)),\n                cy + ((Math.cos(angle) * radius)));\n        }\n\n        verts.push(cx, cy);\n        verts.push(ex, ey);\n    }\n    else\n    {\n        verts.push(sx, sy);\n        verts.push(cx, cy);\n\n        for (let i = 1, angle = startAngle; i < segCount; i++, angle += angleInc)\n        {\n            verts.push(cx + ((Math.sin(angle) * radius)),\n                cy + ((Math.cos(angle) * radius)));\n            verts.push(cx, cy);\n        }\n\n        verts.push(ex, ey);\n        verts.push(cx, cy);\n    }\n\n    return segCount * 2;\n}\n\n/**\n * Builds a line to draw using the polygon method.\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {PIXI.GraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {PIXI.GraphicsGeometry} graphicsGeometry - Geometry where to append output\n */\nfunction buildNonNativeLine(graphicsData: GraphicsData, graphicsGeometry: GraphicsGeometry): void\n{\n    const shape = graphicsData.shape as Polygon;\n    let points = graphicsData.points || shape.points.slice();\n    const eps = graphicsGeometry.closePointEps;\n\n    if (points.length === 0)\n    {\n        return;\n    }\n    // if the line width is an odd number add 0.5 to align to a whole pixel\n    // commenting this out fixes #711 and #1620\n    // if (graphicsData.lineWidth%2)\n    // {\n    //     for (i = 0; i < points.length; i++)\n    //     {\n    //         points[i] += 0.5;\n    //     }\n    // }\n\n    const style = graphicsData.lineStyle;\n\n    // get first and last point.. figure out the middle!\n    const firstPoint = new Point(points[0], points[1]);\n    const lastPoint = new Point(points[points.length - 2], points[points.length - 1]);\n    const closedShape = shape.type !== SHAPES.POLY || shape.closeStroke;\n    const closedPath = Math.abs(firstPoint.x - lastPoint.x) < eps\n        && Math.abs(firstPoint.y - lastPoint.y) < eps;\n\n    // if the first point is the last point - gonna have issues :)\n    if (closedShape)\n    {\n        // need to clone as we are going to slightly modify the shape..\n        points = points.slice();\n\n        if (closedPath)\n        {\n            points.pop();\n            points.pop();\n            lastPoint.set(points[points.length - 2], points[points.length - 1]);\n        }\n\n        const midPointX = (firstPoint.x + lastPoint.x) * 0.5;\n        const midPointY = (lastPoint.y + firstPoint.y) * 0.5;\n\n        points.unshift(midPointX, midPointY);\n        points.push(midPointX, midPointY);\n    }\n\n    const verts = graphicsGeometry.points;\n    const length = points.length / 2;\n    let indexCount = points.length;\n    const indexStart = verts.length / 2;\n\n    // Max. inner and outer width\n    const width = style.width / 2;\n    const widthSquared = width * width;\n    const miterLimitSquared = style.miterLimit * style.miterLimit;\n\n    /* Line segments of interest where (x1,y1) forms the corner. */\n    let x0 = points[0];\n    let y0 = points[1];\n    let x1 = points[2];\n    let y1 = points[3];\n    let x2 = 0;\n    let y2 = 0;\n\n    /* perp[?](x|y) = the line normal with magnitude lineWidth. */\n    let perpx = -(y0 - y1);\n    let perpy = x0 - x1;\n    let perp1x = 0;\n    let perp1y = 0;\n\n    let dist = Math.sqrt((perpx * perpx) + (perpy * perpy));\n\n    perpx /= dist;\n    perpy /= dist;\n    perpx *= width;\n    perpy *= width;\n\n    const ratio = style.alignment;// 0.5;\n    const innerWeight = (1 - ratio) * 2;\n    const outerWeight = ratio * 2;\n\n    if (!closedShape)\n    {\n        if (style.cap === LINE_CAP.ROUND)\n        {\n            indexCount += round(\n                x0 - (perpx * (innerWeight - outerWeight) * 0.5),\n                y0 - (perpy * (innerWeight - outerWeight) * 0.5),\n                x0 - (perpx * innerWeight),\n                y0 - (perpy * innerWeight),\n                x0 + (perpx * outerWeight),\n                y0 + (perpy * outerWeight),\n                verts,\n                true,\n            ) + 2;\n        }\n        else if (style.cap === LINE_CAP.SQUARE)\n        {\n            indexCount += square(x0, y0, perpx, perpy, innerWeight, outerWeight, true, verts);\n        }\n    }\n\n    // Push first point (below & above vertices)\n    verts.push(\n        x0 - (perpx * innerWeight),\n        y0 - (perpy * innerWeight));\n    verts.push(\n        x0 + (perpx * outerWeight),\n        y0 + (perpy * outerWeight));\n\n    for (let i = 1; i < length - 1; ++i)\n    {\n        x0 = points[(i - 1) * 2];\n        y0 = points[((i - 1) * 2) + 1];\n\n        x1 = points[i * 2];\n        y1 = points[(i * 2) + 1];\n\n        x2 = points[(i + 1) * 2];\n        y2 = points[((i + 1) * 2) + 1];\n\n        perpx = -(y0 - y1);\n        perpy = x0 - x1;\n\n        dist = Math.sqrt((perpx * perpx) + (perpy * perpy));\n        perpx /= dist;\n        perpy /= dist;\n        perpx *= width;\n        perpy *= width;\n\n        perp1x = -(y1 - y2);\n        perp1y = x1 - x2;\n\n        dist = Math.sqrt((perp1x * perp1x) + (perp1y * perp1y));\n        perp1x /= dist;\n        perp1y /= dist;\n        perp1x *= width;\n        perp1y *= width;\n\n        /* d[x|y](0|1) = the component displacment between points p(0,1|1,2) */\n        const dx0 = x1 - x0;\n        const dy0 = y0 - y1;\n        const dx1 = x1 - x2;\n        const dy1 = y2 - y1;\n\n        /* +ve if internal angle counterclockwise, -ve if internal angle clockwise. */\n        const cross = (dy0 * dx1) - (dy1 * dx0);\n        const clockwise = (cross < 0);\n\n        /* Going nearly straight? */\n        if (Math.abs(cross) < 0.1)\n        {\n            verts.push(\n                x1 - (perpx * innerWeight),\n                y1 - (perpy * innerWeight));\n            verts.push(\n                x1 + (perpx * outerWeight),\n                y1 + (perpy * outerWeight));\n\n            continue;\n        }\n\n        /* p[x|y] is the miter point. pdist is the distance between miter point and p1. */\n        const c1 = ((-perpx + x0) * (-perpy + y1)) - ((-perpx + x1) * (-perpy + y0));\n        const c2 = ((-perp1x + x2) * (-perp1y + y1)) - ((-perp1x + x1) * (-perp1y + y2));\n        const px = ((dx0 * c2) - (dx1 * c1)) / cross;\n        const py = ((dy1 * c1) - (dy0 * c2)) / cross;\n        const pdist = ((px - x1) * (px - x1)) + ((py - y1) * (py - y1));\n\n        /* Inner miter point */\n        const imx = x1 + ((px - x1) * innerWeight);\n        const imy = y1 + ((py - y1) * innerWeight);\n        /* Outer miter point */\n        const omx = x1 - ((px - x1) * outerWeight);\n        const omy = y1 - ((py - y1) * outerWeight);\n\n        /* Is the inside miter point too far away, creating a spike? */\n        const smallerInsideSegmentSq = Math.min((dx0 * dx0) + (dy0 * dy0), (dx1 * dx1) + (dy1 * dy1));\n        const insideWeight = clockwise ? innerWeight : outerWeight;\n        const smallerInsideDiagonalSq = smallerInsideSegmentSq + (insideWeight * insideWeight * widthSquared);\n        const insideMiterOk = pdist <= smallerInsideDiagonalSq;\n\n        if (insideMiterOk)\n        {\n            if (style.join === LINE_JOIN.BEVEL || pdist / widthSquared > miterLimitSquared)\n            {\n                if (clockwise) /* rotating at inner angle */\n                {\n                    verts.push(imx, imy);// inner miter point\n                    verts.push(x1 + (perpx * outerWeight), y1 + (perpy * outerWeight));// first segment's outer vertex\n                    verts.push(imx, imy);// inner miter point\n                    verts.push(x1 + (perp1x * outerWeight), y1 + (perp1y * outerWeight));// second segment's outer vertex\n                }\n                else /* rotating at outer angle */\n                {\n                    verts.push(x1 - (perpx * innerWeight), y1 - (perpy * innerWeight));// first segment's inner vertex\n                    verts.push(omx, omy);// outer miter point\n                    verts.push(x1 - (perp1x * innerWeight), y1 - (perp1y * innerWeight));// second segment's outer vertex\n                    verts.push(omx, omy);// outer miter point\n                }\n\n                indexCount += 2;\n            }\n            else if (style.join === LINE_JOIN.ROUND)\n            {\n                if (clockwise) /* arc is outside */\n                {\n                    verts.push(imx, imy);\n                    verts.push(x1 + (perpx * outerWeight), y1 + (perpy * outerWeight));\n\n                    indexCount += round(\n                        x1, y1,\n                        x1 + (perpx * outerWeight), y1 + (perpy * outerWeight),\n                        x1 + (perp1x * outerWeight), y1 + (perp1y * outerWeight),\n                        verts, true\n                    ) + 4;\n\n                    verts.push(imx, imy);\n                    verts.push(x1 + (perp1x * outerWeight), y1 + (perp1y * outerWeight));\n                }\n                else /* arc is inside */\n                {\n                    verts.push(x1 - (perpx * innerWeight), y1 - (perpy * innerWeight));\n                    verts.push(omx, omy);\n\n                    indexCount += round(\n                        x1, y1,\n                        x1 - (perpx * innerWeight), y1 - (perpy * innerWeight),\n                        x1 - (perp1x * innerWeight), y1 - (perp1y * innerWeight),\n                        verts, false\n                    ) + 4;\n\n                    verts.push(x1 - (perp1x * innerWeight), y1 - (perp1y * innerWeight));\n                    verts.push(omx, omy);\n                }\n            }\n            else\n            {\n                verts.push(imx, imy);\n                verts.push(omx, omy);\n            }\n        }\n        else // inside miter is NOT ok\n        {\n            verts.push(x1 - (perpx * innerWeight), y1 - (perpy * innerWeight)); // first segment's inner vertex\n            verts.push(x1 + (perpx * outerWeight), y1 + (perpy * outerWeight)); // first segment's outer vertex\n            if (style.join === LINE_JOIN.BEVEL || pdist / widthSquared > miterLimitSquared)\n            {\n                // Nothing needed\n            }\n            else if (style.join === LINE_JOIN.ROUND)\n            {\n                if (clockwise) /* arc is outside */\n                {\n                    indexCount += round(\n                        x1, y1,\n                        x1 + (perpx * outerWeight), y1 + (perpy * outerWeight),\n                        x1 + (perp1x * outerWeight), y1 + (perp1y * outerWeight),\n                        verts, true\n                    ) + 2;\n                }\n                else /* arc is inside */\n                {\n                    indexCount += round(\n                        x1, y1,\n                        x1 - (perpx * innerWeight), y1 - (perpy * innerWeight),\n                        x1 - (perp1x * innerWeight), y1 - (perp1y * innerWeight),\n                        verts, false\n                    ) + 2;\n                }\n            }\n            else\n            {\n                if (clockwise)\n                {\n                    verts.push(omx, omy); // inner miter point\n                    verts.push(omx, omy); // inner miter point\n                }\n                else\n                {\n                    verts.push(imx, imy); // outer miter point\n                    verts.push(imx, imy); // outer miter point\n                }\n                indexCount += 2;\n            }\n            verts.push(x1 - (perp1x * innerWeight), y1 - (perp1y * innerWeight)); // second segment's inner vertex\n            verts.push(x1 + (perp1x * outerWeight), y1 + (perp1y * outerWeight)); // second segment's outer vertex\n            indexCount += 2;\n        }\n    }\n\n    x0 = points[(length - 2) * 2];\n    y0 = points[((length - 2) * 2) + 1];\n\n    x1 = points[(length - 1) * 2];\n    y1 = points[((length - 1) * 2) + 1];\n\n    perpx = -(y0 - y1);\n    perpy = x0 - x1;\n\n    dist = Math.sqrt((perpx * perpx) + (perpy * perpy));\n    perpx /= dist;\n    perpy /= dist;\n    perpx *= width;\n    perpy *= width;\n\n    verts.push(x1 - (perpx * innerWeight), y1 - (perpy * innerWeight));\n    verts.push(x1 + (perpx * outerWeight), y1 + (perpy * outerWeight));\n\n    if (!closedShape)\n    {\n        if (style.cap === LINE_CAP.ROUND)\n        {\n            indexCount += round(\n                x1 - (perpx * (innerWeight - outerWeight) * 0.5),\n                y1 - (perpy * (innerWeight - outerWeight) * 0.5),\n                x1 - (perpx * innerWeight),\n                y1 - (perpy * innerWeight),\n                x1 + (perpx * outerWeight),\n                y1 + (perpy * outerWeight),\n                verts,\n                false\n            ) + 2;\n        }\n        else if (style.cap === LINE_CAP.SQUARE)\n        {\n            indexCount += square(x1, y1, perpx, perpy, innerWeight, outerWeight, false, verts);\n        }\n    }\n\n    const indices = graphicsGeometry.indices;\n    const eps2 = GRAPHICS_CURVES.epsilon * GRAPHICS_CURVES.epsilon;\n\n    // indices.push(indexStart);\n    for (let i = indexStart; i < indexCount + indexStart - 2; ++i)\n    {\n        x0 = verts[(i * 2)];\n        y0 = verts[(i * 2) + 1];\n\n        x1 = verts[(i + 1) * 2];\n        y1 = verts[((i + 1) * 2) + 1];\n\n        x2 = verts[(i + 2) * 2];\n        y2 = verts[((i + 2) * 2) + 1];\n\n        /* Skip zero area triangles */\n        if (Math.abs((x0 * (y1 - y2)) + (x1 * (y2 - y0)) + (x2 * (y0 - y1))) < eps2)\n        {\n            continue;\n        }\n\n        indices.push(i, i + 1, i + 2);\n    }\n}\n\n/**\n * Builds a line to draw using the gl.drawArrays(gl.LINES) method\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {PIXI.GraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {PIXI.GraphicsGeometry} graphicsGeometry - Geometry where to append output\n */\nfunction buildNativeLine(graphicsData: GraphicsData, graphicsGeometry: GraphicsGeometry): void\n{\n    let i = 0;\n\n    const shape = graphicsData.shape as Polygon;\n    const points = graphicsData.points || shape.points;\n    const closedShape = shape.type !== SHAPES.POLY || shape.closeStroke;\n\n    if (points.length === 0) return;\n\n    const verts = graphicsGeometry.points;\n    const indices = graphicsGeometry.indices;\n    const length = points.length / 2;\n\n    const startIndex = verts.length / 2;\n    let currentIndex = startIndex;\n\n    verts.push(points[0], points[1]);\n\n    for (i = 1; i < length; i++)\n    {\n        verts.push(points[i * 2], points[(i * 2) + 1]);\n        indices.push(currentIndex, currentIndex + 1);\n\n        currentIndex++;\n    }\n\n    if (closedShape)\n    {\n        indices.push(currentIndex, startIndex);\n    }\n}\n\n/**\n * Builds a line to draw\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {PIXI.GraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {PIXI.GraphicsGeometry} graphicsGeometry - Geometry where to append output\n */\nexport function buildLine(graphicsData: GraphicsData, graphicsGeometry: GraphicsGeometry): void\n{\n    if (graphicsData.lineStyle.native)\n    {\n        buildNativeLine(graphicsData, graphicsGeometry);\n    }\n    else\n    {\n        buildNonNativeLine(graphicsData, graphicsGeometry);\n    }\n}\n","import { Polygon, PI_2 } from '@pixi/math';\n\n/**\n * Draw a star shape with an arbitrary number of points.\n *\n * @class\n * @extends PIXI.Polygon\n * @memberof PIXI.graphicsUtils\n * @param {number} x - Center X position of the star\n * @param {number} y - Center Y position of the star\n * @param {number} points - The number of points of the star, must be > 1\n * @param {number} radius - The outer radius of the star\n * @param {number} [innerRadius] - The inner radius between points, default half `radius`\n * @param {number} [rotation=0] - The rotation of the star in radians, where 0 is vertical\n * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n */\nexport class Star extends Polygon\n{\n    constructor(x: number, y: number, points: number, radius: number, innerRadius: number, rotation = 0)\n    {\n        innerRadius = innerRadius || radius / 2;\n\n        const startAngle = (-1 * Math.PI / 2) + rotation;\n        const len = points * 2;\n        const delta = PI_2 / len;\n        const polygon = [];\n\n        for (let i = 0; i < len; i++)\n        {\n            const r = i % 2 ? innerRadius : radius;\n            const angle = (i * delta) + startAngle;\n\n            polygon.push(\n                x + (r * Math.cos(angle)),\n                y + (r * Math.sin(angle))\n            );\n        }\n\n        super(polygon);\n    }\n}\n","import { GRAPHICS_CURVES } from '../const';\nimport { PI_2 } from '@pixi/math';\n\ninterface IArcLikeShape {\n    cx: number;\n    cy: number;\n    radius: number;\n    startAngle: number;\n    endAngle: number;\n    anticlockwise: boolean;\n}\n\n/**\n * Utilities for arc curves\n * @class\n * @private\n */\nexport class ArcUtils\n{\n    /**\n     * The arcTo() method creates an arc/curve between two tangents on the canvas.\n     *\n     * \"borrowed\" from https://code.google.com/p/fxcanvas/ - thanks google!\n     *\n     * @private\n     * @param {number} x1 - The x-coordinate of the beginning of the arc\n     * @param {number} y1 - The y-coordinate of the beginning of the arc\n     * @param {number} x2 - The x-coordinate of the end of the arc\n     * @param {number} y2 - The y-coordinate of the end of the arc\n     * @param {number} radius - The radius of the arc\n     * @return {object} If the arc length is valid, return center of circle, radius and other info otherwise `null`.\n     */\n    static curveTo(x1: number, y1: number, x2: number, y2: number, radius: number, points: Array<number>): IArcLikeShape\n    {\n        const fromX = points[points.length - 2];\n        const fromY = points[points.length - 1];\n\n        const a1 = fromY - y1;\n        const b1 = fromX - x1;\n        const a2 = y2 - y1;\n        const b2 = x2 - x1;\n        const mm = Math.abs((a1 * b2) - (b1 * a2));\n\n        if (mm < 1.0e-8 || radius === 0)\n        {\n            if (points[points.length - 2] !== x1 || points[points.length - 1] !== y1)\n            {\n                points.push(x1, y1);\n            }\n\n            return null;\n        }\n\n        const dd = (a1 * a1) + (b1 * b1);\n        const cc = (a2 * a2) + (b2 * b2);\n        const tt = (a1 * a2) + (b1 * b2);\n        const k1 = radius * Math.sqrt(dd) / mm;\n        const k2 = radius * Math.sqrt(cc) / mm;\n        const j1 = k1 * tt / dd;\n        const j2 = k2 * tt / cc;\n        const cx = (k1 * b2) + (k2 * b1);\n        const cy = (k1 * a2) + (k2 * a1);\n        const px = b1 * (k2 + j1);\n        const py = a1 * (k2 + j1);\n        const qx = b2 * (k1 + j2);\n        const qy = a2 * (k1 + j2);\n        const startAngle = Math.atan2(py - cy, px - cx);\n        const endAngle = Math.atan2(qy - cy, qx - cx);\n\n        return {\n            cx: (cx + x1),\n            cy: (cy + y1),\n            radius,\n            startAngle,\n            endAngle,\n            anticlockwise: (b1 * a2 > b2 * a1),\n        };\n    }\n\n    /* eslint-disable max-len */\n    /**\n     * The arc method creates an arc/curve (used to create circles, or parts of circles).\n     *\n     * @private\n     * @param {number} startX - Start x location of arc\n     * @param {number} startY - Start y location of arc\n     * @param {number} cx - The x-coordinate of the center of the circle\n     * @param {number} cy - The y-coordinate of the center of the circle\n     * @param {number} radius - The radius of the circle\n     * @param {number} startAngle - The starting angle, in radians (0 is at the 3 o'clock position\n     *  of the arc's circle)\n     * @param {number} endAngle - The ending angle, in radians\n     * @param {boolean} anticlockwise - Specifies whether the drawing should be\n     *  counter-clockwise or clockwise. False is default, and indicates clockwise, while true\n     *  indicates counter-clockwise.\n     * @param {number[]} points - Collection of points to add to\n     */\n    static arc(_startX: number, _startY: number, cx: number, cy: number, radius: number,\n        startAngle: number, endAngle: number, _anticlockwise: boolean, points: Array<number>): void\n    {\n        const sweep = endAngle - startAngle;\n        const n = GRAPHICS_CURVES._segmentsCount(\n            Math.abs(sweep) * radius,\n            Math.ceil(Math.abs(sweep) / PI_2) * 40\n        );\n\n        const theta = (sweep) / (n * 2);\n        const theta2 = theta * 2;\n        const cTheta = Math.cos(theta);\n        const sTheta = Math.sin(theta);\n        const segMinus = n - 1;\n        const remainder = (segMinus % 1) / segMinus;\n\n        for (let i = 0; i <= segMinus; ++i)\n        {\n            const real = i + (remainder * i);\n            const angle = ((theta) + startAngle + (theta2 * real));\n            const c = Math.cos(angle);\n            const s = -Math.sin(angle);\n\n            points.push(\n                (((cTheta * c) + (sTheta * s)) * radius) + cx,\n                (((cTheta * -s) + (sTheta * c)) * radius) + cy\n            );\n        }\n    }\n    /* eslint-enable max-len */\n}\n","import { GRAPHICS_CURVES } from '../const';\n\n/**\n * Utilities for bezier curves\n * @class\n * @private\n */\nexport class BezierUtils\n{\n    /**\n     * Calculate length of bezier curve.\n     * Analytical solution is impossible, since it involves an integral that does not integrate in general.\n     * Therefore numerical solution is used.\n     *\n     * @private\n     * @param {number} fromX - Starting point x\n     * @param {number} fromY - Starting point y\n     * @param {number} cpX - Control point x\n     * @param {number} cpY - Control point y\n     * @param {number} cpX2 - Second Control point x\n     * @param {number} cpY2 - Second Control point y\n     * @param {number} toX - Destination point x\n     * @param {number} toY - Destination point y\n     * @return {number} Length of bezier curve\n     */\n    static curveLength(\n        fromX: number, fromY: number,\n        cpX: number, cpY: number,\n        cpX2: number, cpY2: number,\n        toX: number, toY: number): number\n    {\n        const n = 10;\n        let result = 0.0;\n        let t = 0.0;\n        let t2 = 0.0;\n        let t3 = 0.0;\n        let nt = 0.0;\n        let nt2 = 0.0;\n        let nt3 = 0.0;\n        let x = 0.0;\n        let y = 0.0;\n        let dx = 0.0;\n        let dy = 0.0;\n        let prevX = fromX;\n        let prevY = fromY;\n\n        for (let i = 1; i <= n; ++i)\n        {\n            t = i / n;\n            t2 = t * t;\n            t3 = t2 * t;\n            nt = (1.0 - t);\n            nt2 = nt * nt;\n            nt3 = nt2 * nt;\n\n            x = (nt3 * fromX) + (3.0 * nt2 * t * cpX) + (3.0 * nt * t2 * cpX2) + (t3 * toX);\n            y = (nt3 * fromY) + (3.0 * nt2 * t * cpY) + (3 * nt * t2 * cpY2) + (t3 * toY);\n            dx = prevX - x;\n            dy = prevY - y;\n            prevX = x;\n            prevY = y;\n\n            result += Math.sqrt((dx * dx) + (dy * dy));\n        }\n\n        return result;\n    }\n\n    /**\n     * Calculate the points for a bezier curve and then draws it.\n     *\n     * Ignored from docs since it is not directly exposed.\n     *\n     * @ignore\n     * @param {number} cpX - Control point x\n     * @param {number} cpY - Control point y\n     * @param {number} cpX2 - Second Control point x\n     * @param {number} cpY2 - Second Control point y\n     * @param {number} toX - Destination point x\n     * @param {number} toY - Destination point y\n     * @param {number[]} points - Path array to push points into\n     */\n    static curveTo(\n        cpX: number, cpY: number,\n        cpX2: number, cpY2: number,\n        toX: number, toY: number,\n        points: Array<number>): void\n    {\n        const fromX = points[points.length - 2];\n        const fromY = points[points.length - 1];\n\n        points.length -= 2;\n\n        const n = GRAPHICS_CURVES._segmentsCount(\n            BezierUtils.curveLength(fromX, fromY, cpX, cpY, cpX2, cpY2, toX, toY)\n        );\n\n        let dt = 0;\n        let dt2 = 0;\n        let dt3 = 0;\n        let t2 = 0;\n        let t3 = 0;\n\n        points.push(fromX, fromY);\n\n        for (let i = 1, j = 0; i <= n; ++i)\n        {\n            j = i / n;\n\n            dt = (1 - j);\n            dt2 = dt * dt;\n            dt3 = dt2 * dt;\n\n            t2 = j * j;\n            t3 = t2 * j;\n\n            points.push(\n                (dt3 * fromX) + (3 * dt2 * j * cpX) + (3 * dt * t2 * cpX2) + (t3 * toX),\n                (dt3 * fromY) + (3 * dt2 * j * cpY) + (3 * dt * t2 * cpY2) + (t3 * toY)\n            );\n        }\n    }\n}\n","import { GRAPHICS_CURVES } from '../const';\n\n/**\n * Utilities for quadratic curves\n * @class\n * @private\n */\nexport class QuadraticUtils\n{\n    /**\n     * Calculate length of quadratic curve\n     * @see {@link http://www.malczak.linuxpl.com/blog/quadratic-bezier-curve-length/}\n     * for the detailed explanation of math behind this.\n     *\n     * @private\n     * @param {number} fromX - x-coordinate of curve start point\n     * @param {number} fromY - y-coordinate of curve start point\n     * @param {number} cpX - x-coordinate of curve control point\n     * @param {number} cpY - y-coordinate of curve control point\n     * @param {number} toX - x-coordinate of curve end point\n     * @param {number} toY - y-coordinate of curve end point\n     * @return {number} Length of quadratic curve\n     */\n    static curveLength(\n        fromX: number, fromY: number,\n        cpX: number, cpY: number,\n        toX: number, toY: number): number\n    {\n        const ax = fromX - (2.0 * cpX) + toX;\n        const ay = fromY - (2.0 * cpY) + toY;\n        const bx = (2.0 * cpX) - (2.0 * fromX);\n        const by = (2.0 * cpY) - (2.0 * fromY);\n        const a = 4.0 * ((ax * ax) + (ay * ay));\n        const b = 4.0 * ((ax * bx) + (ay * by));\n        const c = (bx * bx) + (by * by);\n\n        const s = 2.0 * Math.sqrt(a + b + c);\n        const a2 = Math.sqrt(a);\n        const a32 = 2.0 * a * a2;\n        const c2 = 2.0 * Math.sqrt(c);\n        const ba = b / a2;\n\n        return (\n            (a32 * s)\n                + (a2 * b * (s - c2))\n                + (\n                    ((4.0 * c * a) - (b * b))\n                   * Math.log(((2.0 * a2) + ba + s) / (ba + c2))\n                )\n        ) / (4.0 * a32);\n    }\n\n    /**\n     * Calculate the points for a quadratic bezier curve and then draws it.\n     * Based on: https://stackoverflow.com/questions/785097/how-do-i-implement-a-bezier-curve-in-c\n     *\n     * @private\n     * @param {number} cpX - Control point x\n     * @param {number} cpY - Control point y\n     * @param {number} toX - Destination point x\n     * @param {number} toY - Destination point y\n     * @param {number[]} points - Points to add segments to.\n     */\n    static curveTo(cpX: number, cpY: number, toX: number, toY: number, points: Array<number>): void\n    {\n        const fromX = points[points.length - 2];\n        const fromY = points[points.length - 1];\n\n        const n = GRAPHICS_CURVES._segmentsCount(\n            QuadraticUtils.curveLength(fromX, fromY, cpX, cpY, toX, toY)\n        );\n\n        let xa = 0;\n        let ya = 0;\n\n        for (let i = 1; i <= n; ++i)\n        {\n            const j = i / n;\n\n            xa = fromX + ((cpX - fromX) * j);\n            ya = fromY + ((cpY - fromY) * j);\n\n            points.push(xa + (((cpX + ((toX - cpX) * j)) - xa) * j),\n                ya + (((cpY + ((toY - cpY) * j)) - ya) * j));\n        }\n    }\n}\n","import type { LineStyle } from '../styles/LineStyle';\nimport type { FillStyle } from '../styles/FillStyle';\n\n/**\n * A structure to hold interim batch objects for Graphics.\n * @class\n * @memberof PIXI.graphicsUtils\n */\nexport class BatchPart\n{\n    public style: LineStyle | FillStyle;\n    public start: number;\n    public size: number;\n    public attribStart: number;\n    public attribSize: number;\n\n    constructor()\n    {\n        this.reset();\n    }\n\n    /**\n     * Begin batch part\n     *\n     * @param {PIXI.FillStyle | PIXI.LineStyle} style\n     * @param {number} startIndex\n     * @param {number} attribStart\n     */\n    public begin(style: LineStyle | FillStyle, startIndex: number, attribStart: number): void\n    {\n        this.reset();\n        this.style = style;\n        this.start = startIndex;\n        this.attribStart = attribStart;\n    }\n\n    /**\n     * End batch part\n     *\n     * @param {number} endIndex\n     * @param {number} endAttrib\n     */\n    public end(endIndex: number, endAttrib: number): void\n    {\n        this.attribSize = endAttrib - this.attribStart;\n        this.size = endIndex - this.start;\n    }\n\n    public reset(): void\n    {\n        this.style = null;\n        this.size = 0;\n        this.start = 0;\n        this.attribStart = 0;\n        this.attribSize = 0;\n    }\n}\n","/**\n * Generalized convenience utilities for Graphics.\n *\n * @namespace graphicsUtils\n * @memberof PIXI\n */\n\nimport { buildPoly } from './buildPoly';\nexport { buildPoly };\n\nimport { buildCircle } from './buildCircle';\nexport { buildCircle };\n\nimport { buildRectangle } from './buildRectangle';\nexport { buildRectangle };\n\nimport { buildRoundedRectangle } from './buildRoundedRectangle';\nexport { buildRoundedRectangle };\n\nexport * from './buildLine';\nexport * from './Star';\nexport * from './ArcUtils';\nexport * from './BezierUtils';\nexport * from './QuadraticUtils';\nexport * from './BatchPart';\n\n// for type only\nimport { BatchPart } from './BatchPart';\nimport { SHAPES } from '@pixi/math';\nimport { BatchDrawCall } from '@pixi/core';\nimport { IShapeBuildCommand } from './IShapeBuildCommand';\n\n/**\n * Map of fill commands for each shape type.\n *\n * @memberof PIXI.graphicsUtils\n * @member {Object} FILL_COMMANDS\n */\nexport const FILL_COMMANDS: Record<SHAPES, IShapeBuildCommand> = {\n    [SHAPES.POLY]: buildPoly,\n    [SHAPES.CIRC]: buildCircle,\n    [SHAPES.ELIP]: buildCircle,\n    [SHAPES.RECT]: buildRectangle,\n    [SHAPES.RREC]: buildRoundedRectangle,\n};\n\n/**\n * Batch pool, stores unused batches for preventing allocations.\n *\n * @memberof PIXI.graphicsUtils\n * @member {Array<PIXI.graphicsUtils.BatchPart>} BATCH_POOL\n */\nexport const BATCH_POOL: Array<BatchPart> = [];\n\n/**\n * Draw call pool, stores unused draw calls for preventing allocations.\n *\n * @memberof PIXI.graphicsUtils\n * @member {Array<PIXI.BatchDrawCall>} DRAW_CALL_POOL\n */\nexport const DRAW_CALL_POOL: Array<BatchDrawCall> = [];\n","import type { Matrix, SHAPES, IShape } from '@pixi/math';\nimport type { FillStyle } from './styles/FillStyle';\nimport type { LineStyle } from './styles/LineStyle';\n\n/**\n * A class to contain data useful for Graphics objects\n *\n * @class\n * @memberof PIXI\n */\nexport class GraphicsData\n{\n    shape: IShape;\n    lineStyle: LineStyle;\n    fillStyle: FillStyle;\n    matrix: Matrix;\n    type: SHAPES;\n    points: number[];\n    holes: Array<GraphicsData>;\n    /**\n     *\n     * @param {PIXI.Circle|PIXI.Ellipse|PIXI.Polygon|PIXI.Rectangle|PIXI.RoundedRectangle} shape - The shape object to draw.\n     * @param {PIXI.FillStyle} [fillStyle] - the width of the line to draw\n     * @param {PIXI.LineStyle} [lineStyle] - the color of the line to draw\n     * @param {PIXI.Matrix} [matrix] - Transform matrix\n     */\n    constructor(shape: IShape, fillStyle: FillStyle = null, lineStyle: LineStyle = null, matrix: Matrix = null)\n    {\n        /**\n         * The shape object to draw.\n         * @member {PIXI.Circle|PIXI.Ellipse|PIXI.Polygon|PIXI.Rectangle|PIXI.RoundedRectangle}\n         */\n        this.shape = shape;\n\n        /**\n         * The style of the line.\n         * @member {PIXI.LineStyle}\n         */\n        this.lineStyle = lineStyle;\n\n        /**\n         * The style of the fill.\n         * @member {PIXI.FillStyle}\n         */\n        this.fillStyle = fillStyle;\n\n        /**\n         * The transform matrix.\n         * @member {PIXI.Matrix}\n         */\n        this.matrix = matrix;\n\n        /**\n         * The type of the shape, see the Const.Shapes file for all the existing types,\n         * @member {number}\n         */\n        this.type = shape.type;\n\n        /**\n         * The collection of points.\n         * @member {number[]}\n         */\n        this.points = [];\n\n        /**\n         * The collection of holes.\n         * @member {PIXI.GraphicsData[]}\n         */\n        this.holes = [];\n    }\n\n    /**\n     * Creates a new GraphicsData object with the same values as this one.\n     *\n     * @return {PIXI.GraphicsData} Cloned GraphicsData object\n     */\n    public clone(): GraphicsData\n    {\n        return new GraphicsData(\n            this.shape,\n            this.fillStyle,\n            this.lineStyle,\n            this.matrix\n        );\n    }\n\n    /**\n     * Destroys the Graphics data.\n     *\n     */\n    public destroy(): void\n    {\n        this.shape = null;\n        this.holes.length = 0;\n        this.holes = null;\n        this.points.length = 0;\n        this.points = null;\n        this.lineStyle = null;\n        this.fillStyle = null;\n    }\n}\n","import {\n    buildLine,\n    buildPoly,\n    BatchPart,\n    FILL_COMMANDS,\n    BATCH_POOL,\n    DRAW_CALL_POOL,\n} from './utils';\n\nimport {\n    BatchGeometry,\n    BatchDrawCall,\n    BatchTextureArray,\n    BaseTexture,\n    Texture,\n} from '@pixi/core';\n\nimport { DRAW_MODES, WRAP_MODES } from '@pixi/constants';\nimport { SHAPES, Point, Matrix } from '@pixi/math';\nimport { GraphicsData } from './GraphicsData';\nimport { premultiplyTint } from '@pixi/utils';\nimport { Bounds } from '@pixi/display';\n\nimport type { Circle, Ellipse, Polygon, Rectangle, RoundedRectangle, IPointData } from '@pixi/math';\nimport type { FillStyle } from './styles/FillStyle';\nimport type { LineStyle } from './styles/LineStyle';\n\n/**\n * @description Complex shape type\n * @todo Move to Math shapes\n */\ntype IShape = Circle | Ellipse | Polygon | Rectangle | RoundedRectangle;\n\nconst tmpPoint = new Point();\nconst tmpBounds = new Bounds();\n\n/**\n * The Graphics class contains methods used to draw primitive shapes such as lines, circles and\n * rectangles to the display, and to color and fill them.\n *\n * GraphicsGeometry is designed to not be continually updating the geometry since it's expensive\n * to re-tesselate using **earcut**. Consider using {@link PIXI.Mesh} for this use-case, it's much faster.\n *\n * @class\n * @extends PIXI.BatchGeometry\n * @memberof PIXI\n */\nexport class GraphicsGeometry extends BatchGeometry\n{\n    /**\n     * The maximum number of points to consider an object \"batchable\",\n     * able to be batched by the renderer's batch system.\n     *\n     * @memberof PIXI.GraphicsGeometry\n     * @static\n     * @member {number} BATCHABLE_SIZE\n     * @default 100\n     */\n    public static BATCHABLE_SIZE = 100;\n\n    public closePointEps: number;\n    public boundsPadding: number;\n\n    uvsFloat32: Float32Array = null;\n    indicesUint16: Uint16Array | Uint32Array = null;\n    batchable: boolean;\n    points: Array<number>;\n    colors: Array<number>;\n    uvs: Array<number>;\n    indices: Array<number>;\n    textureIds: Array<number>;\n    graphicsData: Array<GraphicsData>;\n    drawCalls: Array<BatchDrawCall>;\n    batchDirty: number;\n    batches: Array<BatchPart>;\n\n    protected dirty: number;\n    protected cacheDirty: number;\n    protected clearDirty: number;\n    protected shapeIndex: number;\n    protected _bounds: Bounds;\n    protected boundsDirty: number;\n\n    constructor()\n    {\n        super();\n\n        /**\n         * An array of points to draw, 2 numbers per point\n         *\n         * @member {number[]}\n         * @protected\n         */\n        this.points = [];\n\n        /**\n         * The collection of colors\n         *\n         * @member {number[]}\n         * @protected\n         */\n        this.colors = [];\n\n        /**\n         * The UVs collection\n         *\n         * @member {number[]}\n         * @protected\n         */\n        this.uvs = [];\n\n        /**\n         * The indices of the vertices\n         *\n         * @member {number[]}\n         * @protected\n         */\n        this.indices = [];\n\n        /**\n         * Reference to the texture IDs.\n         *\n         * @member {number[]}\n         * @protected\n         */\n        this.textureIds = [];\n\n        /**\n         * The collection of drawn shapes.\n         *\n         * @member {PIXI.GraphicsData[]}\n         * @protected\n         */\n        this.graphicsData = [];\n\n        /**\n         * Used to detect if the graphics object has changed.\n         *\n         * @member {number}\n         * @protected\n         */\n        this.dirty = 0;\n\n        /**\n         * Batches need to regenerated if the geometry is updated.\n         *\n         * @member {number}\n         * @protected\n         */\n        this.batchDirty = -1;\n\n        /**\n         * Used to check if the cache is dirty.\n         *\n         * @member {number}\n         * @protected\n         */\n        this.cacheDirty = -1;\n\n        /**\n         * Used to detect if we cleared the graphicsData.\n         *\n         * @member {number}\n         * @default 0\n         * @protected\n         */\n        this.clearDirty = 0;\n\n        /**\n         * List of current draw calls drived from the batches.\n         *\n         * @member {object[]}\n         * @protected\n         */\n        this.drawCalls = [];\n\n        /**\n         * Intermediate abstract format sent to batch system.\n         * Can be converted to drawCalls or to batchable objects.\n         *\n         * @member {PIXI.graphicsUtils.BatchPart[]}\n         * @protected\n         */\n        this.batches = [];\n\n        /**\n         * Index of the last batched shape in the stack of calls.\n         *\n         * @member {number}\n         * @protected\n         */\n        this.shapeIndex = 0;\n\n        /**\n         * Cached bounds.\n         *\n         * @member {PIXI.Bounds}\n         * @protected\n         */\n        this._bounds = new Bounds();\n\n        /**\n         * The bounds dirty flag.\n         *\n         * @member {number}\n         * @protected\n         */\n        this.boundsDirty = -1;\n\n        /**\n         * Padding to add to the bounds.\n         *\n         * @member {number}\n         * @default 0\n         */\n        this.boundsPadding = 0;\n\n        this.batchable = false;\n\n        this.indicesUint16 = null;\n\n        this.uvsFloat32 = null;\n\n        /**\n         * Minimal distance between points that are considered different.\n         * Affects line tesselation.\n         *\n         * @member {number}\n         */\n        this.closePointEps = 1e-4;\n    }\n\n    /**\n     * Get the current bounds of the graphic geometry.\n     *\n     * @member {PIXI.Bounds}\n     * @readonly\n     */\n    public get bounds(): Bounds\n    {\n        if (this.boundsDirty !== this.dirty)\n        {\n            this.boundsDirty = this.dirty;\n            this.calculateBounds();\n        }\n\n        return this._bounds;\n    }\n\n    /**\n     * Call if you changed graphicsData manually.\n     * Empties all batch buffers.\n     */\n    protected invalidate(): void\n    {\n        this.boundsDirty = -1;\n        this.dirty++;\n        this.batchDirty++;\n        this.shapeIndex = 0;\n\n        this.points.length = 0;\n        this.colors.length = 0;\n        this.uvs.length = 0;\n        this.indices.length = 0;\n        this.textureIds.length = 0;\n\n        for (let i = 0; i < this.drawCalls.length; i++)\n        {\n            this.drawCalls[i].texArray.clear();\n            DRAW_CALL_POOL.push(this.drawCalls[i]);\n        }\n\n        this.drawCalls.length = 0;\n\n        for (let i = 0; i < this.batches.length; i++)\n        {\n            const batchPart = this.batches[i];\n\n            batchPart.reset();\n            BATCH_POOL.push(batchPart);\n        }\n\n        this.batches.length = 0;\n    }\n\n    /**\n     * Clears the graphics that were drawn to this Graphics object, and resets fill and line style settings.\n     *\n     * @return {PIXI.GraphicsGeometry} This GraphicsGeometry object. Good for chaining method calls\n     */\n    public clear(): GraphicsGeometry\n    {\n        if (this.graphicsData.length > 0)\n        {\n            this.invalidate();\n            this.clearDirty++;\n            this.graphicsData.length = 0;\n        }\n\n        return this;\n    }\n\n    /**\n     * Draws the given shape to this Graphics object. Can be any of Circle, Rectangle, Ellipse, Line or Polygon.\n     *\n     * @param {PIXI.Circle|PIXI.Ellipse|PIXI.Polygon|PIXI.Rectangle|PIXI.RoundedRectangle} shape - The shape object to draw.\n     * @param {PIXI.FillStyle} fillStyle - Defines style of the fill.\n     * @param {PIXI.LineStyle} lineStyle - Defines style of the lines.\n     * @param {PIXI.Matrix} matrix - Transform applied to the points of the shape.\n     * @return {PIXI.GraphicsGeometry} Returns geometry for chaining.\n     */\n    public drawShape(\n        shape: IShape,\n        fillStyle: FillStyle = null,\n        lineStyle: LineStyle = null,\n        matrix: Matrix = null): GraphicsGeometry\n    {\n        const data = new GraphicsData(shape, fillStyle, lineStyle, matrix);\n\n        this.graphicsData.push(data);\n        this.dirty++;\n\n        return this;\n    }\n\n    /**\n     * Draws the given shape to this Graphics object. Can be any of Circle, Rectangle, Ellipse, Line or Polygon.\n     *\n     * @param {PIXI.Circle|PIXI.Ellipse|PIXI.Polygon|PIXI.Rectangle|PIXI.RoundedRectangle} shape - The shape object to draw.\n     * @param {PIXI.Matrix} matrix - Transform applied to the points of the shape.\n     * @return {PIXI.GraphicsGeometry} Returns geometry for chaining.\n     */\n    public drawHole(shape: IShape, matrix: Matrix = null): GraphicsGeometry\n    {\n        if (!this.graphicsData.length)\n        {\n            return null;\n        }\n\n        const data = new GraphicsData(shape, null, null, matrix);\n\n        const lastShape = this.graphicsData[this.graphicsData.length - 1];\n\n        data.lineStyle = lastShape.lineStyle;\n\n        lastShape.holes.push(data);\n\n        this.dirty++;\n\n        return this;\n    }\n\n    /**\n     * Destroys the GraphicsGeometry object.\n     *\n     */\n    public destroy(): void\n    {\n        super.destroy();\n\n        // destroy each of the GraphicsData objects\n        for (let i = 0; i < this.graphicsData.length; ++i)\n        {\n            this.graphicsData[i].destroy();\n        }\n\n        this.points.length = 0;\n        this.points = null;\n        this.colors.length = 0;\n        this.colors = null;\n        this.uvs.length = 0;\n        this.uvs = null;\n        this.indices.length = 0;\n        this.indices = null;\n        this.indexBuffer.destroy();\n        this.indexBuffer = null;\n        this.graphicsData.length = 0;\n        this.graphicsData = null;\n        this.drawCalls.length = 0;\n        this.drawCalls = null;\n        this.batches.length = 0;\n        this.batches = null;\n        this._bounds = null;\n    }\n\n    /**\n     * Check to see if a point is contained within this geometry.\n     *\n     * @param {PIXI.IPointData} point - Point to check if it's contained.\n     * @return {Boolean} `true` if the point is contained within geometry.\n     */\n    public containsPoint(point: IPointData): boolean\n    {\n        const graphicsData = this.graphicsData;\n\n        for (let i = 0; i < graphicsData.length; ++i)\n        {\n            const data = graphicsData[i];\n\n            if (!data.fillStyle.visible)\n            {\n                continue;\n            }\n\n            // only deal with fills..\n            if (data.shape)\n            {\n                if (data.matrix)\n                {\n                    data.matrix.applyInverse(point, tmpPoint);\n                }\n                else\n                {\n                    tmpPoint.copyFrom(point);\n                }\n\n                if (data.shape.contains(tmpPoint.x, tmpPoint.y))\n                {\n                    let hitHole = false;\n\n                    if (data.holes)\n                    {\n                        for (let i = 0; i < data.holes.length; i++)\n                        {\n                            const hole = data.holes[i];\n\n                            if (hole.shape.contains(tmpPoint.x, tmpPoint.y))\n                            {\n                                hitHole = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    if (!hitHole)\n                    {\n                        return true;\n                    }\n                }\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Generates intermediate batch data. Either gets converted to drawCalls\n     * or used to convert to batch objects directly by the Graphics object.\n     *\n     * @param {boolean} [aloow32Indices] - Allow using 32-bit indices for preventings artefacts when more that 65535 vertices\n     */\n    updateBatches(allow32Indices?: boolean): void\n    {\n        if (!this.graphicsData.length)\n        {\n            this.batchable = true;\n\n            return;\n        }\n\n        if (!this.validateBatching())\n        {\n            return;\n        }\n\n        this.cacheDirty = this.dirty;\n\n        const uvs = this.uvs;\n        const graphicsData = this.graphicsData;\n\n        let batchPart: BatchPart = null;\n\n        let currentStyle = null;\n\n        if (this.batches.length > 0)\n        {\n            batchPart = this.batches[this.batches.length - 1];\n            currentStyle = batchPart.style;\n        }\n\n        for (let i = this.shapeIndex; i < graphicsData.length; i++)\n        {\n            this.shapeIndex++;\n\n            const data = graphicsData[i];\n            const fillStyle = data.fillStyle;\n            const lineStyle = data.lineStyle;\n            const command = FILL_COMMANDS[data.type];\n\n            // build out the shapes points..\n            command.build(data);\n\n            if (data.matrix)\n            {\n                this.transformPoints(data.points, data.matrix);\n            }\n\n            for (let j = 0; j < 2; j++)\n            {\n                const style = (j === 0) ? fillStyle : lineStyle;\n\n                if (!style.visible) continue;\n\n                const nextTexture = style.texture.baseTexture;\n                const index = this.indices.length;\n                const attribIndex = this.points.length / 2;\n\n                nextTexture.wrapMode = WRAP_MODES.REPEAT;\n\n                if (j === 0)\n                {\n                    this.processFill(data);\n                }\n                else\n                {\n                    this.processLine(data);\n                }\n\n                const size = (this.points.length / 2) - attribIndex;\n\n                if (size === 0) continue;\n                // close batch if style is different\n                if (batchPart && !this._compareStyles(currentStyle, style))\n                {\n                    batchPart.end(index, attribIndex);\n                    batchPart = null;\n                }\n                // spawn new batch if its first batch or previous was closed\n                if (!batchPart)\n                {\n                    batchPart = BATCH_POOL.pop() || new BatchPart();\n                    batchPart.begin(style, index, attribIndex);\n                    this.batches.push(batchPart);\n                    currentStyle = style;\n                }\n\n                this.addUvs(this.points, uvs, style.texture, attribIndex, size, style.matrix);\n            }\n        }\n\n        const index = this.indices.length;\n        const attrib = this.points.length / 2;\n\n        if (batchPart)\n        {\n            batchPart.end(index, attrib);\n        }\n\n        if (this.batches.length === 0)\n        {\n            // there are no visible styles in GraphicsData\n            // its possible that someone wants Graphics just for the bounds\n            this.batchable = true;\n\n            return;\n        }\n\n        // prevent allocation when length is same as buffer\n        if (this.indicesUint16 && this.indices.length === this.indicesUint16.length)\n        {\n            this.indicesUint16.set(this.indices);\n        }\n        else\n        {\n            const need32\n                = attrib > 0xffff && allow32Indices;\n\n            this.indicesUint16 = need32 ? new Uint32Array(this.indices) : new Uint16Array(this.indices);\n        }\n\n        // TODO make this a const..\n        this.batchable = this.isBatchable();\n\n        if (this.batchable)\n        {\n            this.packBatches();\n        }\n        else\n        {\n            this.buildDrawCalls();\n        }\n    }\n\n    /**\n     * Affinity check\n     *\n     * @param {PIXI.FillStyle | PIXI.LineStyle} styleA\n     * @param {PIXI.FillStyle | PIXI.LineStyle} styleB\n     */\n    protected _compareStyles(styleA: FillStyle | LineStyle, styleB: FillStyle | LineStyle): boolean\n    {\n        if (!styleA || !styleB)\n        {\n            return false;\n        }\n\n        if (styleA.texture.baseTexture !== styleB.texture.baseTexture)\n        {\n            return false;\n        }\n\n        if (styleA.color + styleA.alpha !== styleB.color + styleB.alpha)\n        {\n            return false;\n        }\n\n        if (!!(styleA as LineStyle).native !== !!(styleB as LineStyle).native)\n        {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Test geometry for batching process.\n     *\n     * @protected\n     */\n    protected validateBatching(): boolean\n    {\n        if (this.dirty === this.cacheDirty || !this.graphicsData.length)\n        {\n            return false;\n        }\n\n        for (let i = 0, l = this.graphicsData.length; i < l; i++)\n        {\n            const data = this.graphicsData[i];\n            const fill = data.fillStyle;\n            const line = data.lineStyle;\n\n            if (fill && !fill.texture.baseTexture.valid) return false;\n            if (line && !line.texture.baseTexture.valid) return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Offset the indices so that it works with the batcher.\n     *\n     * @protected\n     */\n    protected packBatches(): void\n    {\n        this.batchDirty++;\n        this.uvsFloat32 = new Float32Array(this.uvs);\n\n        const batches = this.batches;\n\n        for (let i = 0, l = batches.length; i < l; i++)\n        {\n            const batch = batches[i];\n\n            for (let j = 0; j < batch.size; j++)\n            {\n                const index = batch.start + j;\n\n                this.indicesUint16[index] = this.indicesUint16[index] - batch.attribStart;\n            }\n        }\n    }\n\n    /**\n     * Checks to see if this graphics geometry can be batched.\n     * Currently it needs to be small enough and not contain any native lines.\n     *\n     * @protected\n     */\n    protected isBatchable(): boolean\n    {\n        // prevent heavy mesh batching\n        if (this.points.length > 0xffff * 2)\n        {\n            return false;\n        }\n\n        const batches = this.batches;\n\n        for (let i = 0; i < batches.length; i++)\n        {\n            if ((batches[i].style as LineStyle).native)\n            {\n                return false;\n            }\n        }\n\n        return (this.points.length < GraphicsGeometry.BATCHABLE_SIZE * 2);\n    }\n\n    /**\n     * Converts intermediate batches data to drawCalls.\n     *\n     * @protected\n     */\n    protected buildDrawCalls(): void\n    {\n        let TICK = ++BaseTexture._globalBatch;\n\n        for (let i = 0; i < this.drawCalls.length; i++)\n        {\n            this.drawCalls[i].texArray.clear();\n            DRAW_CALL_POOL.push(this.drawCalls[i]);\n        }\n\n        this.drawCalls.length = 0;\n\n        const colors = this.colors;\n        const textureIds = this.textureIds;\n\n        let currentGroup: BatchDrawCall =  DRAW_CALL_POOL.pop();\n\n        if (!currentGroup)\n        {\n            currentGroup = new BatchDrawCall();\n            currentGroup.texArray = new BatchTextureArray();\n        }\n        currentGroup.texArray.count = 0;\n        currentGroup.start = 0;\n        currentGroup.size = 0;\n        currentGroup.type = DRAW_MODES.TRIANGLES;\n\n        let textureCount = 0;\n        let currentTexture = null;\n        let textureId = 0;\n        let native = false;\n        let drawMode = DRAW_MODES.TRIANGLES;\n\n        let index = 0;\n\n        this.drawCalls.push(currentGroup);\n\n        // TODO - this can be simplified\n        for (let i = 0; i < this.batches.length; i++)\n        {\n            const data = this.batches[i];\n\n            // TODO add some full on MAX_TEXTURE CODE..\n            const MAX_TEXTURES = 8;\n\n            // Forced cast for checking `native` without errors\n            const style = data.style as LineStyle;\n\n            const nextTexture = style.texture.baseTexture;\n\n            if (native !== !!style.native)\n            {\n                native = !!style.native;\n                drawMode = native ? DRAW_MODES.LINES : DRAW_MODES.TRIANGLES;\n\n                // force the batch to break!\n                currentTexture = null;\n                textureCount = MAX_TEXTURES;\n                TICK++;\n            }\n\n            if (currentTexture !== nextTexture)\n            {\n                currentTexture = nextTexture;\n\n                if (nextTexture._batchEnabled !== TICK)\n                {\n                    if (textureCount === MAX_TEXTURES)\n                    {\n                        TICK++;\n\n                        textureCount = 0;\n\n                        if (currentGroup.size > 0)\n                        {\n                            currentGroup = DRAW_CALL_POOL.pop();\n                            if (!currentGroup)\n                            {\n                                currentGroup = new BatchDrawCall();\n                                currentGroup.texArray = new BatchTextureArray();\n                            }\n                            this.drawCalls.push(currentGroup);\n                        }\n\n                        currentGroup.start = index;\n                        currentGroup.size = 0;\n                        currentGroup.texArray.count = 0;\n                        currentGroup.type = drawMode;\n                    }\n\n                    // TODO add this to the render part..\n                    // Hack! Because texture has protected `touched`\n                    nextTexture.touched = 1;// touch;\n\n                    nextTexture._batchEnabled = TICK;\n                    nextTexture._batchLocation = textureCount;\n                    nextTexture.wrapMode = 10497;\n\n                    currentGroup.texArray.elements[currentGroup.texArray.count++] = nextTexture;\n                    textureCount++;\n                }\n            }\n\n            currentGroup.size += data.size;\n            index += data.size;\n\n            textureId = nextTexture._batchLocation;\n\n            this.addColors(colors, style.color, style.alpha, data.attribSize);\n            this.addTextureIds(textureIds, textureId, data.attribSize);\n        }\n\n        BaseTexture._globalBatch = TICK;\n\n        // upload..\n        // merge for now!\n        this.packAttributes();\n    }\n\n    /**\n     * Packs attributes to single buffer.\n     *\n     * @protected\n     */\n    protected packAttributes(): void\n    {\n        const verts = this.points;\n        const uvs = this.uvs;\n        const colors = this.colors;\n        const textureIds = this.textureIds;\n\n        // verts are 2 positions.. so we * by 3 as there are 6 properties.. then 4 cos its bytes\n        const glPoints = new ArrayBuffer(verts.length * 3 * 4);\n        const f32 = new Float32Array(glPoints);\n        const u32 = new Uint32Array(glPoints);\n\n        let p = 0;\n\n        for (let i = 0; i < verts.length / 2; i++)\n        {\n            f32[p++] = verts[i * 2];\n            f32[p++] = verts[(i * 2) + 1];\n\n            f32[p++] = uvs[i * 2];\n            f32[p++] = uvs[(i * 2) + 1];\n\n            u32[p++] = colors[i];\n\n            f32[p++] = textureIds[i];\n        }\n\n        this._buffer.update(glPoints);\n        this._indexBuffer.update(this.indicesUint16);\n    }\n\n    /**\n     * Process fill part of Graphics.\n     *\n     * @param {PIXI.GraphicsData} data\n     * @protected\n     */\n    protected processFill(data: GraphicsData): void\n    {\n        if (data.holes.length)\n        {\n            this.processHoles(data.holes);\n\n            buildPoly.triangulate(data, this);\n        }\n        else\n        {\n            const command = FILL_COMMANDS[data.type];\n\n            command.triangulate(data, this);\n        }\n    }\n\n    /**\n     * Process line part of Graphics.\n     *\n     * @param {PIXI.GraphicsData} data\n     * @protected\n     */\n    protected processLine(data: GraphicsData): void\n    {\n        buildLine(data, this);\n\n        for (let i = 0; i < data.holes.length; i++)\n        {\n            buildLine(data.holes[i], this);\n        }\n    }\n\n    /**\n     * Process the holes data.\n     *\n     * @param {PIXI.GraphicsData[]} holes - Holes to render\n     * @protected\n     */\n    protected processHoles(holes: Array<GraphicsData>): void\n    {\n        for (let i = 0; i < holes.length; i++)\n        {\n            const hole = holes[i];\n            const command = FILL_COMMANDS[hole.type];\n\n            command.build(hole);\n\n            if (hole.matrix)\n            {\n                this.transformPoints(hole.points, hole.matrix);\n            }\n        }\n    }\n\n    /**\n     * Update the local bounds of the object. Expensive to use performance-wise.\n     *\n     * @protected\n     */\n    protected calculateBounds(): void\n    {\n        const bounds = this._bounds;\n        const sequenceBounds = tmpBounds;\n        let curMatrix = Matrix.IDENTITY;\n\n        this._bounds.clear();\n        sequenceBounds.clear();\n\n        for (let i = 0; i < this.graphicsData.length; i++)\n        {\n            const data = this.graphicsData[i];\n            const shape = data.shape;\n            const type = data.type;\n            const lineStyle = data.lineStyle;\n            const nextMatrix = data.matrix || Matrix.IDENTITY;\n            let lineWidth = 0.0;\n\n            if (lineStyle && lineStyle.visible)\n            {\n                const alignment = lineStyle.alignment;\n\n                lineWidth = lineStyle.width;\n\n                if (type === SHAPES.POLY)\n                {\n                    lineWidth = lineWidth * (0.5 + Math.abs(0.5 - alignment));\n                }\n                else\n                {\n                    lineWidth = lineWidth * Math.max(0, alignment);\n                }\n            }\n\n            if (curMatrix !== nextMatrix)\n            {\n                if (!sequenceBounds.isEmpty())\n                {\n                    bounds.addBoundsMatrix(sequenceBounds, curMatrix);\n                    sequenceBounds.clear();\n                }\n                curMatrix = nextMatrix;\n            }\n\n            if (type === SHAPES.RECT || type === SHAPES.RREC)\n            {\n                const rect = shape as Rectangle | RoundedRectangle;\n\n                sequenceBounds.addFramePad(rect.x, rect.y, rect.x + rect.width, rect.y + rect.height,\n                    lineWidth, lineWidth);\n            }\n            else if (type === SHAPES.CIRC)\n            {\n                const circle = shape as Circle;\n\n                sequenceBounds.addFramePad(circle.x, circle.y, circle.x, circle.y,\n                    circle.radius + lineWidth, circle.radius + lineWidth);\n            }\n            else if (type === SHAPES.ELIP)\n            {\n                const ellipse = shape as Ellipse;\n\n                sequenceBounds.addFramePad(ellipse.x, ellipse.y, ellipse.x, ellipse.y,\n                    ellipse.width + lineWidth, ellipse.height + lineWidth);\n            }\n            else\n            {\n                const poly = shape as Polygon;\n                // adding directly to the bounds\n\n                bounds.addVerticesMatrix(curMatrix, (poly.points as any), 0, poly.points.length, lineWidth, lineWidth);\n            }\n        }\n\n        if (!sequenceBounds.isEmpty())\n        {\n            bounds.addBoundsMatrix(sequenceBounds, curMatrix);\n        }\n\n        bounds.pad(this.boundsPadding, this.boundsPadding);\n    }\n\n    /**\n     * Transform points using matrix.\n     *\n     * @protected\n     * @param {number[]} points - Points to transform\n     * @param {PIXI.Matrix} matrix - Transform matrix\n     */\n    protected transformPoints(points: Array<number>, matrix: Matrix): void\n    {\n        for (let i = 0; i < points.length / 2; i++)\n        {\n            const x = points[(i * 2)];\n            const y = points[(i * 2) + 1];\n\n            points[(i * 2)] = (matrix.a * x) + (matrix.c * y) + matrix.tx;\n            points[(i * 2) + 1] = (matrix.b * x) + (matrix.d * y) + matrix.ty;\n        }\n    }\n\n    /**\n     * Add colors.\n     *\n     * @protected\n     * @param {number[]} colors - List of colors to add to\n     * @param {number} color - Color to add\n     * @param {number} alpha - Alpha to use\n     * @param {number} size - Number of colors to add\n     */\n    protected addColors(colors: Array<number>, color: number, alpha: number, size: number): void\n    {\n        // TODO use the premultiply bits Ivan added\n        const rgb = (color >> 16) + (color & 0xff00) + ((color & 0xff) << 16);\n\n        const rgba =  premultiplyTint(rgb, alpha);\n\n        while (size-- > 0)\n        {\n            colors.push(rgba);\n        }\n    }\n\n    /**\n     * Add texture id that the shader/fragment wants to use.\n     *\n     * @protected\n     * @param {number[]} textureIds\n     * @param {number} id\n     * @param {number} size\n     */\n    protected addTextureIds(textureIds: Array<number>, id: number, size: number): void\n    {\n        while (size-- > 0)\n        {\n            textureIds.push(id);\n        }\n    }\n\n    /**\n     * Generates the UVs for a shape.\n     *\n     * @protected\n     * @param {number[]} verts - Vertices\n     * @param {number[]} uvs - UVs\n     * @param {PIXI.Texture} texture - Reference to Texture\n     * @param {number} start - Index buffer start index.\n     * @param {number} size - The size/length for index buffer.\n     * @param {PIXI.Matrix} [matrix] - Optional transform for all points.\n     */\n    protected addUvs(\n        verts: Array<number>,\n        uvs: Array<number>,\n        texture: Texture,\n        start: number, size:\n        number, matrix:\n        Matrix = null): void\n    {\n        let index = 0;\n        const uvsStart = uvs.length;\n        const frame = texture.frame;\n\n        while (index < size)\n        {\n            let x = verts[(start + index) * 2];\n            let y = verts[((start + index) * 2) + 1];\n\n            if (matrix)\n            {\n                const nx = (matrix.a * x) + (matrix.c * y) + matrix.tx;\n\n                y = (matrix.b * x) + (matrix.d * y) + matrix.ty;\n                x = nx;\n            }\n\n            index++;\n\n            uvs.push(x / frame.width, y / frame.height);\n        }\n\n        const baseTexture = texture.baseTexture;\n\n        if (frame.width < baseTexture.width\n            || frame.height < baseTexture.height)\n        {\n            this.adjustUvs(uvs, texture, uvsStart, size);\n        }\n    }\n\n    /**\n     * Modify uvs array according to position of texture region\n     * Does not work with rotated or trimmed textures\n     *\n     * @param {number[]} uvs - array\n     * @param {PIXI.Texture} texture - region\n     * @param {number} start - starting index for uvs\n     * @param {number} size - how many points to adjust\n     */\n    protected adjustUvs(uvs: Array<number>, texture: Texture, start: number, size: number): void\n    {\n        const baseTexture = texture.baseTexture;\n        const eps = 1e-6;\n        const finish = start + (size * 2);\n        const frame = texture.frame;\n        const scaleX = frame.width / baseTexture.width;\n        const scaleY = frame.height / baseTexture.height;\n        let offsetX = frame.x / frame.width;\n        let offsetY = frame.y / frame.height;\n        let minX = Math.floor(uvs[start] + eps);\n        let minY = Math.floor(uvs[start + 1] + eps);\n\n        for (let i = start + 2; i < finish; i += 2)\n        {\n            minX = Math.min(minX, Math.floor(uvs[i] + eps));\n            minY = Math.min(minY, Math.floor(uvs[i + 1] + eps));\n        }\n        offsetX -= minX;\n        offsetY -= minY;\n        for (let i = start; i < finish; i += 2)\n        {\n            uvs[i] = (uvs[i] + offsetX) * scaleX;\n            uvs[i + 1] = (uvs[i + 1] + offsetY) * scaleY;\n        }\n    }\n}\n","import { FillStyle } from './FillStyle';\nimport { LINE_JOIN, LINE_CAP } from '../const';\n\n/**\n * Represents the line style for Graphics.\n * @memberof PIXI\n * @class\n * @extends PIXI.FillStyle\n */\nexport class LineStyle extends FillStyle\n{\n    /**\n     * The width (thickness) of any lines drawn.\n     *\n     * @member {number}\n     * @default 0\n     */\n    public width = 0;\n\n    /**\n     * The alignment of any lines drawn (0.5 = middle, 1 = outer, 0 = inner).\n     *\n     * @member {number}\n     * @default 0.5\n     */\n    public alignment = 0.5;\n\n    /**\n     * If true the lines will be draw using LINES instead of TRIANGLE_STRIP\n     *\n     * @member {boolean}\n     * @default false\n     */\n    public native = false;\n\n    /**\n     * Line cap style.\n     *\n     * @member {PIXI.LINE_CAP}\n     * @default PIXI.LINE_CAP.BUTT\n     */\n    public cap = LINE_CAP.BUTT;\n\n    /**\n     * Line join style.\n     *\n     * @member {PIXI.LINE_JOIN}\n     * @default PIXI.LINE_JOIN.MITER\n     */\n    public join = LINE_JOIN.MITER;\n\n    /**\n     * Miter limit.\n     *\n     * @member {number}\n     * @default 10\n     */\n    public miterLimit = 10;\n\n    /**\n     * Clones the object\n     *\n     * @return {PIXI.LineStyle}\n     */\n    public clone(): LineStyle\n    {\n        const obj = new LineStyle();\n\n        obj.color = this.color;\n        obj.alpha = this.alpha;\n        obj.texture = this.texture;\n        obj.matrix = this.matrix;\n        obj.visible = this.visible;\n        obj.width = this.width;\n        obj.alignment = this.alignment;\n        obj.native = this.native;\n        obj.cap = this.cap;\n        obj.join = this.join;\n        obj.miterLimit = this.miterLimit;\n\n        return obj;\n    }\n\n    /**\n     * Reset the line style to default.\n     */\n    public reset(): void\n    {\n        super.reset();\n\n        // Override default line style color\n        this.color = 0x0;\n\n        this.alignment = 0.5;\n        this.width = 0;\n        this.native = false;\n    }\n}\n","import {\n    Circle,\n    Ellipse,\n    PI_2,\n    Point,\n    Polygon,\n    Rectangle,\n    RoundedRectangle,\n    Matrix,\n    SHAPES,\n} from '@pixi/math';\n\nimport { Texture, UniformGroup, State, Renderer, BatchDrawCall } from '@pixi/core';\nimport { BezierUtils, QuadraticUtils, ArcUtils, Star } from './utils';\nimport { hex2rgb, deprecation } from '@pixi/utils';\nimport { GraphicsGeometry } from './GraphicsGeometry';\nimport { FillStyle } from './styles/FillStyle';\nimport { LineStyle } from './styles/LineStyle';\nimport { BLEND_MODES } from '@pixi/constants';\nimport { Container } from '@pixi/display';\nimport { Shader } from '@pixi/core';\n\nimport type { IShape, IPointData } from '@pixi/math';\nimport type { IDestroyOptions } from '@pixi/display';\nimport { LINE_JOIN, LINE_CAP } from './const';\n\n/**\n * Batch element computed from Graphics geometry\n */\nexport interface IGraphicsBatchElement {\n    vertexData: Float32Array;\n    blendMode: BLEND_MODES;\n    indices: Uint16Array | Uint32Array;\n    uvs: Float32Array;\n    alpha: number;\n    worldAlpha: number;\n    _batchRGB: number[];\n    _tintRGB: number;\n    _texture: Texture;\n}\n\nexport interface IFillStyleOptions {\n    color?: number;\n    alpha?: number;\n    texture?: Texture;\n    matrix?: Matrix;\n}\n\nexport interface ILineStyleOptions extends IFillStyleOptions {\n    width?: number;\n    alignment?: number;\n    native?: boolean;\n    cap?: LINE_CAP;\n    join?: LINE_JOIN;\n    miterLimit?: number;\n}\n\nconst temp = new Float32Array(3);\n\n// a default shaders map used by graphics..\nconst DEFAULT_SHADERS: {[key: string]: Shader} = {};\n\nexport interface Graphics extends GlobalMixins.Graphics, Container {}\n\n/**\n * The Graphics class contains methods used to draw primitive shapes such as lines, circles and\n * rectangles to the display, and to color and fill them.\n *\n * Note that because Graphics can share a GraphicsGeometry with other instances,\n * it is necessary to call `destroy()` to properly dereference the underlying\n * GraphicsGeometry and avoid a memory leak. Alternatively, keep using the same\n * Graphics instance and call `clear()` between redraws.\n *\n * @class\n * @extends PIXI.Container\n * @memberof PIXI\n */\nexport class Graphics extends Container\n{\n    /**\n     * Temporary point to use for containsPoint\n     *\n     * @static\n     * @private\n     * @member {PIXI.Point}\n     */\n\n    static _TEMP_POINT = new Point();\n\n    public shader: Shader;\n    public pluginName: string;\n\n    protected currentPath: Polygon;\n    protected batches: Array<IGraphicsBatchElement>;\n    protected batchTint: number;\n    protected batchDirty: number;\n    protected vertexData: Float32Array;\n\n    protected _fillStyle: FillStyle;\n    protected _lineStyle: LineStyle;\n    protected _matrix: Matrix;\n    protected _holeMode: boolean;\n    protected _transformID: number;\n    protected _tint: number;\n\n    private state: State;\n    private _geometry: GraphicsGeometry;\n\n    /**\n     * Includes vertex positions, face indices, normals, colors, UVs, and\n     * custom attributes within buffers, reducing the cost of passing all\n     * this data to the GPU. Can be shared between multiple Mesh or Graphics objects.\n     *\n     * @member {PIXI.GraphicsGeometry}\n     * @readonly\n     */\n    public get geometry(): GraphicsGeometry\n    {\n        return this._geometry;\n    }\n\n    /**\n     * @param {PIXI.GraphicsGeometry} [geometry=null] - Geometry to use, if omitted\n     *        will create a new GraphicsGeometry instance.\n     */\n    constructor(geometry: GraphicsGeometry = null)\n    {\n        super();\n\n        this._geometry = geometry || new GraphicsGeometry();\n        this._geometry.refCount++;\n\n        /**\n         * Represents the vertex and fragment shaders that processes the geometry and runs on the GPU.\n         * Can be shared between multiple Graphics objects.\n         *\n         * @member {PIXI.Shader}\n         */\n        this.shader = null;\n\n        /**\n         * Represents the WebGL state the Graphics required to render, excludes shader and geometry. E.g.,\n         * blend mode, culling, depth testing, direction of rendering triangles, backface, etc.\n         *\n         * @member {PIXI.State}\n         */\n        this.state = State.for2d();\n\n        /**\n         * Current fill style\n         *\n         * @member {PIXI.FillStyle}\n         * @protected\n         */\n        this._fillStyle = new FillStyle();\n\n        /**\n         * Current line style\n         *\n         * @member {PIXI.LineStyle}\n         * @protected\n         */\n        this._lineStyle = new LineStyle();\n\n        /**\n         * Current shape transform matrix.\n         *\n         * @member {PIXI.Matrix}\n         * @protected\n         */\n        this._matrix = null;\n\n        /**\n         * Current hole mode is enabled.\n         *\n         * @member {boolean}\n         * @default false\n         * @protected\n         */\n        this._holeMode = false;\n\n        /**\n         * Current path\n         *\n         * @member {PIXI.Polygon}\n         * @protected\n         */\n        this.currentPath = null;\n\n        /**\n         * When cacheAsBitmap is set to true the graphics object will be rendered as if it was a sprite.\n         * This is useful if your graphics element does not change often, as it will speed up the rendering\n         * of the object in exchange for taking up texture memory. It is also useful if you need the graphics\n         * object to be anti-aliased, because it will be rendered using canvas. This is not recommended if\n         * you are constantly redrawing the graphics element.\n         *\n         * @name cacheAsBitmap\n         * @member {boolean}\n         * @memberof PIXI.Graphics#\n         * @default false\n         */\n\n        /**\n         * A collections of batches! These can be drawn by the renderer batch system.\n         *\n         * @protected\n         * @member {object[]}\n         */\n        this.batches = [];\n\n        /**\n         * Update dirty for limiting calculating tints for batches.\n         *\n         * @protected\n         * @member {number}\n         * @default -1\n         */\n        this.batchTint = -1;\n\n        /**\n         * Update dirty for limiting calculating batches.\n         *\n         * @protected\n         * @member {number}\n         * @default -1\n         */\n        this.batchDirty = -1;\n\n        /**\n         * Copy of the object vertex data.\n         *\n         * @protected\n         * @member {Float32Array}\n         */\n        this.vertexData = null;\n\n        /**\n         * Renderer plugin for batching\n         *\n         * @member {string}\n         * @default 'batch'\n         */\n        this.pluginName = 'batch';\n\n        this._transformID = -1;\n\n        // Set default\n        this.tint = 0xFFFFFF;\n        this.blendMode = BLEND_MODES.NORMAL;\n    }\n\n    /**\n     * Creates a new Graphics object with the same values as this one.\n     * Note that only the geometry of the object is cloned, not its transform (position,scale,etc)\n     *\n     * @return {PIXI.Graphics} A clone of the graphics object\n     */\n    public clone(): Graphics\n    {\n        this.finishPoly();\n\n        return new Graphics(this._geometry);\n    }\n\n    /**\n     * The blend mode to be applied to the graphic shape. Apply a value of\n     * `PIXI.BLEND_MODES.NORMAL` to reset the blend mode.\n     *\n     * @member {number}\n     * @default PIXI.BLEND_MODES.NORMAL;\n     * @see PIXI.BLEND_MODES\n     */\n    public set blendMode(value: BLEND_MODES)\n    {\n        this.state.blendMode = value;\n    }\n\n    public get blendMode(): BLEND_MODES\n    {\n        return this.state.blendMode;\n    }\n\n    /**\n     * The tint applied to the graphic shape. This is a hex value. A value of\n     * 0xFFFFFF will remove any tint effect.\n     *\n     * @member {number}\n     * @default 0xFFFFFF\n     */\n    public get tint(): number\n    {\n        return this._tint;\n    }\n\n    public set tint(value: number)\n    {\n        this._tint = value;\n    }\n\n    /**\n     * The current fill style.\n     *\n     * @member {PIXI.FillStyle}\n     * @readonly\n     */\n    public get fill(): FillStyle\n    {\n        return this._fillStyle;\n    }\n\n    /**\n     * The current line style.\n     *\n     * @member {PIXI.LineStyle}\n     * @readonly\n     */\n    public get line(): LineStyle\n    {\n        return this._lineStyle;\n    }\n\n    /**\n     * Specifies the line style used for subsequent calls to Graphics methods such as the lineTo()\n     * method or the drawCircle() method.\n     *\n     * @method PIXI.Graphics#lineStyle\n     * @param {number} [width=0] - width of the line to draw, will update the objects stored style\n     * @param {number} [color=0x0] - color of the line to draw, will update the objects stored style\n     * @param {number} [alpha=1] - alpha of the line to draw, will update the objects stored style\n     * @param {number} [alignment=0.5] - alignment of the line to draw, (0 = inner, 0.5 = middle, 1 = outter)\n     * @param {boolean} [native=false] - If true the lines will be draw using LINES instead of TRIANGLE_STRIP\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    /**\n     * Specifies the line style used for subsequent calls to Graphics methods such as the lineTo()\n     * method or the drawCircle() method.\n     *\n     * @param {object} [options] - Line style options\n     * @param {number} [options.width=0] - width of the line to draw, will update the objects stored style\n     * @param {number} [options.color=0x0] - color of the line to draw, will update the objects stored style\n     * @param {number} [options.alpha=1] - alpha of the line to draw, will update the objects stored style\n     * @param {number} [options.alignment=0.5] - alignment of the line to draw, (0 = inner, 0.5 = middle, 1 = outter)\n     * @param {boolean} [options.native=false] - If true the lines will be draw using LINES instead of TRIANGLE_STRIP\n     * @param {PIXI.LINE_CAP}[options.cap=PIXI.LINE_CAP.BUTT] - line cap style\n     * @param {PIXI.LINE_JOIN}[options.join=PIXI.LINE_JOIN.MITER] - line join style\n     * @param {number}[options.miterLimit=10] - miter limit ratio\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    public lineStyle(options: ILineStyleOptions = null): this\n    {\n        // Support non-object params: (width, color, alpha, alignment, native)\n        if (typeof options === 'number')\n        {\n            // eslint-disable-next-line\n            const args = arguments;\n\n            options = {\n                width: args[0] || 0,\n                color: args[1] || 0x0,\n                alpha: args[2] !== undefined ? args[2] : 1,\n                alignment: args[3] !== undefined ? args[3] : 0.5,\n                native: !!args[4],\n            };\n        }\n\n        return this.lineTextureStyle(options);\n    }\n\n    /**\n     * Like line style but support texture for line fill.\n     *\n     * @param {object} [options] - Collection of options for setting line style.\n     * @param {number} [options.width=0] - width of the line to draw, will update the objects stored style\n     * @param {PIXI.Texture} [options.texture=PIXI.Texture.WHITE] - Texture to use\n     * @param {number} [options.color=0x0] - color of the line to draw, will update the objects stored style.\n     *  Default 0xFFFFFF if texture present.\n     * @param {number} [options.alpha=1] - alpha of the line to draw, will update the objects stored style\n     * @param {PIXI.Matrix} [options.matrix=null] - Texture matrix to transform texture\n     * @param {number} [options.alignment=0.5] - alignment of the line to draw, (0 = inner, 0.5 = middle, 1 = outter)\n     * @param {boolean} [options.native=false] - If true the lines will be draw using LINES instead of TRIANGLE_STRIP\n     * @param {PIXI.LINE_CAP}[options.cap=PIXI.LINE_CAP.BUTT] - line cap style\n     * @param {PIXI.LINE_JOIN}[options.join=PIXI.LINE_JOIN.MITER] - line join style\n     * @param {number}[options.miterLimit=10] - miter limit ratio\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    public lineTextureStyle(options: ILineStyleOptions): this\n    {\n        // backward compatibility with params: (width, texture,\n        // color, alpha, matrix, alignment, native)\n        if (typeof options === 'number')\n        {\n            deprecation('v5.2.0', 'Please use object-based options for Graphics#lineTextureStyle');\n\n            // eslint-disable-next-line\n            const [width, texture, color, alpha, matrix, alignment, native] = arguments as any;\n\n            options = { width, texture, color, alpha, matrix, alignment, native };\n\n            // Remove undefined keys\n            Object.keys(options).forEach((key) => (options as any)[key] === undefined && delete (options as any)[key]);\n        }\n\n        // Apply defaults\n        options = Object.assign({\n            width: 0,\n            texture: Texture.WHITE,\n            color: (options && options.texture) ? 0xFFFFFF : 0x0,\n            alpha: 1,\n            matrix: null,\n            alignment: 0.5,\n            native: false,\n            cap: LINE_CAP.BUTT,\n            join: LINE_JOIN.MITER,\n            miterLimit: 10,\n        }, options);\n\n        if (this.currentPath)\n        {\n            this.startPoly();\n        }\n\n        const visible = options.width > 0 && options.alpha > 0;\n\n        if (!visible)\n        {\n            this._lineStyle.reset();\n        }\n        else\n        {\n            if (options.matrix)\n            {\n                options.matrix = options.matrix.clone();\n                options.matrix.invert();\n            }\n\n            Object.assign(this._lineStyle, { visible }, options);\n        }\n\n        return this;\n    }\n\n    /**\n     * Start a polygon object internally\n     * @protected\n     */\n    protected startPoly(): void\n    {\n        if (this.currentPath)\n        {\n            const points = this.currentPath.points;\n            const len = this.currentPath.points.length;\n\n            if (len > 2)\n            {\n                this.drawShape(this.currentPath);\n                this.currentPath = new Polygon();\n                this.currentPath.closeStroke = false;\n                this.currentPath.points.push(points[len - 2], points[len - 1]);\n            }\n        }\n        else\n        {\n            this.currentPath = new Polygon();\n            this.currentPath.closeStroke = false;\n        }\n    }\n\n    /**\n     * Finish the polygon object.\n     * @protected\n     */\n    finishPoly(): void\n    {\n        if (this.currentPath)\n        {\n            if (this.currentPath.points.length > 2)\n            {\n                this.drawShape(this.currentPath);\n                this.currentPath = null;\n            }\n            else\n            {\n                this.currentPath.points.length = 0;\n            }\n        }\n    }\n\n    /**\n     * Moves the current drawing position to x, y.\n     *\n     * @param {number} x - the X coordinate to move to\n     * @param {number} y - the Y coordinate to move to\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    public moveTo(x: number, y: number): this\n    {\n        this.startPoly();\n        this.currentPath.points[0] = x;\n        this.currentPath.points[1] = y;\n\n        return this;\n    }\n\n    /**\n     * Draws a line using the current line style from the current drawing position to (x, y);\n     * The current drawing position is then set to (x, y).\n     *\n     * @param {number} x - the X coordinate to draw to\n     * @param {number} y - the Y coordinate to draw to\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    public lineTo(x: number, y: number): this\n    {\n        if (!this.currentPath)\n        {\n            this.moveTo(0, 0);\n        }\n\n        // remove duplicates..\n        const points = this.currentPath.points;\n        const fromX = points[points.length - 2];\n        const fromY = points[points.length - 1];\n\n        if (fromX !== x || fromY !== y)\n        {\n            points.push(x, y);\n        }\n\n        return this;\n    }\n\n    /**\n     * Initialize the curve\n     *\n     * @protected\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     */\n    protected _initCurve(x = 0, y = 0): void\n    {\n        if (this.currentPath)\n        {\n            if (this.currentPath.points.length === 0)\n            {\n                this.currentPath.points = [x, y];\n            }\n        }\n        else\n        {\n            this.moveTo(x, y);\n        }\n    }\n\n    /**\n     * Calculate the points for a quadratic bezier curve and then draws it.\n     * Based on: https://stackoverflow.com/questions/785097/how-do-i-implement-a-bezier-curve-in-c\n     *\n     * @param {number} cpX - Control point x\n     * @param {number} cpY - Control point y\n     * @param {number} toX - Destination point x\n     * @param {number} toY - Destination point y\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    public quadraticCurveTo(cpX: number, cpY: number, toX: number, toY: number): this\n    {\n        this._initCurve();\n\n        const points = this.currentPath.points;\n\n        if (points.length === 0)\n        {\n            this.moveTo(0, 0);\n        }\n\n        QuadraticUtils.curveTo(cpX, cpY, toX, toY, points);\n\n        return this;\n    }\n\n    /**\n     * Calculate the points for a bezier curve and then draws it.\n     *\n     * @param {number} cpX - Control point x\n     * @param {number} cpY - Control point y\n     * @param {number} cpX2 - Second Control point x\n     * @param {number} cpY2 - Second Control point y\n     * @param {number} toX - Destination point x\n     * @param {number} toY - Destination point y\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    public bezierCurveTo(cpX: number, cpY: number, cpX2: number, cpY2: number, toX: number, toY: number): this\n    {\n        this._initCurve();\n\n        BezierUtils.curveTo(cpX, cpY, cpX2, cpY2, toX, toY, this.currentPath.points);\n\n        return this;\n    }\n\n    /**\n     * The arcTo() method creates an arc/curve between two tangents on the canvas.\n     *\n     * \"borrowed\" from https://code.google.com/p/fxcanvas/ - thanks google!\n     *\n     * @param {number} x1 - The x-coordinate of the first tangent point of the arc\n     * @param {number} y1 - The y-coordinate of the first tangent point of the arc\n     * @param {number} x2 - The x-coordinate of the end of the arc\n     * @param {number} y2 - The y-coordinate of the end of the arc\n     * @param {number} radius - The radius of the arc\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    public arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): this\n    {\n        this._initCurve(x1, y1);\n\n        const points = this.currentPath.points;\n\n        const result = ArcUtils.curveTo(x1, y1, x2, y2, radius, points);\n\n        if (result)\n        {\n            const { cx, cy, radius, startAngle, endAngle, anticlockwise } = result;\n\n            this.arc(cx, cy, radius, startAngle, endAngle, anticlockwise);\n        }\n\n        return this;\n    }\n\n    /**\n     * The arc method creates an arc/curve (used to create circles, or parts of circles).\n     *\n     * @param {number} cx - The x-coordinate of the center of the circle\n     * @param {number} cy - The y-coordinate of the center of the circle\n     * @param {number} radius - The radius of the circle\n     * @param {number} startAngle - The starting angle, in radians (0 is at the 3 o'clock position\n     *  of the arc's circle)\n     * @param {number} endAngle - The ending angle, in radians\n     * @param {boolean} [anticlockwise=false] - Specifies whether the drawing should be\n     *  counter-clockwise or clockwise. False is default, and indicates clockwise, while true\n     *  indicates counter-clockwise.\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    public arc(cx: number, cy: number, radius: number, startAngle: number, endAngle: number, anticlockwise = false): this\n    {\n        if (startAngle === endAngle)\n        {\n            return this;\n        }\n\n        if (!anticlockwise && endAngle <= startAngle)\n        {\n            endAngle += PI_2;\n        }\n        else if (anticlockwise && startAngle <= endAngle)\n        {\n            startAngle += PI_2;\n        }\n\n        const sweep = endAngle - startAngle;\n\n        if (sweep === 0)\n        {\n            return this;\n        }\n\n        const startX = cx + (Math.cos(startAngle) * radius);\n        const startY = cy + (Math.sin(startAngle) * radius);\n        const eps = this._geometry.closePointEps;\n\n        // If the currentPath exists, take its points. Otherwise call `moveTo` to start a path.\n        let points = this.currentPath ? this.currentPath.points : null;\n\n        if (points)\n        {\n            // TODO: make a better fix.\n\n            // We check how far our start is from the last existing point\n            const xDiff = Math.abs(points[points.length - 2] - startX);\n            const yDiff = Math.abs(points[points.length - 1] - startY);\n\n            if (xDiff < eps && yDiff < eps)\n            {\n                // If the point is very close, we don't add it, since this would lead to artifacts\n                // during tessellation due to floating point imprecision.\n            }\n            else\n            {\n                points.push(startX, startY);\n            }\n        }\n        else\n        {\n            this.moveTo(startX, startY);\n            points = this.currentPath.points;\n        }\n\n        ArcUtils.arc(startX, startY, cx, cy, radius, startAngle, endAngle, anticlockwise, points);\n\n        return this;\n    }\n\n    /**\n     * Specifies a simple one-color fill that subsequent calls to other Graphics methods\n     * (such as lineTo() or drawCircle()) use when drawing.\n     *\n     * @param {number} [color=0] - the color of the fill\n     * @param {number} [alpha=1] - the alpha of the fill\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    public beginFill(color = 0, alpha = 1): this\n    {\n        return this.beginTextureFill({ texture: Texture.WHITE, color, alpha });\n    }\n\n    /**\n     * Begin the texture fill\n     *\n     * @param {object} [options] - Object object.\n     * @param {PIXI.Texture} [options.texture=PIXI.Texture.WHITE] - Texture to fill\n     * @param {number} [options.color=0xffffff] - Background to fill behind texture\n     * @param {number} [options.alpha=1] - Alpha of fill\n     * @param {PIXI.Matrix} [options.matrix=null] - Transform matrix\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    beginTextureFill(options: IFillStyleOptions): this\n    {\n        // backward compatibility with params: (texture, color, alpha, matrix)\n        if (options instanceof Texture)\n        {\n            deprecation('v5.2.0', 'Please use object-based options for Graphics#beginTextureFill');\n\n            // eslint-disable-next-line\n            const [texture, color, alpha, matrix] = arguments as any;\n\n            options = { texture, color, alpha, matrix };\n\n            // Remove undefined keys\n            Object.keys(options).forEach((key) => (options as any)[key] === undefined && delete (options as any)[key]);\n        }\n\n        // Apply defaults\n        options = Object.assign({\n            texture: Texture.WHITE,\n            color: 0xFFFFFF,\n            alpha: 1,\n            matrix: null,\n        }, options) as IFillStyleOptions;\n\n        if (this.currentPath)\n        {\n            this.startPoly();\n        }\n\n        const visible = options.alpha > 0;\n\n        if (!visible)\n        {\n            this._fillStyle.reset();\n        }\n        else\n        {\n            if (options.matrix)\n            {\n                options.matrix = options.matrix.clone();\n                options.matrix.invert();\n            }\n\n            Object.assign(this._fillStyle, { visible }, options);\n        }\n\n        return this;\n    }\n\n    /**\n     * Applies a fill to the lines and shapes that were added since the last call to the beginFill() method.\n     *\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    public endFill(): this\n    {\n        this.finishPoly();\n\n        this._fillStyle.reset();\n\n        return this;\n    }\n\n    /**\n     * Draws a rectangle shape.\n     *\n     * @param {number} x - The X coord of the top-left of the rectangle\n     * @param {number} y - The Y coord of the top-left of the rectangle\n     * @param {number} width - The width of the rectangle\n     * @param {number} height - The height of the rectangle\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    public drawRect(x: number, y: number, width: number, height: number): this\n    {\n        return this.drawShape(new Rectangle(x, y, width, height));\n    }\n\n    /**\n     * Draw a rectangle shape with rounded/beveled corners.\n     *\n     * @param {number} x - The X coord of the top-left of the rectangle\n     * @param {number} y - The Y coord of the top-left of the rectangle\n     * @param {number} width - The width of the rectangle\n     * @param {number} height - The height of the rectangle\n     * @param {number} radius - Radius of the rectangle corners\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    public drawRoundedRect(x: number, y: number, width: number, height: number, radius: number): this\n    {\n        return this.drawShape(new RoundedRectangle(x, y, width, height, radius));\n    }\n\n    /**\n     * Draws a circle.\n     *\n     * @param {number} x - The X coordinate of the center of the circle\n     * @param {number} y - The Y coordinate of the center of the circle\n     * @param {number} radius - The radius of the circle\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    public drawCircle(x: number, y: number, radius: number): this\n    {\n        return this.drawShape(new Circle(x, y, radius));\n    }\n\n    /**\n     * Draws an ellipse.\n     *\n     * @param {number} x - The X coordinate of the center of the ellipse\n     * @param {number} y - The Y coordinate of the center of the ellipse\n     * @param {number} width - The half width of the ellipse\n     * @param {number} height - The half height of the ellipse\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    public drawEllipse(x: number, y: number, width: number, height: number): this\n    {\n        return this.drawShape(new Ellipse(x, y, width, height));\n    }\n\n    public drawPolygon(...path: Array<number> | Array<Point>): this\n    public drawPolygon(path: Array<number> | Array<Point> | Polygon): this\n\n    /**\n     * Draws a polygon using the given path.\n     *\n     * @param {number[]|PIXI.Point[]|PIXI.Polygon} path - The path data used to construct the polygon.\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    public drawPolygon(...path: any[]): this\n    {\n        let points: Array<number> | Array<Point>;\n        let closeStroke = true;// !!this._fillStyle;\n\n        const poly = path[0] as Polygon;\n\n        // check if data has points..\n        if (poly.points)\n        {\n            closeStroke = poly.closeStroke;\n            points = poly.points;\n        }\n        else\n        if (Array.isArray(path[0]))\n        {\n            points = path[0];\n        }\n        else\n        {\n            points = path;\n        }\n\n        const shape = new Polygon(points);\n\n        shape.closeStroke = closeStroke;\n\n        this.drawShape(shape);\n\n        return this;\n    }\n\n    /**\n     * Draw any shape.\n     *\n     * @param {PIXI.Circle|PIXI.Ellipse|PIXI.Polygon|PIXI.Rectangle|PIXI.RoundedRectangle} shape - Shape to draw\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    public drawShape(shape: IShape): this\n    {\n        if (!this._holeMode)\n        {\n            this._geometry.drawShape(\n                shape,\n                this._fillStyle.clone(),\n                this._lineStyle.clone(),\n                this._matrix\n            );\n        }\n        else\n        {\n            this._geometry.drawHole(shape, this._matrix);\n        }\n\n        return this;\n    }\n\n    /**\n     * Draw a star shape with an arbitrary number of points.\n     *\n     * @param {number} x - Center X position of the star\n     * @param {number} y - Center Y position of the star\n     * @param {number} points - The number of points of the star, must be > 1\n     * @param {number} radius - The outer radius of the star\n     * @param {number} [innerRadius] - The inner radius between points, default half `radius`\n     * @param {number} [rotation=0] - The rotation of the star in radians, where 0 is vertical\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    public drawStar(x: number, y: number, points: number, radius: number, innerRadius: number, rotation = 0): this\n    {\n        return this.drawPolygon(new Star(x, y, points, radius, innerRadius, rotation) as Polygon);\n    }\n\n    /**\n     * Clears the graphics that were drawn to this Graphics object, and resets fill and line style settings.\n     *\n     * @return {PIXI.Graphics} This Graphics object. Good for chaining method calls\n     */\n    public clear(): this\n    {\n        this._geometry.clear();\n        this._lineStyle.reset();\n        this._fillStyle.reset();\n\n        this._boundsID++;\n        this._matrix = null;\n        this._holeMode = false;\n        this.currentPath = null;\n\n        return this;\n    }\n\n    /**\n     * True if graphics consists of one rectangle, and thus, can be drawn like a Sprite and\n     * masked with gl.scissor.\n     *\n     * @returns {boolean} True if only 1 rect.\n     */\n    public isFastRect(): boolean\n    {\n        const data = this._geometry.graphicsData;\n\n        return data.length === 1\n            && data[0].shape.type === SHAPES.RECT\n            && !(data[0].lineStyle.visible && data[0].lineStyle.width);\n    }\n\n    /**\n     * Renders the object using the WebGL renderer\n     *\n     * @protected\n     * @param {PIXI.Renderer} renderer - The renderer\n     */\n    protected _render(renderer: Renderer): void\n    {\n        this.finishPoly();\n\n        const geometry = this._geometry;\n        const hasuint32 = renderer.context.supports.uint32Indices;\n        // batch part..\n        // batch it!\n\n        geometry.updateBatches(hasuint32);\n\n        if (geometry.batchable)\n        {\n            if (this.batchDirty !== geometry.batchDirty)\n            {\n                this._populateBatches();\n            }\n\n            this._renderBatched(renderer);\n        }\n        else\n        {\n            // no batching...\n            renderer.batch.flush();\n\n            this._renderDirect(renderer);\n        }\n    }\n\n    /**\n     * Populating batches for rendering\n     *\n     * @protected\n     */\n    protected _populateBatches(): void\n    {\n        const geometry = this._geometry;\n        const blendMode = this.blendMode;\n        const len = geometry.batches.length;\n\n        this.batchTint = -1;\n        this._transformID = -1;\n        this.batchDirty = geometry.batchDirty;\n        this.batches.length = len;\n\n        this.vertexData = new Float32Array(geometry.points);\n\n        for (let i = 0; i < len; i++)\n        {\n            const gI = geometry.batches[i];\n            const color = gI.style.color;\n            const vertexData = new Float32Array(this.vertexData.buffer,\n                gI.attribStart * 4 * 2,\n                gI.attribSize * 2);\n\n            const uvs = new Float32Array(geometry.uvsFloat32.buffer,\n                gI.attribStart * 4 * 2,\n                gI.attribSize * 2);\n\n            const indices = new Uint16Array(geometry.indicesUint16.buffer,\n                gI.start * 2,\n                gI.size);\n\n            const batch = {\n                vertexData,\n                blendMode,\n                indices,\n                uvs,\n                _batchRGB: hex2rgb(color) as Array<number>,\n                _tintRGB: color,\n                _texture: gI.style.texture,\n                alpha: gI.style.alpha,\n                worldAlpha: 1 };\n\n            this.batches[i] = batch;\n        }\n    }\n\n    /**\n     * Renders the batches using the BathedRenderer plugin\n     *\n     * @protected\n     * @param {PIXI.Renderer} renderer - The renderer\n     */\n    protected _renderBatched(renderer: Renderer): void\n    {\n        if (!this.batches.length)\n        {\n            return;\n        }\n\n        renderer.batch.setObjectRenderer(renderer.plugins[this.pluginName]);\n\n        this.calculateVertices();\n        this.calculateTints();\n\n        for (let i = 0, l = this.batches.length; i < l; i++)\n        {\n            const batch = this.batches[i];\n\n            batch.worldAlpha = this.worldAlpha * batch.alpha;\n\n            renderer.plugins[this.pluginName].render(batch);\n        }\n    }\n\n    /**\n     * Renders the graphics direct\n     *\n     * @protected\n     * @param {PIXI.Renderer} renderer - The renderer\n     */\n    protected _renderDirect(renderer: Renderer): void\n    {\n        const shader = this._resolveDirectShader(renderer);\n\n        const geometry = this._geometry;\n        const tint = this.tint;\n        const worldAlpha = this.worldAlpha;\n        const uniforms = shader.uniforms;\n        const drawCalls = geometry.drawCalls;\n\n        // lets set the transfomr\n        uniforms.translationMatrix = this.transform.worldTransform;\n\n        // and then lets set the tint..\n        uniforms.tint[0] = (((tint >> 16) & 0xFF) / 255) * worldAlpha;\n        uniforms.tint[1] = (((tint >> 8) & 0xFF) / 255) * worldAlpha;\n        uniforms.tint[2] = ((tint & 0xFF) / 255) * worldAlpha;\n        uniforms.tint[3] = worldAlpha;\n\n        // the first draw call, we can set the uniforms of the shader directly here.\n\n        // this means that we can tack advantage of the sync function of pixi!\n        // bind and sync uniforms..\n        // there is a way to optimise this..\n        renderer.shader.bind(shader);\n        renderer.geometry.bind(geometry, shader);\n\n        // set state..\n        renderer.state.set(this.state);\n\n        // then render the rest of them...\n        for (let i = 0, l = drawCalls.length; i < l; i++)\n        {\n            this._renderDrawCallDirect(renderer, geometry.drawCalls[i]);\n        }\n    }\n\n    /**\n     * Renders specific DrawCall\n     *\n     * @param {PIXI.Renderer} renderer\n     * @param {PIXI.BatchDrawCall} drawCall\n     */\n    protected _renderDrawCallDirect(renderer: Renderer, drawCall: BatchDrawCall): void\n    {\n        const { texArray, type, size, start } = drawCall;\n        const groupTextureCount = texArray.count;\n\n        for (let j = 0; j < groupTextureCount; j++)\n        {\n            renderer.texture.bind(texArray.elements[j], j);\n        }\n\n        renderer.geometry.draw(type, size, start);\n    }\n\n    /**\n     * Resolves shader for direct rendering\n     *\n     * @protected\n     * @param {PIXI.Renderer} renderer - The renderer\n     */\n    protected _resolveDirectShader(renderer: Renderer): Shader\n    {\n        let shader = this.shader;\n\n        const pluginName = this.pluginName;\n\n        if (!shader)\n        {\n            // if there is no shader here, we can use the default shader.\n            // and that only gets created if we actually need it..\n            // but may be more than one plugins for graphics\n            if (!DEFAULT_SHADERS[pluginName])\n            {\n                const MAX_TEXTURES = renderer.plugins.batch.MAX_TEXTURES;\n                const sampleValues = new Int32Array(MAX_TEXTURES);\n\n                for (let i = 0; i < MAX_TEXTURES; i++)\n                {\n                    sampleValues[i] = i;\n                }\n\n                const uniforms = {\n                    tint: new Float32Array([1, 1, 1, 1]),\n                    translationMatrix: new Matrix(),\n                    default: UniformGroup.from({ uSamplers: sampleValues }, true),\n                };\n\n                const program = renderer.plugins[pluginName]._shader.program;\n\n                DEFAULT_SHADERS[pluginName] = new Shader(program, uniforms);\n            }\n\n            shader = DEFAULT_SHADERS[pluginName];\n        }\n\n        return shader;\n    }\n\n    /**\n     * Retrieves the bounds of the graphic shape as a rectangle object\n     *\n     * @protected\n     */\n    protected _calculateBounds(): void\n    {\n        this.finishPoly();\n\n        const geometry = this._geometry;\n\n        // skipping when graphics is empty, like a container\n        if (!geometry.graphicsData.length)\n        {\n            return;\n        }\n\n        const { minX, minY, maxX, maxY } = geometry.bounds;\n\n        this._bounds.addFrame(this.transform, minX, minY, maxX, maxY);\n    }\n\n    /**\n     * Tests if a point is inside this graphics object\n     *\n     * @param {PIXI.IPointData} point - the point to test\n     * @return {boolean} the result of the test\n     */\n    public containsPoint(point: IPointData): boolean\n    {\n        this.worldTransform.applyInverse(point, Graphics._TEMP_POINT);\n\n        return this._geometry.containsPoint(Graphics._TEMP_POINT);\n    }\n\n    /**\n     * Recalcuate the tint by applying tin to batches using Graphics tint.\n     * @protected\n     */\n    protected calculateTints(): void\n    {\n        if (this.batchTint !== this.tint)\n        {\n            this.batchTint = this.tint;\n\n            const tintRGB = hex2rgb(this.tint, temp);\n\n            for (let i = 0; i < this.batches.length; i++)\n            {\n                const batch = this.batches[i];\n\n                const batchTint = batch._batchRGB;\n\n                const r = (tintRGB[0] * batchTint[0]) * 255;\n                const g = (tintRGB[1] * batchTint[1]) * 255;\n                const b = (tintRGB[2] * batchTint[2]) * 255;\n\n                // TODO Ivan, can this be done in one go?\n                const color = (r << 16) + (g << 8) + (b | 0);\n\n                batch._tintRGB = (color >> 16)\n                        + (color & 0xff00)\n                        + ((color & 0xff) << 16);\n            }\n        }\n    }\n\n    /**\n     * If there's a transform update or a change to the shape of the\n     * geometry, recaculate the vertices.\n     * @protected\n     */\n    protected calculateVertices(): void\n    {\n        const wtID = this.transform._worldID;\n\n        if (this._transformID === wtID)\n        {\n            return;\n        }\n\n        this._transformID = wtID;\n\n        const wt = this.transform.worldTransform;\n        const a = wt.a;\n        const b = wt.b;\n        const c = wt.c;\n        const d = wt.d;\n        const tx = wt.tx;\n        const ty = wt.ty;\n\n        const data = this._geometry.points;// batch.vertexDataOriginal;\n        const vertexData = this.vertexData;\n\n        let count = 0;\n\n        for (let i = 0; i < data.length; i += 2)\n        {\n            const x = data[i];\n            const y = data[i + 1];\n\n            vertexData[count++] = (a * x) + (c * y) + tx;\n            vertexData[count++] = (d * y) + (b * x) + ty;\n        }\n    }\n\n    /**\n     * Closes the current path.\n     *\n     * @return {PIXI.Graphics} Returns itself.\n     */\n    public closePath(): this\n    {\n        const currentPath = this.currentPath;\n\n        if (currentPath)\n        {\n            // we don't need to add extra point in the end because buildLine will take care of that\n            currentPath.closeStroke = true;\n        }\n\n        return this;\n    }\n\n    /**\n     * Apply a matrix to the positional data.\n     *\n     * @param {PIXI.Matrix} matrix - Matrix to use for transform current shape.\n     * @return {PIXI.Graphics} Returns itself.\n     */\n    public setMatrix(matrix: Matrix): this\n    {\n        this._matrix = matrix;\n\n        return this;\n    }\n\n    /**\n     * Begin adding holes to the last draw shape\n     * IMPORTANT: holes must be fully inside a shape to work\n     * Also weirdness ensues if holes overlap!\n     * Ellipses, Circles, Rectangles and Rounded Rectangles cannot be holes or host for holes in CanvasRenderer,\n     * please use `moveTo` `lineTo`, `quadraticCurveTo` if you rely on pixi-legacy bundle.\n     * @return {PIXI.Graphics} Returns itself.\n     */\n    public beginHole(): this\n    {\n        this.finishPoly();\n        this._holeMode = true;\n\n        return this;\n    }\n\n    /**\n     * End adding holes to the last draw shape\n     * @return {PIXI.Graphics} Returns itself.\n     */\n    public endHole(): this\n    {\n        this.finishPoly();\n        this._holeMode = false;\n\n        return this;\n    }\n\n    /**\n     * Destroys the Graphics object.\n     *\n     * @param {object|boolean} [options] - Options parameter. A boolean will act as if all\n     *  options have been set to that value\n     * @param {boolean} [options.children=false] - if set to true, all the children will have\n     *  their destroy method called as well. 'options' will be passed on to those calls.\n     * @param {boolean} [options.texture=false] - Only used for child Sprites if options.children is set to true\n     *  Should it destroy the texture of the child sprite\n     * @param {boolean} [options.baseTexture=false] - Only used for child Sprites if options.children is set to true\n     *  Should it destroy the base texture of the child sprite\n     */\n    public destroy(options: IDestroyOptions|boolean): void\n    {\n        this._geometry.refCount--;\n        if (this._geometry.refCount === 0)\n        {\n            this._geometry.dispose();\n        }\n\n        this._matrix = null;\n        this.currentPath = null;\n        this._lineStyle.destroy();\n        this._lineStyle = null;\n        this._fillStyle.destroy();\n        this._fillStyle = null;\n        this._geometry = null;\n        this.shader = null;\n        this.vertexData = null;\n        this.batches.length = 0;\n        this.batches = null;\n\n        super.destroy(options);\n    }\n}\n","'use strict'\r\n\r\nimport { Graphics } from '@pixi/graphics';\r\nimport { Body, Bodies, IBodyDefinition } from 'matter-js';\r\nimport { GraphicsOptions } from '../interfaces/graphics_options';\r\n\r\n// Fix for issue with pixi throwing an error if there's a global pixi object\r\n// and we try to extend the Graphics module.\r\n// @ts-ignore\r\nconst GraphicsObject = window.PIXI ? window.PIXI.Graphics : Graphics;\r\n/**\r\n * Represents a rectangular or circular shape with a physics body attached to\r\n * it.\r\n */\r\nexport class PhysicsGraphics extends GraphicsObject {\r\n  /**\r\n   * A reference to the options for the graphic object's position and style.\r\n   * \r\n   * @property {GraphicsOptions}\r\n   */\r\n  graphicsOptions: GraphicsOptions = {\r\n    x: 0,\r\n    y: 0,\r\n    width: 100,\r\n    height: 100,\r\n    fill: 0x000000,\r\n    lineWidth: 1,\r\n    lineColor: 0xffffff,\r\n  }\r\n\r\n  /**\r\n   * A reference to the options for the graphic object's body.\r\n   * \r\n   * @property {IBodyDefinition}\r\n   */\r\n  physicsOptions: IBodyDefinition;\r\n\r\n  /**\r\n   * The physics body of the graphics object.\r\n   * \r\n   * @private\r\n   * \r\n   * @property {Body}\r\n   */\r\n  private _body: Body;\r\n\r\n\r\n  /**\r\n   * @param {GraphicsOptions} graphicsOptions The options for the appearance and initial position of the graphics object.\r\n   * @param {PhysicsOptions} physicsOptions The options to apply to the graphic object's body.\r\n   * @param {update}\r\n   */\r\n  constructor(graphicsOptions?: GraphicsOptions, physicsOptions: IBodyDefinition = {}, update?: ({position, rotation}) => void) {\r\n    super();\r\n\r\n    this.graphicsOptions = Object.assign(this.graphicsOptions, graphicsOptions);\r\n    this.physicsOptions = physicsOptions;\r\n\r\n    const halfWidth = this.graphicsOptions.width / 2;\r\n    const halfHeight = this.graphicsOptions.height / 2;\r\n\r\n    this.pivot.x = halfWidth;\r\n    this.pivot.y = halfHeight;\r\n\r\n    this._update = update;\r\n    // this._createShape();\r\n\r\n    if (this.graphicsOptions.radius) this._body = Bodies.circle(this.graphicsOptions.x, this.graphicsOptions.y, this.graphicsOptions.radius, this.physicsOptions);\r\n    else this._body = Bodies.rectangle(this.graphicsOptions.x + halfWidth, this.graphicsOptions.y + halfHeight, this.graphicsOptions.width, this.graphicsOptions.height, this.physicsOptions);\r\n  }\r\n\r\n  /**\r\n   * Returns the body of the graphics object.\r\n   * \r\n   * @returns {Body}\r\n   */\r\n  get body() { return this._body; }\r\n\r\n  /**\r\n   * Updates the position of the graphics object according to where its body \r\n   * should be.\r\n   */\r\n  update() {\r\n    this._update({\r\n      position: this._body.position,\r\n      rotation: this._body.angle,\r\n    })\r\n  }\r\n}","'use strict'\r\n\r\nimport { PixiMatter } from './pixi-matter';\r\nimport { PhysicsSprite } from './physics_objects/physics_sprite';\r\nimport { PhysicsGraphics } from './physics_objects/physics_graphics';\r\n\r\nexport {\r\n  PixiMatter,\r\n  PhysicsSprite,\r\n  PhysicsGraphics,\r\n}","import { PhysicsGraphics } from './matter-pixi';\nimport { Body } from 'matter-js';\n\nexport function loadScript(src, varName){\n  if (window[varName]) {\n    return Promise.resolve(window[varName]);\n  }\n  const res = new Promise(function(resolve, reject) {\n    const el = document.createElement('script');\n    el.onload = function() {\n      resolve(varName && window.varName);\n    };\n\n    el.onerror = function(e) {\n      el.onload = null;\n      el.onerror = null;\n      document.body.removeChild(el);\n      reject(e);\n    };\n    el.src = src;\n    el.async = true;\n    document.body.appendChild(el);\n  });\n  return res;\n}\n\n\n// 碰撞检测函数\nexport function hitTestRectangle(r1, r2) {\n  // 如果r2是坐标点\n  if (Array.isArray(r2)) {\n    r2.x = r2[0];\n    r2.y = r2[1];\n    r2.width = 0;\n    r2.height = 0;\n  }\n\n  //Define the variables we'll need to calculate\n  let hit;\n\n  //hit will determine whether there's a collision\n  hit = false;\n\n  //Find the center points of each sprite\n  r1.centerX = r1.x + r1.width / 2;\n  r1.centerY = r1.y + r1.height / 2;\n  r2.centerX = r2.x + r2.width / 2;\n  r2.centerY = r2.y + r2.height / 2;\n\n  //Find the half-widths and half-heights of each sprite\n  r1.halfWidth = r1.width / 2;\n  r1.halfHeight = r1.height / 2;\n  r2.halfWidth = r2.width / 2;\n  r2.halfHeight = r2.height / 2;\n\n  //Calculate the distance vector between the sprites\n  const vx = r1.centerX - r2.centerX;\n  const vy = r1.centerY - r2.centerY;\n\n  //Figure out the combined half-widths and half-heights\n  const combinedHalfWidths = r1.halfWidth + r2.halfWidth;\n  const combinedHalfHeights = r1.halfHeight + r2.halfHeight;\n\n  //Check for a collision on the x axis\n  if (Math.abs(vx) < combinedHalfWidths) {\n\n    //A collision might be occuring. Check for a collision on the y axis\n    if (Math.abs(vy) < combinedHalfHeights) {\n\n      //There's definitely a collision happening\n      hit = true;\n    } else {\n\n      //There's no collision on the y axis\n      hit = false;\n    }\n  } else {\n\n    //There's no collision on the x axis\n    hit = false;\n  }\n\n  //`hit` will be either `true` or `false`\n  return hit;\n}\n\n// 加载纹理\nconst JsonLoadedMap = {};\nexport function textureRecources (resource) {\n  function loadResource(resource) {\n    let list;\n    if (Array.isArray(resource)) {\n      list = [...resource];\n      resource = list[0]\n    }\n    return new Promise((resolve, reject) => {\n      if (window.PIXI.utils.TextureCache[resource]) {\n        resolve(window.PIXI.utils.TextureCache[resource])\n      } else {\n        window.PIXI.loader.add(list || resource).load(function() {\n          const texture = window.PIXI.loader.resources[resource].texture;\n          resolve(texture)\n        });\n      }\n    })\n  }\n  if (/\\.json$/.test(resource)) {\n    if (JsonLoadedMap[resource]) {\n      return loadResource(JsonLoadedMap[resource])\n    } else {\n      return fetch(resource).then((res) => {\n        return res.json()\n      }).then((res) => {\n        const prefix = resource.replace('index.json', '');\n        const resoureList = res.map((item) => {\n          return prefix + item\n        })\n        JsonLoadedMap[resource] = resoureList;\n        return loadResource(resoureList)\n      })\n    }\n  } else {\n    return loadResource(resource)\n  }\n}\nconst Sk = window.Sk;\n// getter函数\nexport const defineGetter = function(func) {\n  return Sk.misceval.callsimOrSuspend(Sk.builtins.property, new Sk.builtin.func(func), new Sk.builtin.func(function() {}));\n}\n// 生成kwargs函数\nexport function genkwaFunc(func, isJsArgs) {\n  const kwaFunc = function(kwa, ...args){\n    if (!isJsArgs) {\n      args = new Sk.builtins['tuple'](args); /*vararg*/\n    }\n    const kwargs = new Sk.builtin.dict(kwa);\n    return func(args, kwargs)\n  }\n  kwaFunc['co_kwargs'] = true;\n  return kwaFunc;\n}\n// 监听属性getter/setter\nexport const defineProperty = function(obj, property) {\n  return Sk.misceval.callsimOrSuspend(Sk.builtins.property, new Sk.builtin.func(function(self) {\n    if (typeof obj === 'function') {\n      return obj(self)\n    } else {\n      return Sk.ffi.remapToPy(self[obj][property])\n    }\n  }), new Sk.builtin.func(function(self, val) {\n    if (typeof property === 'function') {\n      property(self, val)\n    } else {\n      self[obj][property] = val.v;\n    }\n  }))\n}\n  \n// 拓展graphics功能\nexport const upgradeGraphics = function(mod, app, pixiMatter, func) {\n  return new Sk.builtin.func(function(self, ...args) {\n    return Sk.misceval.callsimOrSuspend(Sk.misceval.buildClass(mod, function($gbl, $loc) {\n      $loc.__init__ = new Sk.builtin.func(function(selfGraph) {\n        selfGraph.graph = new PIXI.Graphics();\n        const graph = selfGraph.graph;\n        func(self, graph, ...args)\n        const halfWidth = selfGraph.graph.width / 2;\n        const halfHeight = selfGraph.graph.height / 2;\n        const x = selfGraph.graph.graphicsData[0].shape.x;\n        const y = selfGraph.graph.graphicsData[0].shape.y;\n        if (selfGraph.graph.isCircle) {\n          selfGraph.graph.pivot.set(halfWidth * 2, halfHeight * 2)\n          selfGraph.graph.position.set(halfWidth * 2, halfWidth * 2)\n        } else {\n          selfGraph.graph.pivot.set(x+halfWidth, y+halfHeight)\n          selfGraph.graph.position.set(x+halfWidth, y+halfHeight)\n        }\n      })\n      $loc.rotation = defineProperty(function(selfGraph) {\n        return Sk.ffi.remapToPy(selfGraph.rotation)\n      }, function (selfGraph, val) {\n        if (selfGraph.physicGraphics) {\n          Body.setAngle(selfGraph.physicGraphics._body, val.v)\n        } else {\n          // selfGraph.graph.position.set(selfGraph.graph.x + pivotX, selfGraph.graph.y - pivotY)\n          selfGraph.graph.rotation = val.v\n        }\n      })\n      $loc.physicsImpostor = new Sk.builtin.func(genkwaFunc(function(args, kwa) {\n        kwa = Sk.ffi.remapToJs(kwa);\n        let [selfGraph, is_static, physicsOptions] = args;\n        is_static = Sk.ffi.remapToJs(is_static || kwa.is_static) || false;\n        let is_circle = false;\n        physicsOptions = Sk.ffi.remapToJs(physicsOptions || kwa.physicsOptions) || {}\n        const {graphicsData, width, height, line, rotation} = selfGraph.graph\n        const extra = {}\n        if (selfGraph.graph.isCircle){\n          is_circle = true;\n          extra.radius = graphicsData[0].shape.radius;\n        }\n        if (selfGraph.graph.isFilled) {\n          extra.fill = graphicsData[0].fillStyle.color\n        }\n        selfGraph.physicGraphics = new PhysicsGraphics({\n          x: graphicsData[0].shape.x,\n          y: graphicsData[0].shape.y,\n          width: width,\n          height: height,\n          lineWidth: line.width,\n          lineColor: line.color,\n          ...extra,\n        },{\n          isCircle: is_circle,\n          isStatic: is_static,\n          ...physicsOptions,\n        },({position, rotation}) => {\n          selfGraph.graph.position = position;\n          selfGraph.graph.rotation = rotation;\n        });\n        Body.setAngle(selfGraph.physicGraphics._body, rotation)\n        pixiMatter.addToWorld(selfGraph.physicGraphics);\n        // app.stage.removeChild(selfGraph.graph);\n        // app.stage.addChild(selfGraph.physicGraphics);\n      }, true))\n    }))\n  })\n}","const Sk = window.Sk;\nconst PIXI = window.PIXI;\nimport {loadScript, textureRecources, defineGetter, defineProperty, hitTestRectangle, genkwaFunc, upgradeGraphics} from './utils'\nimport { PixiMatter, PhysicsSprite, PhysicsGraphics } from './matter-pixi';\n\n// 17中标准颜色名对应的色值\nconst ColorNameMap = {\n  aqua: '#00FFFF',\n  black: '#000000',\n  blue: '#0000FF',\n  fuchsia: '#FF00FF',\n  gray: '#808080',\n  green: '#008000',\n  lime: '#00FF00',\n  maroon: '#800000',\n  navy: '#000080',\n  olive: '#808000',\n  orange: '#FFA500',\n  purple: '#800080',\n  red: '#FF0000',\n  silver: '#C0C0C0',\n  teal: '#008080',\n  white: '#FFFFFF',\n  yellow: '#FFFF00',\n}\n\nwindow.$builtinmodule = function() {\n  const mod = { __name__: new Sk.builtin.str(\"pygame-zero\") };\n  let type = \"WebGL\"\n  if(!PIXI.utils.isWebGLSupported()){\n    type = \"canvas\"\n  }\n\n  // PIXI.utils.sayHello(type)\n  //Aliases\n  const Application = PIXI.Application,\n    loader = PIXI.loader,\n    resources = PIXI.loader.resources,\n    utils = PIXI.utils,\n    Sprite = PIXI.Sprite,\n    Graphics = PIXI.Graphics,\n    Text = PIXI.Text,\n    TextStyle = PIXI.TextStyle;\n  window.PIXI.loader.pre((resource, next) => {\n    resource.crossOrigin = 'anonymous';\n    resource.loadType = window.PIXI.loaders.Resource.LOAD_TYPE.XHR;\n    next();\n  });\n  if (window.PGZApp) {\n    // document.getElementById('stage').removeChild(window.PGZApp.view);\n    window.PGZApp.destroy({\n      removeView: true\n    });\n    loader.destroy();\n    window.PGZApp = void 0;\n  }\n  let width = 500;\n  let height = 400;\n  if (window.PyGameZero.container) {\n    width = window.PyGameZero.container.offsetWidth;\n    height = window.PyGameZero.container.offsetHeight;\n  }\n  window.PGZApp = new Application({\n    backgroundColor: 0x000000,\n    width,\n    height,\n  });\n  const app = window.PGZApp;\n  const pixiMatter = new PixiMatter({stage: app.view});\n  window.PyGameZero._onRunning(app);\n  window.PyGameZero.container.appendChild(app.view);\n\n  // 笛卡尔坐标系转换\n  function transX(x, isReserve) {\n    // if (isReserve) {\n    //   return x - halfWidth\n    // } else {\n    //   return x + halfWidth\n    // }\n    return x;\n  }\n  // 笛卡尔坐标系转换\n  function transY(y, isReserve) {\n    // if (isReserve) {\n    //   if (y > halfHeight) {\n    //     return (y - halfHeight) * -1;\n    //   } else {\n    //     return halfHeight - y;\n    //   }\n    // } else {\n    //   if (y > 0) {\n    //     return halfHeight - y;\n    //   } else {\n    //     return halfHeight + (y * -1);\n    //   }\n    // }\n    return y;\n  }\n  function transPos(pos, isReserve){\n    if (!pos) {\n      return pos\n    }\n    return [transX(pos[0], isReserve), transY(pos[1], isReserve)]\n  }\n  // 字符串色值转十六进制数字\n  function transColor(color) {\n    if (Array.isArray(color)) {\n      return utils.rgb2hex(color);\n    } else {\n      if (color.match('#')) {\n        return utils.string2hex(color);\n      } else {\n        if (ColorNameMap[color]) {\n          return utils.string2hex(ColorNameMap[color]);\n        } else {\n          return 0xffffff;\n        }\n      }\n    }\n  }\n  \n  mod.WIDTH = Sk.ffi.remapToPy(app.view.width);\n  mod.HEIGHT = Sk.ffi.remapToPy(app.view.height);\n\n  // 角色类\n  mod.Actor = Sk.misceval.buildClass(mod, function($gbl, $loc) {\n    // $loc.__init__就是构造器\n    $loc.__init__ = new Sk.builtin.func(function(self, actorName, pos) {\n      return new Sk.misceval.promiseToSuspension(new Promise(function(resolve) {\n        actorName = Sk.ffi.remapToJs(actorName);\n        pos = Sk.ffi.remapToJs(pos) || [];\n        textureRecources(actorName || `./assets/${actorName.v}/index.json`).then(function(texture) {\n          const sprite = new Sprite(texture)\n          sprite.zOrder=1\n          self.sprite = sprite;\n          self.sprite.anchor.set(0.5);\n          self.sprite.x = transX(pos[0] || 0)\n          self.sprite.y = transY(pos[1] || 0)\n          self.actorName = actorName;\n          resolve()\n        })\n      }));\n    });\n    $loc.x = defineProperty(function(self){\n      return Sk.ffi.remapToPy(transX(self.sprite.x, true))\n    }, function(self, val){\n      if (self.physicSprite) {\n        Matter.Body.setPosition(self.physicSprite._body, {x: transX(val.v), y: self.physicSprite.y})\n      } else {\n        self.sprite.x = transX(val.v)\n      }\n    })\n    $loc.y = defineProperty(function(self){\n      return Sk.ffi.remapToPy(transY(self.sprite.y, true))\n    }, function(self, val){\n      if (self.physicSprite) {\n        Matter.Body.setPosition(self.physicSprite._body, {x: self.physicSprite.x, y: transX(val.v)})\n      } else {\n        self.sprite.y = transX(val.v)\n      }\n    })\n    $loc.width = defineProperty('sprite', 'width')\n    $loc.height = defineProperty('sprite', 'height')\n    $loc.size = defineProperty(function(self) {\n      return Sk.ffi.remapToPy([self.sprite.width, self.sprite.height])\n    }, function (self, val) {\n      const pos = Sk.ffi.remapToJs(val)\n      const [width, height] = pos;\n      self.sprite.width = width;\n      self.sprite.height = height;\n      self['sprite']['pos'] = [width, height];\n    })\n    $loc.pos = defineProperty(function(self) {\n      return Sk.ffi.remapToPy(transPos([self.sprite.x, self.sprite.y], true))\n    }, function (self, val) {\n      const pos = transPos(Sk.ffi.remapToJs(val))\n      const [x, y] = pos;\n      if (self.physicSprite) {\n        Matter.Body.setPosition(self.physicSprite._body, {x: x, y: y})\n      } else {\n        self.sprite.x = x;\n        self.sprite.y = y;\n        self['sprite']['pos'] = [x, y];\n      }\n    })\n    $loc.angle = defineProperty('sprite', 'angle')\n    $loc.show  = defineProperty('sprite', 'visible')\n    $loc.image = defineProperty(function(self) {\n      return Sk.ffi.remapToPy(self['sprite']['texture'])\n    }, function (self, val) {\n      return new Sk.misceval.promiseToSuspension(new Promise(function(resolve) {\n        textureRecources(val.v).then(function(texture) {\n          self['sprite']['texture'] = texture;\n          resolve()\n        })\n      }))\n    })\n    $loc.frame = defineProperty(function(self) {\n      return Sk.ffi.remapToPy(self['sprite']['texture'])\n      }, function (self, val) {\n      return new Sk.misceval.promiseToSuspension(new Promise(function(resolve) {\n        textureRecources(self.actorName[val.v-1] || `./assets/${self.actorName}/造型${val.v}.png`).then(function(texture) {\n          self['sprite']['texture'] = texture;\n          resolve()\n        })\n      }))\n    })\n    $loc.distance_to = new Sk.builtin.func(function(self, pos) {\n      pos = transPos(Sk.ffi.remapToJs(pos));\n      // 计算两点距离：|AB| = √((x1-x2)²+(y1-y2)²)\n      return Sk.ffi.remapToPy(Math.round(Math.abs(Math.sqrt(Math.pow(self.sprite.x - pos[0], 2) + Math.pow(self.sprite.y - pos[1], 2)))))\n    })\n    $loc.angle_to = new Sk.builtin.func(function(self, pos) {\n      pos = transPos(Sk.ffi.remapToJs(pos));\n      // 计算两点角度：arcsin(|y1-y2| ÷ √((x1-x2)²+(y1-y2)²)) ÷ π ×180\n      const x1 = self.sprite.y;\n      const x2 = pos[0];\n      const y1 = self.sprite.y;\n      const y2 = pos[1];\n      const x = Math.abs(x1-x2);\n      const y = Math.abs(y1-y2);\n      const z = Math.sqrt(x*x+y*y);\n      return Sk.ffi.remapToPy(Math.round(Math.asin(y/z)/Math.PI*180))\n    })\n    $loc.collide_point = new Sk.builtin.func(function(self, pos) {\n      return hitTestRectangle(self.sprite, transPos(Sk.ffi.remapToJs(pos)))\n    })\n    $loc.collide_actor = new Sk.builtin.func(function(self, actor) {\n      return hitTestRectangle(self.sprite, actor.sprite)\n    })\n    $loc.colliderect = new Sk.builtin.func(function(self, actor) {\n      return hitTestRectangle(self.sprite, actor.sprite)\n    })\n    $loc.remove = new Sk.builtin.func(function(self) {\n      app.stage.removeChild(self.sprite);\n    })\n    $loc.draw = new Sk.builtin.func(function(self) {\n      app.stage.addChild(self.physicSprite || self.sprite);\n    })\n    // 物理引擎\n    $loc.physicsImpostor = new Sk.builtin.func(genkwaFunc(function(args, kwa) {\n      // args = Sk.ffi.remapToJs(args);\n      kwa = Sk.ffi.remapToJs(kwa);\n      let [self, is_circle, is_static, physicsOptions] = args;\n      is_circle = Sk.ffi.remapToJs(is_circle || kwa.is_circle) || false;\n      is_static = Sk.ffi.remapToJs(is_static || kwa.is_static) || false;\n      physicsOptions = Sk.ffi.remapToJs(physicsOptions || kwa.physicsOptions) || {}\n      self.physicSprite = new PhysicsSprite(self.sprite,{\n        isCircle: is_circle,\n        isStatic: is_static,\n        ...physicsOptions\n      })\n      pixiMatter.addToWorld(self.physicSprite);\n    }, true))\n  }, 'Actor')\n  // 矩形类\n  mod.Rect = Sk.misceval.buildClass(mod, function($gbl, $loc) {\n    // $loc.__init__就是构造器\n    let _self;\n    $loc.__init__ = new Sk.builtin.func(function(self, pos, size) {\n      pos = transPos(Sk.ffi.remapToJs(pos));\n      size = Sk.ffi.remapToJs(size);\n      self.pos = {\n        x: pos[0],\n        y: pos[1],\n      }\n      self.size = {\n        width: size[0],\n        height: size[1],\n      }\n    });\n    $loc.pos = defineGetter((self) => Sk.ffi.remapToPy(transPos(self.pos, true)))\n    $loc.size = defineGetter((self) => Sk.ffi.remapToPy(self.size))\n  }, 'Rect', [])\n  // 画笔类\n  mod.draw = Sk.misceval.buildClass(mod, function($gbl, $loc) {\n    $loc.__init__ = new Sk.builtin.func(function(self) {\n      self.size = 5;\n      self.graphMap = [];\n    })\n    $loc.size = new Sk.builtin.func(function(self, size) {\n      self.size = size.v;\n    })\n    // $loc.fill = new Sk.builtin.func(function(self, color) {\n    //   color = transColor(Sk.ffi.remapToJs(color));\n    //   graph.beginFill(color)\n    // })\n    $loc.line =  new Sk.builtin.func(function(self, start, end, color) {\n      const graph = new PIXI.Graphics();\n      self.graphMap.push(graph)\n      color = transColor(Sk.ffi.remapToJs(color));\n      start = Sk.ffi.remapToJs(start);\n      end = Sk.ffi.remapToJs(end);\n      graph.lineStyle(self.size || 2, color, 1);\n      graph.moveTo(start[0], start[1]);\n      graph.lineTo(end[0], end[1]);\n      app.stage.addChild(graph);\n    })\n    $loc.circle =  upgradeGraphics(mod, app, pixiMatter, (self, graph, pos, radius, color) => {\n      self.graphMap.push(graph)\n      color = transColor(Sk.ffi.remapToJs(color));\n      pos = transPos(Sk.ffi.remapToJs(pos));\n      graph.lineStyle(self.size, color, 1);\n      graph.drawCircle(pos[0], pos[1], radius.v);\n      graph.isCircle = true\n      \n      app.stage.addChild(graph);\n    })\n    $loc.filled_circle =  upgradeGraphics(mod, app, pixiMatter, (self, graph, pos, radius, color) => {\n      self.graphMap.push(graph)\n      color = transColor(Sk.ffi.remapToJs(color));\n      pos = transPos(Sk.ffi.remapToJs(pos));\n      graph.lineStyle(0);\n      graph.beginFill(color, 1);\n      graph.drawCircle(pos[0], pos[1], radius.v);\n      graph.endFill();\n      graph.isCircle = true\n      graph.isFilled = true\n      app.stage.addChild(graph);\n    })\n    $loc.rect =  upgradeGraphics(mod, app, pixiMatter, (self, graph, ...args) => {\n      self.graphMap.push(graph)\n      if (Sk.abstr.typeName(args[0]) === \"Rect\") {\n        const [rect, color] = args;\n        graph.lineStyle(self.size, transColor(Sk.ffi.remapToJs(color)), 1);\n        graph.drawRect(rect.pos.x, rect.pos.y, rect.size.width, rect.size.height);\n      } else {\n        let left, top\n        const leftTop = Sk.ffi.remapToJs(args[0])\n        if (Array.isArray(leftTop)) {\n          left = leftTop[0]\n          top = leftTop[1]\n          args.shift();\n        } else {\n          left = args[0].v\n          top = args[1].v\n          args.shift();\n          args.shift();\n        }\n        let [width, height, color] = args;\n        width = Sk.ffi.remapToJs(width)\n        height = Sk.ffi.remapToJs(height)\n        graph.lineStyle(self.size, transColor(Sk.ffi.remapToJs(color)), 1);\n        graph.drawRect(transX(left), transY(top), width, height);\n        // setTimeout(() => {\n        //   graph.x = 200\n        // }, 2000)\n        app.stage.addChild(graph);\n      }\n    })\n    $loc.filled_rect =  upgradeGraphics(mod, app, pixiMatter, (self, graph, ...args) => {\n      self.graphMap.push(graph)\n      if (Sk.abstr.typeName(args[0]) === \"Rect\") {\n        const [rect, color] = args;\n        graph.lineStyle(0);\n        graph.beginFill(transColor(Sk.ffi.remapToJs(color)), 1);\n        graph.drawRect(rect.pos.x, rect.pos.y, rect.size.width, rect.size.height);\n        graph.endFill();\n      } else {\n        let left, top\n        const leftTop = Sk.ffi.remapToJs(args[0])\n        if (Array.isArray(leftTop)) {\n          left = leftTop[0]\n          top = leftTop[1]\n          args.shift();\n        } else {\n          left = args[0].v\n          top = args[1].v\n          args.shift();\n          args.shift();\n        }\n        let [width, height, color] = args;\n        width = Sk.ffi.remapToJs(width)\n        height = Sk.ffi.remapToJs(height)\n        color = transColor(Sk.ffi.remapToJs(color))\n        graph.lineStyle(0);\n        graph.beginFill(color, 1);\n        graph.drawRect(transX(left), transY(top), width, height);\n        graph.endFill();\n      }\n      graph.isFilled = true\n      app.stage.addChild(graph);\n    })\n    $loc.clear = new Sk.builtin.func(function(self) {\n      self.graphMap.map((graph) => graph.clear())\n      self.graphMap.length = 0\n      self.basicText && self.basicText.destroy()\n    })\n    $loc.text = new Sk.builtin.func(genkwaFunc(function(args, kwa) {\n      // args = Sk.ffi.remapToJs(args);\n      kwa = Sk.ffi.remapToJs(kwa);\n      let [self, str, pos, color, fontsize, fontname] = args;\n      color = transColor(Sk.ffi.remapToJs(color || kwa.color));\n      fontsize = Sk.ffi.remapToJs(fontsize || kwa.fontsize);\n      fontname = Sk.ffi.remapToJs(fontname || kwa.fontname)\n      pos = transPos(Sk.ffi.remapToJs(pos))\n      const style = new PIXI.TextStyle({\n        fontFamily: fontname || 'PingFang SC',\n        fontSize: fontsize,\n        fill: color,\n      });\n      const basicText = new PIXI.Text(str.v, style);\n      self.basicText = basicText\n      basicText.anchor.set(0.5);\n      if (pos) {\n        basicText.x = pos[0];\n        basicText.y = pos[1];\n      }\n      app.stage.addChild(basicText);\n    }, true))\n  }, 'Draw', []);\n  // 屏幕类\n  \n  mod.screen = Sk.misceval.callsimOrSuspend(Sk.misceval.buildClass(mod, function($gbl, $loc) {\n    $loc.__init__ = new Sk.builtin.func(function(self) {\n      self.graph = new Graphics();\n    })\n    $loc.draw = Sk.misceval.callsimOrSuspend(mod.draw)\n    $loc.clear = new Sk.builtin.func(function(self) {\n      // app.destroy();\n      while(app.stage.children.length > 0){   var child = app.stage.getChildAt(0);  app.stage.removeChild(child);}\n    })\n    $loc.fill = new Sk.builtin.func(function(self, color) {\n      const graph = self.graph;\n      graph.clear()\n      graph.beginFill(transColor(Sk.ffi.remapToJs(color)), 1);\n      graph.drawRect(0, 0, app.view.width, app.view.height);\n      graph.endFill();\n      app.stage.addChild(graph);\n    })\n  }, 'Screen', []));\n  // 时间类\n  mod.clock = Sk.misceval.callsimOrSuspend(Sk.misceval.buildClass(mod, function($gbl, $loc) {\n    $loc.__init__ = new Sk.builtin.func(function(self) {\n      self.timerMap = new WeakMap();\n    })\n    $loc.schedule = new Sk.builtin.func(function(self, callback, delay) {\n      self.timerMap.set(callback, setTimeout(function() {\n        Sk.misceval.callsimAsync(null, callback)\n      }, delay.v * 1000))\n    })\n    $loc.schedule_interval = new Sk.builtin.func(function(self, callback, delay) {\n      self.timerMap.set(callback, setInterval(function() {\n        Sk.misceval.callsimAsync(null, callback)\n      }, delay.v * 1000))\n    })\n    $loc.schedule_unique = new Sk.builtin.func(function(self, callback, delay) {\n      if (self.timerMap.has(callback)) {\n        clearTimeout(self.timerMap.get(callback))\n        clearInterval(self.timerMap.get(callback))\n      }\n      self.timerMap.set(callback, setTimeout(function() {\n        Sk.misceval.callsimAsync(null, callback)\n      }, delay.v * 1000))\n    })\n    $loc.unschedule = new Sk.builtin.func(function(self, callback, delay) {\n      if (self.timerMap.has(callback)) {\n        clearTimeout(self.timerMap.get(callback))\n        clearInterval(self.timerMap.get(callback))\n      }\n    })\n\n  }, 'Clock', []));\n\n  // 音乐类\n  mod.music = Sk.misceval.callsimOrSuspend(Sk.misceval.buildClass(mod, function($gbl, $loc) {\n    $loc.__init__ = new Sk.builtin.func(function(self) {\n      self.audio = new Audio()\n    })\n    $loc.play = new Sk.builtin.func(function(self, name) {\n      self.audio.src = name.v || `./assets/${name.v}.mp3`;\n      self.audio.loop = true;\n      self.audio.play();\n    })\n    $loc.play_once = new Sk.builtin.func(function(self, name) {\n      self.audio.src = name.v || s`./assets/${name.v}.mp3`;\n      self.audio.loop = false;\n      self.audio.play();\n    })\n    $loc.is_playing = new Sk.builtin.func(function(self, name) {\n      return !self.audio.paused\n    })\n    $loc.volume = defineProperty(function(self) {\n      return self.audio.volume;\n    }, function(self, val){\n      self.audio.volume = val.v\n    })\n    $loc.set_volume = new Sk.builtin.func(function(self, val){\n      self.audio.volume = val.v\n    })\n    $loc.get_volume = new Sk.builtin.func(function(self) {\n      return self.audio.volume;\n    })\n    $loc.stop = new Sk.builtin.func(function(self, name) {\n      self.audio.currentTime = 0\n      self.audio.pause();\n    })\n  }, 'Music', []));\n\n  // 音效类\n  mod.sound = Sk.misceval.callsimOrSuspend(Sk.misceval.buildClass(mod, function($gbl, $loc) {\n    $loc.__init__ = new Sk.builtin.func(function(self) {\n      self.soundMap = {};\n    })\n    $loc.play = new Sk.builtin.func(function(self, name) {\n      if(self.soundMap[name.v]) {\n        self.soundMap[name.v].play()\n        self.soundMap[name.v].currentTime = 0\n      } else {\n        const audio = new Audio()\n        audio.src = name.v;\n        audio.loop = false;\n        audio.play();\n        self.soundMap[name.v] = audio\n      }\n    })\n    $loc.stop = new Sk.builtin.func(function(self, name) {\n      self.soundMap[name.v].pause();\n    })\n  }, 'Sound', []));\n\n  // 动画类\n  mod.animate = Sk.misceval.buildClass(mod, function($gbl, $loc) {\n    let charm;\n    $loc.__init__ =  new Sk.builtin.func(genkwaFunc(function(args, kwa) {\n      kwa = Sk.ffi.remapToJs(kwa);\n      let [self, actor, tween, duration, on_finished, targets] = args;\n      tween = tween || kwa.tween || 'linear';\n      duration = duration || kwa.duration || 1;\n      on_finished = on_finished || kwa.on_finished\n      const x = transX(kwa.x) || actor.sprite.x;\n      const y = transY(kwa.y) || actor.sprite.y;\n      const pos = transPos(targets) || transPos(kwa.pos) || [x, y];\n      return new Sk.misceval.promiseToSuspension(new Promise(function(resolve) {\n        loadScript('https://cdnjs.cloudflare.com/ajax/libs/tween.js/17.1.1/Tween.min.js', 'Charm').then(() => {\n          if (!charm) {\n            // charm = new TWEEN(PIXI);\n            app.ticker.add(() => {\n              // charm.update()\n              TWEEN.update();\n            })\n          }\n          const tweenMap = {\n            linear: TWEEN.Easing.linear, // 线性\n            accelerate: TWEEN.Easing.Quartic.Out, // 加速\n            decelerate: TWEEN.Easing.Quartic.In, // 减速\n            accel_decel: TWEEN.Easing.Quartic.InOut, // 先加速再加速\n            elastic_start: TWEEN.Easing.Elastic.In, // 开始时反弹\n            elastic_end: TWEEN.Easing.Elastic.Out, // 结束时反弹\n            elastic_start_end: TWEEN.Easing.Elastic.InOut, // 开始结束都反弹\n            bounce_start: TWEEN.Easing.Bounce.In, // 开始时弹跳\n            bounce_end: TWEEN.Easing.Bounce.Out, // 结束时弹跳\n            bounce_start_end: TWEEN.Easing.Bounce.InOut, // 开始和结束都弹跳\n          }\n          self.ani = new TWEEN.Tween({\n            x: actor.sprite.x,\n            y: actor.sprite.y,\n          }).to({\n            x: pos[0] || x,\n            y: pos[1] || y,\n          }, duration * 1000).easing(tweenMap[tween])\n          .onUpdate(function (object) {\n            actor.sprite.y = object.y;\n            actor.sprite.x = object.x;\n          }).start();\n          self.ani.onComplete = function() {\n            on_finished && Sk.misceval.callsim(on_finished)\n          }\n          // self.ani = charm.slide(actor.sprite, pos[0] || x, pos[1] || y, duration * 60, tweenMap[tween])\n          // self.ani.onComplete = function() {\n          //   on_finished && Sk.misceval.callsim(on_finished)\n          // }\n          resolve();\n        })\n    }));\n    }, true))\n    $loc.stop = new Sk.builtin.func(function(self) {\n      self.ani.pause();\n    })\n    $loc.running = defineGetter(function(self) {\n      return Sk.ffi.remapToPy(self.ani.tweens[0].playing);\n    })\n  }, 'Animate', [])\n\n  // 主循环\n  app.ticker.add((delta) => {\n    Sk.globals.draw && Sk.misceval.callsimAsync(null, Sk.globals.draw);\n    Sk.globals.update && Sk.misceval.callsimAsync(null, Sk.globals.update);\n    pixiMatter.update()\n  });\n\n  const keys = [\"K_0\", \"K_1\", \"K_2\", \"K_3\", \"K_4\", \"K_5\", \"K_6\", \"K_7\", \"K_8\", \"K_9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"SHIFT\", \"CTRL\", \"ALT\", \"LEFT\", \"UP\", \"RIGHT\", \"DOWN\", \"PAGEUP\", \"PAGEDOWN\", \"END\", \"HOME\", \"ESCAPE\", \"ENTER\", \"SPACE\", \"RETURN\", \"BACKSPACE\", \"INSERT\", \"DELETE\", \"F1\", \"F2\", \"F3\", \"F4\", \"F5\", \"F6\", \"F7\", \"F8\", \"F9\", \"F10\", \"F11\", \"F12\", \"F13\", \"F14\", \"F15\"];\n  const nativeKeys = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'Shift', 'Ctrl', 'Alt', 'ArrowLeft', 'ArrowUp', 'ArrowRight', 'ArrowDown', 'PageUp', 'PageDown', 'End', 'Home', 'Escape', 'Enter', '', 'Return', 'Backspace', 'Insert', 'Delete', \"F1\", \"F2\", \"F3\", \"F4\", \"F5\", \"F6\", \"F7\", \"F8\", \"F9\", \"F10\", \"F11\", \"F12\", \"F13\", \"F14\", \"F15\"]\n  const keysMap = {}\n  nativeKeys.map((nativeKeys, index) => {\n    keysMap[nativeKeys] = keys[index]\n  })\n  const keyboard = {};\n  \n  // 键盘按下事件\n  window.addEventListener('keydown', function(e) {\n    keyboard[keysMap[e.key]] = true\n    Sk.globals.on_key_down && Sk.misceval.callsimAsync(null, Sk.globals.on_key_down, Sk.ffi.remapToPy(keysMap[e.key]));\n  })\n  window.addEventListener('keyup', function(e) {\n    keyboard[keysMap[e.key]] = false\n    Sk.globals.on_key_down && Sk.misceval.callsimAsync(null, Sk.globals.on_key_down, Sk.ffi.remapToPy(keysMap[e.key]));\n  })\n  // 键盘名称\n  mod.Keys = Sk.misceval.callsimOrSuspend(Sk.misceval.buildClass(mod, function($gbl, $loc) {\n    keys.map((key) => {\n      $loc[key] = defineGetter(() => Sk.ffi.remapToPy(key))\n    })\n  }, 'Keys', []));\n  // 键盘按下\n  mod.keyboard = Sk.misceval.callsimOrSuspend(Sk.misceval.buildClass(mod, function($gbl, $loc) {\n    keys.map((key, i) => {\n      $loc[key.toLowerCase()] = defineGetter(() => keyboard[key] || false)\n    })\n  }, 'keyboard', []));\n  \n  const mouseDownMap = {\n    '0': 'LEFT',\n    '1': 'MIDDLE',\n    '2': 'RIGHT',\n  }\n  let mousePos = {};\n  const mouse = {};\n  let buttons = [];\n  const insertData = function(arr, data) {\n    if (data && !~arr.indexOf(data)) {\n      arr.push(data)\n    }\n  }\n  const delData = function(arr, data) {\n    const index = arr.indexOf(data)\n    if (~index) {\n      arr.splice(index, 1)\n    }\n  }\n  // 鼠标按下事件\n  app.view.addEventListener('mousedown', function(e) {\n    const button = (mouseDownMap[e.button] || '').toLowerCase()\n    insertData(buttons, button)\n    Sk.globals.on_mouse_down && Sk.misceval.callsimAsync(null, Sk.globals.on_mouse_down, Sk.ffi.remapToPy([\n      transX(e.offsetX, true),\n      transY(e.offsetY, true),\n    ]), Sk.ffi.remapToPy(button));\n  })\n  // 鼠标抬起事件\n  app.view.addEventListener('mouseup', function(e) {\n    const button = (mouseDownMap[e.button] || '').toLowerCase()\n    delData(buttons, button)\n    Sk.globals.on_mouse_up && Sk.misceval.callsimAsync(null, Sk.globals.on_mouse_up, Sk.ffi.remapToPy([\n      transX(e.offsetX, true),\n      transY(e.offsetY, true),\n    ]), Sk.ffi.remapToPy(mouseDownMap[e.button]));\n  })\n  // 禁用鼠标右键\n  document.oncontextmenu = function(){\n    return false;\n  }\n  // 鼠标移动事件\n  app.view.addEventListener('mousemove', function(e) {\n    mousePos = {\n      x: transX(e.offsetX, true),\n      y: transY(e.offsetY, true),\n    }\n    Sk.globals.on_mouse_move && Sk.misceval.callsimAsync(\n      null,\n      Sk.globals.on_mouse_move,\n      Sk.ffi.remapToPy([mousePos.x, mousePos.y]),\n      Sk.ffi.remapToPy([mousePos.x, mousePos.y]),\n      Sk.ffi.remapToPy(buttons)\n      );\n  })\n  // 鼠标滚轮事件\n  app.view.addEventListener('wheel', function(e) {\n    if (e.deltaY > 0) {\n      insertData(buttons, 'wheel_down')\n      delData(buttons, 'wheel_up')\n    } else if (e.deltaY < 0) {\n      insertData(buttons, 'wheel_up')\n      delData(buttons, 'wheel_down')\n    } else {\n      delData(buttons, 'wheel_up')\n      delData(buttons, 'wheel_down')\n    }\n  })\n  \n  // 鼠标位置\n  mod.mouse = Sk.misceval.callsimOrSuspend(Sk.misceval.buildClass(mod, function($gbl, $loc) {\n    $loc.x = defineGetter(() => mousePos.x)\n    $loc.y = defineGetter(() => mousePos.y)\n    $loc.pos = defineGetter(() => Sk.ffi.remapToPy([mousePos.x, mousePos.y]))\n    $loc.LEFT = Sk.ffi.remapToPy('left')\n    $loc.MIDDLE =  Sk.ffi.remapToPy('middle')\n    $loc.RIGHT =  Sk.ffi.remapToPy('right')\n    $loc.WHEEL_UP =  Sk.ffi.remapToPy('wheel_up')\n    $loc.WHEEL_DOWN =  Sk.ffi.remapToPy('wheel_down')\n  }, 'Mouse', []));\n\n  mod.go =  new Sk.builtin.func(function(self) {\n  })\n\n  return mod;\n};"]}